2017-01-05 14:05:03 GameBoard.<init>()	Hello World!
2017-01-05 14:05:03 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 14:05:03 QueryProlog.initialise()	setup(h3/h1). suceeded
2017-01-05 14:05:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:03 GameBoard.setupBoardFromString()	Board created
2017-01-05 14:05:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:03 GameBoard.initialise()	[map, chest, candle, book, gem]
2017-01-05 14:05:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:03 GameBoard.initialise()	[helmet, sword, ring, crown, fairy]
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:03 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	null
2017-01-05 14:05:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:03 AI_Player.update()	update
2017-01-05 14:05:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:03 AI_Player.update()	Search took49ms
2017-01-05 14:05:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:03 AI_Player.update()		110,	1110,	111,	111,	111,	11,	11
2017-01-05 14:05:03 AI_Player.update()		1010,	111,	110,	1101,	110,	110,	1001
2017-01-05 14:05:03 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:05:03 AI_Player.update()		1010,	1100,	1011,	101,	1010,	110,	110
2017-01-05 14:05:03 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 14:05:03 AI_Player.update()		1100,	101,	11,	1001,	111,	110,	1100
2017-01-05 14:05:03 AI_Player.update()		1100,	110,	1101,	1001,	1101,	111,	1001
2017-01-05 14:05:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:03 AI_Player.update()	update
2017-01-05 14:05:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:03 AI_Player.update()	update
2017-01-05 14:05:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:03 AI_Player.update()	Search took2ms
2017-01-05 14:05:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:03 AI_Player.update()		110,	1110,	111,	111,	111,	111,	11
2017-01-05 14:05:03 AI_Player.update()		1010,	111,	110,	1101,	110,	11,	1001
2017-01-05 14:05:03 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-05 14:05:03 AI_Player.update()		1010,	1100,	1011,	101,	1010,	110,	110
2017-01-05 14:05:03 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:03 AI_Player.update()		1100,	101,	11,	1001,	111,	101,	1100
2017-01-05 14:05:03 AI_Player.update()		1100,	110,	1101,	1001,	1101,	110,	1001
2017-01-05 14:05:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:03 AI_Player.update()	update
2017-01-05 14:05:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:03 AI_Player.update()	update
2017-01-05 14:05:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:04 AI_Player.update()	Search took323ms
2017-01-05 14:05:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:04 AI_Player.update()		110,	111,	111,	111,	111,	111,	11
2017-01-05 14:05:04 AI_Player.update()		1010,	101,	110,	1101,	110,	11,	1001
2017-01-05 14:05:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-05 14:05:04 AI_Player.update()		1010,	1001,	1011,	101,	1010,	110,	110
2017-01-05 14:05:04 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:04 AI_Player.update()		1100,	110,	11,	1001,	111,	101,	1100
2017-01-05 14:05:04 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	110,	1001
2017-01-05 14:05:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:04 AI_Player.update()	update
2017-01-05 14:05:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:04 AI_Player.update()	update
2017-01-05 14:05:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:04 AI_Player.update()	Search took5ms
2017-01-05 14:05:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:04 AI_Player.update()		110,	101,	111,	111,	111,	111,	11
2017-01-05 14:05:04 AI_Player.update()		1010,	1100,	110,	1101,	110,	11,	1001
2017-01-05 14:05:04 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:05:04 AI_Player.update()		1010,	101,	1011,	101,	1010,	110,	110
2017-01-05 14:05:04 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:04 AI_Player.update()		1100,	1110,	11,	1001,	111,	101,	1100
2017-01-05 14:05:04 AI_Player.update()		1100,	111,	1101,	1001,	1101,	110,	1001
2017-01-05 14:05:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:04 AI_Player.update()	update
2017-01-05 14:05:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:04 AI_Player.update()	update
2017-01-05 14:05:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:05 AI_Player.update()	Search took787ms
2017-01-05 14:05:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()		110,	111,	111,	111,	111,	111,	11
2017-01-05 14:05:05 AI_Player.update()		1010,	101,	110,	1101,	110,	11,	1001
2017-01-05 14:05:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-05 14:05:05 AI_Player.update()		1010,	1001,	1011,	101,	1010,	110,	110
2017-01-05 14:05:05 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:05 AI_Player.update()		1100,	110,	11,	1001,	111,	101,	1100
2017-01-05 14:05:05 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	110,	1001
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:05 AI_Player.update()	Search took6ms
2017-01-05 14:05:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()		110,	101,	111,	111,	111,	111,	11
2017-01-05 14:05:05 AI_Player.update()		1010,	1100,	110,	1101,	110,	11,	1001
2017-01-05 14:05:05 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:05:05 AI_Player.update()		1010,	101,	1011,	101,	1010,	110,	110
2017-01-05 14:05:05 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:05 AI_Player.update()		1100,	1110,	11,	1001,	111,	101,	1100
2017-01-05 14:05:05 AI_Player.update()		1100,	111,	1101,	1001,	1101,	110,	1001
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:05 AI_Player.update()	Search took657ms
2017-01-05 14:05:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()		110,	101,	111,	111,	111,	111,	11
2017-01-05 14:05:05 AI_Player.update()		1010,	1100,	110,	1101,	110,	11,	1001
2017-01-05 14:05:05 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:05:05 AI_Player.update()		101,	1011,	101,	1010,	110,	110,	1010
2017-01-05 14:05:05 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:05 AI_Player.update()		1100,	1110,	11,	1001,	111,	101,	1100
2017-01-05 14:05:05 AI_Player.update()		1100,	111,	1101,	1001,	1101,	110,	1001
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:05 AI_Player.update()	Search took4ms
2017-01-05 14:05:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()		110,	101,	111,	111,	111,	111,	11
2017-01-05 14:05:05 AI_Player.update()		1010,	1100,	110,	1101,	110,	11,	1001
2017-01-05 14:05:05 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:05:05 AI_Player.update()		1011,	101,	1010,	110,	110,	1010,	101
2017-01-05 14:05:05 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:05 AI_Player.update()		1100,	1110,	11,	1001,	111,	101,	1100
2017-01-05 14:05:05 AI_Player.update()		1100,	111,	1101,	1001,	1101,	110,	1001
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:05 AI_Player.update()	Search took61ms
2017-01-05 14:05:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()		110,	101,	111,	111,	111,	110,	11
2017-01-05 14:05:05 AI_Player.update()		1010,	1100,	110,	1101,	110,	111,	1001
2017-01-05 14:05:05 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 14:05:05 AI_Player.update()		1011,	101,	1010,	110,	110,	110,	101
2017-01-05 14:05:05 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:05 AI_Player.update()		1100,	1110,	11,	1001,	111,	110,	1100
2017-01-05 14:05:05 AI_Player.update()		1100,	111,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:05 AI_Player.update()	Search took5ms
2017-01-05 14:05:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()		110,	1100,	111,	111,	111,	110,	11
2017-01-05 14:05:05 AI_Player.update()		1010,	1001,	110,	1101,	110,	111,	1001
2017-01-05 14:05:05 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 14:05:05 AI_Player.update()		1011,	110,	1010,	110,	110,	110,	101
2017-01-05 14:05:05 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:05 AI_Player.update()		1100,	111,	11,	1001,	111,	110,	1100
2017-01-05 14:05:05 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:05 AI_Player.update()	Search took73ms
2017-01-05 14:05:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()		110,	1100,	111,	111,	111,	110,	11
2017-01-05 14:05:05 AI_Player.update()		1010,	1001,	110,	1101,	110,	111,	1001
2017-01-05 14:05:05 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 14:05:05 AI_Player.update()		110,	1010,	110,	110,	110,	101,	1011
2017-01-05 14:05:05 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:05 AI_Player.update()		1100,	111,	11,	1001,	111,	110,	1100
2017-01-05 14:05:05 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:05 AI_Player.update()	Search took8ms
2017-01-05 14:05:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()		110,	1001,	111,	111,	111,	110,	11
2017-01-05 14:05:05 AI_Player.update()		1010,	101,	110,	1101,	110,	111,	1001
2017-01-05 14:05:05 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-05 14:05:05 AI_Player.update()		110,	1110,	110,	110,	110,	101,	1011
2017-01-05 14:05:05 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:05 AI_Player.update()		1100,	101,	11,	1001,	111,	110,	1100
2017-01-05 14:05:05 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:05 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:05 AI_Player.update()	update
2017-01-05 14:05:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:06 AI_Player.update()	Search took476ms
2017-01-05 14:05:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:06 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 14:05:06 AI_Player.update()		1010,	101,	110,	111,	110,	111,	1001
2017-01-05 14:05:06 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-05 14:05:06 AI_Player.update()		110,	1110,	110,	101,	110,	101,	1011
2017-01-05 14:05:06 AI_Player.update()		1110,	111,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:06 AI_Player.update()		1100,	101,	11,	101,	111,	110,	1100
2017-01-05 14:05:06 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:06 AI_Player.update()	update
2017-01-05 14:05:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:06 AI_Player.update()	update
2017-01-05 14:05:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:06 AI_Player.update()	Search took3ms
2017-01-05 14:05:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:06 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 14:05:06 AI_Player.update()		1010,	101,	110,	1001,	110,	111,	1001
2017-01-05 14:05:06 AI_Player.update()		1110,	1010,	1110,	111,	111,	11,	1011
2017-01-05 14:05:06 AI_Player.update()		110,	1110,	110,	1101,	110,	101,	1011
2017-01-05 14:05:06 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:06 AI_Player.update()		1100,	101,	11,	110,	111,	110,	1100
2017-01-05 14:05:06 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 14:05:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:06 AI_Player.update()	update
2017-01-05 14:05:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:06 AI_Player.update()	update
2017-01-05 14:05:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:07 AI_Player.update()	Search took891ms
2017-01-05 14:05:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:07 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 14:05:07 AI_Player.update()		1010,	101,	110,	111,	110,	111,	1001
2017-01-05 14:05:07 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-05 14:05:07 AI_Player.update()		110,	1110,	110,	101,	110,	101,	1011
2017-01-05 14:05:07 AI_Player.update()		1110,	111,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:07 AI_Player.update()		1100,	101,	11,	101,	111,	110,	1100
2017-01-05 14:05:07 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:07 AI_Player.update()	update
2017-01-05 14:05:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:07 AI_Player.update()	update
2017-01-05 14:05:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:07 AI_Player.update()	Search took4ms
2017-01-05 14:05:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:07 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 14:05:07 AI_Player.update()		1010,	101,	110,	1001,	110,	111,	1001
2017-01-05 14:05:07 AI_Player.update()		1110,	1010,	1110,	111,	111,	11,	1011
2017-01-05 14:05:07 AI_Player.update()		110,	1110,	110,	1101,	110,	101,	1011
2017-01-05 14:05:07 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:07 AI_Player.update()		1100,	101,	11,	110,	111,	110,	1100
2017-01-05 14:05:07 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 14:05:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:07 AI_Player.update()	update
2017-01-05 14:05:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:07 AI_Player.update()	update
2017-01-05 14:05:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:08 AI_Player.update()	Search took1070ms
2017-01-05 14:05:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:08 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 14:05:08 AI_Player.update()		1010,	101,	110,	1001,	110,	111,	1001
2017-01-05 14:05:08 AI_Player.update()		1110,	1010,	1110,	111,	111,	11,	1011
2017-01-05 14:05:08 AI_Player.update()		1110,	110,	1101,	110,	101,	1011,	110
2017-01-05 14:05:08 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:08 AI_Player.update()		1100,	101,	11,	110,	111,	110,	1100
2017-01-05 14:05:08 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-05 14:05:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:08 AI_Player.update()	update
2017-01-05 14:05:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:08 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:08 AI_Player.update()	Player a has won!
2017-01-05 14:05:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:08 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:08 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:08 AI_Player.update()	update
2017-01-05 14:05:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:08 AI_Player.update()	Search took486ms
2017-01-05 14:05:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:08 AI_Player.update()		110,	1101,	111,	1101,	111,	1110,	11
2017-01-05 14:05:08 AI_Player.update()		1110,	1011,	1101,	111,	110,	11,	110
2017-01-05 14:05:08 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:05:08 AI_Player.update()		1010,	1100,	1001,	101,	1010,	11,	1010
2017-01-05 14:05:08 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:08 AI_Player.update()		1010,	101,	1100,	1001,	101,	11,	1001
2017-01-05 14:05:08 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:08 AI_Player.update()	update
2017-01-05 14:05:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:08 AI_Player.update()	update
2017-01-05 14:05:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:08 AI_Player.update()	Search took1ms
2017-01-05 14:05:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:08 AI_Player.update()		110,	1101,	111,	1101,	111,	1110,	11
2017-01-05 14:05:08 AI_Player.update()		1011,	1101,	111,	110,	11,	110,	1110
2017-01-05 14:05:08 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:05:08 AI_Player.update()		1010,	1100,	1001,	101,	1010,	11,	1010
2017-01-05 14:05:08 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:08 AI_Player.update()		1010,	101,	1100,	1001,	101,	11,	1001
2017-01-05 14:05:08 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:08 AI_Player.update()	update
2017-01-05 14:05:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:08 AI_Player.update()	update
2017-01-05 14:05:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:09 AI_Player.update()	Search took293ms
2017-01-05 14:05:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()		110,	1101,	111,	1101,	111,	1110,	11
2017-01-05 14:05:09 AI_Player.update()		1011,	1101,	111,	110,	11,	110,	1110
2017-01-05 14:05:09 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:05:09 AI_Player.update()		1100,	1001,	101,	1010,	11,	1010,	1010
2017-01-05 14:05:09 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:09 AI_Player.update()		1010,	101,	1100,	1001,	101,	11,	1001
2017-01-05 14:05:09 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:09 AI_Player.update()	Search took3ms
2017-01-05 14:05:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()		110,	1010,	111,	1101,	111,	1110,	11
2017-01-05 14:05:09 AI_Player.update()		1011,	1101,	111,	110,	11,	110,	1110
2017-01-05 14:05:09 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-05 14:05:09 AI_Player.update()		1100,	1001,	101,	1010,	11,	1010,	1010
2017-01-05 14:05:09 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:09 AI_Player.update()		1010,	1110,	1100,	1001,	101,	11,	1001
2017-01-05 14:05:09 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:09 AI_Player.update()	Search took149ms
2017-01-05 14:05:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()		110,	1010,	111,	110,	111,	1110,	11
2017-01-05 14:05:09 AI_Player.update()		1011,	1101,	111,	101,	11,	110,	1110
2017-01-05 14:05:09 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:09 AI_Player.update()		1100,	1001,	101,	1010,	11,	1010,	1010
2017-01-05 14:05:09 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:05:09 AI_Player.update()		1010,	1110,	1100,	101,	101,	11,	1001
2017-01-05 14:05:09 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:09 AI_Player.update()	Search took5ms
2017-01-05 14:05:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()		110,	1101,	111,	110,	111,	1110,	11
2017-01-05 14:05:09 AI_Player.update()		1011,	1101,	111,	101,	11,	110,	1110
2017-01-05 14:05:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:09 AI_Player.update()		1100,	1001,	101,	1010,	11,	1010,	1010
2017-01-05 14:05:09 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:05:09 AI_Player.update()		1010,	101,	1100,	101,	101,	11,	1001
2017-01-05 14:05:09 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1001,	1001
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:09 AI_Player.update()	Search took191ms
2017-01-05 14:05:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()		110,	1101,	111,	110,	111,	1110,	11
2017-01-05 14:05:09 AI_Player.update()		1101,	111,	101,	11,	110,	1110,	1011
2017-01-05 14:05:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:09 AI_Player.update()		1100,	1001,	101,	1010,	11,	1010,	1010
2017-01-05 14:05:09 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:05:09 AI_Player.update()		1010,	101,	1100,	101,	101,	11,	1001
2017-01-05 14:05:09 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1001,	1001
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:09 AI_Player.update()	Search took4ms
2017-01-05 14:05:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()		110,	111,	111,	110,	111,	1110,	11
2017-01-05 14:05:09 AI_Player.update()		1101,	1001,	101,	11,	110,	1110,	1011
2017-01-05 14:05:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:09 AI_Player.update()		1100,	1110,	101,	1010,	11,	1010,	1010
2017-01-05 14:05:09 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:05:09 AI_Player.update()		1010,	1010,	1100,	101,	101,	11,	1001
2017-01-05 14:05:09 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1001,	1001
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:09 AI_Player.update()	Search took264ms
2017-01-05 14:05:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()		110,	111,	111,	110,	111,	1110,	11
2017-01-05 14:05:09 AI_Player.update()		1101,	1001,	101,	11,	110,	1110,	1011
2017-01-05 14:05:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:09 AI_Player.update()		1110,	101,	1010,	11,	1010,	1010,	1100
2017-01-05 14:05:09 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:05:09 AI_Player.update()		1010,	1010,	1100,	101,	101,	11,	1001
2017-01-05 14:05:09 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	1001,	1001
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:09 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()	update
2017-01-05 14:05:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:09 AI_Player.update()	Search took4ms
2017-01-05 14:05:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:09 AI_Player.update()		110,	111,	111,	11,	111,	1110,	11
2017-01-05 14:05:09 AI_Player.update()		1101,	1001,	101,	1010,	110,	1110,	1011
2017-01-05 14:05:09 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 14:05:09 AI_Player.update()		1110,	101,	1010,	1001,	1010,	1010,	1100
2017-01-05 14:05:09 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:09 AI_Player.update()		1010,	1010,	1100,	1101,	101,	11,	1001
2017-01-05 14:05:09 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1001,	1001
2017-01-05 14:05:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:10 AI_Player.update()	update
2017-01-05 14:05:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:10 AI_Player.update()	update
2017-01-05 14:05:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:10 AI_Player.update()	Search took977ms
2017-01-05 14:05:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:10 AI_Player.update()		110,	111,	111,	11,	111,	1110,	11
2017-01-05 14:05:10 AI_Player.update()		1101,	1001,	101,	1010,	110,	1110,	1011
2017-01-05 14:05:10 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 14:05:10 AI_Player.update()		1100,	1110,	101,	1010,	1001,	1010,	1010
2017-01-05 14:05:10 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:10 AI_Player.update()		1010,	1010,	1100,	1101,	101,	11,	1001
2017-01-05 14:05:10 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1001,	1001
2017-01-05 14:05:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:10 AI_Player.update()	update
2017-01-05 14:05:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:10 AI_Player.update()	update
2017-01-05 14:05:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:11 AI_Player.update()	Search took3ms
2017-01-05 14:05:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:11 AI_Player.update()		110,	111,	111,	11,	111,	1110,	11
2017-01-05 14:05:11 AI_Player.update()		1101,	1001,	101,	1010,	110,	1110,	1011
2017-01-05 14:05:11 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-05 14:05:11 AI_Player.update()		1010,	1100,	1110,	101,	1010,	1001,	1010
2017-01-05 14:05:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:11 AI_Player.update()		1010,	1010,	1100,	1101,	101,	11,	1001
2017-01-05 14:05:11 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1001,	1001
2017-01-05 14:05:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:11 AI_Player.update()	update
2017-01-05 14:05:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:11 AI_Player.update()	update
2017-01-05 14:05:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:12 AI_Player.update()	Search took1040ms
2017-01-05 14:05:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()		110,	1001,	111,	11,	111,	1110,	11
2017-01-05 14:05:12 AI_Player.update()		1101,	1001,	101,	1010,	110,	1110,	1011
2017-01-05 14:05:12 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-05 14:05:12 AI_Player.update()		1010,	101,	1110,	101,	1010,	1001,	1010
2017-01-05 14:05:12 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:12 AI_Player.update()		1010,	1101,	1100,	1101,	101,	11,	1001
2017-01-05 14:05:12 AI_Player.update()		1100,	111,	1101,	110,	1101,	1001,	1001
2017-01-05 14:05:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()	update
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()	update
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:12 AI_Player.update()	Search took8ms
2017-01-05 14:05:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()		110,	1001,	111,	11,	111,	1110,	11
2017-01-05 14:05:12 AI_Player.update()		1101,	1100,	101,	1010,	110,	1110,	1011
2017-01-05 14:05:12 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-05 14:05:12 AI_Player.update()		1010,	1010,	1110,	101,	1010,	1001,	1010
2017-01-05 14:05:12 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:12 AI_Player.update()		1010,	111,	1100,	1101,	101,	11,	1001
2017-01-05 14:05:12 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1001,	1001
2017-01-05 14:05:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()	update
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:05:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()	update
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:12 AI_Player.update()	Search took872ms
2017-01-05 14:05:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()		110,	1001,	111,	11,	111,	1110,	11
2017-01-05 14:05:12 AI_Player.update()		1100,	101,	1010,	110,	1110,	1011,	1101
2017-01-05 14:05:12 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-05 14:05:12 AI_Player.update()		1010,	1010,	1110,	101,	1010,	1001,	1010
2017-01-05 14:05:12 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:12 AI_Player.update()		1010,	111,	1100,	1101,	101,	11,	1001
2017-01-05 14:05:12 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1001,	1001
2017-01-05 14:05:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:05:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()	update
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()	update
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:12 AI_Player.update()	Search took6ms
2017-01-05 14:05:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()		110,	1001,	111,	11,	111,	1001,	11
2017-01-05 14:05:12 AI_Player.update()		1100,	101,	1010,	110,	1110,	1110,	1101
2017-01-05 14:05:12 AI_Player.update()		1110,	101,	1110,	11,	111,	1011,	1011
2017-01-05 14:05:12 AI_Player.update()		1010,	1010,	1110,	101,	1010,	101,	1010
2017-01-05 14:05:12 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:05:12 AI_Player.update()		1010,	111,	1100,	1101,	101,	1010,	1001
2017-01-05 14:05:12 AI_Player.update()		1100,	1001,	1101,	110,	1101,	11,	1001
2017-01-05 14:05:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()	update
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 14:05:12 AI_Player.update()	Player b has won!
2017-01-05 14:05:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:12 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:12 AI_Player.update()	update
2017-01-05 14:05:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:13 AI_Player.update()	Search took72ms
2017-01-05 14:05:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()		110,	1100,	111,	1100,	111,	1001,	11
2017-01-05 14:05:13 AI_Player.update()		1010,	1010,	1001,	101,	101,	1100,	1101
2017-01-05 14:05:13 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-05 14:05:13 AI_Player.update()		1110,	11,	1110,	1011,	11,	11,	1001
2017-01-05 14:05:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:13 AI_Player.update()		110,	1001,	1010,	1101,	11,	1001,	1010
2017-01-05 14:05:13 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:13 AI_Player.update()	Search took1ms
2017-01-05 14:05:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()		110,	1100,	111,	1100,	111,	1001,	11
2017-01-05 14:05:13 AI_Player.update()		1010,	1001,	101,	101,	1100,	1101,	1010
2017-01-05 14:05:13 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-05 14:05:13 AI_Player.update()		1110,	11,	1110,	1011,	11,	11,	1001
2017-01-05 14:05:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:13 AI_Player.update()		110,	1001,	1010,	1101,	11,	1001,	1010
2017-01-05 14:05:13 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:13 AI_Player.update()	Search took239ms
2017-01-05 14:05:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()		110,	1100,	111,	1100,	111,	1001,	11
2017-01-05 14:05:13 AI_Player.update()		1010,	1001,	101,	101,	1100,	1101,	1010
2017-01-05 14:05:13 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-05 14:05:13 AI_Player.update()		11,	1110,	1011,	11,	11,	1001,	1110
2017-01-05 14:05:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:13 AI_Player.update()		110,	1001,	1010,	1101,	11,	1001,	1010
2017-01-05 14:05:13 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:13 AI_Player.update()	Search took3ms
2017-01-05 14:05:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()		110,	1100,	111,	1100,	111,	1101,	11
2017-01-05 14:05:13 AI_Player.update()		1010,	1001,	101,	101,	1100,	110,	1010
2017-01-05 14:05:13 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		11,	1110,	1011,	11,	11,	1010,	1110
2017-01-05 14:05:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		110,	1001,	1010,	1101,	11,	1010,	1010
2017-01-05 14:05:13 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:13 AI_Player.update()	Search took313ms
2017-01-05 14:05:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()		110,	1100,	111,	101,	111,	1101,	11
2017-01-05 14:05:13 AI_Player.update()		1010,	1001,	101,	1100,	1100,	110,	1010
2017-01-05 14:05:13 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		11,	1110,	1011,	101,	11,	1010,	1110
2017-01-05 14:05:13 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		110,	1001,	1010,	11,	11,	1010,	1010
2017-01-05 14:05:13 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:13 AI_Player.update()	Search took2ms
2017-01-05 14:05:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()		110,	1100,	111,	1100,	111,	1101,	11
2017-01-05 14:05:13 AI_Player.update()		1010,	1001,	101,	101,	1100,	110,	1010
2017-01-05 14:05:13 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		11,	1110,	1011,	11,	11,	1010,	1110
2017-01-05 14:05:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		110,	1001,	1010,	1101,	11,	1010,	1010
2017-01-05 14:05:13 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:13 AI_Player.update()	Search took56ms
2017-01-05 14:05:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()		110,	1001,	111,	1100,	111,	1101,	11
2017-01-05 14:05:13 AI_Player.update()		1010,	1010,	101,	101,	1100,	110,	1010
2017-01-05 14:05:13 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		11,	11,	1011,	11,	11,	1010,	1110
2017-01-05 14:05:13 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		110,	110,	1010,	1101,	11,	1010,	1010
2017-01-05 14:05:13 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:13 AI_Player.update()	Search took2ms
2017-01-05 14:05:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-05 14:05:13 AI_Player.update()		1010,	1110,	101,	101,	1100,	110,	1010
2017-01-05 14:05:13 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		11,	1001,	1011,	11,	11,	1010,	1110
2017-01-05 14:05:13 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		110,	1100,	1010,	1101,	11,	1010,	1010
2017-01-05 14:05:13 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:13 AI_Player.update()	Search took56ms
2017-01-05 14:05:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-05 14:05:13 AI_Player.update()		1010,	1110,	101,	1100,	1100,	110,	1010
2017-01-05 14:05:13 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		11,	1001,	1011,	101,	11,	1010,	1110
2017-01-05 14:05:13 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		110,	1100,	1010,	11,	11,	1010,	1010
2017-01-05 14:05:13 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:13 AI_Player.update()	Search took5ms
2017-01-05 14:05:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-05 14:05:13 AI_Player.update()		1010,	1010,	1110,	101,	1100,	1100,	110
2017-01-05 14:05:13 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		11,	1001,	1011,	101,	11,	1010,	1110
2017-01-05 14:05:13 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:13 AI_Player.update()		110,	1100,	1010,	11,	11,	1010,	1010
2017-01-05 14:05:13 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:05:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:13 AI_Player.update()	update
2017-01-05 14:05:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:14 AI_Player.update()	Search took320ms
2017-01-05 14:05:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:14 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-05 14:05:14 AI_Player.update()		1010,	1010,	1110,	11,	1100,	1100,	110
2017-01-05 14:05:14 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:14 AI_Player.update()		11,	1001,	1011,	1101,	11,	1010,	1110
2017-01-05 14:05:14 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-05 14:05:14 AI_Player.update()		110,	1100,	1010,	1100,	11,	1010,	1010
2017-01-05 14:05:14 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:14 AI_Player.update()	update
2017-01-05 14:05:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:14 AI_Player.update()	update
2017-01-05 14:05:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:14 AI_Player.update()	Search took6ms
2017-01-05 14:05:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:14 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-05 14:05:14 AI_Player.update()		1010,	11,	1110,	11,	1100,	1100,	110
2017-01-05 14:05:14 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:14 AI_Player.update()		11,	110,	1011,	1101,	11,	1010,	1110
2017-01-05 14:05:14 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-05 14:05:14 AI_Player.update()		110,	1001,	1010,	1100,	11,	1010,	1010
2017-01-05 14:05:14 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:14 AI_Player.update()	update
2017-01-05 14:05:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:14 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:14 AI_Player.update()	update
2017-01-05 14:05:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:15 AI_Player.update()	Search took855ms
2017-01-05 14:05:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()		110,	1010,	111,	11,	111,	1101,	11
2017-01-05 14:05:15 AI_Player.update()		1010,	11,	1110,	101,	1100,	1100,	110
2017-01-05 14:05:15 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-05 14:05:15 AI_Player.update()		11,	110,	1011,	11,	11,	1010,	1110
2017-01-05 14:05:15 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:05:15 AI_Player.update()		110,	1001,	1010,	101,	11,	1010,	1010
2017-01-05 14:05:15 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()	update
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()	update
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:15 AI_Player.update()	Search took3ms
2017-01-05 14:05:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()		110,	1010,	111,	11,	111,	1101,	11
2017-01-05 14:05:15 AI_Player.update()		1010,	11,	1110,	101,	1100,	1100,	110
2017-01-05 14:05:15 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-05 14:05:15 AI_Player.update()		1110,	11,	110,	1011,	11,	11,	1010
2017-01-05 14:05:15 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:05:15 AI_Player.update()		110,	1001,	1010,	101,	11,	1010,	1010
2017-01-05 14:05:15 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()	update
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()	update
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:15 AI_Player.update()	Search took571ms
2017-01-05 14:05:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()		110,	1010,	111,	11,	111,	1101,	11
2017-01-05 14:05:15 AI_Player.update()		1010,	11,	1110,	101,	1100,	1100,	110
2017-01-05 14:05:15 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-05 14:05:15 AI_Player.update()		1110,	11,	110,	1011,	11,	11,	1010
2017-01-05 14:05:15 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:05:15 AI_Player.update()		1010,	110,	1001,	1010,	101,	11,	1010
2017-01-05 14:05:15 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()	update
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()	update
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:15 AI_Player.update()	Search took10ms
2017-01-05 14:05:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-05 14:05:15 AI_Player.update()		1010,	11,	1110,	11,	1100,	1100,	110
2017-01-05 14:05:15 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:15 AI_Player.update()		1110,	11,	110,	1101,	11,	11,	1010
2017-01-05 14:05:15 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1001,	1011
2017-01-05 14:05:15 AI_Player.update()		1010,	110,	1001,	1100,	101,	11,	1010
2017-01-05 14:05:15 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()	update
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:05:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:15 AI_Player.update()	update
2017-01-05 14:05:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:16 AI_Player.update()	Search took663ms
2017-01-05 14:05:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:16 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-05 14:05:16 AI_Player.update()		1010,	11,	1110,	11,	1100,	1100,	110
2017-01-05 14:05:16 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:16 AI_Player.update()		1110,	11,	110,	1101,	11,	11,	1010
2017-01-05 14:05:16 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1001,	1011
2017-01-05 14:05:16 AI_Player.update()		110,	1001,	1100,	101,	11,	1010,	1010
2017-01-05 14:05:16 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:05:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:16 AI_Player.update()	update
2017-01-05 14:05:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:16 AI_Player.update()	update
2017-01-05 14:05:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:16 AI_Player.update()	Search took4ms
2017-01-05 14:05:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:16 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-05 14:05:16 AI_Player.update()		1010,	11,	1110,	11,	1100,	1100,	110
2017-01-05 14:05:16 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:16 AI_Player.update()		1110,	11,	110,	1101,	11,	11,	1010
2017-01-05 14:05:16 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1001,	1011
2017-01-05 14:05:16 AI_Player.update()		1001,	1100,	101,	11,	1010,	1010,	110
2017-01-05 14:05:16 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:16 AI_Player.update()	update
2017-01-05 14:05:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:16 AI_Player.update()	update
2017-01-05 14:05:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:17 AI_Player.update()	Search took1096ms
2017-01-05 14:05:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()		110,	1010,	111,	11,	111,	1101,	11
2017-01-05 14:05:17 AI_Player.update()		1010,	11,	1110,	101,	1100,	1100,	110
2017-01-05 14:05:17 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	110,	1011,	11,	11,	1010
2017-01-05 14:05:17 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-05 14:05:17 AI_Player.update()		1001,	1100,	101,	1010,	1010,	1010,	110
2017-01-05 14:05:17 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:17 AI_Player.update()	Player a has won!
2017-01-05 14:05:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:17 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:17 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:17 AI_Player.update()	Search took35ms
2017-01-05 14:05:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 14:05:17 AI_Player.update()		110,	1001,	1001,	1100,	1010,	1010,	11
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-05 14:05:17 AI_Player.update()		101,	1010,	101,	11,	1110,	110,	101
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1101,	1110,	1011,	110,	1011
2017-01-05 14:05:17 AI_Player.update()		111,	1001,	1100,	1100,	1010,	1001,	1100
2017-01-05 14:05:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:17 AI_Player.update()	Search took1ms
2017-01-05 14:05:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()		110,	1001,	111,	1010,	111,	1100,	11
2017-01-05 14:05:17 AI_Player.update()		110,	11,	1001,	1100,	1010,	1010,	11
2017-01-05 14:05:17 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 14:05:17 AI_Player.update()		101,	11,	101,	11,	1110,	110,	101
2017-01-05 14:05:17 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	110,	1011
2017-01-05 14:05:17 AI_Player.update()		111,	101,	1100,	1100,	1010,	1001,	1100
2017-01-05 14:05:17 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:17 AI_Player.update()	Search took67ms
2017-01-05 14:05:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 14:05:17 AI_Player.update()		110,	1001,	1001,	1100,	1010,	1010,	11
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-05 14:05:17 AI_Player.update()		101,	1010,	101,	11,	1110,	110,	101
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1101,	1110,	1011,	110,	1011
2017-01-05 14:05:17 AI_Player.update()		111,	1001,	1100,	1100,	1010,	1001,	1100
2017-01-05 14:05:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:17 AI_Player.update()	Search took2ms
2017-01-05 14:05:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 14:05:17 AI_Player.update()		110,	1001,	1001,	1100,	1010,	1100,	11
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 14:05:17 AI_Player.update()		101,	1010,	101,	11,	1110,	101,	101
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1101,	1110,	1011,	110,	1011
2017-01-05 14:05:17 AI_Player.update()		111,	1001,	1100,	1100,	1010,	110,	1100
2017-01-05 14:05:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:17 AI_Player.update()	Search took122ms
2017-01-05 14:05:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 14:05:17 AI_Player.update()		110,	1001,	1001,	1100,	1010,	1100,	11
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 14:05:17 AI_Player.update()		1010,	101,	11,	1110,	101,	101,	101
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1101,	1110,	1011,	110,	1011
2017-01-05 14:05:17 AI_Player.update()		111,	1001,	1100,	1100,	1010,	110,	1100
2017-01-05 14:05:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:17 AI_Player.update()	Search took2ms
2017-01-05 14:05:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-05 14:05:17 AI_Player.update()		110,	1001,	1001,	11,	1010,	1100,	11
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:17 AI_Player.update()		1010,	101,	11,	1110,	101,	101,	101
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:17 AI_Player.update()		111,	1001,	1100,	1010,	1010,	110,	1100
2017-01-05 14:05:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:17 AI_Player.update()	Search took206ms
2017-01-05 14:05:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-05 14:05:17 AI_Player.update()		11,	110,	1001,	1001,	11,	1010,	1100
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:17 AI_Player.update()		1010,	101,	11,	1110,	101,	101,	101
2017-01-05 14:05:17 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:17 AI_Player.update()		111,	1001,	1100,	1010,	1010,	110,	1100
2017-01-05 14:05:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:17 AI_Player.update()	Search took1ms
2017-01-05 14:05:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-05 14:05:17 AI_Player.update()		11,	11,	1001,	1001,	11,	1010,	1100
2017-01-05 14:05:17 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:17 AI_Player.update()		1010,	11,	11,	1110,	101,	101,	101
2017-01-05 14:05:17 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:17 AI_Player.update()		111,	101,	1100,	1010,	1010,	110,	1100
2017-01-05 14:05:17 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:17 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:17 AI_Player.update()	update
2017-01-05 14:05:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:18 AI_Player.update()	Search took102ms
2017-01-05 14:05:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-05 14:05:18 AI_Player.update()		11,	1001,	1001,	11,	1010,	1100,	11
2017-01-05 14:05:18 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:18 AI_Player.update()		1010,	11,	11,	1110,	101,	101,	101
2017-01-05 14:05:18 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:18 AI_Player.update()		111,	101,	1100,	1010,	1010,	110,	1100
2017-01-05 14:05:18 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:18 AI_Player.update()	Search took3ms
2017-01-05 14:05:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()		110,	1001,	111,	1100,	111,	11,	11
2017-01-05 14:05:18 AI_Player.update()		11,	101,	1001,	11,	1010,	1100,	11
2017-01-05 14:05:18 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:18 AI_Player.update()		1010,	1001,	11,	1110,	101,	101,	101
2017-01-05 14:05:18 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:18 AI_Player.update()		111,	11,	1100,	1010,	1010,	110,	1100
2017-01-05 14:05:18 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:18 AI_Player.update()	Search took105ms
2017-01-05 14:05:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()		110,	1001,	111,	1100,	111,	11,	11
2017-01-05 14:05:18 AI_Player.update()		11,	101,	1001,	11,	1010,	1100,	11
2017-01-05 14:05:18 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:18 AI_Player.update()		1001,	11,	1110,	101,	101,	101,	1010
2017-01-05 14:05:18 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:18 AI_Player.update()		111,	11,	1100,	1010,	1010,	110,	1100
2017-01-05 14:05:18 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:18 AI_Player.update()	Search took3ms
2017-01-05 14:05:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-05 14:05:18 AI_Player.update()		11,	11,	1001,	11,	1010,	1100,	11
2017-01-05 14:05:18 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:18 AI_Player.update()		1001,	101,	1110,	101,	101,	101,	1010
2017-01-05 14:05:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:18 AI_Player.update()		111,	110,	1100,	1010,	1010,	110,	1100
2017-01-05 14:05:18 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:18 AI_Player.update()	Search took206ms
2017-01-05 14:05:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-05 14:05:18 AI_Player.update()		11,	11,	1001,	11,	1010,	1100,	11
2017-01-05 14:05:18 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:18 AI_Player.update()		1001,	101,	1110,	101,	101,	101,	1010
2017-01-05 14:05:18 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:18 AI_Player.update()		1100,	111,	110,	1100,	1010,	1010,	110
2017-01-05 14:05:18 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:18 AI_Player.update()	Search took2ms
2017-01-05 14:05:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-05 14:05:18 AI_Player.update()		11,	11,	1001,	11,	1010,	1100,	11
2017-01-05 14:05:18 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:18 AI_Player.update()		1001,	11,	1110,	101,	101,	101,	1010
2017-01-05 14:05:18 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:18 AI_Player.update()		1100,	1001,	110,	1100,	1010,	1010,	110
2017-01-05 14:05:18 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:18 AI_Player.update()	Search took354ms
2017-01-05 14:05:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 14:05:18 AI_Player.update()		11,	11,	1001,	1100,	1010,	1100,	11
2017-01-05 14:05:18 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 14:05:18 AI_Player.update()		1001,	11,	1110,	1110,	101,	101,	1010
2017-01-05 14:05:18 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:18 AI_Player.update()		1100,	1001,	110,	1100,	1010,	1010,	110
2017-01-05 14:05:18 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:18 AI_Player.update()	Search took1ms
2017-01-05 14:05:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 14:05:18 AI_Player.update()		11,	1001,	1100,	1010,	1100,	11,	11
2017-01-05 14:05:18 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 14:05:18 AI_Player.update()		1001,	11,	1110,	1110,	101,	101,	1010
2017-01-05 14:05:18 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:18 AI_Player.update()		1100,	1001,	110,	1100,	1010,	1010,	110
2017-01-05 14:05:18 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:05:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:18 AI_Player.update()	update
2017-01-05 14:05:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:19 AI_Player.update()	Search took671ms
2017-01-05 14:05:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:19 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 14:05:19 AI_Player.update()		11,	1001,	1100,	1010,	1100,	11,	11
2017-01-05 14:05:19 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 14:05:19 AI_Player.update()		11,	1110,	1110,	101,	101,	1010,	1001
2017-01-05 14:05:19 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:19 AI_Player.update()		1100,	1001,	110,	1100,	1010,	1010,	110
2017-01-05 14:05:19 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:05:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:19 AI_Player.update()	update
2017-01-05 14:05:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:19 AI_Player.update()	update
2017-01-05 14:05:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:19 AI_Player.update()	Search took3ms
2017-01-05 14:05:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:19 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 14:05:19 AI_Player.update()		1001,	1100,	1010,	1100,	11,	11,	11
2017-01-05 14:05:19 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 14:05:19 AI_Player.update()		11,	1110,	1110,	101,	101,	1010,	1001
2017-01-05 14:05:19 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:19 AI_Player.update()		1100,	1001,	110,	1100,	1010,	1010,	110
2017-01-05 14:05:19 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:05:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:19 AI_Player.update()	update
2017-01-05 14:05:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:05:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:19 AI_Player.update()	update
2017-01-05 14:05:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:20 AI_Player.update()	Search took487ms
2017-01-05 14:05:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-05 14:05:20 AI_Player.update()		1001,	1100,	1010,	1100,	11,	11,	11
2017-01-05 14:05:20 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-05 14:05:20 AI_Player.update()		1110,	1110,	101,	101,	1010,	1001,	11
2017-01-05 14:05:20 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:20 AI_Player.update()		1100,	1001,	110,	1100,	1010,	1010,	110
2017-01-05 14:05:20 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:20 AI_Player.update()	Search took3ms
2017-01-05 14:05:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 14:05:20 AI_Player.update()		1001,	11,	1010,	1100,	11,	11,	11
2017-01-05 14:05:20 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-05 14:05:20 AI_Player.update()		1110,	101,	101,	101,	1010,	1001,	11
2017-01-05 14:05:20 AI_Player.update()		1110,	1110,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:20 AI_Player.update()		1100,	111,	110,	1100,	1010,	1010,	110
2017-01-05 14:05:20 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:20 AI_Player.update()	Search took412ms
2017-01-05 14:05:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-05 14:05:20 AI_Player.update()		1001,	11,	1010,	11,	11,	11,	11
2017-01-05 14:05:20 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-05 14:05:20 AI_Player.update()		1110,	101,	101,	101,	1010,	1001,	11
2017-01-05 14:05:20 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:20 AI_Player.update()		1100,	111,	110,	1100,	1010,	1010,	110
2017-01-05 14:05:20 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:20 AI_Player.update()	Player a has won!
2017-01-05 14:05:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:20 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:20 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:20 AI_Player.update()	Search took17ms
2017-01-05 14:05:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 14:05:20 AI_Player.update()		1010,	1001,	110,	1100,	1010,	11,	11
2017-01-05 14:05:20 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 14:05:20 AI_Player.update()		101,	1101,	101,	11,	111,	1100,	11
2017-01-05 14:05:20 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:20 AI_Player.update()		110,	110,	101,	1110,	1110,	101,	110
2017-01-05 14:05:20 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:20 AI_Player.update()	Search took1ms
2017-01-05 14:05:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 14:05:20 AI_Player.update()		1001,	110,	1100,	1010,	11,	11,	1010
2017-01-05 14:05:20 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 14:05:20 AI_Player.update()		101,	1101,	101,	11,	111,	1100,	11
2017-01-05 14:05:20 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:20 AI_Player.update()		110,	110,	101,	1110,	1110,	101,	110
2017-01-05 14:05:20 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:20 AI_Player.update()	Search took51ms
2017-01-05 14:05:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-05 14:05:20 AI_Player.update()		1001,	1100,	1100,	1010,	11,	11,	1010
2017-01-05 14:05:20 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-05 14:05:20 AI_Player.update()		101,	101,	101,	11,	111,	1100,	11
2017-01-05 14:05:20 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:20 AI_Player.update()		110,	110,	101,	1110,	1110,	101,	110
2017-01-05 14:05:20 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:20 AI_Player.update()	Search took1ms
2017-01-05 14:05:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()		110,	110,	111,	1001,	111,	11,	11
2017-01-05 14:05:20 AI_Player.update()		1001,	1100,	1100,	1010,	11,	11,	1010
2017-01-05 14:05:20 AI_Player.update()		1110,	110,	1110,	11,	111,	1100,	1011
2017-01-05 14:05:20 AI_Player.update()		101,	101,	101,	11,	111,	1010,	11
2017-01-05 14:05:20 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:20 AI_Player.update()		110,	110,	101,	1110,	1110,	1110,	110
2017-01-05 14:05:20 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:20 AI_Player.update()	Search took253ms
2017-01-05 14:05:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()		110,	110,	111,	1001,	111,	11,	11
2017-01-05 14:05:20 AI_Player.update()		1001,	1100,	1100,	1010,	11,	11,	1010
2017-01-05 14:05:20 AI_Player.update()		1110,	110,	1110,	11,	111,	1100,	1011
2017-01-05 14:05:20 AI_Player.update()		101,	101,	11,	111,	1010,	11,	101
2017-01-05 14:05:20 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:20 AI_Player.update()		110,	110,	101,	1110,	1110,	1110,	110
2017-01-05 14:05:20 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:20 AI_Player.update()	Search took2ms
2017-01-05 14:05:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-05 14:05:20 AI_Player.update()		1001,	1100,	1100,	1010,	11,	11,	1010
2017-01-05 14:05:20 AI_Player.update()		1110,	110,	1110,	11,	111,	11,	1011
2017-01-05 14:05:20 AI_Player.update()		101,	101,	11,	111,	1010,	1100,	101
2017-01-05 14:05:20 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:20 AI_Player.update()		110,	110,	101,	1110,	1110,	101,	110
2017-01-05 14:05:20 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-05 14:05:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:20 AI_Player.update()	update
2017-01-05 14:05:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:21 AI_Player.update()	Search took309ms
2017-01-05 14:05:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-05 14:05:21 AI_Player.update()		1001,	1100,	1100,	1001,	11,	11,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	110,	1110,	1010,	111,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		101,	101,	11,	11,	1010,	1100,	101
2017-01-05 14:05:21 AI_Player.update()		1110,	1101,	1101,	111,	1011,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		110,	110,	101,	1010,	1110,	101,	110
2017-01-05 14:05:21 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1110,	1001
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:21 AI_Player.update()	Search took4ms
2017-01-05 14:05:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-05 14:05:21 AI_Player.update()		1001,	110,	1100,	1001,	11,	11,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		101,	1101,	11,	11,	1010,	1100,	101
2017-01-05 14:05:21 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		110,	110,	101,	1010,	1110,	101,	110
2017-01-05 14:05:21 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1110,	1001
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:21 AI_Player.update()	Search took82ms
2017-01-05 14:05:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-05 14:05:21 AI_Player.update()		1001,	1100,	1100,	1001,	11,	11,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	110,	1110,	1010,	111,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		101,	101,	11,	11,	1010,	1100,	101
2017-01-05 14:05:21 AI_Player.update()		1110,	1101,	1101,	111,	1011,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		110,	110,	101,	1010,	1110,	101,	110
2017-01-05 14:05:21 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1110,	1001
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:21 AI_Player.update()	Search took6ms
2017-01-05 14:05:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-05 14:05:21 AI_Player.update()		1001,	110,	1100,	1001,	11,	11,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		101,	1101,	11,	11,	1010,	1100,	101
2017-01-05 14:05:21 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		110,	110,	101,	1010,	1110,	101,	110
2017-01-05 14:05:21 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1110,	1001
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:21 AI_Player.update()	Search took397ms
2017-01-05 14:05:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-05 14:05:21 AI_Player.update()		1001,	1100,	1100,	1001,	11,	11,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	110,	1110,	1010,	111,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		101,	101,	11,	11,	1010,	1100,	101
2017-01-05 14:05:21 AI_Player.update()		1110,	1101,	1101,	111,	1011,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		110,	110,	101,	1010,	1110,	101,	110
2017-01-05 14:05:21 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1110,	1001
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:21 AI_Player.update()	Search took3ms
2017-01-05 14:05:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-05 14:05:21 AI_Player.update()		1001,	110,	1100,	1001,	11,	11,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		101,	1101,	11,	11,	1010,	1100,	101
2017-01-05 14:05:21 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		110,	110,	101,	1010,	1110,	101,	110
2017-01-05 14:05:21 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1110,	1001
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:21 AI_Player.update()	Search took78ms
2017-01-05 14:05:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 14:05:21 AI_Player.update()		1001,	110,	1100,	1010,	11,	11,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		101,	1101,	11,	111,	1010,	1100,	101
2017-01-05 14:05:21 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		110,	110,	101,	1110,	1110,	101,	110
2017-01-05 14:05:21 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:21 AI_Player.update()	Search took3ms
2017-01-05 14:05:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 14:05:21 AI_Player.update()		1001,	110,	1100,	1010,	11,	11,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		101,	101,	1101,	11,	111,	1010,	1100
2017-01-05 14:05:21 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		110,	110,	101,	1110,	1110,	101,	110
2017-01-05 14:05:21 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:21 AI_Player.update()	Search took71ms
2017-01-05 14:05:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 14:05:21 AI_Player.update()		1001,	110,	1100,	1010,	11,	11,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		1100,	101,	101,	1101,	11,	111,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		110,	110,	101,	1110,	1110,	101,	110
2017-01-05 14:05:21 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1110,	1001
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:21 AI_Player.update()	Search took11ms
2017-01-05 14:05:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-05 14:05:21 AI_Player.update()		1001,	101,	1100,	1010,	11,	11,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		1100,	110,	101,	1101,	11,	111,	1010
2017-01-05 14:05:21 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:21 AI_Player.update()		110,	110,	101,	1110,	1110,	101,	110
2017-01-05 14:05:21 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1110,	1001
2017-01-05 14:05:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:21 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:21 AI_Player.update()	update
2017-01-05 14:05:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:22 AI_Player.update()	Search took330ms
2017-01-05 14:05:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()		110,	110,	111,	1001,	111,	11,	11
2017-01-05 14:05:22 AI_Player.update()		1001,	101,	1100,	1010,	11,	11,	1010
2017-01-05 14:05:22 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-05 14:05:22 AI_Player.update()		1100,	110,	101,	1101,	11,	11,	1010
2017-01-05 14:05:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:22 AI_Player.update()		110,	110,	101,	1110,	1110,	1110,	110
2017-01-05 14:05:22 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:22 AI_Player.update()	Search took5ms
2017-01-05 14:05:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-05 14:05:22 AI_Player.update()		1001,	101,	1100,	1010,	11,	11,	1010
2017-01-05 14:05:22 AI_Player.update()		1110,	110,	1110,	11,	111,	111,	1011
2017-01-05 14:05:22 AI_Player.update()		1100,	110,	101,	1101,	11,	11,	1010
2017-01-05 14:05:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:22 AI_Player.update()		110,	1100,	101,	1110,	1110,	1110,	110
2017-01-05 14:05:22 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:22 AI_Player.update()	Search took148ms
2017-01-05 14:05:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 14:05:22 AI_Player.update()		1001,	101,	1100,	11,	11,	11,	1010
2017-01-05 14:05:22 AI_Player.update()		1110,	110,	1110,	1101,	111,	111,	1011
2017-01-05 14:05:22 AI_Player.update()		1100,	110,	101,	1010,	11,	11,	1010
2017-01-05 14:05:22 AI_Player.update()		1110,	110,	1101,	1110,	1011,	101,	1011
2017-01-05 14:05:22 AI_Player.update()		110,	1100,	101,	1100,	1110,	1110,	110
2017-01-05 14:05:22 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:22 AI_Player.update()	Player a has won!
2017-01-05 14:05:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:22 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:22 AI_Player.update()	Search took19ms
2017-01-05 14:05:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:05:22 AI_Player.update()		111,	11,	101,	110,	1110,	11,	1100
2017-01-05 14:05:22 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:05:22 AI_Player.update()		11,	1010,	101,	11,	101,	11,	1100
2017-01-05 14:05:22 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-05 14:05:22 AI_Player.update()		1010,	1010,	1101,	1001,	11,	1010,	110
2017-01-05 14:05:22 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:22 AI_Player.update()	Search took3ms
2017-01-05 14:05:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-05 14:05:22 AI_Player.update()		111,	11,	101,	1100,	1110,	11,	1100
2017-01-05 14:05:22 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:22 AI_Player.update()		11,	1010,	101,	1010,	101,	11,	1100
2017-01-05 14:05:22 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1110,	1011
2017-01-05 14:05:22 AI_Player.update()		1010,	1010,	1101,	101,	11,	1010,	110
2017-01-05 14:05:22 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:22 AI_Player.update()	Search took181ms
2017-01-05 14:05:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-05 14:05:22 AI_Player.update()		1100,	111,	11,	101,	1100,	1110,	11
2017-01-05 14:05:22 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:22 AI_Player.update()		11,	1010,	101,	1010,	101,	11,	1100
2017-01-05 14:05:22 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1110,	1011
2017-01-05 14:05:22 AI_Player.update()		1010,	1010,	1101,	101,	11,	1010,	110
2017-01-05 14:05:22 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:22 AI_Player.update()	Search took3ms
2017-01-05 14:05:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-05 14:05:22 AI_Player.update()		1100,	111,	11,	101,	1100,	1110,	11
2017-01-05 14:05:22 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:22 AI_Player.update()		1100,	11,	1010,	101,	1010,	101,	11
2017-01-05 14:05:22 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1110,	1011
2017-01-05 14:05:22 AI_Player.update()		1010,	1010,	1101,	101,	11,	1010,	110
2017-01-05 14:05:22 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:22 AI_Player.update()	update
2017-01-05 14:05:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:23 AI_Player.update()	Search took499ms
2017-01-05 14:05:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()		110,	111,	111,	1101,	111,	101,	11
2017-01-05 14:05:23 AI_Player.update()		1100,	101,	11,	101,	1100,	1110,	11
2017-01-05 14:05:23 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:23 AI_Player.update()		1100,	1100,	1010,	101,	1010,	101,	11
2017-01-05 14:05:23 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1110,	1011
2017-01-05 14:05:23 AI_Player.update()		1010,	1100,	1101,	101,	11,	1010,	110
2017-01-05 14:05:23 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()	update
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()	update
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:23 AI_Player.update()	Search took1ms
2017-01-05 14:05:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-05 14:05:23 AI_Player.update()		1100,	111,	11,	101,	1100,	1110,	11
2017-01-05 14:05:23 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:23 AI_Player.update()		1100,	11,	1010,	101,	1010,	101,	11
2017-01-05 14:05:23 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1110,	1011
2017-01-05 14:05:23 AI_Player.update()		1010,	1010,	1101,	101,	11,	1010,	110
2017-01-05 14:05:23 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()	update
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()	update
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:23 AI_Player.update()	Search took461ms
2017-01-05 14:05:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()		110,	101,	111,	1101,	111,	1110,	11
2017-01-05 14:05:23 AI_Player.update()		1100,	111,	11,	101,	1100,	1010,	11
2017-01-05 14:05:23 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:05:23 AI_Player.update()		1100,	11,	1010,	101,	1010,	1110,	11
2017-01-05 14:05:23 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-05 14:05:23 AI_Player.update()		1010,	1010,	1101,	101,	11,	101,	110
2017-01-05 14:05:23 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()	update
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()	update
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:23 AI_Player.update()	Search took2ms
2017-01-05 14:05:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-05 14:05:23 AI_Player.update()		1100,	111,	11,	110,	1100,	1010,	11
2017-01-05 14:05:23 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:05:23 AI_Player.update()		1100,	11,	1010,	11,	1010,	1110,	11
2017-01-05 14:05:23 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:23 AI_Player.update()		1010,	1010,	1101,	1001,	11,	101,	110
2017-01-05 14:05:23 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-05 14:05:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()	update
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:23 AI_Player.update()	update
2017-01-05 14:05:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:24 AI_Player.update()	Search took603ms
2017-01-05 14:05:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:24 AI_Player.update()		110,	101,	111,	1101,	111,	1110,	11
2017-01-05 14:05:24 AI_Player.update()		1100,	111,	11,	101,	1100,	1010,	11
2017-01-05 14:05:24 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:05:24 AI_Player.update()		1100,	11,	1010,	101,	1010,	1110,	11
2017-01-05 14:05:24 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-05 14:05:24 AI_Player.update()		1010,	1010,	1101,	101,	11,	101,	110
2017-01-05 14:05:24 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:24 AI_Player.update()	update
2017-01-05 14:05:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:05:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:24 AI_Player.update()	update
2017-01-05 14:05:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:24 AI_Player.update()	Search took3ms
2017-01-05 14:05:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:24 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-05 14:05:24 AI_Player.update()		1100,	111,	11,	110,	1100,	1010,	11
2017-01-05 14:05:24 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:05:24 AI_Player.update()		1100,	11,	1010,	11,	1010,	1110,	11
2017-01-05 14:05:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:24 AI_Player.update()		1010,	1010,	1101,	1001,	11,	101,	110
2017-01-05 14:05:24 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-05 14:05:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:05:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:24 AI_Player.update()	update
2017-01-05 14:05:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:05:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:24 AI_Player.update()	update
2017-01-05 14:05:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:24 AI_Player.update()	Search took726ms
2017-01-05 14:05:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:24 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-05 14:05:24 AI_Player.update()		111,	11,	110,	1100,	1010,	11,	1100
2017-01-05 14:05:24 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:05:24 AI_Player.update()		1100,	11,	1010,	11,	1010,	1110,	11
2017-01-05 14:05:24 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:24 AI_Player.update()		1010,	1010,	1101,	1001,	11,	101,	110
2017-01-05 14:05:24 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-05 14:05:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:05:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:24 AI_Player.update()	update
2017-01-05 14:05:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:24 AI_Player.update()	update
2017-01-05 14:05:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:24 AI_Player.update()	Search took4ms
2017-01-05 14:05:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:24 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-05 14:05:24 AI_Player.update()		111,	101,	110,	1100,	1010,	11,	1100
2017-01-05 14:05:24 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 14:05:24 AI_Player.update()		1100,	1100,	1010,	11,	1010,	1110,	11
2017-01-05 14:05:24 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:24 AI_Player.update()		1010,	1100,	1101,	1001,	11,	101,	110
2017-01-05 14:05:24 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-05 14:05:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:25 AI_Player.update()	Search took264ms
2017-01-05 14:05:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-05 14:05:25 AI_Player.update()		111,	11,	110,	1100,	1010,	11,	1100
2017-01-05 14:05:25 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:05:25 AI_Player.update()		1100,	11,	1010,	11,	1010,	1110,	11
2017-01-05 14:05:25 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:25 AI_Player.update()		1010,	1010,	1101,	1001,	11,	101,	110
2017-01-05 14:05:25 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:25 AI_Player.update()	Search took5ms
2017-01-05 14:05:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-05 14:05:25 AI_Player.update()		111,	101,	110,	1100,	1010,	11,	1100
2017-01-05 14:05:25 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 14:05:25 AI_Player.update()		1100,	1100,	1010,	11,	1010,	1110,	11
2017-01-05 14:05:25 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:25 AI_Player.update()		1010,	1100,	1101,	1001,	11,	101,	110
2017-01-05 14:05:25 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:25 AI_Player.update()	Search took89ms
2017-01-05 14:05:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()		110,	11,	111,	1100,	111,	1110,	11
2017-01-05 14:05:25 AI_Player.update()		111,	101,	110,	101,	1010,	11,	1100
2017-01-05 14:05:25 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-05 14:05:25 AI_Player.update()		1100,	1100,	1010,	101,	1010,	1110,	11
2017-01-05 14:05:25 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:05:25 AI_Player.update()		1010,	1100,	1101,	1101,	11,	101,	110
2017-01-05 14:05:25 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:25 AI_Player.update()	Player a has won!
2017-01-05 14:05:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:25 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:25 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:25 AI_Player.update()	Search took240ms
2017-01-05 14:05:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:25 AI_Player.update()		1110,	1001,	1001,	101,	1100,	11,	101
2017-01-05 14:05:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:25 AI_Player.update()		110,	11,	1001,	1100,	1010,	11,	1100
2017-01-05 14:05:25 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:25 AI_Player.update()		1001,	110,	111,	101,	1101,	11,	101
2017-01-05 14:05:25 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:25 AI_Player.update()	Search took5ms
2017-01-05 14:05:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:25 AI_Player.update()		1001,	1001,	101,	1100,	11,	101,	1110
2017-01-05 14:05:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:25 AI_Player.update()		110,	11,	1001,	1100,	1010,	11,	1100
2017-01-05 14:05:25 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:25 AI_Player.update()		1001,	110,	111,	101,	1101,	11,	101
2017-01-05 14:05:25 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:25 AI_Player.update()	Search took280ms
2017-01-05 14:05:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:25 AI_Player.update()		1001,	101,	1100,	11,	101,	1110,	1001
2017-01-05 14:05:25 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:25 AI_Player.update()		110,	11,	1001,	1100,	1010,	11,	1100
2017-01-05 14:05:25 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:25 AI_Player.update()		1001,	110,	111,	101,	1101,	11,	101
2017-01-05 14:05:25 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:25 AI_Player.update()	Search took1ms
2017-01-05 14:05:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:05:25 AI_Player.update()		1001,	1100,	1100,	11,	101,	1110,	1001
2017-01-05 14:05:25 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:25 AI_Player.update()		110,	1010,	1001,	1100,	1010,	11,	1100
2017-01-05 14:05:25 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:25 AI_Player.update()		1001,	1010,	111,	101,	1101,	11,	101
2017-01-05 14:05:25 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:05:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:25 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:25 AI_Player.update()	update
2017-01-05 14:05:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:26 AI_Player.update()	Search took358ms
2017-01-05 14:05:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-05 14:05:26 AI_Player.update()		1001,	1100,	1100,	11,	101,	1001,	1001
2017-01-05 14:05:26 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-05 14:05:26 AI_Player.update()		110,	1010,	1001,	1100,	1010,	11,	1100
2017-01-05 14:05:26 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:26 AI_Player.update()		1001,	1010,	111,	101,	1101,	1100,	101
2017-01-05 14:05:26 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-05 14:05:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()	update
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()	update
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:26 AI_Player.update()	Search took1ms
2017-01-05 14:05:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()		110,	1100,	111,	101,	111,	1110,	11
2017-01-05 14:05:26 AI_Player.update()		1001,	11,	1100,	11,	101,	1001,	1001
2017-01-05 14:05:26 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-05 14:05:26 AI_Player.update()		110,	110,	1001,	1100,	1010,	11,	1100
2017-01-05 14:05:26 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:26 AI_Player.update()		1001,	110,	111,	101,	1101,	1100,	101
2017-01-05 14:05:26 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:05:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()	update
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()	update
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:26 AI_Player.update()	Search took344ms
2017-01-05 14:05:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 14:05:26 AI_Player.update()		1001,	11,	1100,	11,	101,	1110,	1001
2017-01-05 14:05:26 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:26 AI_Player.update()		110,	110,	1001,	1100,	1010,	11,	1100
2017-01-05 14:05:26 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:26 AI_Player.update()		1001,	110,	111,	101,	1101,	11,	101
2017-01-05 14:05:26 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:05:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()	update
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()	update
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:26 AI_Player.update()	Search took1ms
2017-01-05 14:05:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 14:05:26 AI_Player.update()		1001,	1010,	1100,	11,	101,	1110,	1001
2017-01-05 14:05:26 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:26 AI_Player.update()		110,	1010,	1001,	1100,	1010,	11,	1100
2017-01-05 14:05:26 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:26 AI_Player.update()		1001,	101,	111,	101,	1101,	11,	101
2017-01-05 14:05:26 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:05:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()	update
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:26 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:26 AI_Player.update()	update
2017-01-05 14:05:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:27 AI_Player.update()	Search took412ms
2017-01-05 14:05:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 14:05:27 AI_Player.update()		1001,	1010,	1100,	11,	101,	1110,	1001
2017-01-05 14:05:27 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:27 AI_Player.update()		1100,	110,	1010,	1001,	1100,	1010,	11
2017-01-05 14:05:27 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:27 AI_Player.update()		1001,	101,	111,	101,	1101,	11,	101
2017-01-05 14:05:27 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:27 AI_Player.update()	Search took1ms
2017-01-05 14:05:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 14:05:27 AI_Player.update()		1001,	1010,	1100,	11,	101,	1110,	1001
2017-01-05 14:05:27 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:27 AI_Player.update()		110,	1010,	1001,	1100,	1010,	11,	1100
2017-01-05 14:05:27 AI_Player.update()		1110,	110,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:27 AI_Player.update()		1001,	101,	111,	101,	1101,	11,	101
2017-01-05 14:05:27 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:27 AI_Player.update()	Search took119ms
2017-01-05 14:05:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-05 14:05:27 AI_Player.update()		1001,	1010,	1100,	101,	101,	1110,	1001
2017-01-05 14:05:27 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-05 14:05:27 AI_Player.update()		110,	1010,	1001,	1010,	1010,	11,	1100
2017-01-05 14:05:27 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 14:05:27 AI_Player.update()		1001,	101,	111,	1010,	1101,	11,	101
2017-01-05 14:05:27 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:27 AI_Player.update()	Search took2ms
2017-01-05 14:05:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-05 14:05:27 AI_Player.update()		1001,	110,	1100,	101,	101,	1110,	1001
2017-01-05 14:05:27 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:05:27 AI_Player.update()		110,	110,	1001,	1010,	1010,	11,	1100
2017-01-05 14:05:27 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 14:05:27 AI_Player.update()		1001,	1100,	111,	1010,	1101,	11,	101
2017-01-05 14:05:27 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:27 AI_Player.update()	Search took432ms
2017-01-05 14:05:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-05 14:05:27 AI_Player.update()		1001,	1001,	110,	1100,	101,	101,	1110
2017-01-05 14:05:27 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:05:27 AI_Player.update()		110,	110,	1001,	1010,	1010,	11,	1100
2017-01-05 14:05:27 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 14:05:27 AI_Player.update()		1001,	1100,	111,	1010,	1101,	11,	101
2017-01-05 14:05:27 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:27 AI_Player.update()	Player a has won!
2017-01-05 14:05:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:27 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:27 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:27 AI_Player.update()	Search took54ms
2017-01-05 14:05:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()		110,	1101,	111,	1101,	111,	111,	11
2017-01-05 14:05:27 AI_Player.update()		1010,	1100,	101,	1010,	1010,	1010,	110
2017-01-05 14:05:27 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:27 AI_Player.update()		11,	11,	1101,	101,	1010,	1001,	111
2017-01-05 14:05:27 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:27 AI_Player.update()		1110,	1100,	1001,	1011,	11,	1010,	101
2017-01-05 14:05:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:27 AI_Player.update()	Search took4ms
2017-01-05 14:05:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()		110,	1101,	111,	1101,	111,	111,	11
2017-01-05 14:05:27 AI_Player.update()		1100,	101,	1010,	1010,	1010,	110,	1010
2017-01-05 14:05:27 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:27 AI_Player.update()		11,	11,	1101,	101,	1010,	1001,	111
2017-01-05 14:05:27 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:27 AI_Player.update()		1110,	1100,	1001,	1011,	11,	1010,	101
2017-01-05 14:05:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:27 AI_Player.update()	update
2017-01-05 14:05:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:28 AI_Player.update()	Search took489ms
2017-01-05 14:05:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()		110,	1101,	111,	1101,	111,	111,	11
2017-01-05 14:05:28 AI_Player.update()		1010,	1100,	101,	1010,	1010,	1010,	110
2017-01-05 14:05:28 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:28 AI_Player.update()		11,	11,	1101,	101,	1010,	1001,	111
2017-01-05 14:05:28 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:28 AI_Player.update()		1110,	1100,	1001,	1011,	11,	1010,	101
2017-01-05 14:05:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:28 AI_Player.update()	Search took2ms
2017-01-05 14:05:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-05 14:05:28 AI_Player.update()		1010,	11,	101,	1010,	1010,	1010,	110
2017-01-05 14:05:28 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:28 AI_Player.update()		11,	101,	1101,	101,	1010,	1001,	111
2017-01-05 14:05:28 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:28 AI_Player.update()		1110,	1010,	1001,	1011,	11,	1010,	101
2017-01-05 14:05:28 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:28 AI_Player.update()	Search took69ms
2017-01-05 14:05:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()		110,	1101,	111,	1101,	111,	111,	11
2017-01-05 14:05:28 AI_Player.update()		1010,	1100,	101,	1010,	1010,	1010,	110
2017-01-05 14:05:28 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:28 AI_Player.update()		11,	11,	1101,	101,	1010,	1001,	111
2017-01-05 14:05:28 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:28 AI_Player.update()		1110,	1100,	1001,	1011,	11,	1010,	101
2017-01-05 14:05:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:28 AI_Player.update()	Search took1ms
2017-01-05 14:05:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-05 14:05:28 AI_Player.update()		1010,	11,	101,	1010,	1010,	1010,	110
2017-01-05 14:05:28 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:28 AI_Player.update()		11,	101,	1101,	101,	1010,	1001,	111
2017-01-05 14:05:28 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:28 AI_Player.update()		1110,	1010,	1001,	1011,	11,	1010,	101
2017-01-05 14:05:28 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:28 AI_Player.update()	Search took241ms
2017-01-05 14:05:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-05 14:05:28 AI_Player.update()		11,	101,	1010,	1010,	1010,	110,	1010
2017-01-05 14:05:28 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:28 AI_Player.update()		11,	101,	1101,	101,	1010,	1001,	111
2017-01-05 14:05:28 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:28 AI_Player.update()		1110,	1010,	1001,	1011,	11,	1010,	101
2017-01-05 14:05:28 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:28 AI_Player.update()	Search took2ms
2017-01-05 14:05:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-05 14:05:28 AI_Player.update()		11,	11,	1010,	1010,	1010,	110,	1010
2017-01-05 14:05:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:28 AI_Player.update()		11,	1100,	1101,	101,	1010,	1001,	111
2017-01-05 14:05:28 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:28 AI_Player.update()		1110,	1101,	1001,	1011,	11,	1010,	101
2017-01-05 14:05:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:28 AI_Player.update()	Search took142ms
2017-01-05 14:05:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()		110,	1100,	111,	1101,	111,	111,	11
2017-01-05 14:05:28 AI_Player.update()		11,	101,	1010,	1010,	1010,	110,	1010
2017-01-05 14:05:28 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:28 AI_Player.update()		11,	101,	1101,	101,	1010,	1001,	111
2017-01-05 14:05:28 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:28 AI_Player.update()		1110,	1010,	1001,	1011,	11,	1010,	101
2017-01-05 14:05:28 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:28 AI_Player.update()	Search took4ms
2017-01-05 14:05:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()		110,	1101,	111,	1101,	111,	111,	11
2017-01-05 14:05:28 AI_Player.update()		11,	1100,	1010,	1010,	1010,	110,	1010
2017-01-05 14:05:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:28 AI_Player.update()		11,	11,	1101,	101,	1010,	1001,	111
2017-01-05 14:05:28 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:28 AI_Player.update()		1110,	1100,	1001,	1011,	11,	1010,	101
2017-01-05 14:05:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:28 AI_Player.update()	Search took186ms
2017-01-05 14:05:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()		110,	1101,	111,	1101,	111,	110,	11
2017-01-05 14:05:28 AI_Player.update()		11,	1100,	1010,	1010,	1010,	1100,	1010
2017-01-05 14:05:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:28 AI_Player.update()		11,	11,	1101,	101,	1010,	1010,	111
2017-01-05 14:05:28 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:28 AI_Player.update()		1110,	1100,	1001,	1011,	11,	111,	101
2017-01-05 14:05:28 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:28 AI_Player.update()	Search took3ms
2017-01-05 14:05:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()		110,	1100,	111,	1101,	111,	110,	11
2017-01-05 14:05:28 AI_Player.update()		11,	101,	1010,	1010,	1010,	1100,	1010
2017-01-05 14:05:28 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:28 AI_Player.update()		11,	101,	1101,	101,	1010,	1010,	111
2017-01-05 14:05:28 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:28 AI_Player.update()		1110,	1010,	1001,	1011,	11,	111,	101
2017-01-05 14:05:28 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:28 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:28 AI_Player.update()	update
2017-01-05 14:05:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:29 AI_Player.update()	Search took145ms
2017-01-05 14:05:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:05:29 AI_Player.update()		11,	101,	1010,	1001,	1010,	1100,	1010
2017-01-05 14:05:29 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		11,	101,	1101,	110,	1010,	1010,	111
2017-01-05 14:05:29 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1010,	1011
2017-01-05 14:05:29 AI_Player.update()		1110,	1010,	1001,	1100,	11,	111,	101
2017-01-05 14:05:29 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	111,	1001
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:29 AI_Player.update()	Search took2ms
2017-01-05 14:05:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:05:29 AI_Player.update()		11,	11,	1010,	1001,	1010,	1100,	1010
2017-01-05 14:05:29 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		11,	1100,	1101,	110,	1010,	1010,	111
2017-01-05 14:05:29 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-05 14:05:29 AI_Player.update()		1110,	1101,	1001,	1100,	11,	111,	101
2017-01-05 14:05:29 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	111,	1001
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:29 AI_Player.update()	Search took365ms
2017-01-05 14:05:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()		110,	101,	111,	1101,	111,	110,	11
2017-01-05 14:05:29 AI_Player.update()		11,	11,	1010,	1010,	1010,	1100,	1010
2017-01-05 14:05:29 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		11,	1100,	1101,	101,	1010,	1010,	111
2017-01-05 14:05:29 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:29 AI_Player.update()		1110,	1101,	1001,	1011,	11,	111,	101
2017-01-05 14:05:29 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:29 AI_Player.update()	Search took2ms
2017-01-05 14:05:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()		110,	11,	111,	1101,	111,	110,	11
2017-01-05 14:05:29 AI_Player.update()		11,	101,	1010,	1010,	1010,	1100,	1010
2017-01-05 14:05:29 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		11,	1010,	1101,	101,	1010,	1010,	111
2017-01-05 14:05:29 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:29 AI_Player.update()		1110,	1100,	1001,	1011,	11,	111,	101
2017-01-05 14:05:29 AI_Player.update()		1100,	101,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:29 AI_Player.update()	Search took223ms
2017-01-05 14:05:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()		110,	101,	111,	1101,	111,	110,	11
2017-01-05 14:05:29 AI_Player.update()		11,	1100,	1010,	1010,	1010,	1100,	1010
2017-01-05 14:05:29 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		11,	1101,	1101,	101,	1010,	1010,	111
2017-01-05 14:05:29 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 14:05:29 AI_Player.update()		1110,	101,	1001,	1011,	11,	111,	101
2017-01-05 14:05:29 AI_Player.update()		1100,	11,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:29 AI_Player.update()	Player a has won!
2017-01-05 14:05:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:29 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:29 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:29 AI_Player.update()	Search took11ms
2017-01-05 14:05:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 14:05:29 AI_Player.update()		11,	110,	11,	1010,	1010,	110,	110
2017-01-05 14:05:29 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		110,	1010,	101,	1110,	11,	1101,	1010
2017-01-05 14:05:29 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		110,	1101,	110,	101,	1001,	1010,	101
2017-01-05 14:05:29 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:29 AI_Player.update()	Search took1ms
2017-01-05 14:05:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 14:05:29 AI_Player.update()		11,	1010,	11,	1010,	1010,	110,	110
2017-01-05 14:05:29 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		110,	11,	101,	1110,	11,	1101,	1010
2017-01-05 14:05:29 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		110,	101,	110,	101,	1001,	1010,	101
2017-01-05 14:05:29 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	101,	1001
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:29 AI_Player.update()	Search took114ms
2017-01-05 14:05:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 14:05:29 AI_Player.update()		1010,	11,	1010,	1010,	110,	110,	11
2017-01-05 14:05:29 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		110,	11,	101,	1110,	11,	1101,	1010
2017-01-05 14:05:29 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		110,	101,	110,	101,	1001,	1010,	101
2017-01-05 14:05:29 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	101,	1001
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:29 AI_Player.update()	Search took1ms
2017-01-05 14:05:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 14:05:29 AI_Player.update()		11,	1010,	1010,	110,	110,	11,	1010
2017-01-05 14:05:29 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		110,	11,	101,	1110,	11,	1101,	1010
2017-01-05 14:05:29 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:05:29 AI_Player.update()		110,	101,	110,	101,	1001,	1010,	101
2017-01-05 14:05:29 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	101,	1001
2017-01-05 14:05:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:29 AI_Player.update()	update
2017-01-05 14:05:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:30 AI_Player.update()	Search took148ms
2017-01-05 14:05:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 14:05:30 AI_Player.update()		11,	110,	1010,	110,	110,	11,	1010
2017-01-05 14:05:30 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:30 AI_Player.update()		110,	1010,	101,	1110,	11,	1101,	1010
2017-01-05 14:05:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:05:30 AI_Player.update()		110,	1101,	110,	101,	1001,	1010,	101
2017-01-05 14:05:30 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 14:05:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()	update
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()	update
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:30 AI_Player.update()	Search took3ms
2017-01-05 14:05:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-05 14:05:30 AI_Player.update()		11,	110,	1010,	110,	110,	11,	1010
2017-01-05 14:05:30 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:30 AI_Player.update()		110,	1010,	101,	1110,	11,	1101,	1010
2017-01-05 14:05:30 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:05:30 AI_Player.update()		101,	110,	1101,	110,	101,	1001,	1010
2017-01-05 14:05:30 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 14:05:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()	update
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()	update
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:30 AI_Player.update()	Search took170ms
2017-01-05 14:05:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-05 14:05:30 AI_Player.update()		11,	110,	1010,	1010,	110,	11,	1010
2017-01-05 14:05:30 AI_Player.update()		1110,	11,	1110,	1110,	111,	1001,	1011
2017-01-05 14:05:30 AI_Player.update()		110,	1010,	101,	1010,	11,	1101,	1010
2017-01-05 14:05:30 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 14:05:30 AI_Player.update()		101,	110,	1101,	1100,	101,	1001,	1010
2017-01-05 14:05:30 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 14:05:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()	update
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()	update
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:30 AI_Player.update()	Search took4ms
2017-01-05 14:05:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-05 14:05:30 AI_Player.update()		11,	110,	1010,	1010,	110,	11,	1010
2017-01-05 14:05:30 AI_Player.update()		1110,	11,	1110,	1110,	111,	1001,	1011
2017-01-05 14:05:30 AI_Player.update()		110,	1010,	101,	1010,	11,	1101,	1010
2017-01-05 14:05:30 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 14:05:30 AI_Player.update()		1010,	101,	110,	1101,	1100,	101,	1001
2017-01-05 14:05:30 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 14:05:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()	update
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:30 AI_Player.update()	update
2017-01-05 14:05:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:31 AI_Player.update()	Search took1028ms
2017-01-05 14:05:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-05 14:05:31 AI_Player.update()		11,	110,	1010,	1010,	110,	11,	1010
2017-01-05 14:05:31 AI_Player.update()		1110,	11,	1110,	1110,	111,	1001,	1011
2017-01-05 14:05:31 AI_Player.update()		1010,	101,	1010,	11,	1101,	1010,	110
2017-01-05 14:05:31 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 14:05:31 AI_Player.update()		1010,	101,	110,	1101,	1100,	101,	1001
2017-01-05 14:05:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 14:05:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()	update
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()	update
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:31 AI_Player.update()	Search took7ms
2017-01-05 14:05:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-05 14:05:31 AI_Player.update()		11,	110,	1010,	1010,	110,	11,	1010
2017-01-05 14:05:31 AI_Player.update()		1110,	11,	1110,	1110,	111,	1001,	1011
2017-01-05 14:05:31 AI_Player.update()		101,	1010,	11,	1101,	1010,	110,	1010
2017-01-05 14:05:31 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 14:05:31 AI_Player.update()		1010,	101,	110,	1101,	1100,	101,	1001
2017-01-05 14:05:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 14:05:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()	update
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:05:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()	update
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:31 AI_Player.update()	Search took318ms
2017-01-05 14:05:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 14:05:31 AI_Player.update()		11,	11,	1010,	1010,	110,	11,	1010
2017-01-05 14:05:31 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1001,	1011
2017-01-05 14:05:31 AI_Player.update()		101,	101,	11,	1101,	1010,	110,	1010
2017-01-05 14:05:31 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 14:05:31 AI_Player.update()		1010,	101,	110,	1101,	1100,	101,	1001
2017-01-05 14:05:31 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 14:05:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:05:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()	update
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()	update
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:31 AI_Player.update()	Search took8ms
2017-01-05 14:05:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:05:31 AI_Player.update()		11,	11,	1010,	1110,	110,	11,	1010
2017-01-05 14:05:31 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-05 14:05:31 AI_Player.update()		101,	101,	11,	110,	1010,	110,	1010
2017-01-05 14:05:31 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:31 AI_Player.update()		1010,	101,	110,	101,	1100,	101,	1001
2017-01-05 14:05:31 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:05:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()	update
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:31 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:31 AI_Player.update()	update
2017-01-05 14:05:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:32 AI_Player.update()	Search took855ms
2017-01-05 14:05:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:05:32 AI_Player.update()		11,	11,	1010,	1110,	110,	11,	1010
2017-01-05 14:05:32 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-05 14:05:32 AI_Player.update()		101,	101,	11,	110,	1010,	110,	1010
2017-01-05 14:05:32 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:32 AI_Player.update()		101,	110,	101,	1100,	101,	1001,	1010
2017-01-05 14:05:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:05:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()	update
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()	update
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:32 AI_Player.update()	Search took4ms
2017-01-05 14:05:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:05:32 AI_Player.update()		11,	11,	1010,	1110,	110,	11,	1010
2017-01-05 14:05:32 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-05 14:05:32 AI_Player.update()		1010,	101,	101,	11,	110,	1010,	110
2017-01-05 14:05:32 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:32 AI_Player.update()		101,	110,	101,	1100,	101,	1001,	1010
2017-01-05 14:05:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:05:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()	update
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()	update
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:32 AI_Player.update()	Search took425ms
2017-01-05 14:05:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:05:32 AI_Player.update()		1010,	11,	11,	1010,	1110,	110,	11
2017-01-05 14:05:32 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-05 14:05:32 AI_Player.update()		1010,	101,	101,	11,	110,	1010,	110
2017-01-05 14:05:32 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:32 AI_Player.update()		101,	110,	101,	1100,	101,	1001,	1010
2017-01-05 14:05:32 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:05:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()	update
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:32 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:32 AI_Player.update()	Player a has won!
2017-01-05 14:05:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:32 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:32 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()	update
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:32 AI_Player.update()	Search took63ms
2017-01-05 14:05:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-05 14:05:32 AI_Player.update()		1100,	101,	1011,	1001,	1101,	111,	101
2017-01-05 14:05:32 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:05:32 AI_Player.update()		101,	11,	1010,	1010,	1100,	101,	11
2017-01-05 14:05:32 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-05 14:05:32 AI_Player.update()		11,	1010,	111,	1010,	1010,	110,	1101
2017-01-05 14:05:32 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()	update
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()	update
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:32 AI_Player.update()	Search took0ms
2017-01-05 14:05:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-05 14:05:32 AI_Player.update()		1100,	101,	1011,	1001,	1101,	1100,	101
2017-01-05 14:05:32 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 14:05:32 AI_Player.update()		101,	11,	1010,	1010,	1100,	1011,	11
2017-01-05 14:05:32 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:32 AI_Player.update()		11,	1010,	111,	1010,	1010,	111,	1101
2017-01-05 14:05:32 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:05:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()	update
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:32 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:32 AI_Player.update()	update
2017-01-05 14:05:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:33 AI_Player.update()	Search took394ms
2017-01-05 14:05:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()		110,	1100,	111,	1001,	111,	111,	11
2017-01-05 14:05:33 AI_Player.update()		1100,	110,	1011,	1001,	1101,	1100,	101
2017-01-05 14:05:33 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-05 14:05:33 AI_Player.update()		101,	1010,	1010,	1010,	1100,	1011,	11
2017-01-05 14:05:33 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:33 AI_Player.update()		11,	1010,	111,	1010,	1010,	111,	1101
2017-01-05 14:05:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:33 AI_Player.update()	Search took2ms
2017-01-05 14:05:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()		110,	1100,	111,	1001,	111,	111,	11
2017-01-05 14:05:33 AI_Player.update()		110,	1011,	1001,	1101,	1100,	101,	1100
2017-01-05 14:05:33 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-05 14:05:33 AI_Player.update()		101,	1010,	1010,	1010,	1100,	1011,	11
2017-01-05 14:05:33 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:33 AI_Player.update()		11,	1010,	111,	1010,	1010,	111,	1101
2017-01-05 14:05:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:33 AI_Player.update()	Search took97ms
2017-01-05 14:05:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()		110,	1011,	111,	1001,	111,	111,	11
2017-01-05 14:05:33 AI_Player.update()		110,	101,	1001,	1101,	1100,	101,	1100
2017-01-05 14:05:33 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-05 14:05:33 AI_Player.update()		101,	11,	1010,	1010,	1100,	1011,	11
2017-01-05 14:05:33 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-05 14:05:33 AI_Player.update()		11,	1010,	111,	1010,	1010,	111,	1101
2017-01-05 14:05:33 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:33 AI_Player.update()	Search took1ms
2017-01-05 14:05:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()		110,	1011,	111,	1101,	111,	111,	11
2017-01-05 14:05:33 AI_Player.update()		110,	101,	1001,	11,	1100,	101,	1100
2017-01-05 14:05:33 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:33 AI_Player.update()		101,	11,	1010,	101,	1100,	1011,	11
2017-01-05 14:05:33 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:33 AI_Player.update()		11,	1010,	111,	1100,	1010,	111,	1101
2017-01-05 14:05:33 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:33 AI_Player.update()	Search took140ms
2017-01-05 14:05:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-05 14:05:33 AI_Player.update()		110,	1010,	1001,	11,	1100,	101,	1100
2017-01-05 14:05:33 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:33 AI_Player.update()		101,	1010,	1010,	101,	1100,	1011,	11
2017-01-05 14:05:33 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:33 AI_Player.update()		11,	1100,	111,	1100,	1010,	111,	1101
2017-01-05 14:05:33 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:33 AI_Player.update()	Search took3ms
2017-01-05 14:05:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-05 14:05:33 AI_Player.update()		110,	1010,	1001,	11,	1100,	101,	1100
2017-01-05 14:05:33 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:33 AI_Player.update()		1010,	1010,	101,	1100,	1011,	11,	101
2017-01-05 14:05:33 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:33 AI_Player.update()		11,	1100,	111,	1100,	1010,	111,	1101
2017-01-05 14:05:33 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:33 AI_Player.update()	Search took266ms
2017-01-05 14:05:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-05 14:05:33 AI_Player.update()		110,	1010,	1001,	1010,	1100,	101,	1100
2017-01-05 14:05:33 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:33 AI_Player.update()		1010,	1010,	101,	1010,	1011,	11,	101
2017-01-05 14:05:33 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:33 AI_Player.update()		11,	1100,	111,	1001,	1010,	111,	1101
2017-01-05 14:05:33 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1010,	1001
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:33 AI_Player.update()	Search took6ms
2017-01-05 14:05:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()		110,	1011,	111,	11,	111,	111,	11
2017-01-05 14:05:33 AI_Player.update()		110,	101,	1001,	1010,	1100,	101,	1100
2017-01-05 14:05:33 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:33 AI_Player.update()		1010,	11,	101,	1010,	1011,	11,	101
2017-01-05 14:05:33 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:33 AI_Player.update()		11,	1010,	111,	1001,	1010,	111,	1101
2017-01-05 14:05:33 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-05 14:05:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:33 AI_Player.update()	update
2017-01-05 14:05:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:34 AI_Player.update()	Search took750ms
2017-01-05 14:05:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:34 AI_Player.update()		110,	1011,	111,	11,	111,	111,	11
2017-01-05 14:05:34 AI_Player.update()		101,	1001,	1010,	1100,	101,	1100,	110
2017-01-05 14:05:34 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:34 AI_Player.update()		1010,	11,	101,	1010,	1011,	11,	101
2017-01-05 14:05:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:34 AI_Player.update()		11,	1010,	111,	1001,	1010,	111,	1101
2017-01-05 14:05:34 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1010,	1001
2017-01-05 14:05:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:34 AI_Player.update()	update
2017-01-05 14:05:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:34 AI_Player.update()	update
2017-01-05 14:05:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:34 AI_Player.update()	Search took4ms
2017-01-05 14:05:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:34 AI_Player.update()		110,	1001,	111,	11,	111,	111,	11
2017-01-05 14:05:34 AI_Player.update()		101,	1010,	1010,	1100,	101,	1100,	110
2017-01-05 14:05:34 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:34 AI_Player.update()		1010,	1010,	101,	1010,	1011,	11,	101
2017-01-05 14:05:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:34 AI_Player.update()		11,	1100,	111,	1001,	1010,	111,	1101
2017-01-05 14:05:34 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1010,	1001
2017-01-05 14:05:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:34 AI_Player.update()	update
2017-01-05 14:05:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:34 AI_Player.update()	update
2017-01-05 14:05:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:35 AI_Player.update()	Search took590ms
2017-01-05 14:05:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()		110,	1001,	111,	1101,	111,	111,	11
2017-01-05 14:05:35 AI_Player.update()		101,	1010,	1010,	11,	101,	1100,	110
2017-01-05 14:05:35 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:35 AI_Player.update()		1010,	1010,	101,	1100,	1011,	11,	101
2017-01-05 14:05:35 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:35 AI_Player.update()		11,	1100,	111,	1100,	1010,	111,	1101
2017-01-05 14:05:35 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:35 AI_Player.update()	Search took3ms
2017-01-05 14:05:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()		110,	1001,	111,	11,	111,	111,	11
2017-01-05 14:05:35 AI_Player.update()		101,	1010,	1010,	1100,	101,	1100,	110
2017-01-05 14:05:35 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:35 AI_Player.update()		1010,	1010,	101,	1010,	1011,	11,	101
2017-01-05 14:05:35 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:35 AI_Player.update()		11,	1100,	111,	1001,	1010,	111,	1101
2017-01-05 14:05:35 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1010,	1001
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:35 AI_Player.update()	Search took57ms
2017-01-05 14:05:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()		110,	1001,	111,	1101,	111,	111,	11
2017-01-05 14:05:35 AI_Player.update()		101,	1010,	1010,	11,	101,	1100,	110
2017-01-05 14:05:35 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:35 AI_Player.update()		1010,	1010,	101,	1100,	1011,	11,	101
2017-01-05 14:05:35 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:35 AI_Player.update()		11,	1100,	111,	1100,	1010,	111,	1101
2017-01-05 14:05:35 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:35 AI_Player.update()	Search took4ms
2017-01-05 14:05:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()		110,	1010,	111,	1101,	111,	111,	11
2017-01-05 14:05:35 AI_Player.update()		101,	11,	1010,	11,	101,	1100,	110
2017-01-05 14:05:35 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:35 AI_Player.update()		1010,	1010,	101,	1100,	1011,	11,	101
2017-01-05 14:05:35 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:35 AI_Player.update()		11,	1011,	111,	1100,	1010,	111,	1101
2017-01-05 14:05:35 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:35 AI_Player.update()	Search took180ms
2017-01-05 14:05:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()		110,	1010,	111,	1101,	111,	111,	11
2017-01-05 14:05:35 AI_Player.update()		110,	101,	11,	1010,	11,	101,	1100
2017-01-05 14:05:35 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:35 AI_Player.update()		1010,	1010,	101,	1100,	1011,	11,	101
2017-01-05 14:05:35 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:35 AI_Player.update()		11,	1011,	111,	1100,	1010,	111,	1101
2017-01-05 14:05:35 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:35 AI_Player.update()	Search took3ms
2017-01-05 14:05:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()		110,	1010,	111,	1101,	111,	111,	11
2017-01-05 14:05:35 AI_Player.update()		1100,	110,	101,	11,	1010,	11,	101
2017-01-05 14:05:35 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:35 AI_Player.update()		1010,	1010,	101,	1100,	1011,	11,	101
2017-01-05 14:05:35 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:35 AI_Player.update()		11,	1011,	111,	1100,	1010,	111,	1101
2017-01-05 14:05:35 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:35 AI_Player.update()	Search took278ms
2017-01-05 14:05:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()		110,	1010,	111,	1101,	111,	111,	11
2017-01-05 14:05:35 AI_Player.update()		110,	101,	11,	1010,	11,	101,	1100
2017-01-05 14:05:35 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:35 AI_Player.update()		1010,	1010,	101,	1100,	1011,	11,	101
2017-01-05 14:05:35 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:35 AI_Player.update()		11,	1011,	111,	1100,	1010,	111,	1101
2017-01-05 14:05:35 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:35 AI_Player.update()	Search took3ms
2017-01-05 14:05:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()		110,	1010,	111,	1101,	111,	111,	11
2017-01-05 14:05:35 AI_Player.update()		110,	101,	11,	1010,	11,	101,	1100
2017-01-05 14:05:35 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:35 AI_Player.update()		1010,	101,	1100,	1011,	11,	101,	1010
2017-01-05 14:05:35 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:35 AI_Player.update()		11,	1011,	111,	1100,	1010,	111,	1101
2017-01-05 14:05:35 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:35 AI_Player.update()	update
2017-01-05 14:05:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:36 AI_Player.update()	Search took249ms
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()		110,	101,	111,	1101,	111,	111,	11
2017-01-05 14:05:36 AI_Player.update()		110,	1010,	11,	1010,	11,	101,	1100
2017-01-05 14:05:36 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:36 AI_Player.update()		1010,	1100,	1100,	1011,	11,	101,	1010
2017-01-05 14:05:36 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:36 AI_Player.update()		11,	1001,	111,	1100,	1010,	111,	1101
2017-01-05 14:05:36 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:36 AI_Player.update()	Player a has won!
2017-01-05 14:05:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:36 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:36 AI_Player.update()	Search took65ms
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()		110,	1101,	111,	1101,	111,	1110,	11
2017-01-05 14:05:36 AI_Player.update()		11,	110,	1010,	101,	1010,	11,	1001
2017-01-05 14:05:36 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:36 AI_Player.update()		101,	101,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:36 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:36 AI_Player.update()		1001,	1001,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:36 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:36 AI_Player.update()	Search took1ms
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()		110,	110,	111,	1101,	111,	1110,	11
2017-01-05 14:05:36 AI_Player.update()		11,	1100,	1010,	101,	1010,	11,	1001
2017-01-05 14:05:36 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:36 AI_Player.update()		101,	1101,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:36 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:36 AI_Player.update()		1001,	11,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:36 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:36 AI_Player.update()	Search took207ms
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()		110,	110,	111,	101,	111,	1110,	11
2017-01-05 14:05:36 AI_Player.update()		11,	1100,	1010,	1101,	1010,	11,	1001
2017-01-05 14:05:36 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:05:36 AI_Player.update()		101,	1101,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:36 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:36 AI_Player.update()		1001,	11,	1001,	1100,	1010,	1100,	101
2017-01-05 14:05:36 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:36 AI_Player.update()	Search took1ms
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()		110,	1100,	111,	101,	111,	1110,	11
2017-01-05 14:05:36 AI_Player.update()		11,	101,	1010,	1101,	1010,	11,	1001
2017-01-05 14:05:36 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-05 14:05:36 AI_Player.update()		101,	1001,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:36 AI_Player.update()		1001,	1101,	1001,	1100,	1010,	1100,	101
2017-01-05 14:05:36 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:36 AI_Player.update()	Search took39ms
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()		110,	1100,	111,	1101,	111,	1110,	11
2017-01-05 14:05:36 AI_Player.update()		11,	101,	1010,	101,	1010,	11,	1001
2017-01-05 14:05:36 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:36 AI_Player.update()		101,	1001,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:36 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:36 AI_Player.update()		1001,	1101,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:36 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:36 AI_Player.update()	Search took2ms
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()		110,	101,	111,	1101,	111,	1110,	11
2017-01-05 14:05:36 AI_Player.update()		11,	1101,	1010,	101,	1010,	11,	1001
2017-01-05 14:05:36 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:36 AI_Player.update()		101,	11,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:36 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:36 AI_Player.update()		1001,	110,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:36 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:36 AI_Player.update()	Search took230ms
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()		110,	1101,	111,	1101,	111,	1110,	11
2017-01-05 14:05:36 AI_Player.update()		11,	1001,	1010,	101,	1010,	11,	1001
2017-01-05 14:05:36 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:36 AI_Player.update()		101,	1101,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:36 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:36 AI_Player.update()		1001,	1100,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:36 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:36 AI_Player.update()	Search took1ms
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()		110,	1001,	111,	1101,	111,	1110,	11
2017-01-05 14:05:36 AI_Player.update()		11,	11,	1010,	101,	1010,	11,	1001
2017-01-05 14:05:36 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:36 AI_Player.update()		101,	110,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:36 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:36 AI_Player.update()		1001,	101,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:36 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:36 AI_Player.update()	Search took54ms
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()		110,	11,	111,	1101,	111,	1110,	11
2017-01-05 14:05:36 AI_Player.update()		11,	1101,	1010,	101,	1010,	11,	1001
2017-01-05 14:05:36 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:36 AI_Player.update()		101,	1100,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:36 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:36 AI_Player.update()		1001,	1101,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:36 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:36 AI_Player.update()	Search took2ms
2017-01-05 14:05:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()		110,	1101,	111,	1101,	111,	1110,	11
2017-01-05 14:05:36 AI_Player.update()		11,	110,	1010,	101,	1010,	11,	1001
2017-01-05 14:05:36 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:36 AI_Player.update()		101,	101,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:36 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:36 AI_Player.update()		1001,	1001,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:36 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:36 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:36 AI_Player.update()	update
2017-01-05 14:05:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:37 AI_Player.update()	Search took290ms
2017-01-05 14:05:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()		110,	1101,	111,	1101,	111,	1110,	11
2017-01-05 14:05:37 AI_Player.update()		110,	1010,	101,	1010,	11,	1001,	11
2017-01-05 14:05:37 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:37 AI_Player.update()		101,	101,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:37 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:37 AI_Player.update()		1001,	1001,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:37 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:37 AI_Player.update()	Search took2ms
2017-01-05 14:05:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()		110,	1101,	111,	1101,	111,	1001,	11
2017-01-05 14:05:37 AI_Player.update()		110,	1010,	101,	1010,	11,	1110,	11
2017-01-05 14:05:37 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-05 14:05:37 AI_Player.update()		101,	101,	1010,	1100,	1100,	101,	101
2017-01-05 14:05:37 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-05 14:05:37 AI_Player.update()		1001,	1001,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:37 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:37 AI_Player.update()	Search took144ms
2017-01-05 14:05:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()		110,	1101,	111,	1101,	111,	1001,	11
2017-01-05 14:05:37 AI_Player.update()		1010,	101,	1010,	11,	1110,	11,	110
2017-01-05 14:05:37 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-05 14:05:37 AI_Player.update()		101,	101,	1010,	1100,	1100,	101,	101
2017-01-05 14:05:37 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-05 14:05:37 AI_Player.update()		1001,	1001,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:37 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:05:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:37 AI_Player.update()	Search took1ms
2017-01-05 14:05:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()		110,	1101,	111,	1101,	111,	11,	11
2017-01-05 14:05:37 AI_Player.update()		1010,	101,	1010,	11,	1110,	1001,	110
2017-01-05 14:05:37 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:37 AI_Player.update()		101,	101,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:37 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:37 AI_Player.update()		1001,	1001,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:37 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:37 AI_Player.update()	Search took286ms
2017-01-05 14:05:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()		110,	1101,	111,	1101,	111,	11,	11
2017-01-05 14:05:37 AI_Player.update()		101,	1010,	11,	1110,	1001,	110,	1010
2017-01-05 14:05:37 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:37 AI_Player.update()		101,	101,	1010,	1100,	1100,	11,	101
2017-01-05 14:05:37 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:37 AI_Player.update()		1001,	1001,	1001,	1010,	1010,	1100,	101
2017-01-05 14:05:37 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:37 AI_Player.update()	Player a has won!
2017-01-05 14:05:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:37 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:37 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:37 AI_Player.update()	Search took166ms
2017-01-05 14:05:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()		110,	111,	111,	1001,	111,	11,	11
2017-01-05 14:05:37 AI_Player.update()		1010,	110,	11,	1101,	1100,	101,	11
2017-01-05 14:05:37 AI_Player.update()		1110,	101,	1110,	1100,	111,	1110,	1011
2017-01-05 14:05:37 AI_Player.update()		1001,	1001,	1100,	1011,	1001,	111,	1010
2017-01-05 14:05:37 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:37 AI_Player.update()		110,	1100,	1011,	1110,	1101,	1010,	1011
2017-01-05 14:05:37 AI_Player.update()		1100,	1101,	1101,	111,	1101,	1010,	1001
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:37 AI_Player.update()	Search took1ms
2017-01-05 14:05:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()		110,	111,	111,	1001,	111,	11,	11
2017-01-05 14:05:37 AI_Player.update()		110,	11,	1101,	1100,	101,	11,	1010
2017-01-05 14:05:37 AI_Player.update()		1110,	101,	1110,	1100,	111,	1110,	1011
2017-01-05 14:05:37 AI_Player.update()		1001,	1001,	1100,	1011,	1001,	111,	1010
2017-01-05 14:05:37 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:37 AI_Player.update()		110,	1100,	1011,	1110,	1101,	1010,	1011
2017-01-05 14:05:37 AI_Player.update()		1100,	1101,	1101,	111,	1101,	1010,	1001
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:37 AI_Player.update()	Search took116ms
2017-01-05 14:05:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()		110,	111,	111,	1001,	111,	11,	11
2017-01-05 14:05:37 AI_Player.update()		1010,	110,	11,	1101,	1100,	101,	11
2017-01-05 14:05:37 AI_Player.update()		1110,	101,	1110,	1100,	111,	1110,	1011
2017-01-05 14:05:37 AI_Player.update()		1001,	1001,	1100,	1011,	1001,	111,	1010
2017-01-05 14:05:37 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	11,	1011
2017-01-05 14:05:37 AI_Player.update()		110,	1100,	1011,	1110,	1101,	1010,	1011
2017-01-05 14:05:37 AI_Player.update()		1100,	1101,	1101,	111,	1101,	1010,	1001
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:37 AI_Player.update()	Search took2ms
2017-01-05 14:05:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()		110,	111,	111,	1101,	111,	11,	11
2017-01-05 14:05:37 AI_Player.update()		1010,	110,	11,	1100,	1100,	101,	11
2017-01-05 14:05:37 AI_Player.update()		1110,	101,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:37 AI_Player.update()		1001,	1001,	1100,	1010,	1001,	111,	1010
2017-01-05 14:05:37 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:37 AI_Player.update()		110,	1100,	1011,	111,	1101,	1010,	1011
2017-01-05 14:05:37 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:37 AI_Player.update()	update
2017-01-05 14:05:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:38 AI_Player.update()	Search took353ms
2017-01-05 14:05:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()		110,	110,	111,	1101,	111,	11,	11
2017-01-05 14:05:38 AI_Player.update()		1010,	101,	11,	1100,	1100,	101,	11
2017-01-05 14:05:38 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:38 AI_Player.update()		1001,	1011,	1100,	1010,	1001,	111,	1010
2017-01-05 14:05:38 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:38 AI_Player.update()		110,	1101,	1011,	111,	1101,	1010,	1011
2017-01-05 14:05:38 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()	update
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()	update
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:38 AI_Player.update()	Search took1ms
2017-01-05 14:05:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()		110,	101,	111,	1101,	111,	11,	11
2017-01-05 14:05:38 AI_Player.update()		1010,	1001,	11,	1100,	1100,	101,	11
2017-01-05 14:05:38 AI_Player.update()		1110,	1011,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:38 AI_Player.update()		1001,	1100,	1100,	1010,	1001,	111,	1010
2017-01-05 14:05:38 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:38 AI_Player.update()		110,	111,	1011,	111,	1101,	1010,	1011
2017-01-05 14:05:38 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()	update
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()	update
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:38 AI_Player.update()	Search took418ms
2017-01-05 14:05:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()		110,	110,	111,	1101,	111,	11,	11
2017-01-05 14:05:38 AI_Player.update()		1010,	101,	11,	1100,	1100,	101,	11
2017-01-05 14:05:38 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:38 AI_Player.update()		1001,	1011,	1100,	1010,	1001,	111,	1010
2017-01-05 14:05:38 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:38 AI_Player.update()		110,	1101,	1011,	111,	1101,	1010,	1011
2017-01-05 14:05:38 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()	update
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()	update
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:38 AI_Player.update()	Search took2ms
2017-01-05 14:05:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()		110,	101,	111,	1101,	111,	11,	11
2017-01-05 14:05:38 AI_Player.update()		1010,	1001,	11,	1100,	1100,	101,	11
2017-01-05 14:05:38 AI_Player.update()		1110,	1011,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:38 AI_Player.update()		1001,	1100,	1100,	1010,	1001,	111,	1010
2017-01-05 14:05:38 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:38 AI_Player.update()		110,	111,	1011,	111,	1101,	1010,	1011
2017-01-05 14:05:38 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()	update
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:38 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:38 AI_Player.update()	update
2017-01-05 14:05:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:39 AI_Player.update()	Search took366ms
2017-01-05 14:05:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()		110,	101,	111,	1101,	111,	11,	11
2017-01-05 14:05:39 AI_Player.update()		1010,	1001,	11,	1100,	1100,	101,	11
2017-01-05 14:05:39 AI_Player.update()		1110,	1011,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	1100,	1010,	1001,	111,	1010,	1001
2017-01-05 14:05:39 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:39 AI_Player.update()		110,	111,	1011,	111,	1101,	1010,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:39 AI_Player.update()	Search took3ms
2017-01-05 14:05:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()		110,	101,	111,	1101,	111,	11,	11
2017-01-05 14:05:39 AI_Player.update()		1010,	1001,	11,	1100,	1100,	101,	11
2017-01-05 14:05:39 AI_Player.update()		1110,	1011,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	1010,	1001,	111,	1010,	1001,	1100
2017-01-05 14:05:39 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:39 AI_Player.update()		110,	111,	1011,	111,	1101,	1010,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:39 AI_Player.update()	Search took463ms
2017-01-05 14:05:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()		110,	1001,	111,	1101,	111,	11,	11
2017-01-05 14:05:39 AI_Player.update()		1010,	1011,	11,	1100,	1100,	101,	11
2017-01-05 14:05:39 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	1101,	1001,	111,	1010,	1001,	1100
2017-01-05 14:05:39 AI_Player.update()		1110,	111,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:39 AI_Player.update()		110,	110,	1011,	111,	1101,	1010,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:39 AI_Player.update()	Search took2ms
2017-01-05 14:05:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()		110,	101,	111,	1101,	111,	11,	11
2017-01-05 14:05:39 AI_Player.update()		1010,	1001,	11,	1100,	1100,	101,	11
2017-01-05 14:05:39 AI_Player.update()		1110,	1011,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	1010,	1001,	111,	1010,	1001,	1100
2017-01-05 14:05:39 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:39 AI_Player.update()		110,	111,	1011,	111,	1101,	1010,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:39 AI_Player.update()	Search took390ms
2017-01-05 14:05:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-05 14:05:39 AI_Player.update()		1010,	1001,	11,	1011,	1100,	101,	11
2017-01-05 14:05:39 AI_Player.update()		1110,	1011,	1110,	111,	111,	1110,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	1010,	1001,	1110,	1010,	1001,	1100
2017-01-05 14:05:39 AI_Player.update()		1110,	1101,	1101,	111,	1011,	11,	1011
2017-01-05 14:05:39 AI_Player.update()		110,	111,	1011,	1001,	1101,	1010,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1010,	1001
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:39 AI_Player.update()	Search took5ms
2017-01-05 14:05:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()		110,	101,	111,	1101,	111,	11,	11
2017-01-05 14:05:39 AI_Player.update()		1010,	1001,	11,	1100,	1100,	101,	11
2017-01-05 14:05:39 AI_Player.update()		1110,	1011,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	1010,	1001,	111,	1010,	1001,	1100
2017-01-05 14:05:39 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:39 AI_Player.update()		110,	111,	1011,	111,	1101,	1010,	1011
2017-01-05 14:05:39 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:39 AI_Player.update()	update
2017-01-05 14:05:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:40 AI_Player.update()	Search took95ms
2017-01-05 14:05:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()		110,	101,	111,	1101,	111,	11,	11
2017-01-05 14:05:40 AI_Player.update()		1010,	1001,	11,	1100,	1100,	101,	11
2017-01-05 14:05:40 AI_Player.update()		1110,	1011,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:40 AI_Player.update()		1100,	1010,	1001,	111,	1010,	1001,	1100
2017-01-05 14:05:40 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:40 AI_Player.update()		111,	1011,	111,	1101,	1010,	1011,	110
2017-01-05 14:05:40 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()	update
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()	update
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:40 AI_Player.update()	Search took3ms
2017-01-05 14:05:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()		110,	1001,	111,	1101,	111,	11,	11
2017-01-05 14:05:40 AI_Player.update()		1010,	1011,	11,	1100,	1100,	101,	11
2017-01-05 14:05:40 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1110,	1011
2017-01-05 14:05:40 AI_Player.update()		1100,	1101,	1001,	111,	1010,	1001,	1100
2017-01-05 14:05:40 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	11,	1011
2017-01-05 14:05:40 AI_Player.update()		111,	110,	111,	1101,	1010,	1011,	110
2017-01-05 14:05:40 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()	update
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()	update
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:40 AI_Player.update()	Search took677ms
2017-01-05 14:05:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 14:05:40 AI_Player.update()		1010,	1011,	11,	1100,	1100,	11,	11
2017-01-05 14:05:40 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-05 14:05:40 AI_Player.update()		1100,	1101,	1001,	111,	1010,	1110,	1100
2017-01-05 14:05:40 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	1001,	1011
2017-01-05 14:05:40 AI_Player.update()		111,	110,	111,	1101,	1010,	11,	110
2017-01-05 14:05:40 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1011,	1001
2017-01-05 14:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()	update
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()	update
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:40 AI_Player.update()	Search took2ms
2017-01-05 14:05:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 14:05:40 AI_Player.update()		1010,	1011,	11,	1100,	1100,	11,	11
2017-01-05 14:05:40 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-05 14:05:40 AI_Player.update()		1101,	1001,	111,	1010,	1110,	1100,	1100
2017-01-05 14:05:40 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	1001,	1011
2017-01-05 14:05:40 AI_Player.update()		111,	110,	111,	1101,	1010,	11,	110
2017-01-05 14:05:40 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1011,	1001
2017-01-05 14:05:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()	update
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:40 AI_Player.update()	update
2017-01-05 14:05:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:41 AI_Player.update()	Search took632ms
2017-01-05 14:05:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:41 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 14:05:41 AI_Player.update()		1010,	1011,	11,	1100,	1100,	11,	11
2017-01-05 14:05:41 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-05 14:05:41 AI_Player.update()		1001,	111,	1010,	1110,	1100,	1100,	1101
2017-01-05 14:05:41 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	1001,	1011
2017-01-05 14:05:41 AI_Player.update()		111,	110,	111,	1101,	1010,	11,	110
2017-01-05 14:05:41 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1011,	1001
2017-01-05 14:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:41 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:41 AI_Player.update()	update
2017-01-05 14:05:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:41 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:41 AI_Player.update()	update
2017-01-05 14:05:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:41 AI_Player.update()	Search took6ms
2017-01-05 14:05:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:41 AI_Player.update()		110,	1001,	111,	1100,	111,	1010,	11
2017-01-05 14:05:41 AI_Player.update()		1010,	1011,	11,	1011,	1100,	11,	11
2017-01-05 14:05:41 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 14:05:41 AI_Player.update()		1001,	111,	1010,	1110,	1100,	1100,	1101
2017-01-05 14:05:41 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:41 AI_Player.update()		111,	110,	111,	1001,	1010,	11,	110
2017-01-05 14:05:41 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1011,	1001
2017-01-05 14:05:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:41 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:41 AI_Player.update()	update
2017-01-05 14:05:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:41 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:41 AI_Player.update()	update
2017-01-05 14:05:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took885ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1001,	111,	1100,	111,	1011,	11
2017-01-05 14:05:42 AI_Player.update()		1010,	1011,	11,	1011,	1100,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	1010,	1110,	1110,	111,	11,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	111,	1010,	1110,	1100,	101,	1101
2017-01-05 14:05:42 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		111,	110,	111,	1001,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took6ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1011,	111,	1100,	111,	1011,	11
2017-01-05 14:05:42 AI_Player.update()		1010,	1010,	11,	1011,	1100,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	111,	1110,	1110,	111,	11,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	1011,	1010,	1110,	1100,	101,	1101
2017-01-05 14:05:42 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		111,	101,	111,	1001,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took24ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1010,	111,	1100,	111,	1011,	11
2017-01-05 14:05:42 AI_Player.update()		1010,	111,	11,	1011,	1100,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	1011,	1110,	1110,	111,	11,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	110,	1010,	1110,	1100,	101,	1101
2017-01-05 14:05:42 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		111,	1001,	111,	1001,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took5ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1010,	111,	1011,	111,	1011,	11
2017-01-05 14:05:42 AI_Player.update()		1010,	111,	11,	1110,	1100,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	1011,	1110,	1110,	111,	11,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	110,	1010,	1101,	1100,	101,	1101
2017-01-05 14:05:42 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		111,	1001,	111,	1101,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took54ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1010,	111,	1011,	111,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		1010,	111,	11,	1110,	1100,	11,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	1011,	1110,	1110,	111,	101,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	110,	1010,	1101,	1100,	1100,	1101
2017-01-05 14:05:42 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 14:05:42 AI_Player.update()		111,	1001,	111,	1101,	1010,	11,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took5ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	111,	111,	1011,	111,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		1010,	1011,	11,	1110,	1100,	11,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	101,	1010,	1101,	1100,	1100,	1101
2017-01-05 14:05:42 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1001,	1011
2017-01-05 14:05:42 AI_Player.update()		111,	1011,	111,	1101,	1010,	11,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took413ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	111,	111,	1011,	111,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		11,	1010,	1011,	11,	1110,	1100,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	101,	1010,	1101,	1100,	1100,	1101
2017-01-05 14:05:42 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1001,	1011
2017-01-05 14:05:42 AI_Player.update()		111,	1011,	111,	1101,	1010,	11,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1011,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:42 AI_Player.update()	Player a has won!
2017-01-05 14:05:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:42 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took6ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-05 14:05:42 AI_Player.update()		11,	1110,	11,	101,	11,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:42 AI_Player.update()		11,	1010,	101,	1001,	1001,	101,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	11,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took1ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1110,	111,	1001,	111,	101,	11
2017-01-05 14:05:42 AI_Player.update()		11,	110,	11,	101,	11,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-05 14:05:42 AI_Player.update()		11,	11,	101,	1001,	1001,	101,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	101,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took24ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 14:05:42 AI_Player.update()		11,	110,	11,	101,	11,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:42 AI_Player.update()		11,	11,	101,	1101,	1001,	101,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	101,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took2ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:42 AI_Player.update()		11,	1010,	11,	101,	11,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:42 AI_Player.update()		11,	11,	101,	1101,	1001,	101,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	1001,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took10ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 14:05:42 AI_Player.update()		11,	110,	11,	101,	11,	1010,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:42 AI_Player.update()		11,	11,	101,	1101,	1001,	101,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	101,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took1ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 14:05:42 AI_Player.update()		110,	11,	101,	11,	1010,	11,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:42 AI_Player.update()		11,	11,	101,	1101,	1001,	101,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	101,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 3
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took36ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 14:05:42 AI_Player.update()		110,	1110,	101,	11,	1010,	11,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:42 AI_Player.update()		11,	1010,	101,	1101,	1001,	101,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	11,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	1 3
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:42 AI_Player.update()	Search took1ms
2017-01-05 14:05:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	101,	11,	1010,	11,	11,	110
2017-01-05 14:05:42 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:42 AI_Player.update()		11,	1010,	101,	1101,	1001,	101,	11
2017-01-05 14:05:42 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:05:42 AI_Player.update()		1001,	11,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:42 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-05 14:05:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:42 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:42 AI_Player.update()	update
2017-01-05 14:05:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took144ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	11,	1010,	11,	11,	110
2017-01-05 14:05:43 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	101,	1101,	1001,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	101,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took1ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1110,	1010,	11,	1010,	11,	11,	110
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	101,	1101,	1001,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	1001,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took124ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1110,	1010,	11,	101,	11,	11,	110
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	101,	1001,	1001,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	1001,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took1ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1110,	1010,	11,	101,	11,	11,	110
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	11,	101,	1001,	1001,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	1001,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took29ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	11,	101,	11,	11,	110
2017-01-05 14:05:43 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	11,	101,	1001,	1001,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	101,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took1ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1110,	1010,	11,	101,	11,	11,	110
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	11,	101,	1001,	1001,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	1001,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took66ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	11,	101,	11,	11,	110,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	11,	101,	1001,	1001,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	1001,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took3ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	11,	101,	11,	11,	110,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	101,	11,	101,	1001,	1001,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	101,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took67ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	11,	101,	11,	11,	110,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	1001,	11,	101,	1001,	1001,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	11,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took2ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	101,	101,	11,	11,	110,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	101,	11,	101,	1001,	1001,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	11,	110,	1010,	1010,	1001,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took72ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	101,	101,	11,	11,	1001,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	101,	11,	101,	1001,	1100,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	11,	110,	1010,	1010,	11,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took3ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	1001,	101,	11,	11,	1001,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	11,	101,	1001,	1100,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	11,	110,	1010,	1010,	11,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took87ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	101,	101,	11,	11,	1001,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	101,	11,	101,	1001,	1100,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	11,	110,	1010,	1010,	11,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took3ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	1001,	101,	11,	11,	1001,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	11,	101,	1001,	1100,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		1001,	11,	110,	1010,	1010,	11,	110
2017-01-05 14:05:43 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took155ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	1001,	101,	11,	11,	1001,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	11,	101,	1001,	1100,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		110,	1001,	11,	110,	1010,	1010,	11
2017-01-05 14:05:43 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took3ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	101,	101,	11,	11,	1001,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	11,	101,	1001,	1100,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		110,	11,	11,	110,	1010,	1010,	11
2017-01-05 14:05:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took51ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	11,	101,	11,	11,	1001,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	1001,	11,	101,	1001,	1100,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	11,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		110,	101,	11,	110,	1010,	1010,	11
2017-01-05 14:05:43 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:43 AI_Player.update()	Search took3ms
2017-01-05 14:05:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-05 14:05:43 AI_Player.update()		1010,	11,	101,	11,	11,	1001,	1110
2017-01-05 14:05:43 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		11,	11,	11,	101,	1001,	1100,	101
2017-01-05 14:05:43 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:43 AI_Player.update()		110,	1001,	11,	110,	1010,	1010,	11
2017-01-05 14:05:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:05:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:43 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:43 AI_Player.update()	update
2017-01-05 14:05:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:44 AI_Player.update()	Search took172ms
2017-01-05 14:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-05 14:05:44 AI_Player.update()		1010,	11,	101,	11,	11,	1001,	1110
2017-01-05 14:05:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 14:05:44 AI_Player.update()		11,	11,	101,	1001,	1100,	101,	11
2017-01-05 14:05:44 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:05:44 AI_Player.update()		110,	1001,	11,	110,	1010,	1010,	11
2017-01-05 14:05:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:44 AI_Player.update()	Search took4ms
2017-01-05 14:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 14:05:44 AI_Player.update()		1010,	11,	101,	1001,	11,	1001,	1110
2017-01-05 14:05:44 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-05 14:05:44 AI_Player.update()		11,	11,	101,	1010,	1100,	101,	11
2017-01-05 14:05:44 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 14:05:44 AI_Player.update()		110,	1001,	11,	1101,	1010,	1010,	11
2017-01-05 14:05:44 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:44 AI_Player.update()	Search took112ms
2017-01-05 14:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 14:05:44 AI_Player.update()		11,	101,	1001,	11,	1001,	1110,	1010
2017-01-05 14:05:44 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-05 14:05:44 AI_Player.update()		11,	11,	101,	1010,	1100,	101,	11
2017-01-05 14:05:44 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 14:05:44 AI_Player.update()		110,	1001,	11,	1101,	1010,	1010,	11
2017-01-05 14:05:44 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:44 AI_Player.update()	Search took3ms
2017-01-05 14:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 14:05:44 AI_Player.update()		11,	101,	1001,	1010,	1001,	1110,	1010
2017-01-05 14:05:44 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-05 14:05:44 AI_Player.update()		11,	11,	101,	11,	1100,	101,	11
2017-01-05 14:05:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:05:44 AI_Player.update()		110,	1001,	11,	1001,	1010,	1010,	11
2017-01-05 14:05:44 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:44 AI_Player.update()	Search took257ms
2017-01-05 14:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 14:05:44 AI_Player.update()		1010,	11,	101,	1001,	1010,	1001,	1110
2017-01-05 14:05:44 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-05 14:05:44 AI_Player.update()		11,	11,	101,	11,	1100,	101,	11
2017-01-05 14:05:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:05:44 AI_Player.update()		110,	1001,	11,	1001,	1010,	1010,	11
2017-01-05 14:05:44 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:44 AI_Player.update()	Player a has won!
2017-01-05 14:05:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:44 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:44 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:44 AI_Player.update()	Search took6ms
2017-01-05 14:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()		110,	1010,	111,	101,	111,	111,	11
2017-01-05 14:05:44 AI_Player.update()		11,	111,	1100,	110,	110,	1010,	111
2017-01-05 14:05:44 AI_Player.update()		1110,	1110,	1110,	111,	111,	1010,	1011
2017-01-05 14:05:44 AI_Player.update()		1100,	101,	1010,	1010,	1110,	1010,	110
2017-01-05 14:05:44 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:44 AI_Player.update()		11,	1100,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:44 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:44 AI_Player.update()	Search took1ms
2017-01-05 14:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()		110,	111,	111,	101,	111,	111,	11
2017-01-05 14:05:44 AI_Player.update()		11,	1110,	1100,	110,	110,	1010,	111
2017-01-05 14:05:44 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-05 14:05:44 AI_Player.update()		1100,	11,	1010,	1010,	1110,	1010,	110
2017-01-05 14:05:44 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:44 AI_Player.update()		11,	1100,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:44 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:44 AI_Player.update()	Search took381ms
2017-01-05 14:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()		110,	111,	111,	1011,	111,	111,	11
2017-01-05 14:05:44 AI_Player.update()		11,	1110,	1100,	101,	110,	1010,	111
2017-01-05 14:05:44 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:44 AI_Player.update()		1100,	11,	1010,	111,	1110,	1010,	110
2017-01-05 14:05:44 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:44 AI_Player.update()		11,	1100,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:44 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:44 AI_Player.update()	Search took1ms
2017-01-05 14:05:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()		110,	111,	111,	1011,	111,	111,	11
2017-01-05 14:05:44 AI_Player.update()		1110,	1100,	101,	110,	1010,	111,	11
2017-01-05 14:05:44 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:44 AI_Player.update()		1100,	11,	1010,	111,	1110,	1010,	110
2017-01-05 14:05:44 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:44 AI_Player.update()		11,	1100,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:44 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:05:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:44 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:44 AI_Player.update()	update
2017-01-05 14:05:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took319ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	111,	111,	1011,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1110,	1100,	101,	110,	1010,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1010,	111,	1110,	1010,	110,	1100
2017-01-05 14:05:45 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1100,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took1ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	1100,	111,	1011,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1110,	101,	101,	110,	1010,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1100,	111,	1110,	1010,	110,	1100
2017-01-05 14:05:45 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1010,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took79ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	101,	111,	1011,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	101,	110,	1010,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1100,	111,	1110,	1010,	110,	1100
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	111,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took1ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	1010,	111,	1011,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1110,	1100,	101,	110,	1010,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1010,	111,	1110,	1010,	110,	1100
2017-01-05 14:05:45 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1100,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took53ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	1010,	111,	1011,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	101,	110,	1010,	111,	11,	1110
2017-01-05 14:05:45 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1010,	111,	1110,	1010,	110,	1100
2017-01-05 14:05:45 AI_Player.update()		1110,	111,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1100,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took2ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	101,	111,	1011,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1010,	110,	1010,	111,	11,	1110
2017-01-05 14:05:45 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1100,	111,	1110,	1010,	110,	1100
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	111,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took81ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	1100,	111,	1011,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	101,	110,	1010,	111,	11,	1110
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	101,	111,	1110,	1010,	110,	1100
2017-01-05 14:05:45 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1010,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took2ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	1100,	111,	1010,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	101,	110,	110,	111,	11,	1110
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	101,	111,	1010,	1010,	110,	1100
2017-01-05 14:05:45 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1010,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	111,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took178ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	1100,	111,	1010,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	101,	110,	110,	111,	11,	1110
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		1100,	11,	101,	111,	1010,	1010,	110
2017-01-05 14:05:45 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1010,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	111,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took4ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1010,	110,	110,	111,	11,	1110
2017-01-05 14:05:45 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		1100,	1100,	101,	111,	1010,	1010,	110
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	111,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took53ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	1100,	111,	1010,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	101,	110,	110,	111,	11,	1110
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		1100,	11,	101,	111,	1010,	1010,	110
2017-01-05 14:05:45 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	1010,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	111,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took4ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1010,	110,	110,	111,	11,	1110
2017-01-05 14:05:45 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		1100,	1100,	101,	111,	1010,	1010,	110
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	111,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took194ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1010,	110,	110,	111,	11,	1110
2017-01-05 14:05:45 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		1100,	101,	111,	1010,	1010,	110,	1100
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		11,	111,	110,	1010,	1100,	1100,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:45 AI_Player.update()	Search took3ms
2017-01-05 14:05:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1010,	110,	110,	111,	11,	1110
2017-01-05 14:05:45 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:45 AI_Player.update()		1100,	101,	111,	1010,	1010,	110,	1100
2017-01-05 14:05:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:45 AI_Player.update()		111,	110,	1010,	1100,	1100,	11,	11
2017-01-05 14:05:45 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:45 AI_Player.update()	update
2017-01-05 14:05:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:46 AI_Player.update()	Search took139ms
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()		110,	1010,	111,	1010,	111,	111,	11
2017-01-05 14:05:46 AI_Player.update()		1100,	11,	110,	110,	111,	11,	1110
2017-01-05 14:05:46 AI_Player.update()		1110,	101,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:46 AI_Player.update()		1100,	1010,	111,	1010,	1010,	110,	1100
2017-01-05 14:05:46 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:46 AI_Player.update()		111,	1100,	1010,	1100,	1100,	11,	11
2017-01-05 14:05:46 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:46 AI_Player.update()	Search took5ms
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()		110,	11,	111,	1010,	111,	111,	11
2017-01-05 14:05:46 AI_Player.update()		1100,	101,	110,	110,	111,	11,	1110
2017-01-05 14:05:46 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:46 AI_Player.update()		1100,	110,	111,	1010,	1010,	110,	1100
2017-01-05 14:05:46 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:46 AI_Player.update()		111,	101,	1010,	1100,	1100,	11,	11
2017-01-05 14:05:46 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:46 AI_Player.update()	Search took145ms
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()		110,	11,	111,	1010,	111,	111,	11
2017-01-05 14:05:46 AI_Player.update()		1110,	1100,	101,	110,	110,	111,	11
2017-01-05 14:05:46 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-05 14:05:46 AI_Player.update()		1100,	110,	111,	1010,	1010,	110,	1100
2017-01-05 14:05:46 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-05 14:05:46 AI_Player.update()		111,	101,	1010,	1100,	1100,	11,	11
2017-01-05 14:05:46 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1011,	1001
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:46 AI_Player.update()	Player a has won!
2017-01-05 14:05:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:46 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:46 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:46 AI_Player.update()	Search took22ms
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-05 14:05:46 AI_Player.update()		11,	1001,	1100,	1010,	110,	101,	101
2017-01-05 14:05:46 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:46 AI_Player.update()		1011,	110,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:46 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1100,	1011
2017-01-05 14:05:46 AI_Player.update()		1100,	101,	11,	1100,	1010,	1010,	110
2017-01-05 14:05:46 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:46 AI_Player.update()	Search took0ms
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 14:05:46 AI_Player.update()		11,	1001,	1100,	1010,	110,	1100,	101
2017-01-05 14:05:46 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:46 AI_Player.update()		1011,	110,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:46 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:05:46 AI_Player.update()		1100,	101,	11,	1100,	1010,	1001,	110
2017-01-05 14:05:46 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:46 AI_Player.update()	Search took34ms
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-05 14:05:46 AI_Player.update()		11,	11,	1100,	1010,	110,	1100,	101
2017-01-05 14:05:46 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:46 AI_Player.update()		1011,	101,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:46 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:05:46 AI_Player.update()		1100,	11,	11,	1100,	1010,	1001,	110
2017-01-05 14:05:46 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:46 AI_Player.update()	Search took1ms
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-05 14:05:46 AI_Player.update()		11,	1100,	1010,	110,	1100,	101,	11
2017-01-05 14:05:46 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:46 AI_Player.update()		1011,	101,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:46 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:05:46 AI_Player.update()		1100,	11,	11,	1100,	1010,	1001,	110
2017-01-05 14:05:46 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:46 AI_Player.update()	Search took189ms
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 14:05:46 AI_Player.update()		11,	1100,	1010,	110,	1100,	101,	11
2017-01-05 14:05:46 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-05 14:05:46 AI_Player.update()		1011,	1001,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:46 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-05 14:05:46 AI_Player.update()		1100,	110,	11,	1100,	1010,	1001,	110
2017-01-05 14:05:46 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:46 AI_Player.update()	Search took2ms
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-05 14:05:46 AI_Player.update()		11,	1100,	1010,	110,	1100,	101,	11
2017-01-05 14:05:46 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 14:05:46 AI_Player.update()		1011,	1001,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:46 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-05 14:05:46 AI_Player.update()		1100,	110,	11,	1100,	1010,	1010,	110
2017-01-05 14:05:46 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:46 AI_Player.update()	Search took464ms
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-05 14:05:46 AI_Player.update()		11,	1100,	1010,	1001,	1100,	101,	11
2017-01-05 14:05:46 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-05 14:05:46 AI_Player.update()		1011,	1001,	1010,	1001,	1011,	1100,	1010
2017-01-05 14:05:46 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:46 AI_Player.update()		1100,	110,	11,	1110,	1010,	1010,	110
2017-01-05 14:05:46 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:46 AI_Player.update()	Search took6ms
2017-01-05 14:05:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-05 14:05:46 AI_Player.update()		11,	1100,	1010,	1001,	1100,	101,	11
2017-01-05 14:05:46 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 14:05:46 AI_Player.update()		1011,	101,	1010,	1001,	1011,	1100,	1010
2017-01-05 14:05:46 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:46 AI_Player.update()		1100,	11,	11,	1110,	1010,	1010,	110
2017-01-05 14:05:46 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:05:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:46 AI_Player.update()	update
2017-01-05 14:05:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:48 AI_Player.update()	Search took1143ms
2017-01-05 14:05:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 14:05:48 AI_Player.update()		11,	1100,	1010,	110,	1100,	101,	11
2017-01-05 14:05:48 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-05 14:05:48 AI_Player.update()		1011,	101,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:48 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1100,	1011
2017-01-05 14:05:48 AI_Player.update()		1100,	11,	11,	1100,	1010,	1010,	110
2017-01-05 14:05:48 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()	update
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:05:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()	update
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:48 AI_Player.update()	Search took4ms
2017-01-05 14:05:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 14:05:48 AI_Player.update()		11,	1001,	1010,	110,	1100,	101,	11
2017-01-05 14:05:48 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:05:48 AI_Player.update()		1011,	110,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:48 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1100,	1011
2017-01-05 14:05:48 AI_Player.update()		1100,	101,	11,	1100,	1010,	1010,	110
2017-01-05 14:05:48 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()	update
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()	update
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:48 AI_Player.update()	Search took833ms
2017-01-05 14:05:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()		110,	1001,	111,	1001,	111,	11,	11
2017-01-05 14:05:48 AI_Player.update()		11,	101,	1010,	110,	1100,	101,	11
2017-01-05 14:05:48 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-05 14:05:48 AI_Player.update()		1011,	11,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:48 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-05 14:05:48 AI_Player.update()		1100,	1100,	11,	1100,	1010,	1010,	110
2017-01-05 14:05:48 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()	update
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()	update
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:48 AI_Player.update()	Search took5ms
2017-01-05 14:05:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 14:05:48 AI_Player.update()		11,	1001,	1010,	110,	1100,	101,	11
2017-01-05 14:05:48 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-05 14:05:48 AI_Player.update()		1011,	110,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:48 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1100,	1011
2017-01-05 14:05:48 AI_Player.update()		1100,	101,	11,	1100,	1010,	1010,	110
2017-01-05 14:05:48 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()	update
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:48 AI_Player.update()	update
2017-01-05 14:05:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:49 AI_Player.update()	Search took991ms
2017-01-05 14:05:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:49 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-05 14:05:49 AI_Player.update()		11,	1100,	1010,	110,	1100,	101,	11
2017-01-05 14:05:49 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-05 14:05:49 AI_Player.update()		1011,	101,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:49 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1100,	1011
2017-01-05 14:05:49 AI_Player.update()		1100,	11,	11,	1100,	1010,	1010,	110
2017-01-05 14:05:49 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:49 AI_Player.update()	update
2017-01-05 14:05:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:49 AI_Player.update()	update
2017-01-05 14:05:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:49 AI_Player.update()	Search took2ms
2017-01-05 14:05:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:49 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-05 14:05:49 AI_Player.update()		11,	1100,	1010,	110,	1100,	101,	11
2017-01-05 14:05:49 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 14:05:49 AI_Player.update()		1011,	1001,	1010,	1100,	1011,	1100,	1010
2017-01-05 14:05:49 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-05 14:05:49 AI_Player.update()		1100,	110,	11,	1100,	1010,	1010,	110
2017-01-05 14:05:49 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:05:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:49 AI_Player.update()	update
2017-01-05 14:05:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:49 AI_Player.update()	update
2017-01-05 14:05:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:50 AI_Player.update()	Search took494ms
2017-01-05 14:05:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:50 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-05 14:05:50 AI_Player.update()		11,	1100,	1010,	1001,	1100,	101,	11
2017-01-05 14:05:50 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 14:05:50 AI_Player.update()		1011,	1001,	1010,	1110,	1011,	1100,	1010
2017-01-05 14:05:50 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:05:50 AI_Player.update()		1100,	110,	11,	101,	1010,	1010,	110
2017-01-05 14:05:50 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:05:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:50 AI_Player.update()	update
2017-01-05 14:05:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:50 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:50 AI_Player.update()	Player a has won!
2017-01-05 14:05:50 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:50 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:50 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:50 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:50 AI_Player.update()	update
2017-01-05 14:05:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:51 AI_Player.update()	Search took752ms
2017-01-05 14:05:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()		110,	11,	111,	1001,	111,	1001,	11
2017-01-05 14:05:51 AI_Player.update()		1010,	1100,	11,	11,	1010,	101,	1010
2017-01-05 14:05:51 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-05 14:05:51 AI_Player.update()		1010,	1101,	110,	1001,	1110,	1010,	1001
2017-01-05 14:05:51 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:05:51 AI_Player.update()		1100,	101,	101,	111,	1001,	101,	11
2017-01-05 14:05:51 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:05:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()	update
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()	update
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:51 AI_Player.update()	Search took2ms
2017-01-05 14:05:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()		110,	1100,	111,	1001,	111,	1001,	11
2017-01-05 14:05:51 AI_Player.update()		1010,	1010,	11,	11,	1010,	101,	1010
2017-01-05 14:05:51 AI_Player.update()		1110,	1101,	1110,	1010,	111,	110,	1011
2017-01-05 14:05:51 AI_Player.update()		1010,	111,	110,	1001,	1110,	1010,	1001
2017-01-05 14:05:51 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:05:51 AI_Player.update()		1100,	1010,	101,	111,	1001,	101,	11
2017-01-05 14:05:51 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:05:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()	update
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()	update
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:51 AI_Player.update()	Search took350ms
2017-01-05 14:05:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()		110,	1010,	111,	1001,	111,	1001,	11
2017-01-05 14:05:51 AI_Player.update()		1010,	1101,	11,	11,	1010,	101,	1010
2017-01-05 14:05:51 AI_Player.update()		1110,	111,	1110,	1010,	111,	110,	1011
2017-01-05 14:05:51 AI_Player.update()		1010,	101,	110,	1001,	1110,	1010,	1001
2017-01-05 14:05:51 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:05:51 AI_Player.update()		1100,	11,	101,	111,	1001,	101,	11
2017-01-05 14:05:51 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:05:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()	update
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()	update
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:51 AI_Player.update()	Search took3ms
2017-01-05 14:05:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-05 14:05:51 AI_Player.update()		1010,	1101,	11,	11,	1010,	1001,	1010
2017-01-05 14:05:51 AI_Player.update()		1110,	111,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:51 AI_Player.update()		1010,	101,	110,	1001,	1110,	110,	1001
2017-01-05 14:05:51 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:51 AI_Player.update()		1100,	11,	101,	111,	1001,	1110,	11
2017-01-05 14:05:51 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-05 14:05:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:05:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()	update
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:51 AI_Player.update()	update
2017-01-05 14:05:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:52 AI_Player.update()	Search took795ms
2017-01-05 14:05:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 14:05:52 AI_Player.update()		1010,	1010,	11,	11,	1010,	1001,	1010
2017-01-05 14:05:52 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:52 AI_Player.update()		1010,	111,	110,	1001,	1110,	110,	1001
2017-01-05 14:05:52 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:52 AI_Player.update()		1100,	1010,	101,	111,	1001,	1110,	11
2017-01-05 14:05:52 AI_Player.update()		1100,	11,	1101,	1011,	1101,	101,	1001
2017-01-05 14:05:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()	update
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()	update
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:52 AI_Player.update()	Search took4ms
2017-01-05 14:05:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-05 14:05:52 AI_Player.update()		1010,	1101,	11,	11,	1010,	1001,	1010
2017-01-05 14:05:52 AI_Player.update()		1110,	111,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:52 AI_Player.update()		1010,	101,	110,	1001,	1110,	110,	1001
2017-01-05 14:05:52 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:52 AI_Player.update()		1100,	11,	101,	111,	1001,	1110,	11
2017-01-05 14:05:52 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-05 14:05:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:05:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()	update
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()	update
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:52 AI_Player.update()	Search took235ms
2017-01-05 14:05:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 14:05:52 AI_Player.update()		1010,	1010,	11,	11,	1010,	1001,	1010
2017-01-05 14:05:52 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:52 AI_Player.update()		1010,	111,	110,	1001,	1110,	110,	1001
2017-01-05 14:05:52 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:52 AI_Player.update()		1100,	1010,	101,	111,	1001,	1110,	11
2017-01-05 14:05:52 AI_Player.update()		1100,	11,	1101,	1011,	1101,	101,	1001
2017-01-05 14:05:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:05:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()	update
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()	update
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:52 AI_Player.update()	Search took6ms
2017-01-05 14:05:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-05 14:05:52 AI_Player.update()		1010,	1100,	11,	11,	1010,	1001,	1010
2017-01-05 14:05:52 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:52 AI_Player.update()		1010,	1101,	110,	1001,	1110,	110,	1001
2017-01-05 14:05:52 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:52 AI_Player.update()		1100,	101,	101,	111,	1001,	1110,	11
2017-01-05 14:05:52 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-05 14:05:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:05:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()	update
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:52 AI_Player.update()	update
2017-01-05 14:05:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:53 AI_Player.update()	Search took1157ms
2017-01-05 14:05:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:53 AI_Player.update()		110,	11,	111,	1001,	111,	1010,	11
2017-01-05 14:05:53 AI_Player.update()		1010,	1100,	11,	11,	1010,	1001,	1010
2017-01-05 14:05:53 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-05 14:05:53 AI_Player.update()		1010,	1101,	110,	1001,	1110,	110,	1001
2017-01-05 14:05:53 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:05:53 AI_Player.update()		11,	1100,	101,	101,	111,	1001,	1110
2017-01-05 14:05:53 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-05 14:05:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:05:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:53 AI_Player.update()	update
2017-01-05 14:05:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:53 AI_Player.update()	update
2017-01-05 14:05:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:53 AI_Player.update()	Search took3ms
2017-01-05 14:05:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:53 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-05 14:05:53 AI_Player.update()		1010,	1100,	11,	1010,	1010,	1001,	1010
2017-01-05 14:05:53 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-05 14:05:53 AI_Player.update()		1010,	1101,	110,	1010,	1110,	110,	1001
2017-01-05 14:05:53 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:53 AI_Player.update()		11,	1100,	101,	1011,	111,	1001,	1110
2017-01-05 14:05:53 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:05:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:53 AI_Player.update()	update
2017-01-05 14:05:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:53 AI_Player.update()	update
2017-01-05 14:05:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:54 AI_Player.update()	Search took762ms
2017-01-05 14:05:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-05 14:05:54 AI_Player.update()		1010,	11,	11,	1010,	1010,	1001,	1010
2017-01-05 14:05:54 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 14:05:54 AI_Player.update()		1010,	1010,	110,	1010,	1110,	110,	1001
2017-01-05 14:05:54 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:05:54 AI_Player.update()		11,	111,	101,	1011,	111,	1001,	1110
2017-01-05 14:05:54 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-05 14:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()	update
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:54 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:05:54 AI_Player.update()	Player a has won!
2017-01-05 14:05:54 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:54 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:54 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:54 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()	update
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:54 AI_Player.update()	Search took14ms
2017-01-05 14:05:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 14:05:54 AI_Player.update()		101,	1001,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:54 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:54 AI_Player.update()		1010,	101,	1101,	101,	101,	1001,	1010
2017-01-05 14:05:54 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 14:05:54 AI_Player.update()		1011,	110,	101,	101,	101,	1101,	1101
2017-01-05 14:05:54 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()	update
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()	update
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:54 AI_Player.update()	Search took3ms
2017-01-05 14:05:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-05 14:05:54 AI_Player.update()		101,	110,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:54 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:54 AI_Player.update()		1010,	101,	1101,	101,	101,	1001,	1010
2017-01-05 14:05:54 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-05 14:05:54 AI_Player.update()		1011,	1010,	101,	101,	101,	1101,	1101
2017-01-05 14:05:54 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()	update
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()	update
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:54 AI_Player.update()	Search took318ms
2017-01-05 14:05:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:54 AI_Player.update()		101,	101,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:54 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:54 AI_Player.update()		1010,	110,	1101,	101,	101,	1001,	1010
2017-01-05 14:05:54 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 14:05:54 AI_Player.update()		1011,	1001,	101,	101,	101,	1101,	1101
2017-01-05 14:05:54 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()	update
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()	update
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:54 AI_Player.update()	Search took4ms
2017-01-05 14:05:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:54 AI_Player.update()		101,	101,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:54 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:54 AI_Player.update()		1010,	110,	1101,	101,	101,	1001,	1010
2017-01-05 14:05:54 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 14:05:54 AI_Player.update()		1101,	1011,	1001,	101,	101,	101,	1101
2017-01-05 14:05:54 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:05:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()	update
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	1 3
2017-01-05 14:05:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:54 AI_Player.update()	update
2017-01-05 14:05:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:55 AI_Player.update()	Search took948ms
2017-01-05 14:05:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:55 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:05:55 AI_Player.update()		101,	101,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:55 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:55 AI_Player.update()		1010,	1010,	1101,	101,	101,	1001,	1010
2017-01-05 14:05:55 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1100,	1011
2017-01-05 14:05:55 AI_Player.update()		1101,	1001,	1001,	101,	101,	101,	1101
2017-01-05 14:05:55 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	1 3
2017-01-05 14:05:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:55 AI_Player.update()	update
2017-01-05 14:05:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:55 AI_Player.update()	update
2017-01-05 14:05:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:55 AI_Player.update()	Search took2ms
2017-01-05 14:05:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:55 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:55 AI_Player.update()		101,	101,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:55 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:55 AI_Player.update()		1010,	110,	1101,	101,	101,	1001,	1010
2017-01-05 14:05:55 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 14:05:55 AI_Player.update()		1101,	1011,	1001,	101,	101,	101,	1101
2017-01-05 14:05:55 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:55 AI_Player.update()	update
2017-01-05 14:05:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	2 4
2017-01-05 14:05:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:55 AI_Player.update()	update
2017-01-05 14:05:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:56 AI_Player.update()	Search took194ms
2017-01-05 14:05:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:56 AI_Player.update()		101,	101,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:56 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:56 AI_Player.update()		1010,	110,	1101,	101,	101,	1001,	1010
2017-01-05 14:05:56 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-05 14:05:56 AI_Player.update()		1101,	1101,	1011,	1001,	101,	101,	101
2017-01-05 14:05:56 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	2 4
2017-01-05 14:05:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()	update
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()	update
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:56 AI_Player.update()	Search took5ms
2017-01-05 14:05:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 14:05:56 AI_Player.update()		101,	101,	1010,	1101,	101,	1001,	1001
2017-01-05 14:05:56 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:05:56 AI_Player.update()		1010,	110,	1101,	11,	101,	1001,	1010
2017-01-05 14:05:56 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:05:56 AI_Player.update()		1101,	1101,	1011,	101,	101,	101,	101
2017-01-05 14:05:56 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:05:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()	update
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:05:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()	update
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:56 AI_Player.update()	Search took754ms
2017-01-05 14:05:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 14:05:56 AI_Player.update()		101,	101,	1010,	1101,	101,	1001,	1001
2017-01-05 14:05:56 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:05:56 AI_Player.update()		110,	1101,	11,	101,	1001,	1010,	1010
2017-01-05 14:05:56 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:05:56 AI_Player.update()		1101,	1101,	1011,	101,	101,	101,	101
2017-01-05 14:05:56 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:05:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()	update
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:05:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()	update
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:56 AI_Player.update()	Search took3ms
2017-01-05 14:05:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:56 AI_Player.update()		101,	101,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:56 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:56 AI_Player.update()		110,	1101,	11,	101,	1001,	1010,	1010
2017-01-05 14:05:56 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 14:05:56 AI_Player.update()		1101,	1101,	1011,	1001,	101,	101,	101
2017-01-05 14:05:56 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:05:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()	update
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	4 6
2017-01-05 14:05:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:56 AI_Player.update()	update
2017-01-05 14:05:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:57 AI_Player.update()	Search took564ms
2017-01-05 14:05:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:57 AI_Player.update()		101,	101,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:57 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:57 AI_Player.update()		1010,	110,	1101,	11,	101,	1001,	1010
2017-01-05 14:05:57 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 14:05:57 AI_Player.update()		1101,	1101,	1011,	1001,	101,	101,	101
2017-01-05 14:05:57 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	4 6
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:05:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:57 AI_Player.update()	Search took3ms
2017-01-05 14:05:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:57 AI_Player.update()		101,	101,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:57 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:57 AI_Player.update()		1010,	1010,	110,	1101,	11,	101,	1001
2017-01-05 14:05:57 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 14:05:57 AI_Player.update()		1101,	1101,	1011,	1001,	101,	101,	101
2017-01-05 14:05:57 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:57 AI_Player.update()	Search took373ms
2017-01-05 14:05:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:05:57 AI_Player.update()		101,	101,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:57 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:57 AI_Player.update()		1010,	110,	1101,	11,	101,	1001,	1010
2017-01-05 14:05:57 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-05 14:05:57 AI_Player.update()		1101,	1101,	1011,	1001,	101,	101,	101
2017-01-05 14:05:57 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:57 AI_Player.update()	Search took6ms
2017-01-05 14:05:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:05:57 AI_Player.update()		101,	101,	1010,	1010,	101,	1001,	1001
2017-01-05 14:05:57 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-05 14:05:57 AI_Player.update()		1010,	1010,	1101,	11,	101,	1001,	1010
2017-01-05 14:05:57 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-05 14:05:57 AI_Player.update()		1101,	1001,	1011,	1001,	101,	101,	101
2017-01-05 14:05:57 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 14:05:57 AI_Player.update()	Player b has won!
2017-01-05 14:05:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:57 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:05:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:05:57 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:05:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:57 AI_Player.update()	Search took76ms
2017-01-05 14:05:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-05 14:05:57 AI_Player.update()		1010,	1100,	1100,	1110,	1100,	1101,	101
2017-01-05 14:05:57 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-05 14:05:57 AI_Player.update()		1001,	110,	101,	1010,	1110,	1101,	101
2017-01-05 14:05:57 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 14:05:57 AI_Player.update()		1110,	1110,	11,	1100,	1001,	1010,	11
2017-01-05 14:05:57 AI_Player.update()		1100,	11,	1101,	1010,	1101,	111,	1001
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:57 AI_Player.update()	Search took2ms
2017-01-05 14:05:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-05 14:05:57 AI_Player.update()		1100,	1100,	1110,	1100,	1101,	101,	1010
2017-01-05 14:05:57 AI_Player.update()		1110,	1001,	1110,	111,	111,	110,	1011
2017-01-05 14:05:57 AI_Player.update()		1001,	110,	101,	1010,	1110,	1101,	101
2017-01-05 14:05:57 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 14:05:57 AI_Player.update()		1110,	1110,	11,	1100,	1001,	1010,	11
2017-01-05 14:05:57 AI_Player.update()		1100,	11,	1101,	1010,	1101,	111,	1001
2017-01-05 14:05:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:57 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:57 AI_Player.update()	update
2017-01-05 14:05:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:58 AI_Player.update()	Search took622ms
2017-01-05 14:05:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()		110,	1100,	111,	1100,	111,	110,	11
2017-01-05 14:05:58 AI_Player.update()		1100,	1100,	1110,	111,	1101,	101,	1010
2017-01-05 14:05:58 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 14:05:58 AI_Player.update()		1001,	110,	101,	110,	1110,	1101,	101
2017-01-05 14:05:58 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:58 AI_Player.update()		1110,	1110,	11,	1010,	1001,	1010,	11
2017-01-05 14:05:58 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-05 14:05:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:05:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()	update
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()	update
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:58 AI_Player.update()	Search took2ms
2017-01-05 14:05:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()		110,	1100,	111,	1100,	111,	110,	11
2017-01-05 14:05:58 AI_Player.update()		1100,	1110,	111,	1101,	101,	1010,	1100
2017-01-05 14:05:58 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 14:05:58 AI_Player.update()		1001,	110,	101,	110,	1110,	1101,	101
2017-01-05 14:05:58 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:58 AI_Player.update()		1110,	1110,	11,	1010,	1001,	1010,	11
2017-01-05 14:05:58 AI_Player.update()		1100,	11,	1101,	110,	1101,	111,	1001
2017-01-05 14:05:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:05:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()	update
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()	update
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:58 AI_Player.update()	Search took360ms
2017-01-05 14:05:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()		110,	1100,	111,	1101,	111,	110,	11
2017-01-05 14:05:58 AI_Player.update()		1100,	1110,	111,	1010,	101,	1010,	1100
2017-01-05 14:05:58 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-05 14:05:58 AI_Player.update()		1001,	110,	101,	1100,	1110,	1101,	101
2017-01-05 14:05:58 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-05 14:05:58 AI_Player.update()		1110,	1110,	11,	110,	1001,	1010,	11
2017-01-05 14:05:58 AI_Player.update()		1100,	11,	1101,	1100,	1101,	111,	1001
2017-01-05 14:05:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()	update
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()	update
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:58 AI_Player.update()	Search took1ms
2017-01-05 14:05:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:05:58 AI_Player.update()		1100,	1110,	111,	110,	101,	1010,	1100
2017-01-05 14:05:58 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-05 14:05:58 AI_Player.update()		1001,	110,	101,	1010,	1110,	1101,	101
2017-01-05 14:05:58 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 14:05:58 AI_Player.update()		1110,	1110,	11,	1100,	1001,	1010,	11
2017-01-05 14:05:58 AI_Player.update()		1100,	11,	1101,	1101,	1101,	111,	1001
2017-01-05 14:05:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:05:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()	update
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:58 AI_Player.update()	update
2017-01-05 14:05:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:59 AI_Player.update()	Search took458ms
2017-01-05 14:05:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()		110,	1110,	111,	1010,	111,	110,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	1001,	111,	110,	101,	1010,	1100
2017-01-05 14:05:59 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1001,	110,	101,	1010,	1110,	1101,	101
2017-01-05 14:05:59 AI_Player.update()		1110,	1110,	1101,	110,	1011,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1110,	11,	11,	1100,	1001,	1010,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	111,	1001
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:59 AI_Player.update()	Search took1ms
2017-01-05 14:05:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	1110,	111,	110,	101,	1010,	1100
2017-01-05 14:05:59 AI_Player.update()		1110,	1001,	1110,	1100,	111,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1001,	110,	101,	1010,	1110,	1101,	101
2017-01-05 14:05:59 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1110,	1110,	11,	1100,	1001,	1010,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	11,	1101,	1101,	1101,	111,	1001
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:59 AI_Player.update()	Search took321ms
2017-01-05 14:05:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	1110,	111,	1100,	101,	1010,	1100
2017-01-05 14:05:59 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1001,	110,	101,	110,	1110,	1101,	101
2017-01-05 14:05:59 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1110,	1110,	11,	1101,	1001,	1010,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	11,	1101,	1010,	1101,	111,	1001
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:05:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:59 AI_Player.update()	Search took1ms
2017-01-05 14:05:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()		110,	1110,	111,	110,	111,	110,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	1001,	111,	1100,	101,	1010,	1100
2017-01-05 14:05:59 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1001,	110,	101,	110,	1110,	1101,	101
2017-01-05 14:05:59 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1110,	11,	11,	1101,	1001,	1010,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	111,	1001
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:59 AI_Player.update()	Search took50ms
2017-01-05 14:05:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	110,	111,	1100,	101,	1010,	1100
2017-01-05 14:05:59 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1001,	1110,	101,	110,	1110,	1101,	101
2017-01-05 14:05:59 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1110,	1100,	11,	1101,	1001,	1010,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	111,	1001
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:59 AI_Player.update()	Search took1ms
2017-01-05 14:05:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	110,	111,	1100,	101,	1010,	1100
2017-01-05 14:05:59 AI_Player.update()		1110,	1110,	1110,	1010,	111,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1001,	11,	101,	110,	1110,	1101,	101
2017-01-05 14:05:59 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1110,	1110,	11,	1101,	1001,	1010,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	111,	1001
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:05:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:05:59 AI_Player.update()	Search took104ms
2017-01-05 14:05:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	110,	111,	110,	101,	1010,	1100
2017-01-05 14:05:59 AI_Player.update()		1110,	1110,	1110,	1100,	111,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1001,	11,	101,	1010,	1110,	1101,	101
2017-01-05 14:05:59 AI_Player.update()		1110,	1100,	1101,	110,	1011,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1110,	1110,	11,	1100,	1001,	1010,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	111,	1001
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:05:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:05:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:05:59 AI_Player.update()	Search took1ms
2017-01-05 14:05:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	1110,	111,	110,	101,	1010,	1100
2017-01-05 14:05:59 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1001,	1100,	101,	1010,	1110,	1101,	101
2017-01-05 14:05:59 AI_Player.update()		1110,	1110,	1101,	110,	1011,	110,	1011
2017-01-05 14:05:59 AI_Player.update()		1110,	1001,	11,	1100,	1001,	1010,	11
2017-01-05 14:05:59 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:05:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:05:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:05:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:05:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:05:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:05:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:05:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:05:59 AI_Player.update()	update
2017-01-05 14:05:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:00 AI_Player.update()	Search took443ms
2017-01-05 14:06:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 14:06:00 AI_Player.update()		1100,	1110,	111,	110,	101,	1010,	1100
2017-01-05 14:06:00 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-05 14:06:00 AI_Player.update()		1001,	1100,	101,	1010,	1110,	1101,	101
2017-01-05 14:06:00 AI_Player.update()		1110,	1110,	1101,	110,	1011,	110,	1011
2017-01-05 14:06:00 AI_Player.update()		11,	1110,	1001,	11,	1100,	1001,	1010
2017-01-05 14:06:00 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:06:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()	update
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()	update
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:00 AI_Player.update()	Search took2ms
2017-01-05 14:06:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()		110,	1110,	111,	1010,	111,	110,	11
2017-01-05 14:06:00 AI_Player.update()		1100,	11,	111,	110,	101,	1010,	1100
2017-01-05 14:06:00 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-05 14:06:00 AI_Player.update()		1001,	1110,	101,	1010,	1110,	1101,	101
2017-01-05 14:06:00 AI_Player.update()		1110,	1110,	1101,	110,	1011,	110,	1011
2017-01-05 14:06:00 AI_Player.update()		11,	110,	1001,	11,	1100,	1001,	1010
2017-01-05 14:06:00 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:06:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()	update
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()	update
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:00 AI_Player.update()	Search took532ms
2017-01-05 14:06:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()		110,	1110,	111,	1010,	111,	110,	11
2017-01-05 14:06:00 AI_Player.update()		1100,	11,	111,	110,	101,	1010,	1100
2017-01-05 14:06:00 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-05 14:06:00 AI_Player.update()		1110,	101,	1010,	1110,	1101,	101,	1001
2017-01-05 14:06:00 AI_Player.update()		1110,	1110,	1101,	110,	1011,	110,	1011
2017-01-05 14:06:00 AI_Player.update()		11,	110,	1001,	11,	1100,	1001,	1010
2017-01-05 14:06:00 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:06:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()	update
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()	update
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:00 AI_Player.update()	Search took4ms
2017-01-05 14:06:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()		110,	1110,	111,	1010,	111,	110,	11
2017-01-05 14:06:00 AI_Player.update()		1100,	11,	111,	110,	101,	1010,	1100
2017-01-05 14:06:00 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-05 14:06:00 AI_Player.update()		101,	1010,	1110,	1101,	101,	1001,	1110
2017-01-05 14:06:00 AI_Player.update()		1110,	1110,	1101,	110,	1011,	110,	1011
2017-01-05 14:06:00 AI_Player.update()		11,	110,	1001,	11,	1100,	1001,	1010
2017-01-05 14:06:00 AI_Player.update()		1100,	110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:06:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()	update
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:00 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:00 AI_Player.update()	update
2017-01-05 14:06:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:01 AI_Player.update()	Search took654ms
2017-01-05 14:06:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 14:06:01 AI_Player.update()		1100,	1100,	111,	110,	101,	1010,	1100
2017-01-05 14:06:01 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-05 14:06:01 AI_Player.update()		101,	1110,	1110,	1101,	101,	1001,	1110
2017-01-05 14:06:01 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 14:06:01 AI_Player.update()		11,	110,	1001,	11,	1100,	1001,	1010
2017-01-05 14:06:01 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:06:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()	update
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()	update
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:01 AI_Player.update()	Search took3ms
2017-01-05 14:06:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 14:06:01 AI_Player.update()		1100,	1100,	111,	110,	101,	1010,	1100
2017-01-05 14:06:01 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-05 14:06:01 AI_Player.update()		1110,	1110,	1101,	101,	1001,	1110,	101
2017-01-05 14:06:01 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 14:06:01 AI_Player.update()		11,	110,	1001,	11,	1100,	1001,	1010
2017-01-05 14:06:01 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:06:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()	update
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()	update
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:01 AI_Player.update()	Search took176ms
2017-01-05 14:06:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 14:06:01 AI_Player.update()		1100,	1100,	111,	110,	101,	1010,	1100
2017-01-05 14:06:01 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-05 14:06:01 AI_Player.update()		101,	1110,	1110,	1101,	101,	1001,	1110
2017-01-05 14:06:01 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-05 14:06:01 AI_Player.update()		11,	110,	1001,	11,	1100,	1001,	1010
2017-01-05 14:06:01 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	111,	1001
2017-01-05 14:06:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()	update
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:01 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:01 AI_Player.update()	Player a has won!
2017-01-05 14:06:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:01 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:01 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()	update
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:01 AI_Player.update()	Search took34ms
2017-01-05 14:06:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()		110,	110,	111,	110,	111,	11,	11
2017-01-05 14:06:01 AI_Player.update()		1010,	1001,	11,	1010,	1010,	1010,	11
2017-01-05 14:06:01 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-05 14:06:01 AI_Player.update()		1010,	11,	11,	101,	1100,	111,	1001
2017-01-05 14:06:01 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:01 AI_Player.update()		101,	1100,	101,	1001,	1011,	1110,	111
2017-01-05 14:06:01 AI_Player.update()		1100,	111,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()	update
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()	update
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:01 AI_Player.update()	Search took1ms
2017-01-05 14:06:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()		110,	110,	111,	110,	111,	11,	11
2017-01-05 14:06:01 AI_Player.update()		1001,	11,	1010,	1010,	1010,	11,	1010
2017-01-05 14:06:01 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-05 14:06:01 AI_Player.update()		1010,	11,	11,	101,	1100,	111,	1001
2017-01-05 14:06:01 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:01 AI_Player.update()		101,	1100,	101,	1001,	1011,	1110,	111
2017-01-05 14:06:01 AI_Player.update()		1100,	111,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()	update
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:01 AI_Player.update()	update
2017-01-05 14:06:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took222ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	110,	111,	110,	111,	11,	11
2017-01-05 14:06:02 AI_Player.update()		11,	1010,	1010,	1010,	11,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		1010,	11,	11,	101,	1100,	111,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		101,	1100,	101,	1001,	1011,	1110,	111
2017-01-05 14:06:02 AI_Player.update()		1100,	111,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took4ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	110,	111,	110,	111,	11,	11
2017-01-05 14:06:02 AI_Player.update()		11,	1010,	1010,	1010,	11,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		11,	11,	101,	1100,	111,	1001,	1010
2017-01-05 14:06:02 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		101,	1100,	101,	1001,	1011,	1110,	111
2017-01-05 14:06:02 AI_Player.update()		1100,	111,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took86ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-05 14:06:02 AI_Player.update()		11,	101,	1010,	1010,	11,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		11,	1001,	101,	1100,	111,	1001,	1010
2017-01-05 14:06:02 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		101,	111,	101,	1001,	1011,	1110,	111
2017-01-05 14:06:02 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took3ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:06:02 AI_Player.update()		11,	101,	1010,	11,	11,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		11,	1001,	101,	1100,	111,	1001,	1010
2017-01-05 14:06:02 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		101,	111,	101,	1011,	1011,	1110,	111
2017-01-05 14:06:02 AI_Player.update()		1100,	110,	1101,	110,	1101,	1001,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took76ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:06:02 AI_Player.update()		11,	101,	1010,	11,	11,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		1010,	11,	1001,	101,	1100,	111,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		101,	111,	101,	1011,	1011,	1110,	111
2017-01-05 14:06:02 AI_Player.update()		1100,	110,	1101,	110,	1101,	1001,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took2ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-05 14:06:02 AI_Player.update()		11,	101,	1010,	11,	11,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		1010,	11,	1001,	101,	1100,	111,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		111,	101,	111,	101,	1011,	1011,	1110
2017-01-05 14:06:02 AI_Player.update()		1100,	110,	1101,	110,	1101,	1001,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took182ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	110,	111,	1010,	111,	11,	11
2017-01-05 14:06:02 AI_Player.update()		11,	1010,	1010,	11,	11,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		1010,	11,	1001,	101,	1100,	111,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		111,	1100,	111,	101,	1011,	1011,	1110
2017-01-05 14:06:02 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took4ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	110,	111,	110,	111,	11,	11
2017-01-05 14:06:02 AI_Player.update()		11,	1010,	1010,	1010,	11,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		1010,	11,	1001,	1100,	1100,	111,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		111,	1100,	111,	1001,	1011,	1011,	1110
2017-01-05 14:06:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took234ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 14:06:02 AI_Player.update()		11,	1010,	1010,	1010,	11,	1001,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	101,	1110,	11,	111,	111,	1011
2017-01-05 14:06:02 AI_Player.update()		1010,	11,	1001,	1100,	1100,	1100,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:02 AI_Player.update()		111,	1100,	111,	1001,	1011,	1001,	1110
2017-01-05 14:06:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took4ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-05 14:06:02 AI_Player.update()		11,	1010,	1010,	1010,	11,	111,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	101,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		1010,	11,	1001,	1100,	1100,	1011,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		111,	1100,	111,	1001,	1011,	11,	1110
2017-01-05 14:06:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took57ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	1010,	111,	110,	111,	1001,	11
2017-01-05 14:06:02 AI_Player.update()		11,	101,	1010,	1010,	11,	111,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		1010,	11,	1001,	1100,	1100,	1011,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		111,	101,	111,	1001,	1011,	11,	1110
2017-01-05 14:06:02 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took4ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-05 14:06:02 AI_Player.update()		11,	11,	1010,	1010,	11,	111,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		1010,	1100,	1001,	1100,	1100,	1011,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		111,	110,	111,	1001,	1011,	11,	1110
2017-01-05 14:06:02 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took73ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 14:06:02 AI_Player.update()		11,	11,	1010,	11,	11,	111,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		1010,	1100,	1001,	101,	1100,	1011,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		111,	110,	111,	101,	1011,	11,	1110
2017-01-05 14:06:02 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:02 AI_Player.update()	Search took4ms
2017-01-05 14:06:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-05 14:06:02 AI_Player.update()		11,	11,	1010,	1100,	11,	111,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:02 AI_Player.update()		1010,	1100,	1001,	1001,	1100,	1011,	1001
2017-01-05 14:06:02 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:02 AI_Player.update()		111,	110,	111,	110,	1011,	11,	1110
2017-01-05 14:06:02 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:06:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:02 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:02 AI_Player.update()	update
2017-01-05 14:06:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:03 AI_Player.update()	Search took630ms
2017-01-05 14:06:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:03 AI_Player.update()		110,	101,	111,	11,	111,	111,	11
2017-01-05 14:06:03 AI_Player.update()		11,	11,	1010,	1100,	11,	1100,	1001
2017-01-05 14:06:03 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-05 14:06:03 AI_Player.update()		1010,	1100,	1001,	1001,	1100,	1001,	1001
2017-01-05 14:06:03 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 14:06:03 AI_Player.update()		111,	110,	111,	110,	1011,	1010,	1110
2017-01-05 14:06:03 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:06:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:03 AI_Player.update()	update
2017-01-05 14:06:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:03 AI_Player.update()	update
2017-01-05 14:06:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:03 AI_Player.update()	Search took4ms
2017-01-05 14:06:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:03 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 14:06:03 AI_Player.update()		11,	11,	1010,	1100,	11,	1011,	1001
2017-01-05 14:06:03 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 14:06:03 AI_Player.update()		1010,	1100,	1001,	1001,	1100,	11,	1001
2017-01-05 14:06:03 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:03 AI_Player.update()		111,	110,	111,	110,	1011,	1001,	1110
2017-01-05 14:06:03 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	111,	1001
2017-01-05 14:06:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:03 AI_Player.update()	update
2017-01-05 14:06:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:03 AI_Player.update()	update
2017-01-05 14:06:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:04 AI_Player.update()	Search took811ms
2017-01-05 14:06:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()		110,	101,	111,	11,	111,	1011,	11
2017-01-05 14:06:04 AI_Player.update()		11,	11,	1010,	1100,	11,	1001,	1001
2017-01-05 14:06:04 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-05 14:06:04 AI_Player.update()		1010,	1100,	1001,	1001,	1100,	1010,	1001
2017-01-05 14:06:04 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:04 AI_Player.update()		111,	110,	111,	110,	1011,	111,	1110
2017-01-05 14:06:04 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:04 AI_Player.update()	Player a has won!
2017-01-05 14:06:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:04 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:04 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:04 AI_Player.update()	Search took49ms
2017-01-05 14:06:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-05 14:06:04 AI_Player.update()		101,	1010,	1100,	111,	110,	1001,	11
2017-01-05 14:06:04 AI_Player.update()		1110,	1101,	1110,	1011,	111,	1010,	1011
2017-01-05 14:06:04 AI_Player.update()		110,	1010,	1010,	110,	110,	1001,	101
2017-01-05 14:06:04 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-05 14:06:04 AI_Player.update()		11,	1010,	1100,	111,	110,	1100,	110
2017-01-05 14:06:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:04 AI_Player.update()	Search took0ms
2017-01-05 14:06:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-05 14:06:04 AI_Player.update()		11,	101,	1010,	1100,	111,	110,	1001
2017-01-05 14:06:04 AI_Player.update()		1110,	1101,	1110,	1011,	111,	1010,	1011
2017-01-05 14:06:04 AI_Player.update()		110,	1010,	1010,	110,	110,	1001,	101
2017-01-05 14:06:04 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-05 14:06:04 AI_Player.update()		11,	1010,	1100,	111,	110,	1100,	110
2017-01-05 14:06:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:04 AI_Player.update()	Search took254ms
2017-01-05 14:06:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-05 14:06:04 AI_Player.update()		101,	1010,	1100,	111,	110,	1001,	11
2017-01-05 14:06:04 AI_Player.update()		1110,	1101,	1110,	1011,	111,	1010,	1011
2017-01-05 14:06:04 AI_Player.update()		110,	1010,	1010,	110,	110,	1001,	101
2017-01-05 14:06:04 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-05 14:06:04 AI_Player.update()		11,	1010,	1100,	111,	110,	1100,	110
2017-01-05 14:06:04 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:04 AI_Player.update()	Search took1ms
2017-01-05 14:06:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-05 14:06:04 AI_Player.update()		101,	1010,	1100,	1011,	110,	1001,	11
2017-01-05 14:06:04 AI_Player.update()		1110,	1101,	1110,	110,	111,	1010,	1011
2017-01-05 14:06:04 AI_Player.update()		110,	1010,	1010,	1001,	110,	1001,	101
2017-01-05 14:06:04 AI_Player.update()		1110,	101,	1101,	111,	1011,	110,	1011
2017-01-05 14:06:04 AI_Player.update()		11,	1010,	1100,	1100,	110,	1100,	110
2017-01-05 14:06:04 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:04 AI_Player.update()	Search took249ms
2017-01-05 14:06:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-05 14:06:04 AI_Player.update()		1010,	1100,	1011,	110,	1001,	11,	101
2017-01-05 14:06:04 AI_Player.update()		1110,	1101,	1110,	110,	111,	1010,	1011
2017-01-05 14:06:04 AI_Player.update()		110,	1010,	1010,	1001,	110,	1001,	101
2017-01-05 14:06:04 AI_Player.update()		1110,	101,	1101,	111,	1011,	110,	1011
2017-01-05 14:06:04 AI_Player.update()		11,	1010,	1100,	1100,	110,	1100,	110
2017-01-05 14:06:04 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:04 AI_Player.update()	Search took5ms
2017-01-05 14:06:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()		110,	1100,	111,	111,	111,	1100,	11
2017-01-05 14:06:04 AI_Player.update()		1010,	1101,	1011,	110,	1001,	11,	101
2017-01-05 14:06:04 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 14:06:04 AI_Player.update()		110,	101,	1010,	1001,	110,	1001,	101
2017-01-05 14:06:04 AI_Player.update()		1110,	1010,	1101,	111,	1011,	110,	1011
2017-01-05 14:06:04 AI_Player.update()		11,	1010,	1100,	1100,	110,	1100,	110
2017-01-05 14:06:04 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:06:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:04 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:04 AI_Player.update()	update
2017-01-05 14:06:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:05 AI_Player.update()	Search took185ms
2017-01-05 14:06:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()		110,	1101,	111,	111,	111,	1100,	11
2017-01-05 14:06:05 AI_Player.update()		1010,	1010,	1011,	110,	1001,	11,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-05 14:06:05 AI_Player.update()		110,	1010,	1010,	1001,	110,	1001,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1010,	1101,	111,	1011,	110,	1011
2017-01-05 14:06:05 AI_Player.update()		11,	101,	1100,	1100,	110,	1100,	110
2017-01-05 14:06:05 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:05 AI_Player.update()	Search took5ms
2017-01-05 14:06:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()		110,	1010,	111,	111,	111,	1100,	11
2017-01-05 14:06:05 AI_Player.update()		1010,	101,	1011,	110,	1001,	11,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 14:06:05 AI_Player.update()		110,	1010,	1010,	1001,	110,	1001,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	101,	1101,	111,	1011,	110,	1011
2017-01-05 14:06:05 AI_Player.update()		11,	1100,	1100,	1100,	110,	1100,	110
2017-01-05 14:06:05 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:05 AI_Player.update()	Search took569ms
2017-01-05 14:06:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 14:06:05 AI_Player.update()		1010,	101,	1011,	111,	1001,	11,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 14:06:05 AI_Player.update()		110,	1010,	1010,	110,	110,	1001,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-05 14:06:05 AI_Player.update()		11,	1100,	1100,	111,	110,	1100,	110
2017-01-05 14:06:05 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:05 AI_Player.update()	Search took1ms
2017-01-05 14:06:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-05 14:06:05 AI_Player.update()		1010,	1010,	1011,	111,	1001,	11,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-05 14:06:05 AI_Player.update()		110,	101,	1010,	110,	110,	1001,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-05 14:06:05 AI_Player.update()		11,	1101,	1100,	111,	110,	1100,	110
2017-01-05 14:06:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:05 AI_Player.update()	Search took89ms
2017-01-05 14:06:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 14:06:05 AI_Player.update()		1010,	1010,	1011,	111,	1001,	1010,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-05 14:06:05 AI_Player.update()		110,	101,	1010,	110,	110,	110,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:06:05 AI_Player.update()		11,	1101,	1100,	111,	110,	1100,	110
2017-01-05 14:06:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:05 AI_Player.update()	Search took3ms
2017-01-05 14:06:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-05 14:06:05 AI_Player.update()		101,	1010,	1010,	1011,	111,	1001,	1010
2017-01-05 14:06:05 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-05 14:06:05 AI_Player.update()		110,	101,	1010,	110,	110,	110,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-05 14:06:05 AI_Player.update()		11,	1101,	1100,	111,	110,	1100,	110
2017-01-05 14:06:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:05 AI_Player.update()	Search took56ms
2017-01-05 14:06:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()		110,	101,	111,	1011,	111,	11,	11
2017-01-05 14:06:05 AI_Player.update()		101,	1010,	1010,	110,	111,	1001,	1010
2017-01-05 14:06:05 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-05 14:06:05 AI_Player.update()		110,	101,	1010,	1001,	110,	110,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1100,	1011
2017-01-05 14:06:05 AI_Player.update()		11,	1101,	1100,	1100,	110,	1100,	110
2017-01-05 14:06:05 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:05 AI_Player.update()	Search took1ms
2017-01-05 14:06:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()		110,	101,	111,	1011,	111,	1001,	11
2017-01-05 14:06:05 AI_Player.update()		101,	1010,	1010,	110,	111,	1001,	1010
2017-01-05 14:06:05 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 14:06:05 AI_Player.update()		110,	101,	1010,	1001,	110,	1100,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1100,	1011
2017-01-05 14:06:05 AI_Player.update()		11,	1101,	1100,	1100,	110,	1100,	110
2017-01-05 14:06:05 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:05 AI_Player.update()	Search took66ms
2017-01-05 14:06:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-05 14:06:05 AI_Player.update()		101,	1010,	1010,	110,	111,	1001,	1010
2017-01-05 14:06:05 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-05 14:06:05 AI_Player.update()		110,	101,	1010,	111,	110,	1100,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:05 AI_Player.update()		11,	1101,	1100,	1010,	110,	1100,	110
2017-01-05 14:06:05 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:05 AI_Player.update()	Search took2ms
2017-01-05 14:06:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-05 14:06:05 AI_Player.update()		101,	1010,	1010,	110,	111,	1001,	1010
2017-01-05 14:06:05 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 14:06:05 AI_Player.update()		110,	101,	1010,	111,	110,	110,	101
2017-01-05 14:06:05 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:05 AI_Player.update()		11,	1101,	1100,	1010,	110,	1100,	110
2017-01-05 14:06:05 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-05 14:06:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:05 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:05 AI_Player.update()	update
2017-01-05 14:06:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took246ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		101,	1010,	1010,	110,	111,	11,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-05 14:06:06 AI_Player.update()		110,	101,	1010,	111,	110,	1001,	101
2017-01-05 14:06:06 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-05 14:06:06 AI_Player.update()		11,	1101,	1100,	1010,	110,	1100,	110
2017-01-05 14:06:06 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:06 AI_Player.update()	Player a has won!
2017-01-05 14:06:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:06 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took214ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	1001,	111,	1011,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	1101,	1010,	11,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	101,	1001,	1010,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1100,	1010,	110,	101,	101,	1110,	1001
2017-01-05 14:06:06 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took1ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	1101,	111,	1011,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	1010,	1010,	11,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	11,	1001,	1010,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1100,	1010,	110,	101,	101,	1110,	1001
2017-01-05 14:06:06 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took80ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	1001,	111,	1011,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	1101,	1010,	11,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	101,	1001,	1010,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1100,	1010,	110,	101,	101,	1110,	1001
2017-01-05 14:06:06 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took1ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	1101,	111,	1011,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	1010,	1010,	11,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	11,	1001,	1010,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1100,	1010,	110,	101,	101,	1110,	1001
2017-01-05 14:06:06 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took70ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	1101,	111,	11,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	1010,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	11,	1001,	110,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1100,	1010,	110,	1010,	101,	1110,	1001
2017-01-05 14:06:06 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took1ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	101,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	1010,	1001,	110,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1100,	1001,	110,	1010,	101,	1110,	1001
2017-01-05 14:06:06 AI_Player.update()		1100,	1101,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took106ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	101,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	1010,	1001,	110,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1001,	110,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:06 AI_Player.update()		1100,	1101,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took1ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	11,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	1010,	1001,	110,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	110,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1001,	1101,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:06 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took108ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	11,	111,	11,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	1010,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	110,	1001,	110,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1001,	1010,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:06 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took1ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	1010,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	1101,	1001,	110,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1001,	101,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:06 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took74ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	110,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	1010,	1001,	110,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1001,	11,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:06 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:06 AI_Player.update()	Search took1ms
2017-01-05 14:06:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:06:06 AI_Player.update()		1011,	1101,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:06 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:06 AI_Player.update()		1010,	101,	1001,	110,	1100,	110,	11
2017-01-05 14:06:06 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:06 AI_Player.update()		1001,	1010,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:06 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:06 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:06 AI_Player.update()	update
2017-01-05 14:06:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took177ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1101,	1010,	1001,	101,	1010,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	101,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	1010,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took2ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1101,	1010,	1001,	101,	1010,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	11,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	1010,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took45ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1101,	101,	1001,	101,	1010,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	1010,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	110,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took1ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1101,	11,	1001,	101,	1010,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	1010,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	110,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	1010,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took123ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1011,	1101,	11,	1001,	101,	1010,	1010
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	1010,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	110,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	1010,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took2ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	1101,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1011,	1010,	11,	1001,	101,	1010,	1010
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	110,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	1010,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took179ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	1101,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1010,	11,	1001,	101,	1010,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	110,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	1010,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took1ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	11,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1010,	1010,	1001,	101,	1010,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	1010,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	101,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	1101,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took73ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1010,	110,	1001,	101,	1010,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	1010,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	1101,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took1ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1010,	1010,	1001,	101,	1010,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	101,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	11,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took127ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1011,	1010,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	101,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	11,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took2ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1011,	1010,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:07 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	1101,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	1010,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took179ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1011,	1010,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:07 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	101,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	11,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:07 AI_Player.update()	Search took2ms
2017-01-05 14:06:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-05 14:06:07 AI_Player.update()		1011,	1010,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:07 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:07 AI_Player.update()		1010,	1101,	1001,	110,	1100,	110,	11
2017-01-05 14:06:07 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:07 AI_Player.update()		1001,	1010,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:07 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:07 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:07 AI_Player.update()	update
2017-01-05 14:06:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:08 AI_Player.update()	Search took284ms
2017-01-05 14:06:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:06:08 AI_Player.update()		1011,	1010,	1010,	1001,	101,	1010,	1010
2017-01-05 14:06:08 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:08 AI_Player.update()		1010,	101,	1001,	110,	1100,	110,	11
2017-01-05 14:06:08 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1011,	1011
2017-01-05 14:06:08 AI_Player.update()		1001,	11,	1010,	101,	1110,	1001,	1100
2017-01-05 14:06:08 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-05 14:06:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()	update
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:08 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:08 AI_Player.update()	Player a has won!
2017-01-05 14:06:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:08 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:08 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:08 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()	update
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:08 AI_Player.update()	Search took89ms
2017-01-05 14:06:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 14:06:08 AI_Player.update()		101,	1100,	1010,	110,	101,	111,	101
2017-01-05 14:06:08 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 14:06:08 AI_Player.update()		1010,	1011,	1001,	101,	1010,	101,	1001
2017-01-05 14:06:08 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:06:08 AI_Player.update()		11,	110,	11,	11,	1010,	1010,	11
2017-01-05 14:06:08 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 14:06:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()	update
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()	update
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:08 AI_Player.update()	Search took1ms
2017-01-05 14:06:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 14:06:08 AI_Player.update()		101,	1100,	1010,	110,	101,	110,	101
2017-01-05 14:06:08 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:08 AI_Player.update()		1010,	1011,	1001,	101,	1010,	1010,	1001
2017-01-05 14:06:08 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:06:08 AI_Player.update()		11,	110,	11,	11,	1010,	101,	11
2017-01-05 14:06:08 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:06:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()	update
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()	update
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:08 AI_Player.update()	Search took155ms
2017-01-05 14:06:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()		110,	101,	111,	110,	111,	111,	11
2017-01-05 14:06:08 AI_Player.update()		101,	1100,	1010,	1010,	101,	110,	101
2017-01-05 14:06:08 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:06:08 AI_Player.update()		1010,	1011,	1001,	1010,	1010,	1010,	1001
2017-01-05 14:06:08 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 14:06:08 AI_Player.update()		11,	110,	11,	1001,	1010,	101,	11
2017-01-05 14:06:08 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 14:06:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()	update
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()	update
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:08 AI_Player.update()	Search took4ms
2017-01-05 14:06:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()		110,	101,	111,	110,	111,	111,	11
2017-01-05 14:06:08 AI_Player.update()		101,	1100,	1010,	1010,	101,	110,	101
2017-01-05 14:06:08 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:06:08 AI_Player.update()		1011,	1001,	1010,	1010,	1010,	1001,	1010
2017-01-05 14:06:08 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 14:06:08 AI_Player.update()		11,	110,	11,	1001,	1010,	101,	11
2017-01-05 14:06:08 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 14:06:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()	update
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:08 AI_Player.update()	update
2017-01-05 14:06:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:09 AI_Player.update()	Search took803ms
2017-01-05 14:06:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()		110,	101,	111,	110,	111,	111,	11
2017-01-05 14:06:09 AI_Player.update()		101,	1100,	1010,	1010,	101,	110,	101
2017-01-05 14:06:09 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:06:09 AI_Player.update()		1011,	1001,	1010,	1010,	1010,	1001,	1010
2017-01-05 14:06:09 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		11,	11,	110,	11,	1001,	1010,	101
2017-01-05 14:06:09 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:09 AI_Player.update()	Search took3ms
2017-01-05 14:06:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-05 14:06:09 AI_Player.update()		101,	1100,	1010,	101,	101,	110,	101
2017-01-05 14:06:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:09 AI_Player.update()		1011,	1001,	1010,	11,	1010,	1001,	1010
2017-01-05 14:06:09 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		11,	11,	110,	101,	1001,	1010,	101
2017-01-05 14:06:09 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:09 AI_Player.update()	Search took328ms
2017-01-05 14:06:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-05 14:06:09 AI_Player.update()		101,	1100,	1010,	101,	101,	110,	101
2017-01-05 14:06:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:09 AI_Player.update()		1001,	1010,	11,	1010,	1001,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		11,	11,	110,	101,	1001,	1010,	101
2017-01-05 14:06:09 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:09 AI_Player.update()	Search took1ms
2017-01-05 14:06:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 14:06:09 AI_Player.update()		101,	1100,	1010,	1010,	101,	110,	101
2017-01-05 14:06:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:09 AI_Player.update()		1001,	1010,	11,	11,	1001,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		11,	11,	110,	110,	1001,	1010,	101
2017-01-05 14:06:09 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:09 AI_Player.update()	Search took99ms
2017-01-05 14:06:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:06:09 AI_Player.update()		101,	1100,	1010,	1010,	101,	101,	101
2017-01-05 14:06:09 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		1001,	1010,	11,	11,	1001,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		11,	11,	110,	110,	1001,	1010,	101
2017-01-05 14:06:09 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	111,	1001
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:09 AI_Player.update()	Search took3ms
2017-01-05 14:06:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:06:09 AI_Player.update()		101,	1001,	1010,	1010,	101,	101,	101
2017-01-05 14:06:09 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		1001,	101,	11,	11,	1001,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		11,	1010,	110,	110,	1001,	1010,	101
2017-01-05 14:06:09 AI_Player.update()		1100,	101,	1101,	1010,	1101,	111,	1001
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:09 AI_Player.update()	Search took67ms
2017-01-05 14:06:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:06:09 AI_Player.update()		101,	1001,	1010,	1010,	101,	101,	101
2017-01-05 14:06:09 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		1001,	101,	11,	11,	1001,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		101,	11,	1010,	110,	110,	1001,	1010
2017-01-05 14:06:09 AI_Player.update()		1100,	101,	1101,	1010,	1101,	111,	1001
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:09 AI_Player.update()	Search took1ms
2017-01-05 14:06:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-05 14:06:09 AI_Player.update()		101,	1010,	1010,	1010,	101,	101,	101
2017-01-05 14:06:09 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		1001,	11,	11,	11,	1001,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:09 AI_Player.update()		101,	101,	1010,	110,	110,	1001,	1010
2017-01-05 14:06:09 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	111,	1001
2017-01-05 14:06:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:09 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:09 AI_Player.update()	update
2017-01-05 14:06:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took258ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-05 14:06:10 AI_Player.update()		101,	1010,	1010,	1010,	101,	110,	101
2017-01-05 14:06:10 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:10 AI_Player.update()		1001,	11,	11,	11,	1001,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		101,	101,	1010,	110,	110,	1010,	1010
2017-01-05 14:06:10 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took1ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	1010,	111,	101,	111,	111,	11
2017-01-05 14:06:10 AI_Player.update()		101,	101,	1010,	1010,	101,	110,	101
2017-01-05 14:06:10 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:10 AI_Player.update()		1001,	11,	11,	11,	1001,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		101,	1100,	1010,	110,	110,	1010,	1010
2017-01-05 14:06:10 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took79ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-05 14:06:10 AI_Player.update()		101,	11,	1010,	1010,	101,	110,	101
2017-01-05 14:06:10 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:10 AI_Player.update()		1001,	101,	11,	11,	1001,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		101,	1001,	1010,	110,	110,	1010,	1010
2017-01-05 14:06:10 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:10 AI_Player.update()	Player a has won!
2017-01-05 14:06:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:10 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took49ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	1101,	111,	1010,	111,	1100,	11
2017-01-05 14:06:10 AI_Player.update()		1010,	110,	101,	110,	11,	111,	1100
2017-01-05 14:06:10 AI_Player.update()		1110,	1010,	1110,	11,	111,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		101,	1110,	110,	1100,	1010,	1100,	1010
2017-01-05 14:06:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1001,	1010,	1001,	101,	11,	101,	1100
2017-01-05 14:06:10 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took1ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 14:06:10 AI_Player.update()		1010,	110,	101,	110,	11,	1010,	1100
2017-01-05 14:06:10 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:10 AI_Player.update()		101,	1110,	110,	1100,	1010,	1010,	1010
2017-01-05 14:06:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 14:06:10 AI_Player.update()		1001,	1010,	1001,	101,	11,	1100,	1100
2017-01-05 14:06:10 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took63ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	1101,	111,	1010,	111,	111,	11
2017-01-05 14:06:10 AI_Player.update()		1010,	110,	101,	110,	11,	1010,	1100
2017-01-05 14:06:10 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:10 AI_Player.update()		101,	1110,	110,	1100,	1010,	1010,	1010
2017-01-05 14:06:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 14:06:10 AI_Player.update()		1010,	1001,	101,	11,	1100,	1100,	1001
2017-01-05 14:06:10 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took2ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	1101,	111,	1010,	111,	1100,	11
2017-01-05 14:06:10 AI_Player.update()		1010,	110,	101,	110,	11,	111,	1100
2017-01-05 14:06:10 AI_Player.update()		1110,	1010,	1110,	11,	111,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		101,	1110,	110,	1100,	1010,	1100,	1010
2017-01-05 14:06:10 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1010,	1001,	101,	11,	1100,	101,	1001
2017-01-05 14:06:10 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took111ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	110,	111,	1010,	111,	1100,	11
2017-01-05 14:06:10 AI_Player.update()		1010,	1010,	101,	110,	11,	111,	1100
2017-01-05 14:06:10 AI_Player.update()		1110,	1110,	1110,	11,	111,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		101,	1010,	110,	1100,	1010,	1100,	1010
2017-01-05 14:06:10 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1010,	11,	101,	11,	1100,	101,	1001
2017-01-05 14:06:10 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took2ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	110,	111,	1010,	111,	1100,	11
2017-01-05 14:06:10 AI_Player.update()		1010,	1010,	101,	110,	11,	111,	1100
2017-01-05 14:06:10 AI_Player.update()		1110,	1110,	1110,	11,	111,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1010,	101
2017-01-05 14:06:10 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1010,	11,	101,	11,	1100,	101,	1001
2017-01-05 14:06:10 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took219ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	110,	111,	1010,	111,	1100,	11
2017-01-05 14:06:10 AI_Player.update()		1010,	1010,	101,	110,	11,	111,	1100
2017-01-05 14:06:10 AI_Player.update()		1110,	1110,	1110,	11,	111,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1010,	101
2017-01-05 14:06:10 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1001,	1010,	11,	101,	11,	1100,	101
2017-01-05 14:06:10 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took1ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	110,	111,	1010,	111,	1100,	11
2017-01-05 14:06:10 AI_Player.update()		1100,	1010,	1010,	101,	110,	11,	111
2017-01-05 14:06:10 AI_Player.update()		1110,	1110,	1110,	11,	111,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1010,	110,	1100,	1010,	1100,	1010,	101
2017-01-05 14:06:10 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1001,	1010,	11,	101,	11,	1100,	101
2017-01-05 14:06:10 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took155ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:06:10 AI_Player.update()		1100,	1010,	1010,	1010,	110,	11,	111
2017-01-05 14:06:10 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1010,	110,	1100,	11,	1100,	1010,	101
2017-01-05 14:06:10 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1001,	1010,	11,	1100,	11,	1100,	101
2017-01-05 14:06:10 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:10 AI_Player.update()	Search took4ms
2017-01-05 14:06:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:06:10 AI_Player.update()		1100,	1010,	1010,	1010,	110,	1100,	111
2017-01-05 14:06:10 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-05 14:06:10 AI_Player.update()		1010,	110,	1100,	11,	1100,	1010,	101
2017-01-05 14:06:10 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:06:10 AI_Player.update()		1001,	1010,	11,	1100,	11,	1010,	101
2017-01-05 14:06:10 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:10 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:10 AI_Player.update()	update
2017-01-05 14:06:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:11 AI_Player.update()	Search took584ms
2017-01-05 14:06:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:06:11 AI_Player.update()		1100,	1010,	1010,	1010,	110,	11,	111
2017-01-05 14:06:11 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-05 14:06:11 AI_Player.update()		1010,	110,	1100,	11,	1100,	1010,	101
2017-01-05 14:06:11 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:06:11 AI_Player.update()		1001,	1010,	11,	1100,	11,	1100,	101
2017-01-05 14:06:11 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()	update
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()	update
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:11 AI_Player.update()	Search took2ms
2017-01-05 14:06:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 14:06:11 AI_Player.update()		1100,	1010,	1010,	1010,	110,	1010,	111
2017-01-05 14:06:11 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-05 14:06:11 AI_Player.update()		1010,	110,	1100,	11,	1100,	1010,	101
2017-01-05 14:06:11 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:11 AI_Player.update()		1001,	1010,	11,	1100,	11,	1100,	101
2017-01-05 14:06:11 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()	update
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()	update
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:11 AI_Player.update()	Search took485ms
2017-01-05 14:06:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 14:06:11 AI_Player.update()		1100,	1010,	1010,	1010,	110,	1010,	111
2017-01-05 14:06:11 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-05 14:06:11 AI_Player.update()		110,	1100,	11,	1100,	1010,	101,	1010
2017-01-05 14:06:11 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:11 AI_Player.update()		1001,	1010,	11,	1100,	11,	1100,	101
2017-01-05 14:06:11 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()	update
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()	update
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:11 AI_Player.update()	Search took2ms
2017-01-05 14:06:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()		110,	1010,	111,	11,	111,	11,	11
2017-01-05 14:06:11 AI_Player.update()		1100,	1110,	1010,	1010,	110,	1010,	111
2017-01-05 14:06:11 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-05 14:06:11 AI_Player.update()		110,	1001,	11,	1100,	1010,	101,	1010
2017-01-05 14:06:11 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:11 AI_Player.update()		1001,	1101,	11,	1100,	11,	1100,	101
2017-01-05 14:06:11 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()	update
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:11 AI_Player.update()	update
2017-01-05 14:06:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:12 AI_Player.update()	Search took64ms
2017-01-05 14:06:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 14:06:12 AI_Player.update()		1100,	1010,	1010,	1010,	110,	1010,	111
2017-01-05 14:06:12 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-05 14:06:12 AI_Player.update()		110,	1100,	11,	1100,	1010,	101,	1010
2017-01-05 14:06:12 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:12 AI_Player.update()		1001,	1010,	11,	1100,	11,	1100,	101
2017-01-05 14:06:12 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:12 AI_Player.update()	Search took2ms
2017-01-05 14:06:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-05 14:06:12 AI_Player.update()		111,	1100,	1010,	1010,	1010,	110,	1010
2017-01-05 14:06:12 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-05 14:06:12 AI_Player.update()		110,	1100,	11,	1100,	1010,	101,	1010
2017-01-05 14:06:12 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:12 AI_Player.update()		1001,	1010,	11,	1100,	11,	1100,	101
2017-01-05 14:06:12 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 14:06:12 AI_Player.update()	Player b has won!
2017-01-05 14:06:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:12 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:12 AI_Player.update()	Search took167ms
2017-01-05 14:06:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:06:12 AI_Player.update()		1110,	1010,	101,	1010,	101,	101,	1001
2017-01-05 14:06:12 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 14:06:12 AI_Player.update()		1001,	110,	1010,	1001,	1010,	101,	1001
2017-01-05 14:06:12 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:12 AI_Player.update()		1010,	1001,	101,	1010,	111,	111,	1101
2017-01-05 14:06:12 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:12 AI_Player.update()	Search took2ms
2017-01-05 14:06:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:06:12 AI_Player.update()		1010,	101,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:12 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 14:06:12 AI_Player.update()		1001,	110,	1010,	1001,	1010,	101,	1001
2017-01-05 14:06:12 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:12 AI_Player.update()		1010,	1001,	101,	1010,	111,	111,	1101
2017-01-05 14:06:12 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:12 AI_Player.update()	Search took80ms
2017-01-05 14:06:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:06:12 AI_Player.update()		1010,	1100,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:12 AI_Player.update()		1110,	110,	1110,	1010,	111,	11,	1011
2017-01-05 14:06:12 AI_Player.update()		1001,	110,	1010,	1001,	1010,	101,	1001
2017-01-05 14:06:12 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:12 AI_Player.update()		1010,	1100,	101,	1010,	111,	111,	1101
2017-01-05 14:06:12 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:12 AI_Player.update()	Search took2ms
2017-01-05 14:06:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-05 14:06:12 AI_Player.update()		1010,	110,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:12 AI_Player.update()		1110,	110,	1110,	1010,	111,	11,	1011
2017-01-05 14:06:12 AI_Player.update()		1001,	1001,	1010,	1001,	1010,	101,	1001
2017-01-05 14:06:12 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:12 AI_Player.update()		1010,	101,	101,	1010,	111,	111,	1101
2017-01-05 14:06:12 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:12 AI_Player.update()	Search took140ms
2017-01-05 14:06:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-05 14:06:12 AI_Player.update()		1010,	110,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:12 AI_Player.update()		1110,	110,	1110,	101,	111,	11,	1011
2017-01-05 14:06:12 AI_Player.update()		1001,	1001,	1010,	1010,	1010,	101,	1001
2017-01-05 14:06:12 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:12 AI_Player.update()		1010,	101,	101,	110,	111,	111,	1101
2017-01-05 14:06:12 AI_Player.update()		1100,	101,	1101,	1010,	1101,	110,	1001
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:12 AI_Player.update()	Search took2ms
2017-01-05 14:06:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-05 14:06:12 AI_Player.update()		1010,	110,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:12 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-05 14:06:12 AI_Player.update()		1001,	1100,	1010,	1010,	1010,	101,	1001
2017-01-05 14:06:12 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:12 AI_Player.update()		1010,	101,	101,	110,	111,	111,	1101
2017-01-05 14:06:12 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:12 AI_Player.update()	Search took420ms
2017-01-05 14:06:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:06:12 AI_Player.update()		1010,	110,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	11,	1011
2017-01-05 14:06:12 AI_Player.update()		1001,	1100,	1010,	1001,	1010,	101,	1001
2017-01-05 14:06:12 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:12 AI_Player.update()		1010,	101,	101,	1010,	111,	111,	1101
2017-01-05 14:06:12 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:12 AI_Player.update()	Search took2ms
2017-01-05 14:06:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-05 14:06:12 AI_Player.update()		1010,	1001,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:12 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 14:06:12 AI_Player.update()		1001,	101,	1010,	1001,	1010,	101,	1001
2017-01-05 14:06:12 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:12 AI_Player.update()		1010,	1100,	101,	1010,	111,	111,	1101
2017-01-05 14:06:12 AI_Player.update()		1100,	110,	1101,	11,	1101,	110,	1001
2017-01-05 14:06:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:12 AI_Player.update()	update
2017-01-05 14:06:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:13 AI_Player.update()	Search took111ms
2017-01-05 14:06:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-05 14:06:13 AI_Player.update()		1010,	1001,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 14:06:13 AI_Player.update()		1001,	101,	1010,	1010,	1010,	101,	1001
2017-01-05 14:06:13 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:13 AI_Player.update()		1010,	1100,	101,	110,	111,	111,	1101
2017-01-05 14:06:13 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:13 AI_Player.update()	Search took4ms
2017-01-05 14:06:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-05 14:06:13 AI_Player.update()		1010,	1100,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:13 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 14:06:13 AI_Player.update()		1001,	101,	1010,	1010,	1010,	101,	1001
2017-01-05 14:06:13 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:13 AI_Player.update()		1010,	110,	101,	110,	111,	111,	1101
2017-01-05 14:06:13 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:13 AI_Player.update()	Search took134ms
2017-01-05 14:06:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-05 14:06:13 AI_Player.update()		1010,	1100,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:13 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 14:06:13 AI_Player.update()		1001,	101,	1010,	1010,	1010,	101,	1001
2017-01-05 14:06:13 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:13 AI_Player.update()		110,	101,	110,	111,	111,	1101,	1010
2017-01-05 14:06:13 AI_Player.update()		1100,	110,	1101,	1010,	1101,	110,	1001
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:13 AI_Player.update()	Search took2ms
2017-01-05 14:06:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-05 14:06:13 AI_Player.update()		1010,	101,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:13 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 14:06:13 AI_Player.update()		1001,	1100,	1010,	1010,	1010,	101,	1001
2017-01-05 14:06:13 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:13 AI_Player.update()		110,	110,	110,	111,	111,	1101,	1010
2017-01-05 14:06:13 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	110,	1001
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:13 AI_Player.update()	Search took221ms
2017-01-05 14:06:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-05 14:06:13 AI_Player.update()		1010,	101,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:13 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 14:06:13 AI_Player.update()		1001,	1100,	1010,	1010,	1010,	101,	1001
2017-01-05 14:06:13 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:13 AI_Player.update()		110,	110,	111,	111,	1101,	1010,	110
2017-01-05 14:06:13 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	110,	1001
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:13 AI_Player.update()	Search took2ms
2017-01-05 14:06:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 14:06:13 AI_Player.update()		1010,	101,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:13 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 14:06:13 AI_Player.update()		1001,	101,	1010,	1010,	1010,	101,	1001
2017-01-05 14:06:13 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:13 AI_Player.update()		110,	1001,	111,	111,	1101,	1010,	110
2017-01-05 14:06:13 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	110,	1001
2017-01-05 14:06:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:13 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:13 AI_Player.update()	update
2017-01-05 14:06:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:14 AI_Player.update()	Search took876ms
2017-01-05 14:06:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:06:14 AI_Player.update()		1010,	101,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:14 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 14:06:14 AI_Player.update()		1001,	101,	1010,	1001,	1010,	101,	1001
2017-01-05 14:06:14 AI_Player.update()		1110,	110,	1101,	111,	1011,	1010,	1011
2017-01-05 14:06:14 AI_Player.update()		110,	1001,	111,	1010,	1101,	1010,	110
2017-01-05 14:06:14 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 14:06:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()	update
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()	update
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:14 AI_Player.update()	Search took3ms
2017-01-05 14:06:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:06:14 AI_Player.update()		1010,	1100,	1010,	101,	101,	1001,	1110
2017-01-05 14:06:14 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-05 14:06:14 AI_Player.update()		1001,	110,	1010,	1001,	1010,	101,	1001
2017-01-05 14:06:14 AI_Player.update()		1110,	1001,	1101,	111,	1011,	1010,	1011
2017-01-05 14:06:14 AI_Player.update()		110,	1100,	111,	1010,	1101,	1010,	110
2017-01-05 14:06:14 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-05 14:06:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()	update
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()	update
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:14 AI_Player.update()	Search took637ms
2017-01-05 14:06:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:06:14 AI_Player.update()		1010,	1100,	1010,	101,	101,	101,	1110
2017-01-05 14:06:14 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-05 14:06:14 AI_Player.update()		1001,	110,	1010,	1001,	1010,	11,	1001
2017-01-05 14:06:14 AI_Player.update()		1110,	1001,	1101,	111,	1011,	101,	1011
2017-01-05 14:06:14 AI_Player.update()		110,	1100,	111,	1010,	1101,	1010,	110
2017-01-05 14:06:14 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 14:06:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()	update
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()	update
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:14 AI_Player.update()	Search took4ms
2017-01-05 14:06:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:06:14 AI_Player.update()		1010,	101,	1010,	101,	101,	101,	1110
2017-01-05 14:06:14 AI_Player.update()		1110,	110,	1110,	1010,	111,	1001,	1011
2017-01-05 14:06:14 AI_Player.update()		1001,	1001,	1010,	1001,	1010,	11,	1001
2017-01-05 14:06:14 AI_Player.update()		1110,	1100,	1101,	111,	1011,	101,	1011
2017-01-05 14:06:14 AI_Player.update()		110,	101,	111,	1010,	1101,	1010,	110
2017-01-05 14:06:14 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-05 14:06:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()	update
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:14 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:14 AI_Player.update()	update
2017-01-05 14:06:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:15 AI_Player.update()	Search took477ms
2017-01-05 14:06:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:15 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:06:15 AI_Player.update()		1010,	110,	1010,	101,	101,	101,	1110
2017-01-05 14:06:15 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-05 14:06:15 AI_Player.update()		1001,	1100,	1010,	1001,	1010,	11,	1001
2017-01-05 14:06:15 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-05 14:06:15 AI_Player.update()		110,	101,	111,	1010,	1101,	1010,	110
2017-01-05 14:06:15 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1010,	1001
2017-01-05 14:06:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:15 AI_Player.update()	update
2017-01-05 14:06:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:15 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:15 AI_Player.update()	Player a has won!
2017-01-05 14:06:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:15 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:15 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:15 AI_Player.update()	update
2017-01-05 14:06:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:15 AI_Player.update()	Search took386ms
2017-01-05 14:06:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:15 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 14:06:15 AI_Player.update()		1010,	1100,	1110,	1100,	1100,	1100,	101
2017-01-05 14:06:15 AI_Player.update()		1110,	1101,	1110,	11,	111,	11,	1011
2017-01-05 14:06:15 AI_Player.update()		1011,	1010,	1010,	1010,	1100,	1010,	1001
2017-01-05 14:06:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:06:15 AI_Player.update()		1010,	110,	1100,	1011,	1010,	1100,	110
2017-01-05 14:06:15 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:15 AI_Player.update()	update
2017-01-05 14:06:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:15 AI_Player.update()	update
2017-01-05 14:06:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:15 AI_Player.update()	Search took0ms
2017-01-05 14:06:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:15 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 14:06:15 AI_Player.update()		1100,	1110,	1100,	1100,	1100,	101,	1010
2017-01-05 14:06:15 AI_Player.update()		1110,	1101,	1110,	11,	111,	11,	1011
2017-01-05 14:06:15 AI_Player.update()		1011,	1010,	1010,	1010,	1100,	1010,	1001
2017-01-05 14:06:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:06:15 AI_Player.update()		1010,	110,	1100,	1011,	1010,	1100,	110
2017-01-05 14:06:15 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:15 AI_Player.update()	update
2017-01-05 14:06:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:15 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:15 AI_Player.update()	update
2017-01-05 14:06:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:16 AI_Player.update()	Search took182ms
2017-01-05 14:06:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-05 14:06:16 AI_Player.update()		1100,	1110,	1100,	1100,	1100,	101,	1010
2017-01-05 14:06:16 AI_Player.update()		1110,	1101,	1110,	11,	111,	11,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	1010,	1010,	1100,	1010,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	110,	1100,	1011,	1010,	1100,	110
2017-01-05 14:06:16 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:16 AI_Player.update()	Search took2ms
2017-01-05 14:06:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 14:06:16 AI_Player.update()		1100,	1110,	1100,	1100,	1100,	11,	1010
2017-01-05 14:06:16 AI_Player.update()		1110,	1101,	1110,	11,	111,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	1010,	1010,	1100,	1010,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	110,	1100,	1011,	1010,	1010,	110
2017-01-05 14:06:16 AI_Player.update()		1100,	11,	1101,	110,	1101,	1001,	1001
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:16 AI_Player.update()	Search took512ms
2017-01-05 14:06:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()		110,	1110,	111,	1001,	111,	101,	11
2017-01-05 14:06:16 AI_Player.update()		1100,	1101,	1100,	1100,	1100,	11,	1010
2017-01-05 14:06:16 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	11,	1010,	1100,	1010,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	11,	1100,	1011,	1010,	1010,	110
2017-01-05 14:06:16 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:16 AI_Player.update()	Search took4ms
2017-01-05 14:06:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()		110,	1110,	111,	1100,	111,	101,	11
2017-01-05 14:06:16 AI_Player.update()		1100,	1101,	1100,	11,	1100,	11,	1010
2017-01-05 14:06:16 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	11,	1010,	1010,	1010,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1100,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	11,	1100,	110,	1010,	1010,	110
2017-01-05 14:06:16 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:16 AI_Player.update()	Search took296ms
2017-01-05 14:06:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:06:16 AI_Player.update()		1100,	1110,	1100,	11,	1100,	11,	1010
2017-01-05 14:06:16 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	1010,	1010,	1010,	1010,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1100,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	110,	1100,	110,	1010,	1010,	110
2017-01-05 14:06:16 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:16 AI_Player.update()	Search took3ms
2017-01-05 14:06:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()		110,	1110,	111,	1100,	111,	101,	11
2017-01-05 14:06:16 AI_Player.update()		1100,	1101,	1100,	11,	1100,	11,	1010
2017-01-05 14:06:16 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	11,	1010,	1010,	1010,	1001,	1011
2017-01-05 14:06:16 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1100,	1011
2017-01-05 14:06:16 AI_Player.update()		1010,	11,	1100,	110,	1010,	1010,	110
2017-01-05 14:06:16 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:06:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:16 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:16 AI_Player.update()	update
2017-01-05 14:06:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:17 AI_Player.update()	Search took163ms
2017-01-05 14:06:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()		110,	1110,	111,	1100,	111,	101,	11
2017-01-05 14:06:17 AI_Player.update()		1100,	1101,	1100,	11,	1100,	11,	1010
2017-01-05 14:06:17 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:17 AI_Player.update()		1010,	11,	1010,	1010,	1010,	1001,	1011
2017-01-05 14:06:17 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1100,	1011
2017-01-05 14:06:17 AI_Player.update()		11,	1100,	110,	1010,	1010,	110,	1010
2017-01-05 14:06:17 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:17 AI_Player.update()	Search took4ms
2017-01-05 14:06:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()		110,	1101,	111,	1100,	111,	101,	11
2017-01-05 14:06:17 AI_Player.update()		1100,	1010,	1100,	11,	1100,	11,	1010
2017-01-05 14:06:17 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:17 AI_Player.update()		1010,	110,	1010,	1010,	1010,	1001,	1011
2017-01-05 14:06:17 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1100,	1011
2017-01-05 14:06:17 AI_Player.update()		11,	101,	110,	1010,	1010,	110,	1010
2017-01-05 14:06:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:17 AI_Player.update()	Search took316ms
2017-01-05 14:06:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()		110,	1101,	111,	1100,	111,	101,	11
2017-01-05 14:06:17 AI_Player.update()		1010,	1100,	1010,	1100,	11,	1100,	11
2017-01-05 14:06:17 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:17 AI_Player.update()		1010,	110,	1010,	1010,	1010,	1001,	1011
2017-01-05 14:06:17 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1100,	1011
2017-01-05 14:06:17 AI_Player.update()		11,	101,	110,	1010,	1010,	110,	1010
2017-01-05 14:06:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:17 AI_Player.update()	Search took2ms
2017-01-05 14:06:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-05 14:06:17 AI_Player.update()		1010,	11,	1010,	1100,	11,	1100,	11
2017-01-05 14:06:17 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:17 AI_Player.update()		1010,	1100,	1010,	1010,	1010,	1001,	1011
2017-01-05 14:06:17 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1100,	1011
2017-01-05 14:06:17 AI_Player.update()		11,	1110,	110,	1010,	1010,	110,	1010
2017-01-05 14:06:17 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1001,	1001
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:17 AI_Player.update()	Search took561ms
2017-01-05 14:06:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()		110,	1100,	111,	1100,	111,	1100,	11
2017-01-05 14:06:17 AI_Player.update()		1010,	11,	1010,	1100,	11,	1001,	11
2017-01-05 14:06:17 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:17 AI_Player.update()		1010,	1100,	1010,	1010,	1010,	1100,	1011
2017-01-05 14:06:17 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-05 14:06:17 AI_Player.update()		11,	1110,	110,	1010,	1010,	1001,	1010
2017-01-05 14:06:17 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	101,	1001
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:17 AI_Player.update()	Search took3ms
2017-01-05 14:06:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()		110,	1101,	111,	1100,	111,	1100,	11
2017-01-05 14:06:17 AI_Player.update()		1010,	1100,	1010,	1100,	11,	1001,	11
2017-01-05 14:06:17 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:17 AI_Player.update()		1010,	110,	1010,	1010,	1010,	1100,	1011
2017-01-05 14:06:17 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	110,	1011
2017-01-05 14:06:17 AI_Player.update()		11,	101,	110,	1010,	1010,	1001,	1010
2017-01-05 14:06:17 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	101,	1001
2017-01-05 14:06:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:17 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:17 AI_Player.update()	update
2017-01-05 14:06:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:18 AI_Player.update()	Search took537ms
2017-01-05 14:06:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()		110,	1100,	111,	1100,	111,	1100,	11
2017-01-05 14:06:18 AI_Player.update()		1010,	11,	1010,	1100,	11,	1001,	11
2017-01-05 14:06:18 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:18 AI_Player.update()		1010,	1100,	1010,	1010,	1010,	1100,	1011
2017-01-05 14:06:18 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-05 14:06:18 AI_Player.update()		11,	1110,	110,	1010,	1010,	1001,	1010
2017-01-05 14:06:18 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	101,	1001
2017-01-05 14:06:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()	update
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:18 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:18 AI_Player.update()	Player a has won!
2017-01-05 14:06:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:18 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:18 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()	update
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:18 AI_Player.update()	Search took40ms
2017-01-05 14:06:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 14:06:18 AI_Player.update()		1010,	1110,	1101,	110,	101,	1010,	101
2017-01-05 14:06:18 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:06:18 AI_Player.update()		1001,	1011,	101,	11,	110,	1010,	101
2017-01-05 14:06:18 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1110,	1011
2017-01-05 14:06:18 AI_Player.update()		1001,	1010,	1100,	101,	1100,	1100,	101
2017-01-05 14:06:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:06:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()	update
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()	update
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:18 AI_Player.update()	Search took2ms
2017-01-05 14:06:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 14:06:18 AI_Player.update()		101,	1010,	1110,	1101,	110,	101,	1010
2017-01-05 14:06:18 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:06:18 AI_Player.update()		1001,	1011,	101,	11,	110,	1010,	101
2017-01-05 14:06:18 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1110,	1011
2017-01-05 14:06:18 AI_Player.update()		1001,	1010,	1100,	101,	1100,	1100,	101
2017-01-05 14:06:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:06:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()	update
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()	update
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:18 AI_Player.update()	Search took432ms
2017-01-05 14:06:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 14:06:18 AI_Player.update()		101,	1010,	1110,	1101,	110,	101,	1010
2017-01-05 14:06:18 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:06:18 AI_Player.update()		101,	1001,	1011,	101,	11,	110,	1010
2017-01-05 14:06:18 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1110,	1011
2017-01-05 14:06:18 AI_Player.update()		1001,	1010,	1100,	101,	1100,	1100,	101
2017-01-05 14:06:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:06:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()	update
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()	update
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:18 AI_Player.update()	Search took3ms
2017-01-05 14:06:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 14:06:18 AI_Player.update()		1010,	1110,	1101,	110,	101,	1010,	101
2017-01-05 14:06:18 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:06:18 AI_Player.update()		101,	1001,	1011,	101,	11,	110,	1010
2017-01-05 14:06:18 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1110,	1011
2017-01-05 14:06:18 AI_Player.update()		1001,	1010,	1100,	101,	1100,	1100,	101
2017-01-05 14:06:18 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:06:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:18 AI_Player.update()	update
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()	update
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:19 AI_Player.update()	Search took140ms
2017-01-05 14:06:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 14:06:19 AI_Player.update()		101,	1010,	1110,	1101,	110,	101,	1010
2017-01-05 14:06:19 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:06:19 AI_Player.update()		101,	1001,	1011,	101,	11,	110,	1010
2017-01-05 14:06:19 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1110,	1011
2017-01-05 14:06:19 AI_Player.update()		1001,	1010,	1100,	101,	1100,	1100,	101
2017-01-05 14:06:19 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:06:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()	update
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()	update
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:19 AI_Player.update()	Search took1ms
2017-01-05 14:06:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 14:06:19 AI_Player.update()		1010,	101,	1010,	1110,	1101,	110,	101
2017-01-05 14:06:19 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:06:19 AI_Player.update()		101,	1001,	1011,	101,	11,	110,	1010
2017-01-05 14:06:19 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1110,	1011
2017-01-05 14:06:19 AI_Player.update()		1001,	1010,	1100,	101,	1100,	1100,	101
2017-01-05 14:06:19 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:06:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()	update
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()	update
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:19 AI_Player.update()	Search took173ms
2017-01-05 14:06:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-05 14:06:19 AI_Player.update()		101,	1010,	1110,	1101,	110,	101,	1010
2017-01-05 14:06:19 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:06:19 AI_Player.update()		101,	1001,	1011,	101,	11,	110,	1010
2017-01-05 14:06:19 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1110,	1011
2017-01-05 14:06:19 AI_Player.update()		1001,	1010,	1100,	101,	1100,	1100,	101
2017-01-05 14:06:19 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:06:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()	update
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()	update
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:19 AI_Player.update()	Search took4ms
2017-01-05 14:06:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-05 14:06:19 AI_Player.update()		101,	1010,	1110,	110,	110,	101,	1010
2017-01-05 14:06:19 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 14:06:19 AI_Player.update()		101,	1001,	1011,	110,	11,	110,	1010
2017-01-05 14:06:19 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-05 14:06:19 AI_Player.update()		1001,	1010,	1100,	110,	1100,	1100,	101
2017-01-05 14:06:19 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:06:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()	update
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:19 AI_Player.update()	update
2017-01-05 14:06:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:20 AI_Player.update()	Search took876ms
2017-01-05 14:06:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-05 14:06:20 AI_Player.update()		101,	1010,	1110,	110,	110,	101,	1010
2017-01-05 14:06:20 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 14:06:20 AI_Player.update()		1010,	101,	1001,	1011,	110,	11,	110
2017-01-05 14:06:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-05 14:06:20 AI_Player.update()		1001,	1010,	1100,	110,	1100,	1100,	101
2017-01-05 14:06:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:06:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()	update
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()	update
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:20 AI_Player.update()	Search took4ms
2017-01-05 14:06:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-05 14:06:20 AI_Player.update()		1010,	101,	1010,	1110,	110,	110,	101
2017-01-05 14:06:20 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 14:06:20 AI_Player.update()		1010,	101,	1001,	1011,	110,	11,	110
2017-01-05 14:06:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-05 14:06:20 AI_Player.update()		1001,	1010,	1100,	110,	1100,	1100,	101
2017-01-05 14:06:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:06:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()	update
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()	update
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:20 AI_Player.update()	Search took78ms
2017-01-05 14:06:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-05 14:06:20 AI_Player.update()		101,	1010,	1110,	110,	110,	101,	1010
2017-01-05 14:06:20 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 14:06:20 AI_Player.update()		1010,	101,	1001,	1011,	110,	11,	110
2017-01-05 14:06:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-05 14:06:20 AI_Player.update()		1001,	1010,	1100,	110,	1100,	1100,	101
2017-01-05 14:06:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-05 14:06:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()	update
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:20 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:20 AI_Player.update()	Player a has won!
2017-01-05 14:06:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:20 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:20 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()	update
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:20 AI_Player.update()	Search took20ms
2017-01-05 14:06:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 14:06:20 AI_Player.update()		1010,	1110,	101,	1010,	101,	1001,	11
2017-01-05 14:06:20 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 14:06:20 AI_Player.update()		1001,	1001,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 14:06:20 AI_Player.update()		101,	1100,	1010,	1010,	1100,	111,	1010
2017-01-05 14:06:20 AI_Player.update()		1100,	11,	1101,	101,	1101,	1101,	1001
2017-01-05 14:06:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()	update
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()	update
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:20 AI_Player.update()	Search took1ms
2017-01-05 14:06:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 14:06:20 AI_Player.update()		1110,	101,	1010,	101,	1001,	11,	1010
2017-01-05 14:06:20 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 14:06:20 AI_Player.update()		1001,	1001,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-05 14:06:20 AI_Player.update()		101,	1100,	1010,	1010,	1100,	111,	1010
2017-01-05 14:06:20 AI_Player.update()		1100,	11,	1101,	101,	1101,	1101,	1001
2017-01-05 14:06:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()	update
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:20 AI_Player.update()	update
2017-01-05 14:06:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:21 AI_Player.update()	Search took1026ms
2017-01-05 14:06:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:21 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 14:06:21 AI_Player.update()		1110,	101,	1010,	1001,	1001,	11,	1010
2017-01-05 14:06:21 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:06:21 AI_Player.update()		1001,	1001,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:21 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:21 AI_Player.update()		101,	1100,	1010,	101,	1100,	111,	1010
2017-01-05 14:06:21 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:21 AI_Player.update()	update
2017-01-05 14:06:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:21 AI_Player.update()	update
2017-01-05 14:06:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:21 AI_Player.update()	Search took6ms
2017-01-05 14:06:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:21 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:06:21 AI_Player.update()		1110,	1100,	1010,	1001,	1001,	11,	1010
2017-01-05 14:06:21 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:06:21 AI_Player.update()		1001,	1001,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:21 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:21 AI_Player.update()		101,	11,	1010,	101,	1100,	111,	1010
2017-01-05 14:06:21 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:21 AI_Player.update()	update
2017-01-05 14:06:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:21 AI_Player.update()	update
2017-01-05 14:06:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:22 AI_Player.update()	Search took1590ms
2017-01-05 14:06:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:22 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-05 14:06:22 AI_Player.update()		1110,	1001,	1010,	1001,	1001,	11,	1010
2017-01-05 14:06:22 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:06:22 AI_Player.update()		1001,	1100,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:22 AI_Player.update()		1110,	11,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:22 AI_Player.update()		101,	1001,	1010,	101,	1100,	111,	1010
2017-01-05 14:06:22 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:22 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:22 AI_Player.update()	update
2017-01-05 14:06:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:22 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:23 AI_Player.update()	update
2017-01-05 14:06:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:23 AI_Player.update()	Search took3ms
2017-01-05 14:06:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:23 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:06:23 AI_Player.update()		1110,	1100,	1010,	1001,	1001,	11,	1010
2017-01-05 14:06:23 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:06:23 AI_Player.update()		1001,	1001,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:23 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:23 AI_Player.update()		101,	11,	1010,	101,	1100,	111,	1010
2017-01-05 14:06:23 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:23 AI_Player.update()	update
2017-01-05 14:06:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:23 AI_Player.update()	update
2017-01-05 14:06:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:24 AI_Player.update()	Search took1151ms
2017-01-05 14:06:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-05 14:06:24 AI_Player.update()		1110,	1001,	1010,	1001,	1001,	11,	1010
2017-01-05 14:06:24 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		1001,	1100,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:24 AI_Player.update()		1110,	11,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		101,	1001,	1010,	101,	1100,	111,	1010
2017-01-05 14:06:24 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:24 AI_Player.update()	Search took5ms
2017-01-05 14:06:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:06:24 AI_Player.update()		1110,	1100,	1010,	1001,	1001,	11,	1010
2017-01-05 14:06:24 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		1001,	1001,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:24 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		101,	11,	1010,	101,	1100,	111,	1010
2017-01-05 14:06:24 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:24 AI_Player.update()	Search took190ms
2017-01-05 14:06:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-05 14:06:24 AI_Player.update()		1110,	1001,	1010,	1001,	1001,	11,	1010
2017-01-05 14:06:24 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		1001,	1100,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:24 AI_Player.update()		1110,	11,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		101,	1001,	1010,	101,	1100,	111,	1010
2017-01-05 14:06:24 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:24 AI_Player.update()	Search took3ms
2017-01-05 14:06:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 14:06:24 AI_Player.update()		1110,	1001,	1010,	1001,	1001,	11,	1010
2017-01-05 14:06:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		1001,	11,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:24 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		101,	101,	1010,	101,	1100,	111,	1010
2017-01-05 14:06:24 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:24 AI_Player.update()	Search took288ms
2017-01-05 14:06:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 14:06:24 AI_Player.update()		1110,	1001,	1010,	1001,	1001,	11,	1010
2017-01-05 14:06:24 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		1001,	11,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:24 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		101,	1010,	101,	1100,	111,	1010,	101
2017-01-05 14:06:24 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:24 AI_Player.update()	Search took1ms
2017-01-05 14:06:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 14:06:24 AI_Player.update()		1110,	1100,	1010,	1001,	1001,	11,	1010
2017-01-05 14:06:24 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		1001,	1001,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:24 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		101,	1100,	101,	1100,	111,	1010,	101
2017-01-05 14:06:24 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:24 AI_Player.update()	Search took29ms
2017-01-05 14:06:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 14:06:24 AI_Player.update()		1110,	1100,	1010,	101,	1001,	11,	1010
2017-01-05 14:06:24 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		1001,	1001,	1010,	1110,	1001,	110,	1011
2017-01-05 14:06:24 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		101,	1100,	101,	1010,	111,	1010,	101
2017-01-05 14:06:24 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:24 AI_Player.update()	Search took3ms
2017-01-05 14:06:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 14:06:24 AI_Player.update()		1110,	1100,	1010,	101,	1001,	11,	1010
2017-01-05 14:06:24 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		1011,	1001,	1001,	1010,	1110,	1001,	110
2017-01-05 14:06:24 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 14:06:24 AI_Player.update()		101,	1100,	101,	1010,	111,	1010,	101
2017-01-05 14:06:24 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-05 14:06:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:24 AI_Player.update()	update
2017-01-05 14:06:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:25 AI_Player.update()	Search took292ms
2017-01-05 14:06:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 14:06:25 AI_Player.update()		1110,	1100,	1010,	101,	1001,	11,	1010
2017-01-05 14:06:25 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 14:06:25 AI_Player.update()		1011,	1001,	1001,	1010,	1110,	1001,	110
2017-01-05 14:06:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 14:06:25 AI_Player.update()		1100,	101,	1010,	111,	1010,	101,	101
2017-01-05 14:06:25 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1101,	1001
2017-01-05 14:06:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()	update
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()	update
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:25 AI_Player.update()	Search took2ms
2017-01-05 14:06:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()		110,	1001,	111,	1001,	111,	1100,	11
2017-01-05 14:06:25 AI_Player.update()		1110,	1001,	1010,	101,	1001,	11,	1010
2017-01-05 14:06:25 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 14:06:25 AI_Player.update()		1011,	11,	1001,	1010,	1110,	1001,	110
2017-01-05 14:06:25 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	101,	1011
2017-01-05 14:06:25 AI_Player.update()		1100,	1010,	1010,	111,	1010,	101,	101
2017-01-05 14:06:25 AI_Player.update()		1100,	101,	1101,	101,	1101,	1101,	1001
2017-01-05 14:06:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()	update
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()	update
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:25 AI_Player.update()	Search took712ms
2017-01-05 14:06:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-05 14:06:25 AI_Player.update()		1110,	1001,	1010,	1110,	1001,	11,	1010
2017-01-05 14:06:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:25 AI_Player.update()		1011,	11,	1001,	1100,	1110,	1001,	110
2017-01-05 14:06:25 AI_Player.update()		1110,	1001,	1101,	111,	1011,	101,	1011
2017-01-05 14:06:25 AI_Player.update()		1100,	1010,	1010,	101,	1010,	101,	101
2017-01-05 14:06:25 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1101,	1001
2017-01-05 14:06:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()	update
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()	update
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:25 AI_Player.update()	Search took2ms
2017-01-05 14:06:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:06:25 AI_Player.update()		1110,	1001,	1010,	1110,	1001,	11,	1010
2017-01-05 14:06:25 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:25 AI_Player.update()		1011,	1100,	1001,	1100,	1110,	1001,	110
2017-01-05 14:06:25 AI_Player.update()		1110,	11,	1101,	111,	1011,	101,	1011
2017-01-05 14:06:25 AI_Player.update()		1100,	1001,	1010,	101,	1010,	101,	101
2017-01-05 14:06:25 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1101,	1001
2017-01-05 14:06:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()	update
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:25 AI_Player.update()	update
2017-01-05 14:06:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:26 AI_Player.update()	Search took401ms
2017-01-05 14:06:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:06:26 AI_Player.update()		1001,	1010,	1110,	1001,	11,	1010,	1110
2017-01-05 14:06:26 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:26 AI_Player.update()		1011,	1100,	1001,	1100,	1110,	1001,	110
2017-01-05 14:06:26 AI_Player.update()		1110,	11,	1101,	111,	1011,	101,	1011
2017-01-05 14:06:26 AI_Player.update()		1100,	1001,	1010,	101,	1010,	101,	101
2017-01-05 14:06:26 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1101,	1001
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:26 AI_Player.update()	Search took2ms
2017-01-05 14:06:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-05 14:06:26 AI_Player.update()		1001,	1010,	1110,	1001,	11,	1100,	1110
2017-01-05 14:06:26 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:26 AI_Player.update()		1011,	1100,	1001,	1100,	1110,	101,	110
2017-01-05 14:06:26 AI_Player.update()		1110,	11,	1101,	111,	1011,	1001,	1011
2017-01-05 14:06:26 AI_Player.update()		1100,	1001,	1010,	101,	1010,	101,	101
2017-01-05 14:06:26 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:26 AI_Player.update()	Search took417ms
2017-01-05 14:06:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:06:26 AI_Player.update()		1001,	1010,	1110,	1001,	11,	1101,	1110
2017-01-05 14:06:26 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-05 14:06:26 AI_Player.update()		1011,	1100,	1001,	1100,	1110,	1010,	110
2017-01-05 14:06:26 AI_Player.update()		1110,	11,	1101,	111,	1011,	101,	1011
2017-01-05 14:06:26 AI_Player.update()		1100,	1001,	1010,	101,	1010,	1001,	101
2017-01-05 14:06:26 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:26 AI_Player.update()	Player a has won!
2017-01-05 14:06:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:26 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:26 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:26 AI_Player.update()	Search took19ms
2017-01-05 14:06:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()		110,	1011,	111,	1100,	111,	110,	11
2017-01-05 14:06:26 AI_Player.update()		110,	1100,	11,	1010,	1010,	11,	1100
2017-01-05 14:06:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:26 AI_Player.update()		1010,	1010,	101,	1010,	101,	1100,	1100
2017-01-05 14:06:26 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-05 14:06:26 AI_Player.update()		101,	1001,	1010,	110,	1110,	11,	1010
2017-01-05 14:06:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:26 AI_Player.update()	Search took1ms
2017-01-05 14:06:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()		110,	1011,	111,	1100,	111,	110,	11
2017-01-05 14:06:26 AI_Player.update()		1100,	110,	1100,	11,	1010,	1010,	11
2017-01-05 14:06:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:26 AI_Player.update()		1010,	1010,	101,	1010,	101,	1100,	1100
2017-01-05 14:06:26 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-05 14:06:26 AI_Player.update()		101,	1001,	1010,	110,	1110,	11,	1010
2017-01-05 14:06:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:26 AI_Player.update()	Search took121ms
2017-01-05 14:06:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()		110,	1011,	111,	1100,	111,	110,	11
2017-01-05 14:06:26 AI_Player.update()		1100,	110,	1100,	11,	1010,	1010,	11
2017-01-05 14:06:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:26 AI_Player.update()		1100,	1010,	1010,	101,	1010,	101,	1100
2017-01-05 14:06:26 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-05 14:06:26 AI_Player.update()		101,	1001,	1010,	110,	1110,	11,	1010
2017-01-05 14:06:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:26 AI_Player.update()	Search took1ms
2017-01-05 14:06:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()		110,	1011,	111,	1100,	111,	110,	11
2017-01-05 14:06:26 AI_Player.update()		1100,	110,	1100,	11,	1010,	1010,	11
2017-01-05 14:06:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:26 AI_Player.update()		1010,	1010,	101,	1010,	101,	1100,	1100
2017-01-05 14:06:26 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-05 14:06:26 AI_Player.update()		101,	1001,	1010,	110,	1110,	11,	1010
2017-01-05 14:06:26 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:26 AI_Player.update()	update
2017-01-05 14:06:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took326ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1011,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	110,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1010,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		101,	1001,	1010,	1100,	1110,	11,	1010
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took1ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	1100,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	110,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		101,	1010,	1010,	1100,	1110,	11,	1010
2017-01-05 14:06:27 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took74ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	110,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1001,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		101,	1011,	1010,	1100,	1110,	11,	1010
2017-01-05 14:06:27 AI_Player.update()		1100,	110,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took3ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	110,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1010,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		101,	110,	1010,	1100,	1110,	11,	1010
2017-01-05 14:06:27 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took107ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	110,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1010,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	1100,	1110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took3ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	1001,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1011,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	1100,	1110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took39ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	110,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1010,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	1100,	1110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took1ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	1001,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1011,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	1100,	1110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took113ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	110,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1010,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	1100,	1110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took2ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	110,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1001,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1011,	1100,	1110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took35ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	1100,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	110,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	1100,	1110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took2ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1100,	1100,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	110,	1110,	11,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1001,	101,	101,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1011,	1100,	1110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took43ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	111,	1100,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1100,	11,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1001,	101,	1010,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1011,	1100,	110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took2ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	110,	1100,	11,	1010,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1010,	101,	1010,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	1100,	110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took54ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	11,	1010,	1010,	11,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1010,	101,	1010,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	1100,	110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took2ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	111,	1100,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		110,	1001,	11,	1010,	1010,	11,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1011,	101,	1010,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	1100,	110,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took51ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		110,	1001,	11,	101,	1010,	11,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1011,	101,	1110,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	1100,	101,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took3ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1001,	111,	1010,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	11,	101,	1010,	11,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1010,	101,	1110,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	1100,	101,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took15ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	1001,	111,	1010,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	110,	1010,	11,	101,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1010,	101,	1110,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1010,	1100,	101,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took4ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	1011,	1010,	11,	101,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1010,	1100,	101,	1110,	101,	1100,	1100
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	1100,	101,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took168ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	1011,	1010,	11,	101,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1100,	101,	1110,	101,	1100,	1100,	1010
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	1100,	101,	11,	1010,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:27 AI_Player.update()	Search took2ms
2017-01-05 14:06:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:27 AI_Player.update()		1100,	1011,	1010,	11,	101,	1100,	11
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-05 14:06:27 AI_Player.update()		1100,	101,	1110,	101,	1100,	101,	1010
2017-01-05 14:06:27 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:27 AI_Player.update()		110,	1100,	1100,	101,	11,	1100,	101
2017-01-05 14:06:27 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:27 AI_Player.update()	update
2017-01-05 14:06:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:28 AI_Player.update()	Search took185ms
2017-01-05 14:06:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-05 14:06:28 AI_Player.update()		1100,	1011,	1010,	1010,	101,	1100,	11
2017-01-05 14:06:28 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:28 AI_Player.update()		1100,	101,	1110,	110,	1100,	101,	1010
2017-01-05 14:06:28 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:28 AI_Player.update()		110,	1100,	1100,	1100,	11,	1100,	101
2017-01-05 14:06:28 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	110,	1001
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:28 AI_Player.update()	Player a has won!
2017-01-05 14:06:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:28 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:28 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:28 AI_Player.update()	Search took127ms
2017-01-05 14:06:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()		110,	101,	111,	1100,	111,	1100,	11
2017-01-05 14:06:28 AI_Player.update()		1010,	11,	1010,	111,	111,	1010,	1100
2017-01-05 14:06:28 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:28 AI_Player.update()		110,	101,	1101,	1011,	1100,	1001,	11
2017-01-05 14:06:28 AI_Player.update()		1110,	101,	1101,	1100,	1011,	111,	1011
2017-01-05 14:06:28 AI_Player.update()		1001,	11,	101,	110,	1011,	110,	110
2017-01-05 14:06:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:28 AI_Player.update()	Search took1ms
2017-01-05 14:06:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()		110,	101,	111,	1100,	111,	1100,	11
2017-01-05 14:06:28 AI_Player.update()		11,	1010,	111,	111,	1010,	1100,	1010
2017-01-05 14:06:28 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-05 14:06:28 AI_Player.update()		110,	101,	1101,	1011,	1100,	1001,	11
2017-01-05 14:06:28 AI_Player.update()		1110,	101,	1101,	1100,	1011,	111,	1011
2017-01-05 14:06:28 AI_Player.update()		1001,	11,	101,	110,	1011,	110,	110
2017-01-05 14:06:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:28 AI_Player.update()	Search took592ms
2017-01-05 14:06:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-05 14:06:28 AI_Player.update()		11,	1010,	111,	1100,	1010,	1100,	1010
2017-01-05 14:06:28 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-05 14:06:28 AI_Player.update()		110,	101,	1101,	1100,	1100,	1001,	11
2017-01-05 14:06:28 AI_Player.update()		1110,	101,	1101,	110,	1011,	111,	1011
2017-01-05 14:06:28 AI_Player.update()		1001,	11,	101,	1100,	1011,	110,	110
2017-01-05 14:06:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:28 AI_Player.update()	Search took1ms
2017-01-05 14:06:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-05 14:06:28 AI_Player.update()		11,	1010,	111,	1100,	1010,	1100,	1010
2017-01-05 14:06:28 AI_Player.update()		1110,	101,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:28 AI_Player.update()		110,	101,	1101,	1100,	1100,	1001,	11
2017-01-05 14:06:28 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 14:06:28 AI_Player.update()		1001,	11,	101,	1100,	1011,	111,	110
2017-01-05 14:06:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:28 AI_Player.update()	Search took134ms
2017-01-05 14:06:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 14:06:28 AI_Player.update()		11,	1010,	111,	111,	1010,	1100,	1010
2017-01-05 14:06:28 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:28 AI_Player.update()		110,	101,	1101,	1011,	1100,	1001,	11
2017-01-05 14:06:28 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:06:28 AI_Player.update()		1001,	11,	101,	110,	1011,	111,	110
2017-01-05 14:06:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:28 AI_Player.update()	Search took1ms
2017-01-05 14:06:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-05 14:06:28 AI_Player.update()		11,	101,	111,	111,	1010,	1100,	1010
2017-01-05 14:06:28 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:28 AI_Player.update()		110,	101,	1101,	1011,	1100,	1001,	11
2017-01-05 14:06:28 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:06:28 AI_Player.update()		1001,	1100,	101,	110,	1011,	111,	110
2017-01-05 14:06:28 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:28 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:28 AI_Player.update()	update
2017-01-05 14:06:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:29 AI_Player.update()	Search took34ms
2017-01-05 14:06:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()		110,	1010,	111,	111,	111,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		11,	101,	111,	1100,	1010,	1100,	1010
2017-01-05 14:06:29 AI_Player.update()		1110,	101,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:29 AI_Player.update()		110,	101,	1101,	1100,	1100,	1001,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	11,	1101,	110,	1011,	1001,	1011
2017-01-05 14:06:29 AI_Player.update()		1001,	1100,	101,	1100,	1011,	111,	110
2017-01-05 14:06:29 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:29 AI_Player.update()	Search took1ms
2017-01-05 14:06:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		11,	101,	111,	1100,	1010,	1100,	1010
2017-01-05 14:06:29 AI_Player.update()		1110,	101,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:29 AI_Player.update()		110,	11,	1101,	1100,	1100,	1001,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1001,	1011
2017-01-05 14:06:29 AI_Player.update()		1001,	101,	101,	1100,	1011,	111,	110
2017-01-05 14:06:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:29 AI_Player.update()	Search took138ms
2017-01-05 14:06:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		101,	111,	1100,	1010,	1100,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	101,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:29 AI_Player.update()		110,	11,	1101,	1100,	1100,	1001,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1001,	1011
2017-01-05 14:06:29 AI_Player.update()		1001,	101,	101,	1100,	1011,	111,	110
2017-01-05 14:06:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:29 AI_Player.update()	Search took1ms
2017-01-05 14:06:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()		110,	111,	111,	111,	111,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		101,	101,	1100,	1010,	1100,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	11,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:29 AI_Player.update()		110,	1100,	1101,	1100,	1100,	1001,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 14:06:29 AI_Player.update()		1001,	1010,	101,	1100,	1011,	111,	110
2017-01-05 14:06:29 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:29 AI_Player.update()	Search took324ms
2017-01-05 14:06:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		101,	111,	1100,	1010,	1100,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	101,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:29 AI_Player.update()		110,	11,	1101,	1100,	1100,	1001,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1001,	1011
2017-01-05 14:06:29 AI_Player.update()		1001,	101,	101,	1100,	1011,	111,	110
2017-01-05 14:06:29 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:29 AI_Player.update()	Search took1ms
2017-01-05 14:06:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()		110,	111,	111,	111,	111,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		101,	101,	1100,	1010,	1100,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	11,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:29 AI_Player.update()		110,	1100,	1101,	1100,	1100,	1001,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-05 14:06:29 AI_Player.update()		1001,	1010,	101,	1100,	1011,	111,	110
2017-01-05 14:06:29 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:29 AI_Player.update()	Search took329ms
2017-01-05 14:06:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		101,	101,	1100,	111,	1100,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-05 14:06:29 AI_Player.update()		110,	1100,	1101,	1011,	1100,	1001,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:06:29 AI_Player.update()		1001,	1010,	101,	110,	1011,	111,	110
2017-01-05 14:06:29 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:29 AI_Player.update()	Search took2ms
2017-01-05 14:06:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		101,	11,	1100,	111,	1100,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 14:06:29 AI_Player.update()		110,	101,	1101,	1011,	1100,	1001,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:06:29 AI_Player.update()		1001,	101,	101,	110,	1011,	111,	110
2017-01-05 14:06:29 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:29 AI_Player.update()	Search took61ms
2017-01-05 14:06:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		101,	101,	1100,	111,	1100,	1010,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-05 14:06:29 AI_Player.update()		110,	1100,	1101,	1011,	1100,	1001,	11
2017-01-05 14:06:29 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:06:29 AI_Player.update()		1001,	1010,	101,	110,	1011,	111,	110
2017-01-05 14:06:29 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-05 14:06:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:29 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:29 AI_Player.update()	Player a has won!
2017-01-05 14:06:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:29 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:29 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:29 AI_Player.update()	update
2017-01-05 14:06:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:30 AI_Player.update()	Search took86ms
2017-01-05 14:06:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()		110,	110,	111,	1101,	111,	1010,	11
2017-01-05 14:06:30 AI_Player.update()		1010,	1010,	1110,	1001,	1001,	1101,	1001
2017-01-05 14:06:30 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-05 14:06:30 AI_Player.update()		1010,	11,	1110,	1100,	110,	1010,	1100
2017-01-05 14:06:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-05 14:06:30 AI_Player.update()		1011,	110,	101,	1001,	1101,	1011,	1010
2017-01-05 14:06:30 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1110,	1001
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:30 AI_Player.update()	Search took2ms
2017-01-05 14:06:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()		110,	110,	111,	1101,	111,	1101,	11
2017-01-05 14:06:30 AI_Player.update()		1010,	1010,	1110,	1001,	1001,	110,	1001
2017-01-05 14:06:30 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-05 14:06:30 AI_Player.update()		1010,	11,	1110,	1100,	110,	101,	1100
2017-01-05 14:06:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 14:06:30 AI_Player.update()		1011,	110,	101,	1001,	1101,	1110,	1010
2017-01-05 14:06:30 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:30 AI_Player.update()	Search took110ms
2017-01-05 14:06:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()		110,	110,	111,	1101,	111,	1101,	11
2017-01-05 14:06:30 AI_Player.update()		1010,	1010,	1110,	1001,	1001,	110,	1001
2017-01-05 14:06:30 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-05 14:06:30 AI_Player.update()		11,	1110,	1100,	110,	101,	1100,	1010
2017-01-05 14:06:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 14:06:30 AI_Player.update()		1011,	110,	101,	1001,	1101,	1110,	1010
2017-01-05 14:06:30 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:30 AI_Player.update()	Search took2ms
2017-01-05 14:06:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()		110,	110,	111,	1101,	111,	1101,	11
2017-01-05 14:06:30 AI_Player.update()		1010,	1110,	1001,	1001,	110,	1001,	1010
2017-01-05 14:06:30 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-05 14:06:30 AI_Player.update()		11,	1110,	1100,	110,	101,	1100,	1010
2017-01-05 14:06:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 14:06:30 AI_Player.update()		1011,	110,	101,	1001,	1101,	1110,	1010
2017-01-05 14:06:30 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:30 AI_Player.update()	Search took320ms
2017-01-05 14:06:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()		110,	1110,	111,	1101,	111,	1101,	11
2017-01-05 14:06:30 AI_Player.update()		1010,	110,	1001,	1001,	110,	1001,	1010
2017-01-05 14:06:30 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-05 14:06:30 AI_Player.update()		11,	11,	1100,	110,	101,	1100,	1010
2017-01-05 14:06:30 AI_Player.update()		1110,	110,	1101,	11,	1011,	1011,	1011
2017-01-05 14:06:30 AI_Player.update()		1011,	1010,	101,	1001,	1101,	1110,	1010
2017-01-05 14:06:30 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:30 AI_Player.update()	Search took1ms
2017-01-05 14:06:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()		110,	1110,	111,	1101,	111,	1101,	11
2017-01-05 14:06:30 AI_Player.update()		110,	1001,	1001,	110,	1001,	1010,	1010
2017-01-05 14:06:30 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-05 14:06:30 AI_Player.update()		11,	11,	1100,	110,	101,	1100,	1010
2017-01-05 14:06:30 AI_Player.update()		1110,	110,	1101,	11,	1011,	1011,	1011
2017-01-05 14:06:30 AI_Player.update()		1011,	1010,	101,	1001,	1101,	1110,	1010
2017-01-05 14:06:30 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:30 AI_Player.update()	Search took410ms
2017-01-05 14:06:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()		110,	1001,	111,	1101,	111,	1101,	11
2017-01-05 14:06:30 AI_Player.update()		110,	1110,	1001,	110,	1001,	1010,	1010
2017-01-05 14:06:30 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-05 14:06:30 AI_Player.update()		11,	110,	1100,	110,	101,	1100,	1010
2017-01-05 14:06:30 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1011,	1011
2017-01-05 14:06:30 AI_Player.update()		1011,	110,	101,	1001,	1101,	1110,	1010
2017-01-05 14:06:30 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:30 AI_Player.update()	Search took3ms
2017-01-05 14:06:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 14:06:30 AI_Player.update()		110,	1110,	1001,	110,	1001,	1010,	1010
2017-01-05 14:06:30 AI_Player.update()		1110,	11,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:30 AI_Player.update()		11,	110,	1100,	110,	101,	1011,	1010
2017-01-05 14:06:30 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1110,	1011
2017-01-05 14:06:30 AI_Player.update()		1011,	110,	101,	1001,	1101,	1010,	1010
2017-01-05 14:06:30 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:30 AI_Player.update()	update
2017-01-05 14:06:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:31 AI_Player.update()	Search took256ms
2017-01-05 14:06:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 14:06:31 AI_Player.update()		1110,	1001,	110,	1001,	1010,	1010,	110
2017-01-05 14:06:31 AI_Player.update()		1110,	11,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:31 AI_Player.update()		11,	110,	1100,	110,	101,	1011,	1010
2017-01-05 14:06:31 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1110,	1011
2017-01-05 14:06:31 AI_Player.update()		1011,	110,	101,	1001,	1101,	1010,	1010
2017-01-05 14:06:31 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()	update
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()	update
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:31 AI_Player.update()	Search took5ms
2017-01-05 14:06:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 14:06:31 AI_Player.update()		1110,	1001,	110,	1001,	1010,	1010,	110
2017-01-05 14:06:31 AI_Player.update()		1110,	11,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:31 AI_Player.update()		1010,	11,	110,	1100,	110,	101,	1011
2017-01-05 14:06:31 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1110,	1011
2017-01-05 14:06:31 AI_Player.update()		1011,	110,	101,	1001,	1101,	1010,	1010
2017-01-05 14:06:31 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()	update
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()	update
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:31 AI_Player.update()	Search took278ms
2017-01-05 14:06:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 14:06:31 AI_Player.update()		1110,	11,	110,	1001,	1010,	1010,	110
2017-01-05 14:06:31 AI_Player.update()		1110,	11,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:31 AI_Player.update()		1010,	1010,	110,	1100,	110,	101,	1011
2017-01-05 14:06:31 AI_Player.update()		1110,	110,	1101,	11,	1011,	1110,	1011
2017-01-05 14:06:31 AI_Player.update()		1011,	1110,	101,	1001,	1101,	1010,	1010
2017-01-05 14:06:31 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()	update
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()	update
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:31 AI_Player.update()	Search took4ms
2017-01-05 14:06:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 14:06:31 AI_Player.update()		1110,	11,	110,	1001,	1010,	1100,	110
2017-01-05 14:06:31 AI_Player.update()		1110,	11,	1110,	1011,	111,	101,	1011
2017-01-05 14:06:31 AI_Player.update()		1010,	1010,	110,	1100,	110,	1110,	1011
2017-01-05 14:06:31 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-05 14:06:31 AI_Player.update()		1011,	1110,	101,	1001,	1101,	1101,	1010
2017-01-05 14:06:31 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()	update
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:06:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:31 AI_Player.update()	update
2017-01-05 14:06:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:32 AI_Player.update()	Search took647ms
2017-01-05 14:06:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 14:06:32 AI_Player.update()		110,	1110,	11,	110,	1001,	1010,	1100
2017-01-05 14:06:32 AI_Player.update()		1110,	11,	1110,	1011,	111,	101,	1011
2017-01-05 14:06:32 AI_Player.update()		1010,	1010,	110,	1100,	110,	1110,	1011
2017-01-05 14:06:32 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-05 14:06:32 AI_Player.update()		1011,	1110,	101,	1001,	1101,	1101,	1010
2017-01-05 14:06:32 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:06:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()	update
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:06:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()	update
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:32 AI_Player.update()	Search took3ms
2017-01-05 14:06:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-05 14:06:32 AI_Player.update()		110,	1110,	11,	1011,	1001,	1010,	1100
2017-01-05 14:06:32 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 14:06:32 AI_Player.update()		1010,	1010,	110,	11,	110,	1110,	1011
2017-01-05 14:06:32 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:32 AI_Player.update()		1011,	1110,	101,	1011,	1101,	1101,	1010
2017-01-05 14:06:32 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1010,	1001
2017-01-05 14:06:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:06:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()	update
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:06:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()	update
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:32 AI_Player.update()	Search took424ms
2017-01-05 14:06:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()		110,	1001,	111,	1011,	111,	1010,	11
2017-01-05 14:06:32 AI_Player.update()		110,	1110,	11,	1100,	1001,	1010,	1100
2017-01-05 14:06:32 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-05 14:06:32 AI_Player.update()		1010,	1010,	110,	1001,	110,	1110,	1011
2017-01-05 14:06:32 AI_Player.update()		1110,	110,	1101,	1011,	1011,	1010,	1011
2017-01-05 14:06:32 AI_Player.update()		1011,	1110,	101,	1101,	1101,	1101,	1010
2017-01-05 14:06:32 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:06:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()	update
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()	update
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:32 AI_Player.update()	Search took2ms
2017-01-05 14:06:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-05 14:06:32 AI_Player.update()		110,	1110,	11,	1011,	1001,	1010,	1100
2017-01-05 14:06:32 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 14:06:32 AI_Player.update()		1010,	1010,	110,	11,	110,	1110,	1011
2017-01-05 14:06:32 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:32 AI_Player.update()		1011,	1110,	101,	1011,	1101,	1101,	1010
2017-01-05 14:06:32 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1010,	1001
2017-01-05 14:06:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()	update
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:32 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:32 AI_Player.update()	update
2017-01-05 14:06:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:33 AI_Player.update()	Search took883ms
2017-01-05 14:06:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-05 14:06:33 AI_Player.update()		110,	1110,	11,	110,	1001,	1010,	1100
2017-01-05 14:06:33 AI_Player.update()		1110,	11,	1110,	1011,	111,	101,	1011
2017-01-05 14:06:33 AI_Player.update()		1010,	1010,	110,	1100,	110,	1110,	1011
2017-01-05 14:06:33 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-05 14:06:33 AI_Player.update()		1011,	1110,	101,	1001,	1101,	1101,	1010
2017-01-05 14:06:33 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()	update
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()	update
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:33 AI_Player.update()	Search took3ms
2017-01-05 14:06:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()		110,	1110,	111,	1101,	111,	1010,	11
2017-01-05 14:06:33 AI_Player.update()		110,	11,	11,	110,	1001,	1010,	1100
2017-01-05 14:06:33 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-05 14:06:33 AI_Player.update()		1010,	110,	110,	1100,	110,	1110,	1011
2017-01-05 14:06:33 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1010,	1011
2017-01-05 14:06:33 AI_Player.update()		1011,	1001,	101,	1001,	1101,	1101,	1010
2017-01-05 14:06:33 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()	update
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()	update
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:33 AI_Player.update()	Search took319ms
2017-01-05 14:06:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()		110,	1110,	111,	1101,	111,	1010,	11
2017-01-05 14:06:33 AI_Player.update()		110,	11,	11,	110,	1001,	1010,	1100
2017-01-05 14:06:33 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-05 14:06:33 AI_Player.update()		1011,	1010,	110,	110,	1100,	110,	1110
2017-01-05 14:06:33 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1010,	1011
2017-01-05 14:06:33 AI_Player.update()		1011,	1001,	101,	1001,	1101,	1101,	1010
2017-01-05 14:06:33 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()	update
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()	update
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:33 AI_Player.update()	Search took2ms
2017-01-05 14:06:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()		110,	11,	111,	1101,	111,	1010,	11
2017-01-05 14:06:33 AI_Player.update()		110,	1010,	11,	110,	1001,	1010,	1100
2017-01-05 14:06:33 AI_Player.update()		1110,	1010,	1110,	1011,	111,	101,	1011
2017-01-05 14:06:33 AI_Player.update()		1011,	1110,	110,	110,	1100,	110,	1110
2017-01-05 14:06:33 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-05 14:06:33 AI_Player.update()		1011,	1001,	101,	1001,	1101,	1101,	1010
2017-01-05 14:06:33 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1010,	1001
2017-01-05 14:06:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()	update
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:33 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:33 AI_Player.update()	update
2017-01-05 14:06:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took232ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 14:06:34 AI_Player.update()		110,	1010,	11,	1011,	1001,	1010,	1100
2017-01-05 14:06:34 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-05 14:06:34 AI_Player.update()		1011,	1110,	110,	11,	1100,	110,	1110
2017-01-05 14:06:34 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:34 AI_Player.update()		1011,	1001,	101,	1011,	1101,	1101,	1010
2017-01-05 14:06:34 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:34 AI_Player.update()	Player a has won!
2017-01-05 14:06:34 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:34 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:34 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took14ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-05 14:06:34 AI_Player.update()		1101,	1100,	1101,	11,	1100,	1001,	1010
2017-01-05 14:06:34 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-05 14:06:34 AI_Player.update()		110,	110,	1001,	1011,	101,	1001,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 14:06:34 AI_Player.update()		101,	101,	1100,	1100,	110,	1010,	1010
2017-01-05 14:06:34 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took3ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 14:06:34 AI_Player.update()		1101,	1010,	1101,	11,	1100,	1001,	1010
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:06:34 AI_Player.update()		110,	110,	1001,	1011,	101,	1001,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 14:06:34 AI_Player.update()		101,	1010,	1100,	1100,	110,	1010,	1010
2017-01-05 14:06:34 AI_Player.update()		1100,	110,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took12ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	1100,	111,	1001,	111,	1010,	11
2017-01-05 14:06:34 AI_Player.update()		1010,	1101,	11,	1100,	1001,	1010,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:06:34 AI_Player.update()		110,	110,	1001,	1011,	101,	1001,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 14:06:34 AI_Player.update()		101,	1010,	1100,	1100,	110,	1010,	1010
2017-01-05 14:06:34 AI_Player.update()		1100,	110,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took1ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-05 14:06:34 AI_Player.update()		1010,	110,	11,	1100,	1001,	1010,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-05 14:06:34 AI_Player.update()		110,	101,	1001,	1011,	101,	1001,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 14:06:34 AI_Player.update()		101,	110,	1100,	1100,	110,	1010,	1010
2017-01-05 14:06:34 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took45ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-05 14:06:34 AI_Player.update()		1010,	110,	11,	1100,	1001,	110,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1110,	110,	111,	1001,	1011
2017-01-05 14:06:34 AI_Player.update()		110,	101,	1001,	1011,	101,	101,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:34 AI_Player.update()		101,	110,	1100,	1100,	110,	1010,	1010
2017-01-05 14:06:34 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took1ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-05 14:06:34 AI_Player.update()		1010,	110,	11,	1100,	1001,	110,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-05 14:06:34 AI_Player.update()		110,	1010,	1001,	1011,	101,	101,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:34 AI_Player.update()		101,	1100,	1100,	1100,	110,	1010,	1010
2017-01-05 14:06:34 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took121ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-05 14:06:34 AI_Player.update()		1010,	110,	11,	1100,	1001,	110,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	101,	1110,	110,	111,	1001,	1011
2017-01-05 14:06:34 AI_Player.update()		1101,	110,	1010,	1001,	1011,	101,	101
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:34 AI_Player.update()		101,	1100,	1100,	1100,	110,	1010,	1010
2017-01-05 14:06:34 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took2ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-05 14:06:34 AI_Player.update()		1010,	110,	11,	1100,	1001,	1001,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:06:34 AI_Player.update()		1101,	110,	1010,	1001,	1011,	1010,	101
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:34 AI_Player.update()		101,	1100,	1100,	1100,	110,	1010,	1010
2017-01-05 14:06:34 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took292ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-05 14:06:34 AI_Player.update()		1010,	110,	11,	1100,	1001,	1001,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:06:34 AI_Player.update()		1101,	110,	1010,	1001,	1011,	1010,	101
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:34 AI_Player.update()		1100,	1100,	1100,	110,	1010,	1010,	101
2017-01-05 14:06:34 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took4ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-05 14:06:34 AI_Player.update()		1010,	101,	11,	1100,	1001,	1001,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 14:06:34 AI_Player.update()		1101,	110,	1010,	1001,	1011,	1010,	101
2017-01-05 14:06:34 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:34 AI_Player.update()		1100,	1101,	1100,	110,	1010,	1010,	101
2017-01-05 14:06:34 AI_Player.update()		1100,	110,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took83ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-05 14:06:34 AI_Player.update()		1010,	110,	11,	1100,	1001,	1001,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 14:06:34 AI_Player.update()		1101,	1100,	1010,	1001,	1011,	1010,	101
2017-01-05 14:06:34 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:34 AI_Player.update()		1100,	110,	1100,	110,	1010,	1010,	101
2017-01-05 14:06:34 AI_Player.update()		1100,	110,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:34 AI_Player.update()	Search took5ms
2017-01-05 14:06:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-05 14:06:34 AI_Player.update()		1010,	110,	11,	1100,	1001,	1001,	1101
2017-01-05 14:06:34 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-05 14:06:34 AI_Player.update()		1101,	1101,	1010,	1001,	1011,	1010,	101
2017-01-05 14:06:34 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:34 AI_Player.update()		1100,	110,	1100,	110,	1010,	1010,	101
2017-01-05 14:06:34 AI_Player.update()		1100,	101,	1101,	110,	1101,	1010,	1001
2017-01-05 14:06:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:34 AI_Player.update()	update
2017-01-05 14:06:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:35 AI_Player.update()	Search took524ms
2017-01-05 14:06:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()		110,	110,	111,	1100,	111,	110,	11
2017-01-05 14:06:35 AI_Player.update()		1010,	110,	11,	110,	1001,	1001,	1101
2017-01-05 14:06:35 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-05 14:06:35 AI_Player.update()		1101,	1101,	1010,	101,	1011,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:35 AI_Player.update()		1100,	110,	1100,	110,	1010,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:35 AI_Player.update()	Search took3ms
2017-01-05 14:06:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-05 14:06:35 AI_Player.update()		1010,	110,	11,	1001,	1001,	1001,	1101
2017-01-05 14:06:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:06:35 AI_Player.update()		1101,	1101,	1010,	110,	1011,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:35 AI_Player.update()		1100,	110,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:06:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:35 AI_Player.update()	Search took476ms
2017-01-05 14:06:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-05 14:06:35 AI_Player.update()		110,	11,	1001,	1001,	1001,	1101,	1010
2017-01-05 14:06:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:06:35 AI_Player.update()		1101,	1101,	1010,	110,	1011,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:35 AI_Player.update()		1100,	110,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:35 AI_Player.update()	Search took5ms
2017-01-05 14:06:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 14:06:35 AI_Player.update()		110,	1100,	1001,	1001,	1001,	1101,	1010
2017-01-05 14:06:35 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-05 14:06:35 AI_Player.update()		1101,	110,	1010,	110,	1011,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:35 AI_Player.update()		1100,	101,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:35 AI_Player.update()	Search took53ms
2017-01-05 14:06:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-05 14:06:35 AI_Player.update()		110,	11,	1001,	1001,	1001,	1101,	1010
2017-01-05 14:06:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:06:35 AI_Player.update()		1101,	1101,	1010,	110,	1011,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:35 AI_Player.update()		1100,	110,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:35 AI_Player.update()	Search took4ms
2017-01-05 14:06:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 14:06:35 AI_Player.update()		110,	1100,	1001,	1001,	1001,	1101,	1010
2017-01-05 14:06:35 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-05 14:06:35 AI_Player.update()		1101,	110,	1010,	110,	1011,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:35 AI_Player.update()		1100,	101,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:35 AI_Player.update()	Search took55ms
2017-01-05 14:06:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-05 14:06:35 AI_Player.update()		110,	11,	1001,	1001,	1001,	1101,	1010
2017-01-05 14:06:35 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:06:35 AI_Player.update()		1101,	1101,	1010,	110,	1011,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:35 AI_Player.update()		1100,	110,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:35 AI_Player.update()	Search took3ms
2017-01-05 14:06:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 14:06:35 AI_Player.update()		110,	1100,	1001,	1001,	1001,	1101,	1010
2017-01-05 14:06:35 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-05 14:06:35 AI_Player.update()		1101,	110,	1010,	110,	1011,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:35 AI_Player.update()		1100,	101,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:35 AI_Player.update()	Search took122ms
2017-01-05 14:06:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()		110,	11,	111,	110,	111,	110,	11
2017-01-05 14:06:35 AI_Player.update()		110,	1100,	1001,	1001,	1001,	1101,	1010
2017-01-05 14:06:35 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-05 14:06:35 AI_Player.update()		110,	1010,	110,	1011,	1010,	101,	1101
2017-01-05 14:06:35 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:35 AI_Player.update()		1100,	101,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:35 AI_Player.update()	Search took4ms
2017-01-05 14:06:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-05 14:06:35 AI_Player.update()		110,	1101,	1001,	1001,	1001,	1101,	1010
2017-01-05 14:06:35 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 14:06:35 AI_Player.update()		110,	110,	110,	1011,	1010,	101,	1101
2017-01-05 14:06:35 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:35 AI_Player.update()		1100,	110,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:35 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:35 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:35 AI_Player.update()	update
2017-01-05 14:06:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:36 AI_Player.update()	Search took433ms
2017-01-05 14:06:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-05 14:06:36 AI_Player.update()		110,	1101,	1001,	1001,	1001,	110,	1010
2017-01-05 14:06:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-05 14:06:36 AI_Player.update()		110,	110,	110,	1011,	1010,	101,	1101
2017-01-05 14:06:36 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 14:06:36 AI_Player.update()		1100,	110,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:36 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:36 AI_Player.update()	Search took3ms
2017-01-05 14:06:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-05 14:06:36 AI_Player.update()		110,	1010,	1001,	1001,	1001,	110,	1010
2017-01-05 14:06:36 AI_Player.update()		1110,	110,	1110,	101,	111,	1101,	1011
2017-01-05 14:06:36 AI_Player.update()		110,	101,	110,	1011,	1010,	101,	1101
2017-01-05 14:06:36 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 14:06:36 AI_Player.update()		1100,	11,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:36 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:36 AI_Player.update()	Search took28ms
2017-01-05 14:06:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-05 14:06:36 AI_Player.update()		1010,	110,	1010,	1001,	1001,	1001,	110
2017-01-05 14:06:36 AI_Player.update()		1110,	110,	1110,	101,	111,	1101,	1011
2017-01-05 14:06:36 AI_Player.update()		110,	101,	110,	1011,	1010,	101,	1101
2017-01-05 14:06:36 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 14:06:36 AI_Player.update()		1100,	11,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:36 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:36 AI_Player.update()	Search took4ms
2017-01-05 14:06:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 14:06:36 AI_Player.update()		1010,	110,	1010,	1001,	1001,	1001,	110
2017-01-05 14:06:36 AI_Player.update()		1110,	101,	1110,	101,	111,	1101,	1011
2017-01-05 14:06:36 AI_Player.update()		110,	110,	110,	1011,	1010,	101,	1101
2017-01-05 14:06:36 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-05 14:06:36 AI_Player.update()		1100,	1100,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:36 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:36 AI_Player.update()	Search took83ms
2017-01-05 14:06:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-05 14:06:36 AI_Player.update()		1010,	110,	1010,	1001,	1001,	1101,	110
2017-01-05 14:06:36 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:06:36 AI_Player.update()		110,	110,	110,	1011,	1010,	101,	1101
2017-01-05 14:06:36 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:36 AI_Player.update()		1100,	1100,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:36 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:36 AI_Player.update()	Search took5ms
2017-01-05 14:06:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()		110,	110,	111,	110,	111,	1001,	11
2017-01-05 14:06:36 AI_Player.update()		1010,	101,	1010,	1001,	1001,	1101,	110
2017-01-05 14:06:36 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 14:06:36 AI_Player.update()		110,	11,	110,	1011,	1010,	101,	1101
2017-01-05 14:06:36 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:36 AI_Player.update()		1100,	1101,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:36 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:36 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:36 AI_Player.update()	update
2017-01-05 14:06:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:37 AI_Player.update()	Search took459ms
2017-01-05 14:06:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()		110,	101,	111,	110,	111,	1001,	11
2017-01-05 14:06:37 AI_Player.update()		1010,	110,	1010,	1001,	1001,	1101,	110
2017-01-05 14:06:37 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 14:06:37 AI_Player.update()		110,	1100,	110,	1011,	1010,	101,	1101
2017-01-05 14:06:37 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1010,	1011
2017-01-05 14:06:37 AI_Player.update()		1100,	110,	1100,	1001,	1010,	1010,	101
2017-01-05 14:06:37 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:37 AI_Player.update()	Player a has won!
2017-01-05 14:06:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:37 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:37 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:37 AI_Player.update()	Search took38ms
2017-01-05 14:06:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 14:06:37 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	1110
2017-01-05 14:06:37 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:37 AI_Player.update()		1011,	1001,	1101,	1011,	101,	101,	101
2017-01-05 14:06:37 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:37 AI_Player.update()		1100,	11,	11,	11,	101,	101,	1010
2017-01-05 14:06:37 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:37 AI_Player.update()	Search took1ms
2017-01-05 14:06:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 14:06:37 AI_Player.update()		101,	1001,	1010,	1100,	1011,	1010,	1110
2017-01-05 14:06:37 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:37 AI_Player.update()		1001,	1101,	1011,	101,	101,	101,	1011
2017-01-05 14:06:37 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:37 AI_Player.update()		1100,	11,	11,	11,	101,	101,	1010
2017-01-05 14:06:37 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:37 AI_Player.update()	Search took30ms
2017-01-05 14:06:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 14:06:37 AI_Player.update()		1110,	101,	1001,	1010,	1100,	1011,	1010
2017-01-05 14:06:37 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:37 AI_Player.update()		1001,	1101,	1011,	101,	101,	101,	1011
2017-01-05 14:06:37 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:37 AI_Player.update()		1100,	11,	11,	11,	101,	101,	1010
2017-01-05 14:06:37 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:37 AI_Player.update()	Search took3ms
2017-01-05 14:06:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 14:06:37 AI_Player.update()		1110,	101,	1001,	1010,	1100,	1011,	1010
2017-01-05 14:06:37 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:37 AI_Player.update()		1001,	101,	1011,	101,	101,	101,	1011
2017-01-05 14:06:37 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:37 AI_Player.update()		1100,	1010,	11,	11,	101,	101,	1010
2017-01-05 14:06:37 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:37 AI_Player.update()	Search took359ms
2017-01-05 14:06:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:06:37 AI_Player.update()		1110,	101,	1001,	11,	1100,	1011,	1010
2017-01-05 14:06:37 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:37 AI_Player.update()		1001,	101,	1011,	1010,	101,	101,	1011
2017-01-05 14:06:37 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:37 AI_Player.update()		1100,	1010,	11,	101,	101,	101,	1010
2017-01-05 14:06:37 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:37 AI_Player.update()	Search took3ms
2017-01-05 14:06:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:06:37 AI_Player.update()		1110,	1101,	1001,	11,	1100,	1011,	1010
2017-01-05 14:06:37 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:37 AI_Player.update()		1001,	11,	1011,	1010,	101,	101,	1011
2017-01-05 14:06:37 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:37 AI_Player.update()		1100,	1100,	11,	101,	101,	101,	1010
2017-01-05 14:06:37 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:37 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:37 AI_Player.update()	update
2017-01-05 14:06:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:38 AI_Player.update()	Search took683ms
2017-01-05 14:06:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:06:38 AI_Player.update()		1110,	101,	1001,	11,	1100,	1011,	1010
2017-01-05 14:06:38 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:38 AI_Player.update()		1001,	101,	1011,	1010,	101,	101,	1011
2017-01-05 14:06:38 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:38 AI_Player.update()		1100,	1010,	11,	101,	101,	101,	1010
2017-01-05 14:06:38 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()	update
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()	update
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:38 AI_Player.update()	Search took3ms
2017-01-05 14:06:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:06:38 AI_Player.update()		1110,	1101,	1001,	11,	1100,	1011,	1010
2017-01-05 14:06:38 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:38 AI_Player.update()		1001,	11,	1011,	1010,	101,	101,	1011
2017-01-05 14:06:38 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:38 AI_Player.update()		1100,	1100,	11,	101,	101,	101,	1010
2017-01-05 14:06:38 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()	update
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()	update
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:38 AI_Player.update()	Search took590ms
2017-01-05 14:06:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()		110,	1101,	111,	101,	111,	110,	11
2017-01-05 14:06:38 AI_Player.update()		1110,	101,	1001,	11,	1100,	1011,	1010
2017-01-05 14:06:38 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:38 AI_Player.update()		1001,	1010,	1011,	1010,	101,	101,	1011
2017-01-05 14:06:38 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:38 AI_Player.update()		1100,	101,	11,	101,	101,	101,	1010
2017-01-05 14:06:38 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()	update
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()	update
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:38 AI_Player.update()	Search took4ms
2017-01-05 14:06:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:06:38 AI_Player.update()		1110,	11,	1001,	11,	1100,	1011,	1010
2017-01-05 14:06:38 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:38 AI_Player.update()		1001,	1100,	1011,	1010,	101,	101,	1011
2017-01-05 14:06:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:38 AI_Player.update()		1100,	101,	11,	101,	101,	101,	1010
2017-01-05 14:06:38 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()	update
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:38 AI_Player.update()	update
2017-01-05 14:06:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:39 AI_Player.update()	Search took1008ms
2017-01-05 14:06:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:39 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 14:06:39 AI_Player.update()		1110,	11,	1001,	1010,	1100,	1011,	1010
2017-01-05 14:06:39 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:39 AI_Player.update()		1001,	1100,	1011,	101,	101,	101,	1011
2017-01-05 14:06:39 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:39 AI_Player.update()		1100,	101,	11,	11,	101,	101,	1010
2017-01-05 14:06:39 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:39 AI_Player.update()	update
2017-01-05 14:06:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:39 AI_Player.update()	update
2017-01-05 14:06:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:39 AI_Player.update()	Search took5ms
2017-01-05 14:06:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:39 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 14:06:39 AI_Player.update()		1110,	1010,	1001,	1010,	1100,	1011,	1010
2017-01-05 14:06:39 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-05 14:06:39 AI_Player.update()		1001,	101,	1011,	101,	101,	101,	1011
2017-01-05 14:06:39 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 14:06:39 AI_Player.update()		1100,	1101,	11,	11,	101,	101,	1010
2017-01-05 14:06:39 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:39 AI_Player.update()	update
2017-01-05 14:06:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:39 AI_Player.update()	update
2017-01-05 14:06:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:40 AI_Player.update()	Search took577ms
2017-01-05 14:06:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()		110,	11,	111,	11,	111,	1100,	11
2017-01-05 14:06:40 AI_Player.update()		1110,	1010,	1001,	1010,	1100,	110,	1010
2017-01-05 14:06:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-05 14:06:40 AI_Player.update()		1001,	101,	1011,	101,	101,	1010,	1011
2017-01-05 14:06:40 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 14:06:40 AI_Player.update()		1100,	1101,	11,	11,	101,	110,	1010
2017-01-05 14:06:40 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 14:06:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()	update
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()	update
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:40 AI_Player.update()	Search took6ms
2017-01-05 14:06:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 14:06:40 AI_Player.update()		1110,	1010,	1001,	1010,	1100,	110,	1010
2017-01-05 14:06:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	1011,	1011
2017-01-05 14:06:40 AI_Player.update()		1001,	101,	1011,	101,	101,	1010,	1011
2017-01-05 14:06:40 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 14:06:40 AI_Player.update()		1100,	1101,	11,	101,	101,	110,	1010
2017-01-05 14:06:40 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 14:06:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()	update
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()	update
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:40 AI_Player.update()	Search took382ms
2017-01-05 14:06:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 14:06:40 AI_Player.update()		1110,	1100,	1001,	1010,	1100,	110,	1010
2017-01-05 14:06:40 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-05 14:06:40 AI_Player.update()		1001,	101,	1011,	101,	101,	1010,	1011
2017-01-05 14:06:40 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-05 14:06:40 AI_Player.update()		1100,	101,	11,	101,	101,	110,	1010
2017-01-05 14:06:40 AI_Player.update()		1100,	11,	1101,	11,	1101,	101,	1001
2017-01-05 14:06:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()	update
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()	update
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:40 AI_Player.update()	Search took4ms
2017-01-05 14:06:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 14:06:40 AI_Player.update()		1110,	101,	1001,	1010,	1100,	110,	1010
2017-01-05 14:06:40 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-05 14:06:40 AI_Player.update()		1001,	1101,	1011,	101,	101,	1010,	1011
2017-01-05 14:06:40 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 14:06:40 AI_Player.update()		1100,	11,	11,	101,	101,	110,	1010
2017-01-05 14:06:40 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-05 14:06:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()	update
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:40 AI_Player.update()	update
2017-01-05 14:06:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:41 AI_Player.update()	Search took324ms
2017-01-05 14:06:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-05 14:06:41 AI_Player.update()		1010,	1110,	101,	1001,	1010,	1100,	110
2017-01-05 14:06:41 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-05 14:06:41 AI_Player.update()		1001,	1101,	1011,	101,	101,	1010,	1011
2017-01-05 14:06:41 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-05 14:06:41 AI_Player.update()		1100,	11,	11,	101,	101,	110,	1010
2017-01-05 14:06:41 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-05 14:06:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:06:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()	update
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:41 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:41 AI_Player.update()	Player a has won!
2017-01-05 14:06:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:41 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:41 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()	update
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:41 AI_Player.update()	Search took65ms
2017-01-05 14:06:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()		110,	111,	111,	111,	111,	1001,	11
2017-01-05 14:06:41 AI_Player.update()		1001,	1010,	110,	1011,	101,	1100,	1100
2017-01-05 14:06:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 14:06:41 AI_Player.update()		1010,	101,	1100,	1011,	101,	1001,	101
2017-01-05 14:06:41 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-05 14:06:41 AI_Player.update()		1010,	1011,	1010,	111,	110,	111,	1010
2017-01-05 14:06:41 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()	update
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()	update
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:41 AI_Player.update()	Search took0ms
2017-01-05 14:06:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()		110,	111,	111,	111,	111,	1001,	11
2017-01-05 14:06:41 AI_Player.update()		1010,	110,	1011,	101,	1100,	1100,	1001
2017-01-05 14:06:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-05 14:06:41 AI_Player.update()		1010,	101,	1100,	1011,	101,	1001,	101
2017-01-05 14:06:41 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-05 14:06:41 AI_Player.update()		1010,	1011,	1010,	111,	110,	111,	1010
2017-01-05 14:06:41 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()	update
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()	update
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:41 AI_Player.update()	Search took725ms
2017-01-05 14:06:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-05 14:06:41 AI_Player.update()		1010,	110,	1011,	101,	1100,	1100,	1001
2017-01-05 14:06:41 AI_Player.update()		1110,	1100,	1110,	1011,	111,	11,	1011
2017-01-05 14:06:41 AI_Player.update()		1010,	101,	1100,	110,	101,	1001,	101
2017-01-05 14:06:41 AI_Player.update()		1110,	11,	1101,	111,	1011,	1011,	1011
2017-01-05 14:06:41 AI_Player.update()		1010,	1011,	1010,	11,	110,	111,	1010
2017-01-05 14:06:41 AI_Player.update()		1100,	11,	1101,	111,	1101,	1100,	1001
2017-01-05 14:06:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()	update
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()	update
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:41 AI_Player.update()	Search took1ms
2017-01-05 14:06:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()		110,	111,	111,	101,	111,	1100,	11
2017-01-05 14:06:41 AI_Player.update()		1010,	110,	1011,	101,	1100,	1001,	1001
2017-01-05 14:06:41 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1100,	1011
2017-01-05 14:06:41 AI_Player.update()		1010,	101,	1100,	110,	101,	11,	101
2017-01-05 14:06:41 AI_Player.update()		1110,	11,	1101,	111,	1011,	1001,	1011
2017-01-05 14:06:41 AI_Player.update()		1010,	1011,	1010,	11,	110,	1011,	1010
2017-01-05 14:06:41 AI_Player.update()		1100,	11,	1101,	111,	1101,	111,	1001
2017-01-05 14:06:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()	update
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:41 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:41 AI_Player.update()	update
2017-01-05 14:06:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:42 AI_Player.update()	Search took697ms
2017-01-05 14:06:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:42 AI_Player.update()		110,	111,	111,	111,	111,	1100,	11
2017-01-05 14:06:42 AI_Player.update()		1010,	110,	1011,	101,	1100,	1001,	1001
2017-01-05 14:06:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:42 AI_Player.update()		1010,	101,	1100,	1011,	101,	11,	101
2017-01-05 14:06:42 AI_Player.update()		1110,	11,	1101,	110,	1011,	1001,	1011
2017-01-05 14:06:42 AI_Player.update()		1010,	1011,	1010,	111,	110,	1011,	1010
2017-01-05 14:06:42 AI_Player.update()		1100,	11,	1101,	11,	1101,	111,	1001
2017-01-05 14:06:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:42 AI_Player.update()	update
2017-01-05 14:06:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:42 AI_Player.update()	update
2017-01-05 14:06:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:42 AI_Player.update()	Search took1ms
2017-01-05 14:06:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:42 AI_Player.update()		110,	111,	111,	111,	111,	1100,	11
2017-01-05 14:06:42 AI_Player.update()		1010,	110,	1011,	101,	1100,	1001,	1001
2017-01-05 14:06:42 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-05 14:06:42 AI_Player.update()		101,	1100,	1011,	101,	11,	101,	1010
2017-01-05 14:06:42 AI_Player.update()		1110,	11,	1101,	110,	1011,	1001,	1011
2017-01-05 14:06:42 AI_Player.update()		1010,	1011,	1010,	111,	110,	1011,	1010
2017-01-05 14:06:42 AI_Player.update()		1100,	11,	1101,	11,	1101,	111,	1001
2017-01-05 14:06:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:42 AI_Player.update()	update
2017-01-05 14:06:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:42 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:42 AI_Player.update()	update
2017-01-05 14:06:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:43 AI_Player.update()	Search took705ms
2017-01-05 14:06:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:43 AI_Player.update()		110,	111,	111,	111,	111,	1001,	11
2017-01-05 14:06:43 AI_Player.update()		1010,	110,	1011,	101,	1100,	1100,	1001
2017-01-05 14:06:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:06:43 AI_Player.update()		101,	1100,	1011,	101,	11,	1001,	1010
2017-01-05 14:06:43 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-05 14:06:43 AI_Player.update()		1010,	1011,	1010,	111,	110,	111,	1010
2017-01-05 14:06:43 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-05 14:06:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:43 AI_Player.update()	update
2017-01-05 14:06:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:43 AI_Player.update()	update
2017-01-05 14:06:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:43 AI_Player.update()	Search took5ms
2017-01-05 14:06:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:43 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-05 14:06:43 AI_Player.update()		1010,	110,	1011,	101,	1100,	1100,	1001
2017-01-05 14:06:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-05 14:06:43 AI_Player.update()		101,	1100,	1011,	110,	11,	1001,	1010
2017-01-05 14:06:43 AI_Player.update()		1110,	11,	1101,	111,	1011,	1011,	1011
2017-01-05 14:06:43 AI_Player.update()		1010,	1011,	1010,	11,	110,	111,	1010
2017-01-05 14:06:43 AI_Player.update()		1100,	11,	1101,	111,	1101,	1100,	1001
2017-01-05 14:06:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:06:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:43 AI_Player.update()	update
2017-01-05 14:06:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:43 AI_Player.update()	update
2017-01-05 14:06:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:44 AI_Player.update()	Search took959ms
2017-01-05 14:06:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:44 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-05 14:06:44 AI_Player.update()		1010,	110,	1011,	101,	1100,	1100,	1001
2017-01-05 14:06:44 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-05 14:06:44 AI_Player.update()		101,	1100,	1011,	111,	11,	1001,	1010
2017-01-05 14:06:44 AI_Player.update()		1110,	11,	1101,	11,	1011,	1011,	1011
2017-01-05 14:06:44 AI_Player.update()		1010,	1011,	1010,	111,	110,	111,	1010
2017-01-05 14:06:44 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:44 AI_Player.update()	update
2017-01-05 14:06:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:44 AI_Player.update()	update
2017-01-05 14:06:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:44 AI_Player.update()	Search took2ms
2017-01-05 14:06:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:44 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-05 14:06:44 AI_Player.update()		1010,	110,	1011,	110,	1100,	1100,	1001
2017-01-05 14:06:44 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 14:06:44 AI_Player.update()		101,	1100,	1011,	11,	11,	1001,	1010
2017-01-05 14:06:44 AI_Player.update()		1110,	11,	1101,	111,	1011,	1011,	1011
2017-01-05 14:06:44 AI_Player.update()		1010,	1011,	1010,	101,	110,	111,	1010
2017-01-05 14:06:44 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:44 AI_Player.update()	update
2017-01-05 14:06:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:44 AI_Player.update()	update
2017-01-05 14:06:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:44 AI_Player.update()	Search took630ms
2017-01-05 14:06:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:44 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-05 14:06:44 AI_Player.update()		1010,	110,	1011,	110,	1100,	1100,	1001
2017-01-05 14:06:44 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 14:06:44 AI_Player.update()		101,	1100,	1011,	11,	11,	1001,	1010
2017-01-05 14:06:44 AI_Player.update()		1110,	11,	1101,	111,	1011,	1011,	1011
2017-01-05 14:06:44 AI_Player.update()		1010,	1010,	1011,	1010,	101,	110,	111
2017-01-05 14:06:44 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:44 AI_Player.update()	update
2017-01-05 14:06:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:44 AI_Player.update()	update
2017-01-05 14:06:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:44 AI_Player.update()	Search took3ms
2017-01-05 14:06:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:44 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 14:06:44 AI_Player.update()		1010,	1100,	1011,	110,	1100,	1100,	1001
2017-01-05 14:06:44 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 14:06:44 AI_Player.update()		101,	11,	1011,	11,	11,	1001,	1010
2017-01-05 14:06:44 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1011,	1011
2017-01-05 14:06:44 AI_Player.update()		1010,	11,	1011,	1010,	101,	110,	111
2017-01-05 14:06:44 AI_Player.update()		1100,	111,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:44 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:44 AI_Player.update()	update
2017-01-05 14:06:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()	update
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:45 AI_Player.update()	Search took352ms
2017-01-05 14:06:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-05 14:06:45 AI_Player.update()		1010,	1100,	1011,	110,	1100,	1100,	1001
2017-01-05 14:06:45 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-05 14:06:45 AI_Player.update()		1010,	101,	11,	1011,	11,	11,	1001
2017-01-05 14:06:45 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1011,	1011
2017-01-05 14:06:45 AI_Player.update()		1010,	11,	1011,	1010,	101,	110,	111
2017-01-05 14:06:45 AI_Player.update()		1100,	111,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:06:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()	update
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:45 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:45 AI_Player.update()	Player a has won!
2017-01-05 14:06:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:45 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:45 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()	update
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:45 AI_Player.update()	Search took54ms
2017-01-05 14:06:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:45 AI_Player.update()		1110,	1010,	1100,	11,	11,	1011,	101
2017-01-05 14:06:45 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 14:06:45 AI_Player.update()		111,	1001,	1001,	101,	1110,	11,	101
2017-01-05 14:06:45 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:45 AI_Player.update()		1001,	1010,	1101,	101,	111,	1010,	1100
2017-01-05 14:06:45 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()	update
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()	update
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:45 AI_Player.update()	Search took1ms
2017-01-05 14:06:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:45 AI_Player.update()		1010,	1100,	11,	11,	1011,	101,	1110
2017-01-05 14:06:45 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 14:06:45 AI_Player.update()		111,	1001,	1001,	101,	1110,	11,	101
2017-01-05 14:06:45 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:06:45 AI_Player.update()		1001,	1010,	1101,	101,	111,	1010,	1100
2017-01-05 14:06:45 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()	update
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()	update
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:45 AI_Player.update()	Search took151ms
2017-01-05 14:06:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:45 AI_Player.update()		1010,	1100,	11,	1010,	1011,	101,	1110
2017-01-05 14:06:45 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 14:06:45 AI_Player.update()		111,	1001,	1001,	1010,	1110,	11,	101
2017-01-05 14:06:45 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:45 AI_Player.update()		1001,	1010,	1101,	1001,	111,	1010,	1100
2017-01-05 14:06:45 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 14:06:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()	update
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()	update
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:45 AI_Player.update()	Search took1ms
2017-01-05 14:06:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:45 AI_Player.update()		1010,	1100,	11,	1010,	1011,	101,	1110
2017-01-05 14:06:45 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 14:06:45 AI_Player.update()		101,	111,	1001,	1001,	1010,	1110,	11
2017-01-05 14:06:45 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:45 AI_Player.update()		1001,	1010,	1101,	1001,	111,	1010,	1100
2017-01-05 14:06:45 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 14:06:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()	update
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:45 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:45 AI_Player.update()	update
2017-01-05 14:06:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:46 AI_Player.update()	Search took911ms
2017-01-05 14:06:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:46 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:46 AI_Player.update()		1100,	11,	1010,	1011,	101,	1110,	1010
2017-01-05 14:06:46 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 14:06:46 AI_Player.update()		101,	111,	1001,	1001,	1010,	1110,	11
2017-01-05 14:06:46 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:46 AI_Player.update()		1001,	1010,	1101,	1001,	111,	1010,	1100
2017-01-05 14:06:46 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 14:06:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:46 AI_Player.update()	update
2017-01-05 14:06:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:46 AI_Player.update()	update
2017-01-05 14:06:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:46 AI_Player.update()	Search took4ms
2017-01-05 14:06:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:46 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:46 AI_Player.update()		1100,	11,	1010,	1011,	101,	1110,	1010
2017-01-05 14:06:46 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 14:06:46 AI_Player.update()		101,	111,	1001,	1001,	1010,	1110,	11
2017-01-05 14:06:46 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:46 AI_Player.update()		1100,	1001,	1010,	1101,	1001,	111,	1010
2017-01-05 14:06:46 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 14:06:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:46 AI_Player.update()	update
2017-01-05 14:06:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:46 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:46 AI_Player.update()	update
2017-01-05 14:06:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:47 AI_Player.update()	Search took601ms
2017-01-05 14:06:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()		110,	1110,	111,	1011,	111,	1010,	11
2017-01-05 14:06:47 AI_Player.update()		1100,	11,	1010,	11,	101,	1110,	1010
2017-01-05 14:06:47 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 14:06:47 AI_Player.update()		101,	111,	1001,	101,	1010,	1110,	11
2017-01-05 14:06:47 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:06:47 AI_Player.update()		1100,	1001,	1010,	101,	1001,	111,	1010
2017-01-05 14:06:47 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:47 AI_Player.update()	Search took3ms
2017-01-05 14:06:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()		110,	1100,	111,	1011,	111,	1010,	11
2017-01-05 14:06:47 AI_Player.update()		1100,	1110,	1010,	11,	101,	1110,	1010
2017-01-05 14:06:47 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-05 14:06:47 AI_Player.update()		101,	1001,	1001,	101,	1010,	1110,	11
2017-01-05 14:06:47 AI_Player.update()		1110,	111,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:06:47 AI_Player.update()		1100,	1110,	1010,	101,	1001,	111,	1010
2017-01-05 14:06:47 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:47 AI_Player.update()	Search took321ms
2017-01-05 14:06:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()		110,	1110,	111,	1011,	111,	1010,	11
2017-01-05 14:06:47 AI_Player.update()		1100,	11,	1010,	11,	101,	1110,	1010
2017-01-05 14:06:47 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-05 14:06:47 AI_Player.update()		101,	111,	1001,	101,	1010,	1110,	11
2017-01-05 14:06:47 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:06:47 AI_Player.update()		1100,	1001,	1010,	101,	1001,	111,	1010
2017-01-05 14:06:47 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1101,	1001
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:47 AI_Player.update()	Search took4ms
2017-01-05 14:06:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 14:06:47 AI_Player.update()		1100,	11,	1010,	1001,	101,	1110,	1010
2017-01-05 14:06:47 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:06:47 AI_Player.update()		101,	111,	1001,	1101,	1010,	1110,	11
2017-01-05 14:06:47 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:47 AI_Player.update()		1100,	1001,	1010,	1010,	1001,	111,	1010
2017-01-05 14:06:47 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:47 AI_Player.update()	Search took391ms
2017-01-05 14:06:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 14:06:47 AI_Player.update()		1100,	11,	1010,	1001,	101,	1110,	1010
2017-01-05 14:06:47 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:06:47 AI_Player.update()		111,	1001,	1101,	1010,	1110,	11,	101
2017-01-05 14:06:47 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:47 AI_Player.update()		1100,	1001,	1010,	1010,	1001,	111,	1010
2017-01-05 14:06:47 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:47 AI_Player.update()	Search took3ms
2017-01-05 14:06:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-05 14:06:47 AI_Player.update()		1100,	1001,	1010,	1001,	101,	1110,	1010
2017-01-05 14:06:47 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:06:47 AI_Player.update()		111,	1110,	1101,	1010,	1110,	11,	101
2017-01-05 14:06:47 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:47 AI_Player.update()		1100,	1100,	1010,	1010,	1001,	111,	1010
2017-01-05 14:06:47 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:47 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:47 AI_Player.update()	update
2017-01-05 14:06:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:48 AI_Player.update()	Search took551ms
2017-01-05 14:06:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 14:06:48 AI_Player.update()		1100,	1001,	1010,	1001,	101,	1110,	1010
2017-01-05 14:06:48 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-05 14:06:48 AI_Player.update()		111,	1001,	1101,	1010,	1110,	11,	101
2017-01-05 14:06:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:48 AI_Player.update()		1100,	1110,	1010,	1010,	1001,	111,	1010
2017-01-05 14:06:48 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()	update
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()	update
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:48 AI_Player.update()	Search took3ms
2017-01-05 14:06:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 14:06:48 AI_Player.update()		1100,	1110,	1010,	1001,	101,	1110,	1010
2017-01-05 14:06:48 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:06:48 AI_Player.update()		111,	1100,	1101,	1010,	1110,	11,	101
2017-01-05 14:06:48 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:48 AI_Player.update()		1100,	11,	1010,	1010,	1001,	111,	1010
2017-01-05 14:06:48 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()	update
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()	update
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:48 AI_Player.update()	Search took469ms
2017-01-05 14:06:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 14:06:48 AI_Player.update()		1100,	1110,	1010,	1001,	101,	1110,	1010
2017-01-05 14:06:48 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:06:48 AI_Player.update()		101,	111,	1100,	1101,	1010,	1110,	11
2017-01-05 14:06:48 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:48 AI_Player.update()		1100,	11,	1010,	1010,	1001,	111,	1010
2017-01-05 14:06:48 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:06:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()	update
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()	update
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:48 AI_Player.update()	Search took4ms
2017-01-05 14:06:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-05 14:06:48 AI_Player.update()		1100,	1001,	1010,	1001,	101,	1110,	1010
2017-01-05 14:06:48 AI_Player.update()		1110,	111,	1110,	101,	111,	110,	1011
2017-01-05 14:06:48 AI_Player.update()		101,	1110,	1100,	1101,	1010,	1110,	11
2017-01-05 14:06:48 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:48 AI_Player.update()		1100,	1001,	1010,	1010,	1001,	111,	1010
2017-01-05 14:06:48 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()	update
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:48 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:48 AI_Player.update()	update
2017-01-05 14:06:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took333ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 14:06:49 AI_Player.update()		1100,	111,	1010,	1001,	101,	1110,	1010
2017-01-05 14:06:49 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	11,	1100,	1101,	1010,	1110,	11
2017-01-05 14:06:49 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:49 AI_Player.update()		1100,	1001,	1010,	1010,	1001,	111,	1010
2017-01-05 14:06:49 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took3ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-05 14:06:49 AI_Player.update()		1100,	1110,	1010,	1001,	101,	1110,	1010
2017-01-05 14:06:49 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	1001,	1100,	1101,	1010,	1110,	11
2017-01-05 14:06:49 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:49 AI_Player.update()		1100,	1110,	1010,	1010,	1001,	111,	1010
2017-01-05 14:06:49 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took349ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-05 14:06:49 AI_Player.update()		1010,	1100,	1110,	1010,	1001,	101,	1110
2017-01-05 14:06:49 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	1001,	1100,	1101,	1010,	1110,	11
2017-01-05 14:06:49 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 14:06:49 AI_Player.update()		1100,	1110,	1010,	1010,	1001,	111,	1010
2017-01-05 14:06:49 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:49 AI_Player.update()	Player a has won!
2017-01-05 14:06:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:49 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took13ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:06:49 AI_Player.update()		1100,	1100,	1010,	1001,	1001,	1100,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:49 AI_Player.update()		1001,	1010,	1110,	1011,	1101,	1010,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	1101,	1010,	1010,	1011,	1100,	1001
2017-01-05 14:06:49 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took1ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:06:49 AI_Player.update()		1100,	1010,	1010,	1001,	1001,	1100,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:49 AI_Player.update()		1001,	1001,	1110,	1011,	1101,	1010,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	101,	1010,	1010,	1011,	1100,	1001
2017-01-05 14:06:49 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1010,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took13ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:06:49 AI_Player.update()		101,	1100,	1010,	1010,	1001,	1001,	1100
2017-01-05 14:06:49 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:49 AI_Player.update()		1001,	1001,	1110,	1011,	1101,	1010,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	101,	1010,	1010,	1011,	1100,	1001
2017-01-05 14:06:49 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1010,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took1ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:06:49 AI_Player.update()		1100,	101,	1100,	1010,	1010,	1001,	1001
2017-01-05 14:06:49 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:49 AI_Player.update()		1001,	1001,	1110,	1011,	1101,	1010,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	101,	1010,	1010,	1011,	1100,	1001
2017-01-05 14:06:49 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1010,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took30ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:06:49 AI_Player.update()		1100,	1100,	1100,	1010,	1010,	1001,	1001
2017-01-05 14:06:49 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:49 AI_Player.update()		1001,	1010,	1110,	1011,	1101,	1010,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	1101,	1010,	1010,	1011,	1100,	1001
2017-01-05 14:06:49 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took1ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:06:49 AI_Player.update()		1100,	101,	1100,	1010,	1010,	1001,	1001
2017-01-05 14:06:49 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:49 AI_Player.update()		1001,	1001,	1110,	1011,	1101,	1010,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	101,	1010,	1010,	1011,	1100,	1001
2017-01-05 14:06:49 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1010,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took35ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:06:49 AI_Player.update()		1100,	1100,	1100,	1010,	1010,	1001,	1001
2017-01-05 14:06:49 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:49 AI_Player.update()		1001,	1010,	1110,	1011,	1101,	1010,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	1101,	1010,	1010,	1011,	1100,	1001
2017-01-05 14:06:49 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took1ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	101,	111,	1110,	111,	110,	11
2017-01-05 14:06:49 AI_Player.update()		1100,	110,	1100,	1010,	1010,	1001,	1001
2017-01-05 14:06:49 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:49 AI_Player.update()		1001,	101,	1110,	1011,	1101,	1010,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	1001,	1010,	1010,	1011,	1100,	1001
2017-01-05 14:06:49 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1010,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took43ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	101,	111,	1110,	111,	110,	11
2017-01-05 14:06:49 AI_Player.update()		110,	1100,	1010,	1010,	1001,	1001,	1100
2017-01-05 14:06:49 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:49 AI_Player.update()		1001,	101,	1110,	1011,	1101,	1010,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	1001,	1010,	1010,	1011,	1100,	1001
2017-01-05 14:06:49 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1010,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:49 AI_Player.update()	Search took2ms
2017-01-05 14:06:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:06:49 AI_Player.update()		110,	1100,	1010,	1010,	1001,	1001,	1100
2017-01-05 14:06:49 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:49 AI_Player.update()		1001,	1010,	1110,	1011,	1101,	1010,	101
2017-01-05 14:06:49 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:49 AI_Player.update()		101,	1101,	1010,	1010,	1011,	1100,	1001
2017-01-05 14:06:49 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-05 14:06:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:49 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:49 AI_Player.update()	update
2017-01-05 14:06:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:50 AI_Player.update()	Search took240ms
2017-01-05 14:06:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:06:50 AI_Player.update()		110,	1100,	1010,	1010,	1001,	1001,	1100
2017-01-05 14:06:50 AI_Player.update()		1110,	101,	1110,	1100,	111,	1100,	1011
2017-01-05 14:06:50 AI_Player.update()		1010,	1110,	1011,	1101,	1010,	101,	1001
2017-01-05 14:06:50 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:50 AI_Player.update()		101,	1101,	1010,	1010,	1011,	1100,	1001
2017-01-05 14:06:50 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-05 14:06:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()	update
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()	update
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:50 AI_Player.update()	Search took2ms
2017-01-05 14:06:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()		110,	1100,	111,	1110,	111,	1001,	11
2017-01-05 14:06:50 AI_Player.update()		110,	1100,	1010,	1010,	1001,	1100,	1100
2017-01-05 14:06:50 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 14:06:50 AI_Player.update()		1010,	1110,	1011,	1101,	1010,	1101,	1001
2017-01-05 14:06:50 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:50 AI_Player.update()		101,	1101,	1010,	1010,	1011,	1010,	1001
2017-01-05 14:06:50 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()	update
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()	update
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:50 AI_Player.update()	Search took426ms
2017-01-05 14:06:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()		110,	1100,	111,	1110,	111,	1001,	11
2017-01-05 14:06:50 AI_Player.update()		110,	1100,	1010,	1010,	1001,	1100,	1100
2017-01-05 14:06:50 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 14:06:50 AI_Player.update()		1001,	1010,	1110,	1011,	1101,	1010,	1101
2017-01-05 14:06:50 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:50 AI_Player.update()		101,	1101,	1010,	1010,	1011,	1010,	1001
2017-01-05 14:06:50 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()	update
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()	update
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:50 AI_Player.update()	Search took3ms
2017-01-05 14:06:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()		110,	1100,	111,	1110,	111,	1001,	11
2017-01-05 14:06:50 AI_Player.update()		110,	101,	1010,	1010,	1001,	1100,	1100
2017-01-05 14:06:50 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 14:06:50 AI_Player.update()		1001,	1001,	1110,	1011,	1101,	1010,	1101
2017-01-05 14:06:50 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:50 AI_Player.update()		101,	101,	1010,	1010,	1011,	1010,	1001
2017-01-05 14:06:50 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:06:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()	update
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:50 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:50 AI_Player.update()	update
2017-01-05 14:06:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:51 AI_Player.update()	Search took490ms
2017-01-05 14:06:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:51 AI_Player.update()		110,	1100,	111,	1110,	111,	1001,	11
2017-01-05 14:06:51 AI_Player.update()		110,	101,	1010,	1010,	1001,	1100,	1100
2017-01-05 14:06:51 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-05 14:06:51 AI_Player.update()		1001,	1110,	1011,	1101,	1010,	1101,	1001
2017-01-05 14:06:51 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:51 AI_Player.update()		101,	101,	1010,	1010,	1011,	1010,	1001
2017-01-05 14:06:51 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:51 AI_Player.update()	update
2017-01-05 14:06:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:51 AI_Player.update()	update
2017-01-05 14:06:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:51 AI_Player.update()	Search took3ms
2017-01-05 14:06:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:51 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-05 14:06:51 AI_Player.update()		110,	101,	1010,	1100,	1001,	1100,	1100
2017-01-05 14:06:51 AI_Player.update()		1110,	1010,	1110,	1101,	111,	101,	1011
2017-01-05 14:06:51 AI_Player.update()		1001,	1110,	1011,	1010,	1010,	1101,	1001
2017-01-05 14:06:51 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:51 AI_Player.update()		101,	101,	1010,	1110,	1011,	1010,	1001
2017-01-05 14:06:51 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:51 AI_Player.update()	update
2017-01-05 14:06:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:51 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:51 AI_Player.update()	update
2017-01-05 14:06:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:52 AI_Player.update()	Search took1015ms
2017-01-05 14:06:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-05 14:06:52 AI_Player.update()		110,	101,	1010,	1100,	1001,	1100,	1100
2017-01-05 14:06:52 AI_Player.update()		1110,	1010,	1110,	1101,	111,	101,	1011
2017-01-05 14:06:52 AI_Player.update()		1001,	1110,	1011,	1010,	1010,	1101,	1001
2017-01-05 14:06:52 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:52 AI_Player.update()		101,	1010,	1110,	1011,	1010,	1001,	101
2017-01-05 14:06:52 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:06:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()	update
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()	update
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:52 AI_Player.update()	Search took5ms
2017-01-05 14:06:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 14:06:52 AI_Player.update()		110,	1010,	1010,	1100,	1001,	1100,	1100
2017-01-05 14:06:52 AI_Player.update()		1110,	1110,	1110,	1101,	111,	101,	1011
2017-01-05 14:06:52 AI_Player.update()		1001,	1101,	1011,	1010,	1010,	1101,	1001
2017-01-05 14:06:52 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:52 AI_Player.update()		101,	1100,	1110,	1011,	1010,	1001,	101
2017-01-05 14:06:52 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()	update
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()	update
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:52 AI_Player.update()	Search took846ms
2017-01-05 14:06:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-05 14:06:52 AI_Player.update()		1010,	1010,	1100,	1001,	1100,	1100,	110
2017-01-05 14:06:52 AI_Player.update()		1110,	1110,	1110,	1101,	111,	101,	1011
2017-01-05 14:06:52 AI_Player.update()		1001,	1101,	1011,	1010,	1010,	1101,	1001
2017-01-05 14:06:52 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:52 AI_Player.update()		101,	1100,	1110,	1011,	1010,	1001,	101
2017-01-05 14:06:52 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()	update
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()	update
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:52 AI_Player.update()	Search took4ms
2017-01-05 14:06:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-05 14:06:52 AI_Player.update()		1010,	1110,	1100,	1001,	1100,	1100,	110
2017-01-05 14:06:52 AI_Player.update()		1110,	1101,	1110,	1101,	111,	101,	1011
2017-01-05 14:06:52 AI_Player.update()		1001,	1010,	1011,	1010,	1010,	1101,	1001
2017-01-05 14:06:52 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:52 AI_Player.update()		101,	1100,	1110,	1011,	1010,	1001,	101
2017-01-05 14:06:52 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()	update
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:52 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:52 AI_Player.update()	update
2017-01-05 14:06:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took107ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	1110,	1100,	1001,	1100,	1100
2017-01-05 14:06:53 AI_Player.update()		1110,	1101,	1110,	1101,	111,	101,	1011
2017-01-05 14:06:53 AI_Player.update()		1001,	1010,	1011,	1010,	1010,	1101,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:53 AI_Player.update()		101,	1100,	1110,	1011,	1010,	1001,	101
2017-01-05 14:06:53 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took5ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-05 14:06:53 AI_Player.update()		110,	1101,	1110,	1100,	1001,	1100,	1100
2017-01-05 14:06:53 AI_Player.update()		1110,	1010,	1110,	1101,	111,	101,	1011
2017-01-05 14:06:53 AI_Player.update()		1001,	1100,	1011,	1010,	1010,	1101,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:53 AI_Player.update()		101,	101,	1110,	1011,	1010,	1001,	101
2017-01-05 14:06:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took165ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	1110,	1100,	1001,	1100,	1100
2017-01-05 14:06:53 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-05 14:06:53 AI_Player.update()		1001,	1100,	1011,	1010,	1010,	1101,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:53 AI_Player.update()		101,	1010,	1110,	1011,	1010,	1001,	101
2017-01-05 14:06:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took6ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-05 14:06:53 AI_Player.update()		110,	1100,	1110,	1100,	1001,	1100,	1100
2017-01-05 14:06:53 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-05 14:06:53 AI_Player.update()		1001,	101,	1011,	1010,	1010,	1101,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:53 AI_Player.update()		101,	1010,	1110,	1011,	1010,	1001,	101
2017-01-05 14:06:53 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took229ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	1110,	1100,	1001,	1100,	1100
2017-01-05 14:06:53 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-05 14:06:53 AI_Player.update()		1001,	1100,	1011,	1010,	1010,	1101,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:53 AI_Player.update()		101,	1010,	1110,	1011,	1010,	1001,	101
2017-01-05 14:06:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took4ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-05 14:06:53 AI_Player.update()		110,	1100,	1110,	1100,	1001,	1100,	1100
2017-01-05 14:06:53 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-05 14:06:53 AI_Player.update()		1001,	101,	1011,	1010,	1010,	1101,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:53 AI_Player.update()		101,	1010,	1110,	1011,	1010,	1001,	101
2017-01-05 14:06:53 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	110,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took252ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 14:06:53 AI_Player.update()		110,	1100,	1110,	1100,	1001,	1001,	1100
2017-01-05 14:06:53 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1100,	1011
2017-01-05 14:06:53 AI_Player.update()		1001,	101,	1011,	1010,	1010,	101,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:53 AI_Player.update()		101,	1010,	1110,	1011,	1010,	1100,	101
2017-01-05 14:06:53 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	1001,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took2ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:06:53 AI_Player.update()		110,	1100,	1110,	1100,	1001,	1001,	1100
2017-01-05 14:06:53 AI_Player.update()		1110,	101,	1110,	1101,	111,	1100,	1011
2017-01-05 14:06:53 AI_Player.update()		1001,	1010,	1011,	1010,	1010,	101,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:53 AI_Player.update()		101,	1101,	1110,	1011,	1010,	1100,	101
2017-01-05 14:06:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took40ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:06:53 AI_Player.update()		1100,	110,	1100,	1110,	1100,	1001,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	101,	1110,	1101,	111,	1100,	1011
2017-01-05 14:06:53 AI_Player.update()		1001,	1010,	1011,	1010,	1010,	101,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:06:53 AI_Player.update()		101,	1101,	1110,	1011,	1010,	1100,	101
2017-01-05 14:06:53 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	1001,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:53 AI_Player.update()	Player a has won!
2017-01-05 14:06:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:53 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took7ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1100,	111,	111,	111,	110,	11
2017-01-05 14:06:53 AI_Player.update()		110,	101,	11,	1010,	101,	1101,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-05 14:06:53 AI_Player.update()		1010,	110,	1001,	1010,	1110,	1001,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-05 14:06:53 AI_Player.update()		11,	110,	1100,	101,	101,	1110,	1010
2017-01-05 14:06:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took2ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-05 14:06:53 AI_Player.update()		110,	101,	11,	1010,	101,	110,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1101,	1011
2017-01-05 14:06:53 AI_Player.update()		1010,	110,	1001,	1010,	1110,	11,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:06:53 AI_Player.update()		11,	110,	1100,	101,	101,	110,	1010
2017-01-05 14:06:53 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1110,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:06:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took70ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	11,	1010,	101,	110,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	110,	1110,	1100,	111,	1101,	1011
2017-01-05 14:06:53 AI_Player.update()		1010,	1001,	1001,	1010,	1110,	11,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:06:53 AI_Player.update()		11,	1010,	1100,	101,	101,	110,	1010
2017-01-05 14:06:53 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1110,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took3ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	11,	1100,	101,	110,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	110,	1110,	1010,	111,	1101,	1011
2017-01-05 14:06:53 AI_Player.update()		1010,	1001,	1001,	1100,	1110,	11,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:53 AI_Player.update()		11,	1010,	1100,	11,	101,	110,	1010
2017-01-05 14:06:53 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1110,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took101ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	11,	1010,	101,	110,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	110,	1110,	1100,	111,	1101,	1011
2017-01-05 14:06:53 AI_Player.update()		1010,	1001,	1001,	1010,	1110,	11,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:06:53 AI_Player.update()		11,	1010,	1100,	101,	101,	110,	1010
2017-01-05 14:06:53 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1110,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:53 AI_Player.update()	Search took1ms
2017-01-05 14:06:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()		110,	1010,	111,	111,	111,	1010,	11
2017-01-05 14:06:53 AI_Player.update()		110,	110,	11,	1010,	101,	110,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-05 14:06:53 AI_Player.update()		1010,	110,	1001,	1010,	1110,	11,	1001
2017-01-05 14:06:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:06:53 AI_Player.update()		11,	1100,	1100,	101,	101,	110,	1010
2017-01-05 14:06:53 AI_Player.update()		1100,	101,	1101,	11,	1101,	1110,	1001
2017-01-05 14:06:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:06:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:53 AI_Player.update()	update
2017-01-05 14:06:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:54 AI_Player.update()	Search took361ms
2017-01-05 14:06:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-05 14:06:54 AI_Player.update()		110,	1001,	11,	1010,	101,	110,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	110,	1110,	1100,	111,	1101,	1011
2017-01-05 14:06:54 AI_Player.update()		1010,	1010,	1001,	1010,	1110,	11,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:06:54 AI_Player.update()		11,	101,	1100,	101,	101,	110,	1010
2017-01-05 14:06:54 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1110,	1001
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:54 AI_Player.update()	Search took2ms
2017-01-05 14:06:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()		110,	1001,	111,	111,	111,	1010,	11
2017-01-05 14:06:54 AI_Player.update()		110,	110,	11,	1010,	101,	110,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1101,	1011
2017-01-05 14:06:54 AI_Player.update()		1010,	1100,	1001,	1010,	1110,	11,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:06:54 AI_Player.update()		11,	1010,	1100,	101,	101,	110,	1010
2017-01-05 14:06:54 AI_Player.update()		1100,	110,	1101,	11,	1101,	1110,	1001
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:54 AI_Player.update()	Search took400ms
2017-01-05 14:06:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()		110,	1001,	111,	1010,	111,	1010,	11
2017-01-05 14:06:54 AI_Player.update()		110,	110,	11,	1100,	101,	110,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1101,	1011
2017-01-05 14:06:54 AI_Player.update()		1010,	1100,	1001,	1100,	1110,	11,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:54 AI_Player.update()		11,	1010,	1100,	11,	101,	110,	1010
2017-01-05 14:06:54 AI_Player.update()		1100,	110,	1101,	111,	1101,	1110,	1001
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:54 AI_Player.update()	Search took3ms
2017-01-05 14:06:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:54 AI_Player.update()		110,	1010,	11,	1100,	101,	110,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 14:06:54 AI_Player.update()		1010,	101,	1001,	1100,	1110,	11,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:54 AI_Player.update()		11,	110,	1100,	11,	101,	110,	1010
2017-01-05 14:06:54 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1110,	1001
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:54 AI_Player.update()	Search took52ms
2017-01-05 14:06:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:54 AI_Player.update()		110,	1010,	11,	1100,	101,	110,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 14:06:54 AI_Player.update()		1010,	101,	1001,	1100,	1110,	11,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:54 AI_Player.update()		110,	1100,	11,	101,	110,	1010,	11
2017-01-05 14:06:54 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1110,	1001
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:54 AI_Player.update()	Search took2ms
2017-01-05 14:06:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:54 AI_Player.update()		110,	1010,	11,	1100,	101,	110,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 14:06:54 AI_Player.update()		1010,	101,	1001,	1100,	1110,	11,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:54 AI_Player.update()		1100,	11,	101,	110,	1010,	11,	110
2017-01-05 14:06:54 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1110,	1001
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:54 AI_Player.update()	Search took147ms
2017-01-05 14:06:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-05 14:06:54 AI_Player.update()		110,	1010,	11,	1010,	101,	110,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1101,	1011
2017-01-05 14:06:54 AI_Player.update()		1010,	101,	1001,	101,	1110,	11,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 14:06:54 AI_Player.update()		1100,	11,	101,	111,	1010,	11,	110
2017-01-05 14:06:54 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1110,	1001
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:54 AI_Player.update()	Search took1ms
2017-01-05 14:06:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:54 AI_Player.update()		110,	1010,	11,	1100,	101,	110,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 14:06:54 AI_Player.update()		1010,	101,	1001,	1100,	1110,	11,	1001
2017-01-05 14:06:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:54 AI_Player.update()		1100,	11,	101,	110,	1010,	11,	110
2017-01-05 14:06:54 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1110,	1001
2017-01-05 14:06:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:06:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:54 AI_Player.update()	update
2017-01-05 14:06:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:55 AI_Player.update()	Search took324ms
2017-01-05 14:06:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:55 AI_Player.update()		110,	1010,	11,	1100,	101,	110,	1001
2017-01-05 14:06:55 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 14:06:55 AI_Player.update()		101,	1001,	1100,	1110,	11,	1001,	1010
2017-01-05 14:06:55 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:55 AI_Player.update()		1100,	11,	101,	110,	1010,	11,	110
2017-01-05 14:06:55 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1110,	1001
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:06:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:55 AI_Player.update()	Search took3ms
2017-01-05 14:06:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:55 AI_Player.update()		110,	1010,	11,	1100,	101,	110,	1001
2017-01-05 14:06:55 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 14:06:55 AI_Player.update()		1010,	101,	1001,	1100,	1110,	11,	1001
2017-01-05 14:06:55 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:55 AI_Player.update()		1100,	11,	101,	110,	1010,	11,	110
2017-01-05 14:06:55 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1110,	1001
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	4 6
2017-01-05 14:06:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:55 AI_Player.update()	Search took30ms
2017-01-05 14:06:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:06:55 AI_Player.update()		110,	1010,	11,	1100,	101,	110,	1001
2017-01-05 14:06:55 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-05 14:06:55 AI_Player.update()		101,	1001,	1100,	1110,	11,	1001,	1010
2017-01-05 14:06:55 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:55 AI_Player.update()		1100,	11,	101,	110,	1010,	11,	110
2017-01-05 14:06:55 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1110,	1001
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	4 6
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	4 6
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:55 AI_Player.update()	Search took2ms
2017-01-05 14:06:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-05 14:06:55 AI_Player.update()		110,	1100,	11,	1100,	101,	110,	1001
2017-01-05 14:06:55 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1101,	1011
2017-01-05 14:06:55 AI_Player.update()		101,	1010,	1100,	1110,	11,	1001,	1010
2017-01-05 14:06:55 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 14:06:55 AI_Player.update()		1100,	1001,	101,	110,	1010,	11,	110
2017-01-05 14:06:55 AI_Player.update()		1100,	110,	1101,	111,	1101,	1110,	1001
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	4 6
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 14:06:55 AI_Player.update()	Player b has won!
2017-01-05 14:06:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:55 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:55 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:55 AI_Player.update()	Search took98ms
2017-01-05 14:06:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()		110,	111,	111,	1010,	111,	1110,	11
2017-01-05 14:06:55 AI_Player.update()		110,	1011,	1100,	101,	1100,	1010,	111
2017-01-05 14:06:55 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-05 14:06:55 AI_Player.update()		110,	101,	1010,	101,	1011,	1110,	1010
2017-01-05 14:06:55 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 14:06:55 AI_Player.update()		1010,	11,	101,	110,	101,	11,	110
2017-01-05 14:06:55 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:55 AI_Player.update()	Search took1ms
2017-01-05 14:06:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()		110,	111,	111,	1010,	111,	1110,	11
2017-01-05 14:06:55 AI_Player.update()		111,	110,	1011,	1100,	101,	1100,	1010
2017-01-05 14:06:55 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-05 14:06:55 AI_Player.update()		110,	101,	1010,	101,	1011,	1110,	1010
2017-01-05 14:06:55 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-05 14:06:55 AI_Player.update()		1010,	11,	101,	110,	101,	11,	110
2017-01-05 14:06:55 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 14:06:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:55 AI_Player.update()	update
2017-01-05 14:06:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:56 AI_Player.update()	Search took668ms
2017-01-05 14:06:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()		110,	111,	111,	1100,	111,	1110,	11
2017-01-05 14:06:56 AI_Player.update()		111,	110,	1011,	1100,	101,	1100,	1010
2017-01-05 14:06:56 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-05 14:06:56 AI_Player.update()		110,	101,	1010,	11,	1011,	1110,	1010
2017-01-05 14:06:56 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-05 14:06:56 AI_Player.update()		1010,	11,	101,	11,	101,	11,	110
2017-01-05 14:06:56 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:06:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()	update
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()	update
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:56 AI_Player.update()	Search took4ms
2017-01-05 14:06:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()		110,	110,	111,	1100,	111,	1110,	11
2017-01-05 14:06:56 AI_Player.update()		111,	1001,	1011,	1100,	101,	1100,	1010
2017-01-05 14:06:56 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 14:06:56 AI_Player.update()		110,	101,	1010,	11,	1011,	1110,	1010
2017-01-05 14:06:56 AI_Player.update()		1110,	11,	1101,	110,	1011,	1100,	1011
2017-01-05 14:06:56 AI_Player.update()		1010,	101,	101,	11,	101,	11,	110
2017-01-05 14:06:56 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:06:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:06:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()	update
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()	update
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:56 AI_Player.update()	Search took704ms
2017-01-05 14:06:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()		110,	110,	111,	1100,	111,	1110,	11
2017-01-05 14:06:56 AI_Player.update()		111,	1001,	1011,	101,	101,	1100,	1010
2017-01-05 14:06:56 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-05 14:06:56 AI_Player.update()		110,	101,	1010,	110,	1011,	1110,	1010
2017-01-05 14:06:56 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-05 14:06:56 AI_Player.update()		1010,	101,	101,	1010,	101,	11,	110
2017-01-05 14:06:56 AI_Player.update()		1100,	111,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:06:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()	update
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()	update
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:56 AI_Player.update()	Search took3ms
2017-01-05 14:06:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()		110,	110,	111,	101,	111,	1110,	11
2017-01-05 14:06:56 AI_Player.update()		111,	1001,	1011,	11,	101,	1100,	1010
2017-01-05 14:06:56 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:06:56 AI_Player.update()		110,	101,	1010,	11,	1011,	1110,	1010
2017-01-05 14:06:56 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:56 AI_Player.update()		1010,	101,	101,	1100,	101,	11,	110
2017-01-05 14:06:56 AI_Player.update()		1100,	111,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:06:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:06:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()	update
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:56 AI_Player.update()	update
2017-01-05 14:06:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:57 AI_Player.update()	Search took466ms
2017-01-05 14:06:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()		110,	110,	111,	101,	111,	1110,	11
2017-01-05 14:06:57 AI_Player.update()		111,	1001,	1011,	11,	101,	1100,	1010
2017-01-05 14:06:57 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:06:57 AI_Player.update()		1010,	110,	101,	1010,	11,	1011,	1110
2017-01-05 14:06:57 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:57 AI_Player.update()		1010,	101,	101,	1100,	101,	11,	110
2017-01-05 14:06:57 AI_Player.update()		1100,	111,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:06:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()	update
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()	update
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:57 AI_Player.update()	Search took2ms
2017-01-05 14:06:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()		110,	111,	111,	101,	111,	1110,	11
2017-01-05 14:06:57 AI_Player.update()		111,	110,	1011,	11,	101,	1100,	1010
2017-01-05 14:06:57 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-05 14:06:57 AI_Player.update()		1010,	101,	101,	1010,	11,	1011,	1110
2017-01-05 14:06:57 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:57 AI_Player.update()		1010,	11,	101,	1100,	101,	11,	110
2017-01-05 14:06:57 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:06:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()	update
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()	update
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:57 AI_Player.update()	Search took320ms
2017-01-05 14:06:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()		110,	111,	111,	11,	111,	1110,	11
2017-01-05 14:06:57 AI_Player.update()		111,	110,	1011,	110,	101,	1100,	1010
2017-01-05 14:06:57 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:57 AI_Player.update()		1010,	101,	101,	1010,	11,	1011,	1110
2017-01-05 14:06:57 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:57 AI_Player.update()		1010,	11,	101,	1100,	101,	11,	110
2017-01-05 14:06:57 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:06:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:06:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()	update
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()	update
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:57 AI_Player.update()	Search took3ms
2017-01-05 14:06:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()		110,	110,	111,	11,	111,	1110,	11
2017-01-05 14:06:57 AI_Player.update()		111,	1001,	1011,	110,	101,	1100,	1010
2017-01-05 14:06:57 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:57 AI_Player.update()		1010,	110,	101,	1010,	11,	1011,	1110
2017-01-05 14:06:57 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:57 AI_Player.update()		1010,	101,	101,	1100,	101,	11,	110
2017-01-05 14:06:57 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-05 14:06:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:06:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()	update
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:57 AI_Player.update()	update
2017-01-05 14:06:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:58 AI_Player.update()	Search took438ms
2017-01-05 14:06:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()		110,	110,	111,	110,	111,	1110,	11
2017-01-05 14:06:58 AI_Player.update()		111,	1001,	1011,	1010,	101,	1100,	1010
2017-01-05 14:06:58 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:58 AI_Player.update()		1010,	110,	101,	1100,	11,	1011,	1110
2017-01-05 14:06:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:58 AI_Player.update()		1010,	101,	101,	101,	101,	11,	110
2017-01-05 14:06:58 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-05 14:06:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()	update
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()	update
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:58 AI_Player.update()	Search took2ms
2017-01-05 14:06:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()		110,	110,	111,	11,	111,	1110,	11
2017-01-05 14:06:58 AI_Player.update()		111,	1001,	1011,	110,	101,	1100,	1010
2017-01-05 14:06:58 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:58 AI_Player.update()		1010,	110,	101,	1010,	11,	1011,	1110
2017-01-05 14:06:58 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:58 AI_Player.update()		1010,	101,	101,	1100,	101,	11,	110
2017-01-05 14:06:58 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-05 14:06:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:06:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()	update
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:06:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()	update
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:58 AI_Player.update()	Search took375ms
2017-01-05 14:06:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()		110,	1001,	111,	11,	111,	1110,	11
2017-01-05 14:06:58 AI_Player.update()		111,	101,	1011,	110,	101,	1100,	1010
2017-01-05 14:06:58 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-05 14:06:58 AI_Player.update()		1010,	11,	101,	1010,	11,	1011,	1110
2017-01-05 14:06:58 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-05 14:06:58 AI_Player.update()		1010,	111,	101,	1100,	101,	11,	110
2017-01-05 14:06:58 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-05 14:06:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:06:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()	update
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:06:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()	update
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:58 AI_Player.update()	Search took4ms
2017-01-05 14:06:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()		110,	1001,	111,	101,	111,	1110,	11
2017-01-05 14:06:58 AI_Player.update()		111,	101,	1011,	11,	101,	1100,	1010
2017-01-05 14:06:58 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 14:06:58 AI_Player.update()		1010,	11,	101,	1010,	11,	1011,	1110
2017-01-05 14:06:58 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:58 AI_Player.update()		1010,	111,	101,	1100,	101,	11,	110
2017-01-05 14:06:58 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:06:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()	update
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()	update
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:58 AI_Player.update()	Search took273ms
2017-01-05 14:06:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()		110,	1001,	111,	101,	111,	1110,	11
2017-01-05 14:06:58 AI_Player.update()		1010,	111,	101,	1011,	11,	101,	1100
2017-01-05 14:06:58 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-05 14:06:58 AI_Player.update()		1010,	11,	101,	1010,	11,	1011,	1110
2017-01-05 14:06:58 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:06:58 AI_Player.update()		1010,	111,	101,	1100,	101,	11,	110
2017-01-05 14:06:58 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-05 14:06:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:06:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()	update
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:58 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:06:58 AI_Player.update()	Player a has won!
2017-01-05 14:06:58 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:58 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:06:58 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:06:58 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:06:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:58 AI_Player.update()	update
2017-01-05 14:06:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took203ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-05 14:06:59 AI_Player.update()		110,	110,	11,	1101,	110,	1101,	110
2017-01-05 14:06:59 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1011,	1011
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	11,	1010,	1100,	1010,	11
2017-01-05 14:06:59 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	1010,	1011,	1101,	1110,	1010,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took1ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-05 14:06:59 AI_Player.update()		110,	110,	110,	11,	1101,	110,	1101
2017-01-05 14:06:59 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1011,	1011
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	11,	1010,	1100,	1010,	11
2017-01-05 14:06:59 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	1100,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	1010,	1011,	1101,	1110,	1010,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took160ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	101,	111,	1101,	111,	110,	11
2017-01-05 14:06:59 AI_Player.update()		110,	110,	110,	11,	1101,	1011,	1101
2017-01-05 14:06:59 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1010,	1011
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	11,	1010,	1100,	1100,	11
2017-01-05 14:06:59 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	1010,	1011,	1101,	1110,	11,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took2ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	101,	111,	1101,	111,	110,	11
2017-01-05 14:06:59 AI_Player.update()		110,	110,	110,	11,	1101,	1011,	1101
2017-01-05 14:06:59 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1010,	1011
2017-01-05 14:06:59 AI_Player.update()		101,	11,	1010,	1100,	1100,	11,	1100
2017-01-05 14:06:59 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	1010,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	1010,	1011,	1101,	1110,	11,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took335ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	101,	111,	1101,	111,	1011,	11
2017-01-05 14:06:59 AI_Player.update()		110,	110,	110,	11,	1101,	1010,	1101
2017-01-05 14:06:59 AI_Player.update()		1110,	1100,	1110,	1011,	111,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		101,	11,	1010,	1100,	1100,	1010,	1100
2017-01-05 14:06:59 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	1010,	1011,	1101,	1110,	1100,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took4ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	110,	111,	1101,	111,	1011,	11
2017-01-05 14:06:59 AI_Player.update()		110,	1100,	110,	11,	1101,	1010,	1101
2017-01-05 14:06:59 AI_Player.update()		1110,	11,	1110,	1011,	111,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		101,	1011,	1010,	1100,	1100,	1010,	1100
2017-01-05 14:06:59 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	101,	1011,	1101,	1110,	1100,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took269ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	110,	111,	1101,	111,	1011,	11
2017-01-05 14:06:59 AI_Player.update()		110,	1100,	110,	11,	1101,	1010,	1101
2017-01-05 14:06:59 AI_Player.update()		1110,	11,	1110,	1011,	111,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	1011,	1010,	1100,	1100,	1010
2017-01-05 14:06:59 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	101,	1011,	1101,	1110,	1100,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took6ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	110,	111,	1101,	111,	1011,	11
2017-01-05 14:06:59 AI_Player.update()		110,	1100,	110,	11,	1101,	1010,	1101
2017-01-05 14:06:59 AI_Player.update()		1110,	11,	1110,	1011,	111,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1010,	1100,	101,	1011,	1010,	1100,	1100
2017-01-05 14:06:59 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	101,	1011,	1101,	1110,	1100,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took52ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	1100,	111,	1101,	111,	1011,	11
2017-01-05 14:06:59 AI_Player.update()		110,	11,	110,	11,	1101,	1010,	1101
2017-01-05 14:06:59 AI_Player.update()		1110,	1100,	1110,	1011,	111,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1010,	1010,	101,	1011,	1010,	1100,	1100
2017-01-05 14:06:59 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	101,	1011,	1101,	1110,	1100,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	110,	1101,	101,	1101,	110,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took5ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	11,	111,	1101,	111,	1011,	11
2017-01-05 14:06:59 AI_Player.update()		110,	1100,	110,	11,	1101,	1010,	1101
2017-01-05 14:06:59 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1010,	101,	101,	1011,	1010,	1100,	1100
2017-01-05 14:06:59 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	110,	1011,	1101,	1110,	1100,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took49ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	11,	111,	1101,	111,	1011,	11
2017-01-05 14:06:59 AI_Player.update()		110,	1100,	110,	11,	1101,	1010,	1101
2017-01-05 14:06:59 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1100,	1010,	101,	101,	1011,	1010,	1100
2017-01-05 14:06:59 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	110,	1011,	1101,	1110,	1100,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:06:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:06:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:06:59 AI_Player.update()	Search took5ms
2017-01-05 14:06:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()		110,	11,	111,	11,	111,	1011,	11
2017-01-05 14:06:59 AI_Player.update()		110,	1100,	110,	1011,	1101,	1010,	1101
2017-01-05 14:06:59 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1100,	1010,	101,	1101,	1011,	1010,	1100
2017-01-05 14:06:59 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-05 14:06:59 AI_Player.update()		1110,	110,	1011,	101,	1110,	1100,	101
2017-01-05 14:06:59 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	110,	1001
2017-01-05 14:06:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:06:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:06:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:06:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:06:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:06:59 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:06:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:06:59 AI_Player.update()	update
2017-01-05 14:06:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:00 AI_Player.update()	Search took282ms
2017-01-05 14:07:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:00 AI_Player.update()		110,	1100,	111,	11,	111,	1011,	11
2017-01-05 14:07:00 AI_Player.update()		110,	1010,	110,	1011,	1101,	1010,	1101
2017-01-05 14:07:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-05 14:07:00 AI_Player.update()		1100,	101,	101,	1101,	1011,	1010,	1100
2017-01-05 14:07:00 AI_Player.update()		1110,	110,	1101,	1101,	1011,	11,	1011
2017-01-05 14:07:00 AI_Player.update()		1110,	1100,	1011,	101,	1110,	1100,	101
2017-01-05 14:07:00 AI_Player.update()		1100,	11,	1101,	1101,	1101,	110,	1001
2017-01-05 14:07:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:00 AI_Player.update()	update
2017-01-05 14:07:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:00 AI_Player.update()	update
2017-01-05 14:07:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:00 AI_Player.update()	Search took5ms
2017-01-05 14:07:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:00 AI_Player.update()		110,	1100,	111,	1011,	111,	1011,	11
2017-01-05 14:07:00 AI_Player.update()		110,	1010,	110,	101,	1101,	1010,	1101
2017-01-05 14:07:00 AI_Player.update()		1110,	1010,	1110,	1101,	111,	11,	1011
2017-01-05 14:07:00 AI_Player.update()		1100,	101,	101,	1101,	1011,	1010,	1100
2017-01-05 14:07:00 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 14:07:00 AI_Player.update()		1110,	1100,	1011,	1101,	1110,	1100,	101
2017-01-05 14:07:00 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-05 14:07:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:00 AI_Player.update()	update
2017-01-05 14:07:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:07:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:00 AI_Player.update()	update
2017-01-05 14:07:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:01 AI_Player.update()	Search took1028ms
2017-01-05 14:07:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()		110,	1010,	111,	1011,	111,	1011,	11
2017-01-05 14:07:01 AI_Player.update()		110,	1010,	110,	101,	1101,	1010,	1101
2017-01-05 14:07:01 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-05 14:07:01 AI_Player.update()		1100,	110,	101,	1101,	1011,	1010,	1100
2017-01-05 14:07:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-05 14:07:01 AI_Player.update()		1110,	11,	1011,	1101,	1110,	1100,	101
2017-01-05 14:07:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	110,	1001
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:01 AI_Player.update()	Search took4ms
2017-01-05 14:07:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()		110,	1010,	111,	1011,	111,	110,	11
2017-01-05 14:07:01 AI_Player.update()		110,	1010,	110,	101,	1101,	1011,	1101
2017-01-05 14:07:01 AI_Player.update()		1110,	101,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:01 AI_Player.update()		1100,	110,	101,	1101,	1011,	11,	1100
2017-01-05 14:07:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-05 14:07:01 AI_Player.update()		1110,	11,	1011,	1101,	1110,	11,	101
2017-01-05 14:07:01 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1100,	1001
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 14:07:01 AI_Player.update()	Player b has won!
2017-01-05 14:07:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:01 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:01 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:01 AI_Player.update()	Search took80ms
2017-01-05 14:07:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-05 14:07:01 AI_Player.update()		1001,	110,	11,	1010,	1010,	101,	11
2017-01-05 14:07:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-05 14:07:01 AI_Player.update()		1100,	1100,	1001,	11,	1100,	101,	1110
2017-01-05 14:07:01 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-05 14:07:01 AI_Player.update()		101,	1010,	1001,	110,	1001,	11,	1010
2017-01-05 14:07:01 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:01 AI_Player.update()	Search took1ms
2017-01-05 14:07:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:07:01 AI_Player.update()		1001,	110,	11,	1010,	1010,	110,	11
2017-01-05 14:07:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:07:01 AI_Player.update()		1100,	1100,	1001,	11,	1100,	11,	1110
2017-01-05 14:07:01 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-05 14:07:01 AI_Player.update()		101,	1010,	1001,	110,	1001,	101,	1010
2017-01-05 14:07:01 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:01 AI_Player.update()	Search took65ms
2017-01-05 14:07:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:07:01 AI_Player.update()		110,	11,	1010,	1010,	110,	11,	1001
2017-01-05 14:07:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:07:01 AI_Player.update()		1100,	1100,	1001,	11,	1100,	11,	1110
2017-01-05 14:07:01 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-05 14:07:01 AI_Player.update()		101,	1010,	1001,	110,	1001,	101,	1010
2017-01-05 14:07:01 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:01 AI_Player.update()	Search took1ms
2017-01-05 14:07:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:07:01 AI_Player.update()		110,	11,	1010,	1010,	110,	11,	1001
2017-01-05 14:07:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:07:01 AI_Player.update()		1100,	1001,	11,	1100,	11,	1110,	1100
2017-01-05 14:07:01 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-05 14:07:01 AI_Player.update()		101,	1010,	1001,	110,	1001,	101,	1010
2017-01-05 14:07:01 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:01 AI_Player.update()	Search took99ms
2017-01-05 14:07:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:07:01 AI_Player.update()		11,	1010,	1010,	110,	11,	1001,	110
2017-01-05 14:07:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:07:01 AI_Player.update()		1100,	1001,	11,	1100,	11,	1110,	1100
2017-01-05 14:07:01 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-05 14:07:01 AI_Player.update()		101,	1010,	1001,	110,	1001,	101,	1010
2017-01-05 14:07:01 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:01 AI_Player.update()	Search took2ms
2017-01-05 14:07:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:07:01 AI_Player.update()		1010,	1010,	110,	11,	1001,	110,	11
2017-01-05 14:07:01 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:07:01 AI_Player.update()		1100,	1001,	11,	1100,	11,	1110,	1100
2017-01-05 14:07:01 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-05 14:07:01 AI_Player.update()		101,	1010,	1001,	110,	1001,	101,	1010
2017-01-05 14:07:01 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:01 AI_Player.update()	Search took183ms
2017-01-05 14:07:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 14:07:01 AI_Player.update()		1010,	1010,	110,	1010,	1001,	110,	11
2017-01-05 14:07:01 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:01 AI_Player.update()		1100,	1001,	11,	1100,	11,	1110,	1100
2017-01-05 14:07:01 AI_Player.update()		1110,	1101,	1101,	110,	1011,	11,	1011
2017-01-05 14:07:01 AI_Player.update()		101,	1010,	1001,	101,	1001,	101,	1010
2017-01-05 14:07:01 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:01 AI_Player.update()	Search took1ms
2017-01-05 14:07:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 14:07:01 AI_Player.update()		1010,	1010,	110,	1010,	1001,	110,	11
2017-01-05 14:07:01 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:01 AI_Player.update()		1100,	1100,	1001,	11,	1100,	11,	1110
2017-01-05 14:07:01 AI_Player.update()		1110,	1101,	1101,	110,	1011,	11,	1011
2017-01-05 14:07:01 AI_Player.update()		101,	1010,	1001,	101,	1001,	101,	1010
2017-01-05 14:07:01 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-05 14:07:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:01 AI_Player.update()	update
2017-01-05 14:07:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:02 AI_Player.update()	Search took385ms
2017-01-05 14:07:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-05 14:07:02 AI_Player.update()		1010,	1010,	110,	11,	1001,	110,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-05 14:07:02 AI_Player.update()		1100,	1100,	1001,	1100,	1100,	11,	1110
2017-01-05 14:07:02 AI_Player.update()		1110,	1101,	1101,	11,	1011,	11,	1011
2017-01-05 14:07:02 AI_Player.update()		101,	1010,	1001,	110,	1001,	101,	1010
2017-01-05 14:07:02 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:02 AI_Player.update()	Search took3ms
2017-01-05 14:07:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-05 14:07:02 AI_Player.update()		1010,	1010,	110,	1010,	1001,	110,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:02 AI_Player.update()		1100,	1100,	1001,	11,	1100,	11,	1110
2017-01-05 14:07:02 AI_Player.update()		1110,	1101,	1101,	110,	1011,	11,	1011
2017-01-05 14:07:02 AI_Player.update()		101,	1010,	1001,	101,	1001,	101,	1010
2017-01-05 14:07:02 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:02 AI_Player.update()	Search took375ms
2017-01-05 14:07:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-05 14:07:02 AI_Player.update()		1010,	11,	110,	1010,	1001,	110,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:02 AI_Player.update()		1100,	1101,	1001,	11,	1100,	11,	1110
2017-01-05 14:07:02 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 14:07:02 AI_Player.update()		101,	110,	1001,	101,	1001,	101,	1010
2017-01-05 14:07:02 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:02 AI_Player.update()	Search took2ms
2017-01-05 14:07:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-05 14:07:02 AI_Player.update()		1010,	1100,	110,	1010,	1001,	110,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:02 AI_Player.update()		1100,	1010,	1001,	11,	1100,	11,	1110
2017-01-05 14:07:02 AI_Player.update()		1110,	110,	1101,	110,	1011,	11,	1011
2017-01-05 14:07:02 AI_Player.update()		101,	101,	1001,	101,	1001,	101,	1010
2017-01-05 14:07:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:02 AI_Player.update()	Search took17ms
2017-01-05 14:07:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 14:07:02 AI_Player.update()		1010,	1100,	110,	11,	1001,	110,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 14:07:02 AI_Player.update()		1100,	1010,	1001,	1100,	1100,	11,	1110
2017-01-05 14:07:02 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-05 14:07:02 AI_Player.update()		101,	101,	1001,	110,	1001,	101,	1010
2017-01-05 14:07:02 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:02 AI_Player.update()	Search took1ms
2017-01-05 14:07:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-05 14:07:02 AI_Player.update()		1010,	1100,	110,	11,	1001,	110,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 14:07:02 AI_Player.update()		1110,	1100,	1010,	1001,	1100,	1100,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-05 14:07:02 AI_Player.update()		101,	101,	1001,	110,	1001,	101,	1010
2017-01-05 14:07:02 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:02 AI_Player.update()	Search took145ms
2017-01-05 14:07:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-05 14:07:02 AI_Player.update()		1010,	1100,	110,	11,	1001,	101,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1100,	1011
2017-01-05 14:07:02 AI_Player.update()		1110,	1100,	1010,	1001,	1100,	11,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-05 14:07:02 AI_Player.update()		101,	101,	1001,	110,	1001,	11,	1010
2017-01-05 14:07:02 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:02 AI_Player.update()	Search took2ms
2017-01-05 14:07:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 14:07:02 AI_Player.update()		1010,	1100,	110,	1010,	1001,	101,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1100,	1011
2017-01-05 14:07:02 AI_Player.update()		1110,	1100,	1010,	11,	1100,	11,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 14:07:02 AI_Player.update()		101,	101,	1001,	101,	1001,	11,	1010
2017-01-05 14:07:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:02 AI_Player.update()	Search took157ms
2017-01-05 14:07:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 14:07:02 AI_Player.update()		1010,	1100,	110,	1010,	1001,	101,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1100,	1011
2017-01-05 14:07:02 AI_Player.update()		1100,	1010,	11,	1100,	11,	11,	1110
2017-01-05 14:07:02 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 14:07:02 AI_Player.update()		101,	101,	1001,	101,	1001,	11,	1010
2017-01-05 14:07:02 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:02 AI_Player.update()	Search took3ms
2017-01-05 14:07:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-05 14:07:02 AI_Player.update()		1010,	1101,	110,	1010,	1001,	101,	11
2017-01-05 14:07:02 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-05 14:07:02 AI_Player.update()		1100,	110,	11,	1100,	11,	11,	1110
2017-01-05 14:07:02 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-05 14:07:02 AI_Player.update()		101,	1010,	1001,	101,	1001,	11,	1010
2017-01-05 14:07:02 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-05 14:07:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:02 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:02 AI_Player.update()	update
2017-01-05 14:07:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:03 AI_Player.update()	Search took210ms
2017-01-05 14:07:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-05 14:07:03 AI_Player.update()		1010,	1100,	110,	1010,	1001,	101,	11
2017-01-05 14:07:03 AI_Player.update()		1110,	1101,	1110,	1001,	111,	1100,	1011
2017-01-05 14:07:03 AI_Player.update()		1100,	1010,	11,	1100,	11,	11,	1110
2017-01-05 14:07:03 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-05 14:07:03 AI_Player.update()		101,	101,	1001,	101,	1001,	11,	1010
2017-01-05 14:07:03 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:03 AI_Player.update()	Search took2ms
2017-01-05 14:07:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 14:07:03 AI_Player.update()		1010,	11,	110,	1010,	1001,	101,	11
2017-01-05 14:07:03 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-05 14:07:03 AI_Player.update()		1100,	1101,	11,	1100,	11,	11,	1110
2017-01-05 14:07:03 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 14:07:03 AI_Player.update()		101,	110,	1001,	101,	1001,	11,	1010
2017-01-05 14:07:03 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:03 AI_Player.update()	Search took185ms
2017-01-05 14:07:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()		110,	1010,	111,	1100,	111,	110,	11
2017-01-05 14:07:03 AI_Player.update()		1010,	11,	110,	11,	1001,	101,	11
2017-01-05 14:07:03 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 14:07:03 AI_Player.update()		1100,	1101,	11,	1001,	11,	11,	1110
2017-01-05 14:07:03 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-05 14:07:03 AI_Player.update()		101,	110,	1001,	110,	1001,	11,	1010
2017-01-05 14:07:03 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:03 AI_Player.update()	Search took3ms
2017-01-05 14:07:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 14:07:03 AI_Player.update()		1010,	11,	110,	1010,	1001,	101,	11
2017-01-05 14:07:03 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-05 14:07:03 AI_Player.update()		1100,	1101,	11,	1100,	11,	11,	1110
2017-01-05 14:07:03 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-05 14:07:03 AI_Player.update()		101,	110,	1001,	101,	1001,	11,	1010
2017-01-05 14:07:03 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:03 AI_Player.update()	Search took132ms
2017-01-05 14:07:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 14:07:03 AI_Player.update()		1010,	1010,	110,	1010,	1001,	101,	11
2017-01-05 14:07:03 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-05 14:07:03 AI_Player.update()		1100,	1100,	11,	1100,	11,	11,	1110
2017-01-05 14:07:03 AI_Player.update()		1110,	1101,	1101,	110,	1011,	101,	1011
2017-01-05 14:07:03 AI_Player.update()		101,	1010,	1001,	101,	1001,	11,	1010
2017-01-05 14:07:03 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:07:03 AI_Player.update()	Player a has won!
2017-01-05 14:07:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:03 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:03 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:03 AI_Player.update()	Search took71ms
2017-01-05 14:07:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 14:07:03 AI_Player.update()		1100,	101,	1110,	111,	1100,	101,	101
2017-01-05 14:07:03 AI_Player.update()		1110,	101,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:03 AI_Player.update()		1001,	1100,	1010,	1100,	110,	110,	110
2017-01-05 14:07:03 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 14:07:03 AI_Player.update()		1001,	110,	1010,	1001,	1001,	1100,	1010
2017-01-05 14:07:03 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:03 AI_Player.update()	Search took3ms
2017-01-05 14:07:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-05 14:07:03 AI_Player.update()		1100,	101,	1110,	111,	1100,	101,	101
2017-01-05 14:07:03 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:03 AI_Player.update()		1001,	101,	1010,	1100,	110,	110,	110
2017-01-05 14:07:03 AI_Player.update()		1110,	110,	1101,	111,	1011,	1001,	1011
2017-01-05 14:07:03 AI_Player.update()		1001,	11,	1010,	1001,	1001,	1100,	1010
2017-01-05 14:07:03 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:03 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:03 AI_Player.update()	update
2017-01-05 14:07:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:04 AI_Player.update()	Search took719ms
2017-01-05 14:07:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:04 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 14:07:04 AI_Player.update()		1100,	101,	1110,	111,	1100,	101,	101
2017-01-05 14:07:04 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:04 AI_Player.update()		1001,	101,	1010,	1100,	110,	1100,	110
2017-01-05 14:07:04 AI_Player.update()		1110,	110,	1101,	111,	1011,	110,	1011
2017-01-05 14:07:04 AI_Player.update()		1001,	11,	1010,	1001,	1001,	1001,	1010
2017-01-05 14:07:04 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:04 AI_Player.update()	update
2017-01-05 14:07:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:04 AI_Player.update()	update
2017-01-05 14:07:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:04 AI_Player.update()	Search took3ms
2017-01-05 14:07:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:04 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 14:07:04 AI_Player.update()		1100,	1100,	1110,	111,	1100,	101,	101
2017-01-05 14:07:04 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:04 AI_Player.update()		1001,	110,	1010,	1100,	110,	1100,	110
2017-01-05 14:07:04 AI_Player.update()		1110,	11,	1101,	111,	1011,	110,	1011
2017-01-05 14:07:04 AI_Player.update()		1001,	1110,	1010,	1001,	1001,	1001,	1010
2017-01-05 14:07:04 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:04 AI_Player.update()	update
2017-01-05 14:07:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:04 AI_Player.update()	update
2017-01-05 14:07:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:04 AI_Player.update()	Search took660ms
2017-01-05 14:07:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:04 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-05 14:07:04 AI_Player.update()		1100,	1100,	1110,	1110,	1100,	101,	101
2017-01-05 14:07:04 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:04 AI_Player.update()		1001,	110,	1010,	111,	110,	1100,	110
2017-01-05 14:07:04 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-05 14:07:04 AI_Player.update()		1001,	1110,	1010,	101,	1001,	1001,	1010
2017-01-05 14:07:04 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:04 AI_Player.update()	update
2017-01-05 14:07:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:04 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:04 AI_Player.update()	update
2017-01-05 14:07:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:04 AI_Player.update()	Search took3ms
2017-01-05 14:07:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:04 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-05 14:07:04 AI_Player.update()		1100,	1100,	1110,	1110,	1100,	101,	101
2017-01-05 14:07:04 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:04 AI_Player.update()		110,	1010,	111,	110,	1100,	110,	1001
2017-01-05 14:07:04 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-05 14:07:04 AI_Player.update()		1001,	1110,	1010,	101,	1001,	1001,	1010
2017-01-05 14:07:04 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:05 AI_Player.update()	Search took85ms
2017-01-05 14:07:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 14:07:05 AI_Player.update()		1100,	1100,	1110,	111,	1100,	101,	101
2017-01-05 14:07:05 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:05 AI_Player.update()		110,	1010,	111,	1100,	1100,	110,	1001
2017-01-05 14:07:05 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-05 14:07:05 AI_Player.update()		1001,	1110,	1010,	1001,	1001,	1001,	1010
2017-01-05 14:07:05 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:05 AI_Player.update()	Search took5ms
2017-01-05 14:07:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 14:07:05 AI_Player.update()		1100,	101,	1110,	111,	1100,	101,	101
2017-01-05 14:07:05 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:05 AI_Player.update()		110,	11,	111,	1100,	1100,	110,	1001
2017-01-05 14:07:05 AI_Player.update()		1110,	1110,	1101,	110,	1011,	110,	1011
2017-01-05 14:07:05 AI_Player.update()		1001,	101,	1010,	1001,	1001,	1001,	1010
2017-01-05 14:07:05 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:05 AI_Player.update()	Search took139ms
2017-01-05 14:07:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-05 14:07:05 AI_Player.update()		1100,	101,	1110,	111,	1100,	101,	101
2017-01-05 14:07:05 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:05 AI_Player.update()		110,	11,	111,	1100,	1100,	110,	1001
2017-01-05 14:07:05 AI_Player.update()		1110,	1110,	1101,	110,	1011,	110,	1011
2017-01-05 14:07:05 AI_Player.update()		1010,	1001,	101,	1010,	1001,	1001,	1001
2017-01-05 14:07:05 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:05 AI_Player.update()	Search took3ms
2017-01-05 14:07:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 14:07:05 AI_Player.update()		1100,	1010,	1110,	111,	1100,	101,	101
2017-01-05 14:07:05 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:05 AI_Player.update()		110,	1110,	111,	1100,	1100,	110,	1001
2017-01-05 14:07:05 AI_Player.update()		1110,	1001,	1101,	110,	1011,	110,	1011
2017-01-05 14:07:05 AI_Player.update()		1010,	101,	101,	1010,	1001,	1001,	1001
2017-01-05 14:07:05 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:05 AI_Player.update()	Search took272ms
2017-01-05 14:07:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 14:07:05 AI_Player.update()		1100,	1010,	1110,	111,	1100,	101,	101
2017-01-05 14:07:05 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:05 AI_Player.update()		1001,	110,	1110,	111,	1100,	1100,	110
2017-01-05 14:07:05 AI_Player.update()		1110,	1001,	1101,	110,	1011,	110,	1011
2017-01-05 14:07:05 AI_Player.update()		1010,	101,	101,	1010,	1001,	1001,	1001
2017-01-05 14:07:05 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:05 AI_Player.update()	Search took1ms
2017-01-05 14:07:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-05 14:07:05 AI_Player.update()		1100,	1010,	1110,	111,	1100,	101,	101
2017-01-05 14:07:05 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:05 AI_Player.update()		110,	1110,	111,	1100,	1100,	110,	1001
2017-01-05 14:07:05 AI_Player.update()		1110,	1001,	1101,	110,	1011,	110,	1011
2017-01-05 14:07:05 AI_Player.update()		1010,	101,	101,	1010,	1001,	1001,	1001
2017-01-05 14:07:05 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:05 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:05 AI_Player.update()	update
2017-01-05 14:07:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:06 AI_Player.update()	Search took598ms
2017-01-05 14:07:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:07:06 AI_Player.update()		1100,	1010,	1110,	111,	1100,	1010,	101
2017-01-05 14:07:06 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:06 AI_Player.update()		110,	1110,	111,	1100,	1100,	101,	1001
2017-01-05 14:07:06 AI_Player.update()		1110,	1001,	1101,	110,	1011,	110,	1011
2017-01-05 14:07:06 AI_Player.update()		1010,	101,	101,	1010,	1001,	110,	1001
2017-01-05 14:07:06 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 14:07:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()	update
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:07:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()	update
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:06 AI_Player.update()	Search took3ms
2017-01-05 14:07:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-05 14:07:06 AI_Player.update()		1100,	11,	1110,	111,	1100,	1010,	101
2017-01-05 14:07:06 AI_Player.update()		1110,	1110,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:06 AI_Player.update()		110,	1001,	111,	1100,	1100,	101,	1001
2017-01-05 14:07:06 AI_Player.update()		1110,	101,	1101,	110,	1011,	110,	1011
2017-01-05 14:07:06 AI_Player.update()		1010,	1100,	101,	1010,	1001,	110,	1001
2017-01-05 14:07:06 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-05 14:07:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:07:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()	update
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:07:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()	update
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:06 AI_Player.update()	Search took421ms
2017-01-05 14:07:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:07:06 AI_Player.update()		1100,	1010,	1110,	111,	1100,	1010,	101
2017-01-05 14:07:06 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:06 AI_Player.update()		110,	1110,	111,	1100,	1100,	101,	1001
2017-01-05 14:07:06 AI_Player.update()		1110,	1001,	1101,	110,	1011,	110,	1011
2017-01-05 14:07:06 AI_Player.update()		1010,	101,	101,	1010,	1001,	110,	1001
2017-01-05 14:07:06 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-05 14:07:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:07:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()	update
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:06 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:07:06 AI_Player.update()	Player a has won!
2017-01-05 14:07:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:06 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:06 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()	update
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:06 AI_Player.update()	Search took120ms
2017-01-05 14:07:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()		110,	1010,	111,	1110,	111,	1011,	11
2017-01-05 14:07:06 AI_Player.update()		1100,	101,	111,	11,	1110,	110,	101
2017-01-05 14:07:06 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-05 14:07:06 AI_Player.update()		1100,	1100,	1010,	110,	1001,	1100,	1010
2017-01-05 14:07:06 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-05 14:07:06 AI_Player.update()		110,	1011,	110,	1010,	1101,	1101,	1110
2017-01-05 14:07:06 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()	update
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()	update
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:06 AI_Player.update()	Search took0ms
2017-01-05 14:07:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-05 14:07:06 AI_Player.update()		1100,	101,	111,	11,	1110,	101,	101
2017-01-05 14:07:06 AI_Player.update()		1110,	110,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:06 AI_Player.update()		1100,	1100,	1010,	110,	1001,	1110,	1010
2017-01-05 14:07:06 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:06 AI_Player.update()		110,	1011,	110,	1010,	1101,	1010,	1110
2017-01-05 14:07:06 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()	update
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:06 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:06 AI_Player.update()	update
2017-01-05 14:07:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:07 AI_Player.update()	Search took288ms
2017-01-05 14:07:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()		110,	1010,	111,	1110,	111,	1011,	11
2017-01-05 14:07:07 AI_Player.update()		1100,	101,	111,	11,	1110,	110,	101
2017-01-05 14:07:07 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-05 14:07:07 AI_Player.update()		1100,	1100,	1010,	110,	1001,	1100,	1010
2017-01-05 14:07:07 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-05 14:07:07 AI_Player.update()		110,	1011,	110,	1010,	1101,	1101,	1110
2017-01-05 14:07:07 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:07 AI_Player.update()	Search took1ms
2017-01-05 14:07:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-05 14:07:07 AI_Player.update()		1100,	101,	111,	11,	1110,	101,	101
2017-01-05 14:07:07 AI_Player.update()		1110,	110,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:07 AI_Player.update()		1100,	1100,	1010,	110,	1001,	1110,	1010
2017-01-05 14:07:07 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:07 AI_Player.update()		110,	1011,	110,	1010,	1101,	1010,	1110
2017-01-05 14:07:07 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:07 AI_Player.update()	Search took315ms
2017-01-05 14:07:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-05 14:07:07 AI_Player.update()		1100,	101,	111,	11,	1110,	1100,	101
2017-01-05 14:07:07 AI_Player.update()		1110,	110,	1110,	1101,	111,	1110,	1011
2017-01-05 14:07:07 AI_Player.update()		1100,	1100,	1010,	110,	1001,	1101,	1010
2017-01-05 14:07:07 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 14:07:07 AI_Player.update()		110,	1011,	110,	1010,	1101,	1011,	1110
2017-01-05 14:07:07 AI_Player.update()		1100,	11,	1101,	101,	1101,	110,	1001
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:07 AI_Player.update()	Search took3ms
2017-01-05 14:07:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-05 14:07:07 AI_Player.update()		1100,	101,	111,	11,	1110,	101,	101
2017-01-05 14:07:07 AI_Player.update()		1110,	110,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:07 AI_Player.update()		1100,	1100,	1010,	110,	1001,	1110,	1010
2017-01-05 14:07:07 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:07 AI_Player.update()		110,	1011,	110,	1010,	1101,	1010,	1110
2017-01-05 14:07:07 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:07 AI_Player.update()	Search took208ms
2017-01-05 14:07:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()		110,	101,	111,	1110,	111,	110,	11
2017-01-05 14:07:07 AI_Player.update()		1100,	110,	111,	11,	1110,	101,	101
2017-01-05 14:07:07 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:07 AI_Player.update()		1100,	110,	1010,	110,	1001,	1110,	1010
2017-01-05 14:07:07 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:07 AI_Player.update()		110,	11,	110,	1010,	1101,	1010,	1110
2017-01-05 14:07:07 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:07 AI_Player.update()	Search took1ms
2017-01-05 14:07:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:07:07 AI_Player.update()		1100,	1100,	111,	11,	1110,	101,	101
2017-01-05 14:07:07 AI_Player.update()		1110,	110,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:07 AI_Player.update()		1100,	1011,	1010,	110,	1001,	1110,	1010
2017-01-05 14:07:07 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:07 AI_Player.update()		110,	1010,	110,	1010,	1101,	1010,	1110
2017-01-05 14:07:07 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:07 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:07 AI_Player.update()	update
2017-01-05 14:07:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:08 AI_Player.update()	Search took453ms
2017-01-05 14:07:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:08 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:07:08 AI_Player.update()		1100,	1100,	111,	11,	1110,	101,	101
2017-01-05 14:07:08 AI_Player.update()		1110,	110,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:08 AI_Player.update()		1100,	1011,	1010,	110,	1001,	1110,	1010
2017-01-05 14:07:08 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:08 AI_Player.update()		1010,	110,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:08 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:08 AI_Player.update()	update
2017-01-05 14:07:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:08 AI_Player.update()	update
2017-01-05 14:07:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:08 AI_Player.update()	Search took1ms
2017-01-05 14:07:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:08 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:07:08 AI_Player.update()		1100,	110,	111,	11,	1110,	101,	101
2017-01-05 14:07:08 AI_Player.update()		1110,	1011,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:08 AI_Player.update()		1100,	11,	1010,	110,	1001,	1110,	1010
2017-01-05 14:07:08 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:08 AI_Player.update()		1010,	101,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:08 AI_Player.update()		1100,	110,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:08 AI_Player.update()	update
2017-01-05 14:07:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:08 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:08 AI_Player.update()	update
2017-01-05 14:07:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:09 AI_Player.update()	Search took997ms
2017-01-05 14:07:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:07:09 AI_Player.update()		1100,	110,	111,	11,	1110,	101,	101
2017-01-05 14:07:09 AI_Player.update()		1110,	1011,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	1100,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:09 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	101,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:09 AI_Player.update()		1100,	110,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:09 AI_Player.update()	Search took1ms
2017-01-05 14:07:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:07:09 AI_Player.update()		1100,	1011,	111,	11,	1110,	101,	101
2017-01-05 14:07:09 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:09 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:09 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:09 AI_Player.update()	Search took445ms
2017-01-05 14:07:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()		110,	110,	111,	1110,	111,	1011,	11
2017-01-05 14:07:09 AI_Player.update()		1100,	1011,	111,	11,	1110,	110,	101
2017-01-05 14:07:09 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	11,	1010,	110,	1100,	1110
2017-01-05 14:07:09 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	1010,	1101,	1010,	1101,	110
2017-01-05 14:07:09 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1110,	1001
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:09 AI_Player.update()	Search took2ms
2017-01-05 14:07:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:07:09 AI_Player.update()		1100,	1011,	111,	11,	1110,	101,	101
2017-01-05 14:07:09 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:09 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:09 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:09 AI_Player.update()	Search took136ms
2017-01-05 14:07:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()		110,	1011,	111,	1110,	111,	110,	11
2017-01-05 14:07:09 AI_Player.update()		1100,	1100,	111,	11,	1110,	101,	101
2017-01-05 14:07:09 AI_Player.update()		1110,	110,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	101,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:09 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	1100,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:09 AI_Player.update()		1100,	110,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:09 AI_Player.update()	Search took1ms
2017-01-05 14:07:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:07:09 AI_Player.update()		1100,	110,	111,	11,	1110,	101,	101
2017-01-05 14:07:09 AI_Player.update()		1110,	101,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:09 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:09 AI_Player.update()	Search took140ms
2017-01-05 14:07:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()		110,	1100,	111,	1110,	111,	101,	11
2017-01-05 14:07:09 AI_Player.update()		1100,	110,	111,	11,	1110,	1100,	101
2017-01-05 14:07:09 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	11,	1010,	110,	1101,	1110
2017-01-05 14:07:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	1010,	1101,	1010,	1011,	110
2017-01-05 14:07:09 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:09 AI_Player.update()	Search took2ms
2017-01-05 14:07:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:07:09 AI_Player.update()		1100,	110,	111,	11,	1110,	101,	101
2017-01-05 14:07:09 AI_Player.update()		1110,	101,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:09 AI_Player.update()		1010,	110,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:09 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:09 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:09 AI_Player.update()	update
2017-01-05 14:07:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:10 AI_Player.update()	Search took560ms
2017-01-05 14:07:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:10 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:07:10 AI_Player.update()		1100,	101,	111,	11,	1110,	101,	101
2017-01-05 14:07:10 AI_Player.update()		1110,	110,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:10 AI_Player.update()		1010,	1100,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:10 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:10 AI_Player.update()		1010,	1011,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:10 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:10 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:10 AI_Player.update()	update
2017-01-05 14:07:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:10 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:10 AI_Player.update()	update
2017-01-05 14:07:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:10 AI_Player.update()	Search took1ms
2017-01-05 14:07:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:10 AI_Player.update()		110,	101,	111,	1110,	111,	110,	11
2017-01-05 14:07:10 AI_Player.update()		1100,	110,	111,	11,	1110,	101,	101
2017-01-05 14:07:10 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:10 AI_Player.update()		1010,	110,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:10 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:10 AI_Player.update()		1010,	1100,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:10 AI_Player.update()		1100,	110,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:10 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:10 AI_Player.update()	update
2017-01-05 14:07:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:10 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:10 AI_Player.update()	update
2017-01-05 14:07:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:11 AI_Player.update()	Search took672ms
2017-01-05 14:07:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:07:11 AI_Player.update()		1100,	1100,	111,	11,	1110,	101,	101
2017-01-05 14:07:11 AI_Player.update()		1110,	110,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	1011,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	110,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:11 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:11 AI_Player.update()	Search took3ms
2017-01-05 14:07:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:07:11 AI_Player.update()		1100,	110,	111,	11,	1110,	101,	101
2017-01-05 14:07:11 AI_Player.update()		1110,	1011,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	1100,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:11 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	101,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:11 AI_Player.update()		1100,	110,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:11 AI_Player.update()	Search took169ms
2017-01-05 14:07:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:07:11 AI_Player.update()		1100,	1011,	111,	11,	1110,	101,	101
2017-01-05 14:07:11 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	110,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:11 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	110,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:11 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:11 AI_Player.update()	Search took2ms
2017-01-05 14:07:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()		110,	1011,	111,	1110,	111,	110,	11
2017-01-05 14:07:11 AI_Player.update()		1100,	1100,	111,	11,	1110,	101,	101
2017-01-05 14:07:11 AI_Player.update()		1110,	110,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	101,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:11 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	1100,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:11 AI_Player.update()		1100,	110,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:11 AI_Player.update()	Search took514ms
2017-01-05 14:07:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-05 14:07:11 AI_Player.update()		1100,	110,	111,	11,	1110,	101,	101
2017-01-05 14:07:11 AI_Player.update()		1110,	101,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	110,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:11 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	110,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:11 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:11 AI_Player.update()	Search took1ms
2017-01-05 14:07:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-05 14:07:11 AI_Player.update()		1100,	101,	111,	11,	1110,	101,	101
2017-01-05 14:07:11 AI_Player.update()		1110,	110,	1110,	1101,	111,	1100,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	1100,	11,	1010,	110,	1001,	1110
2017-01-05 14:07:11 AI_Player.update()		1110,	110,	1101,	101,	1011,	1101,	1011
2017-01-05 14:07:11 AI_Player.update()		1010,	1011,	1010,	1101,	1010,	1110,	110
2017-01-05 14:07:11 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:11 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:11 AI_Player.update()	update
2017-01-05 14:07:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:12 AI_Player.update()	Search took627ms
2017-01-05 14:07:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-05 14:07:12 AI_Player.update()		1100,	101,	111,	1110,	1110,	101,	101
2017-01-05 14:07:12 AI_Player.update()		1110,	110,	1110,	11,	111,	1100,	1011
2017-01-05 14:07:12 AI_Player.update()		1010,	1100,	11,	1101,	110,	1001,	1110
2017-01-05 14:07:12 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:07:12 AI_Player.update()		1010,	1011,	1010,	101,	1010,	1110,	110
2017-01-05 14:07:12 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1011,	1001
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	5 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:07:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:12 AI_Player.update()	Search took2ms
2017-01-05 14:07:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:07:12 AI_Player.update()		1100,	110,	111,	1110,	1110,	101,	101
2017-01-05 14:07:12 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-05 14:07:12 AI_Player.update()		1010,	110,	11,	1101,	110,	1001,	1110
2017-01-05 14:07:12 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:07:12 AI_Player.update()		1010,	1100,	1010,	101,	1010,	1110,	110
2017-01-05 14:07:12 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1011,	1001
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:12 AI_Player.update()	Search took137ms
2017-01-05 14:07:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:07:12 AI_Player.update()		101,	1100,	110,	111,	1110,	1110,	101
2017-01-05 14:07:12 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-05 14:07:12 AI_Player.update()		1010,	110,	11,	1101,	110,	1001,	1110
2017-01-05 14:07:12 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1101,	1011
2017-01-05 14:07:12 AI_Player.update()		1010,	1100,	1010,	101,	1010,	1110,	110
2017-01-05 14:07:12 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1011,	1001
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	6 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:07:12 AI_Player.update()	Player a has won!
2017-01-05 14:07:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:12 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:12 AI_Player.update()	Search took180ms
2017-01-05 14:07:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-05 14:07:12 AI_Player.update()		110,	1011,	1010,	1001,	1001,	101,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	11,	1110,	1101,	111,	11,	1011
2017-01-05 14:07:12 AI_Player.update()		101,	11,	11,	110,	1001,	1010,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-05 14:07:12 AI_Player.update()		110,	11,	101,	11,	11,	1100,	101
2017-01-05 14:07:12 AI_Player.update()		1100,	11,	1101,	101,	1101,	1101,	1001
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:12 AI_Player.update()	Search took1ms
2017-01-05 14:07:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-05 14:07:12 AI_Player.update()		110,	1011,	1010,	1001,	1001,	11,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:12 AI_Player.update()		101,	11,	11,	110,	1001,	1010,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:12 AI_Player.update()		110,	11,	101,	11,	11,	1101,	101
2017-01-05 14:07:12 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:12 AI_Player.update()	Search took164ms
2017-01-05 14:07:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-05 14:07:12 AI_Player.update()		110,	1011,	1010,	1010,	1001,	11,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:07:12 AI_Player.update()		101,	11,	11,	1101,	1001,	1010,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-05 14:07:12 AI_Player.update()		110,	11,	101,	101,	11,	1101,	101
2017-01-05 14:07:12 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:12 AI_Player.update()	Search took1ms
2017-01-05 14:07:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()		110,	1011,	111,	101,	111,	101,	11
2017-01-05 14:07:12 AI_Player.update()		110,	11,	1010,	1010,	1001,	11,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-05 14:07:12 AI_Player.update()		101,	1001,	11,	1101,	1001,	1010,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	11,	1101,	110,	1011,	1100,	1011
2017-01-05 14:07:12 AI_Player.update()		110,	11,	101,	101,	11,	1101,	101
2017-01-05 14:07:12 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1010,	1001
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:12 AI_Player.update()	Search took34ms
2017-01-05 14:07:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-05 14:07:12 AI_Player.update()		110,	11,	1010,	1001,	1001,	11,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:12 AI_Player.update()		101,	1001,	11,	110,	1001,	1010,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:12 AI_Player.update()		110,	11,	101,	11,	11,	1101,	101
2017-01-05 14:07:12 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:12 AI_Player.update()	Search took3ms
2017-01-05 14:07:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:12 AI_Player.update()		110,	11,	1010,	1001,	1001,	11,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:12 AI_Player.update()		101,	11,	11,	110,	1001,	1010,	11
2017-01-05 14:07:12 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:12 AI_Player.update()		110,	1101,	101,	11,	11,	1101,	101
2017-01-05 14:07:12 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:12 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:12 AI_Player.update()	update
2017-01-05 14:07:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took90ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		110,	11,	1010,	1001,	1001,	11,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		11,	11,	110,	1001,	1010,	11,	101
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		110,	1101,	101,	11,	11,	1101,	101
2017-01-05 14:07:13 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took2ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		11,	110,	11,	1010,	1001,	1001,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		11,	11,	110,	1001,	1010,	11,	101
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		110,	1101,	101,	11,	11,	1101,	101
2017-01-05 14:07:13 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took35ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		110,	11,	1010,	1001,	1001,	11,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		11,	11,	110,	1001,	1010,	11,	101
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		110,	1101,	101,	11,	11,	1101,	101
2017-01-05 14:07:13 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took1ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		11,	110,	11,	1010,	1001,	1001,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		11,	11,	110,	1001,	1010,	11,	101
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		110,	1101,	101,	11,	11,	1101,	101
2017-01-05 14:07:13 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took299ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		11,	110,	11,	1010,	1001,	1001,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		101,	11,	11,	110,	1001,	1010,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		110,	1101,	101,	11,	11,	1101,	101
2017-01-05 14:07:13 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took1ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		11,	110,	11,	1010,	1001,	1001,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		101,	11,	11,	110,	1001,	1010,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		1101,	101,	11,	11,	1101,	101,	110
2017-01-05 14:07:13 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took83ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		11,	1001,	11,	1010,	1001,	1001,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		101,	11,	11,	110,	1001,	1010,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		1101,	1011,	11,	11,	1101,	101,	110
2017-01-05 14:07:13 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took3ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		11,	11,	11,	1010,	1001,	1001,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		101,	101,	11,	110,	1001,	1010,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		1101,	11,	11,	11,	1101,	101,	110
2017-01-05 14:07:13 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took120ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		11,	11,	11,	1010,	1001,	1001,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		101,	11,	110,	1001,	1010,	11,	101
2017-01-05 14:07:13 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		1101,	11,	11,	11,	1101,	101,	110
2017-01-05 14:07:13 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:07:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took3ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		11,	11,	11,	1010,	1001,	1001,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		101,	1011,	110,	1001,	1010,	11,	101
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		1101,	110,	11,	11,	1101,	101,	110
2017-01-05 14:07:13 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took313ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		11,	11,	11,	1010,	1001,	1001,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	1011,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		101,	11,	110,	1001,	1010,	11,	101
2017-01-05 14:07:13 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		1101,	1001,	11,	11,	1101,	101,	110
2017-01-05 14:07:13 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:07:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:13 AI_Player.update()	Search took3ms
2017-01-05 14:07:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:13 AI_Player.update()		11,	1011,	11,	1010,	1001,	1001,	11
2017-01-05 14:07:13 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:13 AI_Player.update()		101,	110,	110,	1001,	1010,	11,	101
2017-01-05 14:07:13 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:13 AI_Player.update()		1101,	11,	11,	11,	1101,	101,	110
2017-01-05 14:07:13 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:13 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:07:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:13 AI_Player.update()	update
2017-01-05 14:07:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:14 AI_Player.update()	Search took311ms
2017-01-05 14:07:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:14 AI_Player.update()		1011,	11,	1010,	1001,	1001,	11,	11
2017-01-05 14:07:14 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:14 AI_Player.update()		101,	110,	110,	1001,	1010,	11,	101
2017-01-05 14:07:14 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:14 AI_Player.update()		1101,	11,	11,	11,	1101,	101,	110
2017-01-05 14:07:14 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:14 AI_Player.update()	Search took4ms
2017-01-05 14:07:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:14 AI_Player.update()		1011,	11,	1010,	1001,	1001,	11,	11
2017-01-05 14:07:14 AI_Player.update()		1110,	110,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:14 AI_Player.update()		101,	1001,	110,	1001,	1010,	11,	101
2017-01-05 14:07:14 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:14 AI_Player.update()		1101,	11,	11,	11,	1101,	101,	110
2017-01-05 14:07:14 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:14 AI_Player.update()	Search took244ms
2017-01-05 14:07:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-05 14:07:14 AI_Player.update()		11,	1010,	1001,	1001,	11,	11,	1011
2017-01-05 14:07:14 AI_Player.update()		1110,	110,	1110,	1101,	111,	1010,	1011
2017-01-05 14:07:14 AI_Player.update()		101,	1001,	110,	1001,	1010,	11,	101
2017-01-05 14:07:14 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:14 AI_Player.update()		1101,	11,	11,	11,	1101,	101,	110
2017-01-05 14:07:14 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	6 2
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:07:14 AI_Player.update()	Player a has won!
2017-01-05 14:07:14 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:14 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:14 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:14 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:14 AI_Player.update()	Search took153ms
2017-01-05 14:07:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()		110,	11,	111,	1010,	111,	1101,	11
2017-01-05 14:07:14 AI_Player.update()		110,	1100,	1001,	101,	101,	1100,	1010
2017-01-05 14:07:14 AI_Player.update()		1110,	11,	1110,	1011,	111,	1010,	1011
2017-01-05 14:07:14 AI_Player.update()		1010,	1110,	110,	1100,	111,	1010,	101
2017-01-05 14:07:14 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	101,	1011
2017-01-05 14:07:14 AI_Player.update()		11,	110,	101,	101,	1001,	111,	110
2017-01-05 14:07:14 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:14 AI_Player.update()	Search took1ms
2017-01-05 14:07:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()		110,	1100,	111,	1010,	111,	1101,	11
2017-01-05 14:07:14 AI_Player.update()		110,	11,	1001,	101,	101,	1100,	1010
2017-01-05 14:07:14 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-05 14:07:14 AI_Player.update()		1010,	1010,	110,	1100,	111,	1010,	101
2017-01-05 14:07:14 AI_Player.update()		1110,	110,	1101,	1110,	1011,	101,	1011
2017-01-05 14:07:14 AI_Player.update()		11,	1101,	101,	101,	1001,	111,	110
2017-01-05 14:07:14 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:14 AI_Player.update()	Search took57ms
2017-01-05 14:07:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()		110,	1100,	111,	101,	111,	1101,	11
2017-01-05 14:07:14 AI_Player.update()		110,	11,	1001,	1011,	101,	1100,	1010
2017-01-05 14:07:14 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-05 14:07:14 AI_Player.update()		1010,	1010,	110,	1110,	111,	1010,	101
2017-01-05 14:07:14 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:14 AI_Player.update()		11,	1101,	101,	101,	1001,	111,	110
2017-01-05 14:07:14 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:14 AI_Player.update()	Search took1ms
2017-01-05 14:07:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()		110,	11,	111,	101,	111,	1101,	11
2017-01-05 14:07:14 AI_Player.update()		110,	1110,	1001,	1011,	101,	1100,	1010
2017-01-05 14:07:14 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-05 14:07:14 AI_Player.update()		1010,	110,	110,	1110,	111,	1010,	101
2017-01-05 14:07:14 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:14 AI_Player.update()		11,	11,	101,	101,	1001,	111,	110
2017-01-05 14:07:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-05 14:07:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:14 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:14 AI_Player.update()	update
2017-01-05 14:07:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:15 AI_Player.update()	Search took285ms
2017-01-05 14:07:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()		110,	11,	111,	1011,	111,	1101,	11
2017-01-05 14:07:15 AI_Player.update()		110,	1110,	1001,	1100,	101,	1100,	1010
2017-01-05 14:07:15 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-05 14:07:15 AI_Player.update()		1010,	110,	110,	101,	111,	1010,	101
2017-01-05 14:07:15 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:15 AI_Player.update()		11,	11,	101,	1010,	1001,	111,	110
2017-01-05 14:07:15 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:15 AI_Player.update()	Search took2ms
2017-01-05 14:07:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()		110,	1100,	111,	1011,	111,	1101,	11
2017-01-05 14:07:15 AI_Player.update()		110,	11,	1001,	1100,	101,	1100,	1010
2017-01-05 14:07:15 AI_Player.update()		1110,	1110,	1110,	1110,	111,	1010,	1011
2017-01-05 14:07:15 AI_Player.update()		1010,	1010,	110,	101,	111,	1010,	101
2017-01-05 14:07:15 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:15 AI_Player.update()		11,	1101,	101,	1010,	1001,	111,	110
2017-01-05 14:07:15 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:15 AI_Player.update()	Search took117ms
2017-01-05 14:07:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()		110,	1100,	111,	1011,	111,	1101,	11
2017-01-05 14:07:15 AI_Player.update()		110,	11,	1001,	1100,	101,	1100,	1010
2017-01-05 14:07:15 AI_Player.update()		1110,	1110,	1110,	1110,	111,	1010,	1011
2017-01-05 14:07:15 AI_Player.update()		1010,	1010,	110,	101,	111,	1010,	101
2017-01-05 14:07:15 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:15 AI_Player.update()		1101,	101,	1010,	1001,	111,	110,	11
2017-01-05 14:07:15 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:15 AI_Player.update()	Search took3ms
2017-01-05 14:07:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()		110,	11,	111,	1011,	111,	1101,	11
2017-01-05 14:07:15 AI_Player.update()		110,	1110,	1001,	1100,	101,	1100,	1010
2017-01-05 14:07:15 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-05 14:07:15 AI_Player.update()		1010,	110,	110,	101,	111,	1010,	101
2017-01-05 14:07:15 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:15 AI_Player.update()		1101,	11,	1010,	1001,	111,	110,	11
2017-01-05 14:07:15 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:07:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:15 AI_Player.update()	Search took524ms
2017-01-05 14:07:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()		110,	11,	111,	1011,	111,	1100,	11
2017-01-05 14:07:15 AI_Player.update()		110,	1110,	1001,	1100,	101,	1010,	1010
2017-01-05 14:07:15 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-05 14:07:15 AI_Player.update()		1010,	110,	110,	101,	111,	101,	101
2017-01-05 14:07:15 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-05 14:07:15 AI_Player.update()		1101,	11,	1010,	1001,	111,	1100,	11
2017-01-05 14:07:15 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1101,	1001
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:15 AI_Player.update()	Search took5ms
2017-01-05 14:07:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()		110,	11,	111,	1100,	111,	1100,	11
2017-01-05 14:07:15 AI_Player.update()		110,	1110,	1001,	1110,	101,	1010,	1010
2017-01-05 14:07:15 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:15 AI_Player.update()		1010,	110,	110,	101,	111,	101,	101
2017-01-05 14:07:15 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-05 14:07:15 AI_Player.update()		1101,	11,	1010,	101,	111,	1100,	11
2017-01-05 14:07:15 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:07:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:15 AI_Player.update()	update
2017-01-05 14:07:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:16 AI_Player.update()	Search took288ms
2017-01-05 14:07:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()		110,	1110,	111,	1100,	111,	1100,	11
2017-01-05 14:07:16 AI_Player.update()		110,	1010,	1001,	1110,	101,	1010,	1010
2017-01-05 14:07:16 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:16 AI_Player.update()		1010,	101,	110,	101,	111,	101,	101
2017-01-05 14:07:16 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-05 14:07:16 AI_Player.update()		1101,	1100,	1010,	101,	111,	1100,	11
2017-01-05 14:07:16 AI_Player.update()		1100,	11,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:16 AI_Player.update()	Search took2ms
2017-01-05 14:07:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()		110,	1010,	111,	1100,	111,	1100,	11
2017-01-05 14:07:16 AI_Player.update()		110,	110,	1001,	1110,	101,	1010,	1010
2017-01-05 14:07:16 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:16 AI_Player.update()		1010,	11,	110,	101,	111,	101,	101
2017-01-05 14:07:16 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-05 14:07:16 AI_Player.update()		1101,	11,	1010,	101,	111,	1100,	11
2017-01-05 14:07:16 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1101,	1001
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:16 AI_Player.update()	Search took274ms
2017-01-05 14:07:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-05 14:07:16 AI_Player.update()		110,	110,	1001,	1110,	101,	1100,	1010
2017-01-05 14:07:16 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:16 AI_Player.update()		1010,	11,	110,	101,	111,	1010,	101
2017-01-05 14:07:16 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-05 14:07:16 AI_Player.update()		1101,	11,	1010,	101,	111,	110,	11
2017-01-05 14:07:16 AI_Player.update()		1100,	1110,	1101,	1011,	1101,	1100,	1001
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:16 AI_Player.update()	Search took2ms
2017-01-05 14:07:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()		110,	110,	111,	1100,	111,	1101,	11
2017-01-05 14:07:16 AI_Player.update()		110,	101,	1001,	1110,	101,	1100,	1010
2017-01-05 14:07:16 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:16 AI_Player.update()		1010,	1100,	110,	101,	111,	1010,	101
2017-01-05 14:07:16 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-05 14:07:16 AI_Player.update()		1101,	1110,	1010,	101,	111,	110,	11
2017-01-05 14:07:16 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1100,	1001
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:16 AI_Player.update()	Search took91ms
2017-01-05 14:07:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()		110,	110,	111,	1110,	111,	1101,	11
2017-01-05 14:07:16 AI_Player.update()		110,	101,	1001,	101,	101,	1100,	1010
2017-01-05 14:07:16 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:16 AI_Player.update()		1010,	1100,	110,	1001,	111,	1010,	101
2017-01-05 14:07:16 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:16 AI_Player.update()		1101,	1110,	1010,	1011,	111,	110,	11
2017-01-05 14:07:16 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:16 AI_Player.update()	Search took2ms
2017-01-05 14:07:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()		110,	101,	111,	1110,	111,	1101,	11
2017-01-05 14:07:16 AI_Player.update()		110,	11,	1001,	101,	101,	1100,	1010
2017-01-05 14:07:16 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:16 AI_Player.update()		1010,	11,	110,	1001,	111,	1010,	101
2017-01-05 14:07:16 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:16 AI_Player.update()		1101,	1010,	1010,	1011,	111,	110,	11
2017-01-05 14:07:16 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:16 AI_Player.update()	Search took98ms
2017-01-05 14:07:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()		110,	11,	111,	1110,	111,	1101,	11
2017-01-05 14:07:16 AI_Player.update()		110,	1100,	1001,	101,	101,	1100,	1010
2017-01-05 14:07:16 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:16 AI_Player.update()		1010,	1110,	110,	1001,	111,	1010,	101
2017-01-05 14:07:16 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:16 AI_Player.update()		1101,	110,	1010,	1011,	111,	110,	11
2017-01-05 14:07:16 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:16 AI_Player.update()	Search took2ms
2017-01-05 14:07:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()		110,	1100,	111,	1110,	111,	1101,	11
2017-01-05 14:07:16 AI_Player.update()		110,	11,	1001,	101,	101,	1100,	1010
2017-01-05 14:07:16 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:16 AI_Player.update()		1010,	1010,	110,	1001,	111,	1010,	101
2017-01-05 14:07:16 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:16 AI_Player.update()		1101,	101,	1010,	1011,	111,	110,	11
2017-01-05 14:07:16 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:16 AI_Player.update()	Search took107ms
2017-01-05 14:07:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()		110,	1100,	111,	1110,	111,	1101,	11
2017-01-05 14:07:16 AI_Player.update()		1010,	110,	11,	1001,	101,	101,	1100
2017-01-05 14:07:16 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:16 AI_Player.update()		1010,	1010,	110,	1001,	111,	1010,	101
2017-01-05 14:07:16 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:16 AI_Player.update()		1101,	101,	1010,	1011,	111,	110,	11
2017-01-05 14:07:16 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:16 AI_Player.update()	Search took3ms
2017-01-05 14:07:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()		110,	110,	111,	1110,	111,	1101,	11
2017-01-05 14:07:16 AI_Player.update()		1010,	1110,	11,	1001,	101,	101,	1100
2017-01-05 14:07:16 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:16 AI_Player.update()		1010,	110,	110,	1001,	111,	1010,	101
2017-01-05 14:07:16 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:16 AI_Player.update()		1101,	11,	1010,	1011,	111,	110,	11
2017-01-05 14:07:16 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:07:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:16 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:16 AI_Player.update()	update
2017-01-05 14:07:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:17 AI_Player.update()	Search took387ms
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()		110,	110,	111,	1110,	111,	1101,	11
2017-01-05 14:07:17 AI_Player.update()		1010,	1110,	11,	1001,	101,	101,	1100
2017-01-05 14:07:17 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-05 14:07:17 AI_Player.update()		110,	110,	1001,	111,	1010,	101,	1010
2017-01-05 14:07:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:17 AI_Player.update()		1101,	11,	1010,	1011,	111,	110,	11
2017-01-05 14:07:17 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:07:17 AI_Player.update()	Player a has won!
2017-01-05 14:07:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:17 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:17 AI_Player.update()	Search took5ms
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-05 14:07:17 AI_Player.update()		101,	101,	11,	1100,	1010,	110,	1010
2017-01-05 14:07:17 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-05 14:07:17 AI_Player.update()		1001,	101,	11,	111,	1010,	1100,	1001
2017-01-05 14:07:17 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	110,	1011
2017-01-05 14:07:17 AI_Player.update()		11,	1100,	1100,	1100,	1010,	1110,	1100
2017-01-05 14:07:17 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:17 AI_Player.update()	Search took3ms
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-05 14:07:17 AI_Player.update()		101,	101,	11,	1110,	1010,	110,	1010
2017-01-05 14:07:17 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 14:07:17 AI_Player.update()		1001,	101,	11,	1110,	1010,	1100,	1001
2017-01-05 14:07:17 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-05 14:07:17 AI_Player.update()		11,	1100,	1100,	101,	1010,	1110,	1100
2017-01-05 14:07:17 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:17 AI_Player.update()	Search took12ms
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-05 14:07:17 AI_Player.update()		1010,	101,	101,	11,	1110,	1010,	110
2017-01-05 14:07:17 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-05 14:07:17 AI_Player.update()		1001,	101,	11,	1110,	1010,	1100,	1001
2017-01-05 14:07:17 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-05 14:07:17 AI_Player.update()		11,	1100,	1100,	101,	1010,	1110,	1100
2017-01-05 14:07:17 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:17 AI_Player.update()	Search took2ms
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 14:07:17 AI_Player.update()		1010,	11,	101,	11,	1110,	1010,	110
2017-01-05 14:07:17 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 14:07:17 AI_Player.update()		1001,	1001,	11,	1110,	1010,	1100,	1001
2017-01-05 14:07:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-05 14:07:17 AI_Player.update()		11,	1100,	1100,	101,	1010,	1110,	1100
2017-01-05 14:07:17 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:07:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:17 AI_Player.update()	Search took122ms
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 14:07:17 AI_Player.update()		11,	101,	11,	1110,	1010,	110,	1010
2017-01-05 14:07:17 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-05 14:07:17 AI_Player.update()		1001,	1001,	11,	1110,	1010,	1100,	1001
2017-01-05 14:07:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-05 14:07:17 AI_Player.update()		11,	1100,	1100,	101,	1010,	1110,	1100
2017-01-05 14:07:17 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:17 AI_Player.update()	Search took1ms
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-05 14:07:17 AI_Player.update()		11,	101,	11,	1110,	1010,	110,	1010
2017-01-05 14:07:17 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-05 14:07:17 AI_Player.update()		1001,	1100,	11,	1110,	1010,	1100,	1001
2017-01-05 14:07:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-05 14:07:17 AI_Player.update()		11,	110,	1100,	101,	1010,	1110,	1100
2017-01-05 14:07:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:17 AI_Player.update()	Search took572ms
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 14:07:17 AI_Player.update()		11,	101,	11,	1110,	1010,	101,	1010
2017-01-05 14:07:17 AI_Player.update()		1110,	1001,	1110,	111,	111,	1100,	1011
2017-01-05 14:07:17 AI_Player.update()		1001,	1100,	11,	1110,	1010,	110,	1001
2017-01-05 14:07:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1110,	1011
2017-01-05 14:07:17 AI_Player.update()		11,	110,	1100,	101,	1010,	1010,	1100
2017-01-05 14:07:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	1 2
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:17 AI_Player.update()	Search took2ms
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 14:07:17 AI_Player.update()		11,	101,	11,	1110,	1010,	101,	1010
2017-01-05 14:07:17 AI_Player.update()		1110,	1001,	1110,	111,	111,	1100,	1011
2017-01-05 14:07:17 AI_Player.update()		1100,	11,	1110,	1010,	110,	1001,	1001
2017-01-05 14:07:17 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1110,	1011
2017-01-05 14:07:17 AI_Player.update()		11,	110,	1100,	101,	1010,	1010,	1100
2017-01-05 14:07:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:07:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:17 AI_Player.update()	Search took105ms
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:07:17 AI_Player.update()		11,	101,	11,	1100,	1010,	101,	1010
2017-01-05 14:07:17 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:17 AI_Player.update()		1100,	11,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:17 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:17 AI_Player.update()		11,	110,	1100,	1100,	1010,	1010,	1100
2017-01-05 14:07:17 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:17 AI_Player.update()	Search took3ms
2017-01-05 14:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:07:17 AI_Player.update()		11,	1001,	11,	1100,	1010,	101,	1010
2017-01-05 14:07:17 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:17 AI_Player.update()		1100,	1100,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:17 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:17 AI_Player.update()		11,	101,	1100,	1100,	1010,	1010,	1100
2017-01-05 14:07:17 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	2 4
2017-01-05 14:07:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:17 AI_Player.update()	update
2017-01-05 14:07:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:18 AI_Player.update()	Search took125ms
2017-01-05 14:07:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:07:18 AI_Player.update()		11,	1001,	11,	1100,	1010,	101,	1010
2017-01-05 14:07:18 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:18 AI_Player.update()		1100,	1100,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:18 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:18 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	2 4
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:07:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:18 AI_Player.update()	Search took2ms
2017-01-05 14:07:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:07:18 AI_Player.update()		11,	1001,	11,	1100,	1010,	101,	1010
2017-01-05 14:07:18 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:18 AI_Player.update()		1001,	1100,	1100,	1110,	111,	110,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:18 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:18 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:07:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:18 AI_Player.update()	Search took348ms
2017-01-05 14:07:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:07:18 AI_Player.update()		1001,	11,	1100,	1010,	101,	1010,	11
2017-01-05 14:07:18 AI_Player.update()		1110,	11,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:18 AI_Player.update()		1001,	1100,	1100,	1110,	111,	110,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:18 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:18 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:18 AI_Player.update()	Search took3ms
2017-01-05 14:07:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 14:07:18 AI_Player.update()		1001,	11,	1100,	1010,	101,	1010,	11
2017-01-05 14:07:18 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:18 AI_Player.update()		1001,	110,	1100,	1110,	111,	110,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:18 AI_Player.update()		101,	101,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:18 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:18 AI_Player.update()	Search took311ms
2017-01-05 14:07:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 14:07:18 AI_Player.update()		11,	1100,	1010,	101,	1010,	11,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:18 AI_Player.update()		1001,	110,	1100,	1110,	111,	110,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:18 AI_Player.update()		101,	101,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:18 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	3 5
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:18 AI_Player.update()	Search took1ms
2017-01-05 14:07:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:18 AI_Player.update()		11,	1100,	1010,	101,	1010,	11,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	110,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:18 AI_Player.update()		1001,	1100,	1100,	1110,	111,	110,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:18 AI_Player.update()		101,	101,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:18 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:18 AI_Player.update()	Search took92ms
2017-01-05 14:07:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:18 AI_Player.update()		11,	1100,	1010,	101,	1010,	11,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	110,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:18 AI_Player.update()		1100,	1100,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:18 AI_Player.update()		101,	101,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:18 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:18 AI_Player.update()	Search took1ms
2017-01-05 14:07:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:18 AI_Player.update()		11,	110,	1010,	101,	1010,	11,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:18 AI_Player.update()		1100,	101,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:18 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:18 AI_Player.update()		101,	11,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:18 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:18 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:18 AI_Player.update()	update
2017-01-05 14:07:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took263ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		11,	110,	1010,	101,	1010,	11,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		1001,	1100,	101,	1110,	111,	110,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	11,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took1ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		11,	1100,	1010,	101,	1010,	11,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		1001,	101,	101,	1110,	111,	110,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took29ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		11,	1100,	1010,	101,	1010,	11,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	101,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took1ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		11,	1100,	1010,	101,	1010,	11,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	101,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	11,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took253ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	110,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		11,	1100,	1010,	101,	1010,	11,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	101,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took1ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		11,	110,	1010,	101,	1010,	11,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	11,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took16ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		110,	1010,	101,	1010,	11,	1001,	11
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	11,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took2ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	1010,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		110,	1100,	101,	1010,	11,	1001,	11
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	101,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took21ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		110,	1010,	101,	1010,	11,	1001,	11
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	11,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took2ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		110,	1100,	101,	1010,	11,	1001,	11
2017-01-05 14:07:19 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	101,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took34ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	11,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		110,	1100,	101,	1010,	11,	1001,	11
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1010,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took4ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		110,	11,	101,	1010,	11,	1001,	11
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took43ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		11,	101,	1010,	11,	1001,	11,	110
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took1ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		11,	1100,	1010,	11,	1001,	11,	110
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1010,	1110,	111,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:19 AI_Player.update()	Search took260ms
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-05 14:07:19 AI_Player.update()		11,	1100,	1010,	1110,	1001,	11,	110
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1110,	111,	111,	1100,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1010,	1110,	1010,	110,	1001,	1001
2017-01-05 14:07:19 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:19 AI_Player.update()		101,	1100,	1100,	101,	1010,	1100,	11
2017-01-05 14:07:19 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:19 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:07:19 AI_Player.update()	Player a has won!
2017-01-05 14:07:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:19 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:19 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:19 AI_Player.update()	update
2017-01-05 14:07:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:20 AI_Player.update()	Search took226ms
2017-01-05 14:07:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-05 14:07:20 AI_Player.update()		1010,	1001,	1100,	1010,	110,	1100,	1010
2017-01-05 14:07:20 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-05 14:07:20 AI_Player.update()		1110,	1100,	101,	1010,	1110,	110,	101
2017-01-05 14:07:20 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1110,	1011
2017-01-05 14:07:20 AI_Player.update()		101,	101,	11,	1010,	1100,	1101,	101
2017-01-05 14:07:20 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1110,	1001
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:20 AI_Player.update()	Search took2ms
2017-01-05 14:07:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-05 14:07:20 AI_Player.update()		1010,	1001,	1100,	1010,	110,	1100,	1010
2017-01-05 14:07:20 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-05 14:07:20 AI_Player.update()		1100,	101,	1010,	1110,	110,	101,	1110
2017-01-05 14:07:20 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1110,	1011
2017-01-05 14:07:20 AI_Player.update()		101,	101,	11,	1010,	1100,	1101,	101
2017-01-05 14:07:20 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1110,	1001
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:20 AI_Player.update()	Search took141ms
2017-01-05 14:07:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-05 14:07:20 AI_Player.update()		1010,	1001,	1100,	1010,	110,	1100,	1010
2017-01-05 14:07:20 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-05 14:07:20 AI_Player.update()		1110,	1100,	101,	1010,	1110,	110,	101
2017-01-05 14:07:20 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1110,	1011
2017-01-05 14:07:20 AI_Player.update()		101,	101,	11,	1010,	1100,	1101,	101
2017-01-05 14:07:20 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1110,	1001
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:20 AI_Player.update()	Search took2ms
2017-01-05 14:07:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-05 14:07:20 AI_Player.update()		1001,	1100,	1010,	110,	1100,	1010,	1010
2017-01-05 14:07:20 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-05 14:07:20 AI_Player.update()		1110,	1100,	101,	1010,	1110,	110,	101
2017-01-05 14:07:20 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1110,	1011
2017-01-05 14:07:20 AI_Player.update()		101,	101,	11,	1010,	1100,	1101,	101
2017-01-05 14:07:20 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1110,	1001
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:20 AI_Player.update()	Search took415ms
2017-01-05 14:07:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-05 14:07:20 AI_Player.update()		1001,	1100,	1010,	110,	1100,	1010,	1010
2017-01-05 14:07:20 AI_Player.update()		1110,	1100,	1110,	11,	111,	11,	1011
2017-01-05 14:07:20 AI_Player.update()		1100,	101,	1010,	1110,	110,	101,	1110
2017-01-05 14:07:20 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1110,	1011
2017-01-05 14:07:20 AI_Player.update()		101,	101,	11,	1010,	1100,	1101,	101
2017-01-05 14:07:20 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1110,	1001
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:20 AI_Player.update()	Search took3ms
2017-01-05 14:07:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 14:07:20 AI_Player.update()		1001,	1100,	1010,	110,	1100,	1010,	1010
2017-01-05 14:07:20 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 14:07:20 AI_Player.update()		1100,	1110,	1010,	1110,	110,	101,	1110
2017-01-05 14:07:20 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1110,	1011
2017-01-05 14:07:20 AI_Player.update()		101,	1011,	11,	1010,	1100,	1101,	101
2017-01-05 14:07:20 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1110,	1001
2017-01-05 14:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:20 AI_Player.update()	update
2017-01-05 14:07:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:21 AI_Player.update()	Search took671ms
2017-01-05 14:07:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-05 14:07:21 AI_Player.update()		1001,	1100,	1010,	110,	1100,	1010,	1010
2017-01-05 14:07:21 AI_Player.update()		1110,	101,	1110,	11,	111,	11,	1011
2017-01-05 14:07:21 AI_Player.update()		1110,	1100,	1110,	1010,	1110,	110,	101
2017-01-05 14:07:21 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1110,	1011
2017-01-05 14:07:21 AI_Player.update()		101,	1011,	11,	1010,	1100,	1101,	101
2017-01-05 14:07:21 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1110,	1001
2017-01-05 14:07:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()	update
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:07:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()	update
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:21 AI_Player.update()	Search took5ms
2017-01-05 14:07:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-05 14:07:21 AI_Player.update()		1001,	1100,	1010,	11,	1100,	1010,	1010
2017-01-05 14:07:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-05 14:07:21 AI_Player.update()		1110,	1100,	1110,	1100,	1110,	110,	101
2017-01-05 14:07:21 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:21 AI_Player.update()		101,	1011,	11,	1001,	1100,	1101,	101
2017-01-05 14:07:21 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1110,	1001
2017-01-05 14:07:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()	update
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()	update
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:21 AI_Player.update()	Search took402ms
2017-01-05 14:07:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-05 14:07:21 AI_Player.update()		1001,	101,	1010,	11,	1100,	1010,	1010
2017-01-05 14:07:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	11,	1011
2017-01-05 14:07:21 AI_Player.update()		1110,	101,	1110,	1100,	1110,	110,	101
2017-01-05 14:07:21 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:21 AI_Player.update()		101,	101,	11,	1001,	1100,	1101,	101
2017-01-05 14:07:21 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1110,	1001
2017-01-05 14:07:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()	update
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()	update
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:21 AI_Player.update()	Search took3ms
2017-01-05 14:07:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 14:07:21 AI_Player.update()		1001,	1100,	1010,	11,	1100,	1010,	1010
2017-01-05 14:07:21 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-05 14:07:21 AI_Player.update()		1110,	1011,	1110,	1100,	1110,	110,	101
2017-01-05 14:07:21 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:21 AI_Player.update()		101,	1100,	11,	1001,	1100,	1101,	101
2017-01-05 14:07:21 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1110,	1001
2017-01-05 14:07:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()	update
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:21 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:21 AI_Player.update()	update
2017-01-05 14:07:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took411ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-05 14:07:22 AI_Player.update()		1001,	1100,	1010,	1010,	1100,	1010,	1010
2017-01-05 14:07:22 AI_Player.update()		1110,	101,	1110,	1100,	111,	11,	1011
2017-01-05 14:07:22 AI_Player.update()		1110,	1011,	1110,	1010,	1110,	110,	101
2017-01-05 14:07:22 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		101,	1100,	11,	1101,	1100,	1101,	101
2017-01-05 14:07:22 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1110,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:07:22 AI_Player.update()	Player a has won!
2017-01-05 14:07:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:22 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took117ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	101,	1101,	1001,	1110,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	1010,	101,	1100,	11,	1010,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 14:07:22 AI_Player.update()		1001,	110,	1001,	110,	1100,	101,	1010
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took2ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	101,	1101,	1001,	1100,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	11,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	1010,	101,	1100,	11,	110,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:07:22 AI_Player.update()		1001,	110,	1001,	110,	1100,	101,	1010
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took73ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-05 14:07:22 AI_Player.update()		1010,	101,	1101,	1001,	1100,	1001,	1110
2017-01-05 14:07:22 AI_Player.update()		1110,	11,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	1010,	101,	1100,	11,	110,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:07:22 AI_Player.update()		1001,	110,	1001,	110,	1100,	101,	1010
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took1ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-05 14:07:22 AI_Player.update()		1010,	1010,	1101,	1001,	1100,	1001,	1110
2017-01-05 14:07:22 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	101,	1100,	11,	110,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:07:22 AI_Player.update()		1001,	110,	1001,	110,	1100,	101,	1010
2017-01-05 14:07:22 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took108ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1010,	1101,	1001,	1100,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	101,	1100,	11,	110,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:07:22 AI_Player.update()		1001,	110,	1001,	110,	1100,	101,	1010
2017-01-05 14:07:22 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took2ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	110,	111,	1010,	111,	1011,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	11,	1010,	1101,	1001,	1100,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	101,	101,	1100,	11,	110,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:07:22 AI_Player.update()		1001,	1010,	1001,	110,	1100,	101,	1010
2017-01-05 14:07:22 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took54ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1010,	1101,	1001,	1100,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	101,	1100,	11,	110,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:07:22 AI_Player.update()		1001,	110,	1001,	110,	1100,	101,	1010
2017-01-05 14:07:22 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took2ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1010,	1101,	1001,	1100,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	101,	1100,	11,	110,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:07:22 AI_Player.update()		110,	1001,	110,	1100,	101,	1010,	1001
2017-01-05 14:07:22 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took51ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	101,	1010,	1101,	1001,	1100,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	11,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	1010,	101,	1100,	11,	110,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:07:22 AI_Player.update()		110,	110,	110,	1100,	101,	1010,	1001
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took1ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	11,	1010,	1101,	1001,	1100,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	1001,	101,	1100,	11,	110,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:07:22 AI_Player.update()		110,	11,	110,	1100,	101,	1010,	1001
2017-01-05 14:07:22 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took65ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1010,	1101,	1001,	1100,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	110,	101,	1100,	11,	110,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:07:22 AI_Player.update()		110,	1010,	110,	1100,	101,	1010,	1001
2017-01-05 14:07:22 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took2ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1010,	1101,	1001,	1100,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	110,	101,	1100,	11,	110,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-05 14:07:22 AI_Player.update()		1010,	110,	1100,	101,	1010,	1001,	110
2017-01-05 14:07:22 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took53ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	1010,	1010,	1101,	1001,	1110,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	110,	101,	1100,	11,	1010,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:07:22 AI_Player.update()		1010,	110,	1100,	101,	1010,	101,	110
2017-01-05 14:07:22 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took4ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	1001,	1010,	1101,	1001,	1110,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	101,	1100,	11,	1010,	1100
2017-01-05 14:07:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:07:22 AI_Player.update()		1010,	101,	1100,	101,	1010,	101,	110
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:07:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took93ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	1001,	1010,	1101,	1001,	1110,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	1100,	11,	101,	1100,	11,	1010
2017-01-05 14:07:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:07:22 AI_Player.update()		1010,	101,	1100,	101,	1010,	101,	110
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:22 AI_Player.update()	Search took2ms
2017-01-05 14:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()		110,	1010,	111,	1101,	111,	1100,	11
2017-01-05 14:07:22 AI_Player.update()		1110,	1001,	1010,	1010,	1001,	1110,	1001
2017-01-05 14:07:22 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 14:07:22 AI_Player.update()		1100,	1100,	11,	1010,	1100,	11,	1010
2017-01-05 14:07:22 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-05 14:07:22 AI_Player.update()		1010,	101,	1100,	101,	1010,	101,	110
2017-01-05 14:07:22 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:22 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:22 AI_Player.update()	update
2017-01-05 14:07:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:23 AI_Player.update()	Search took89ms
2017-01-05 14:07:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()		110,	1010,	111,	1101,	111,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1001,	1010,	1010,	1001,	1110,	1001
2017-01-05 14:07:23 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	1100,	1100,	11,	1010,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	101,	1100,	101,	1010,	101,	110
2017-01-05 14:07:23 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	2 3
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:23 AI_Player.update()	Search took3ms
2017-01-05 14:07:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()		110,	11,	111,	1101,	111,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1010,	1010,	1010,	1001,	1110,	1001
2017-01-05 14:07:23 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	11,	1010,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	101,	1010,	101,	110
2017-01-05 14:07:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:23 AI_Player.update()	Search took375ms
2017-01-05 14:07:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()		110,	11,	111,	1010,	111,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1010,	1010,	101,	1001,	1110,	1001
2017-01-05 14:07:23 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	101,	1010,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	1010,	1010,	101,	110
2017-01-05 14:07:23 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1011,	1001
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	3 4
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:23 AI_Player.update()	Search took3ms
2017-01-05 14:07:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1010,	1010,	11,	1001,	1110,	1001
2017-01-05 14:07:23 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	101,	1010,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	1101,	1010,	101,	110
2017-01-05 14:07:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:23 AI_Player.update()	Search took214ms
2017-01-05 14:07:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()		110,	11,	111,	11,	111,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1010,	1010,	101,	1001,	1110,	1001
2017-01-05 14:07:23 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	1010,	1010,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1001,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	1010,	1010,	101,	110
2017-01-05 14:07:23 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:23 AI_Player.update()	Search took2ms
2017-01-05 14:07:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()		110,	11,	111,	101,	111,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1010,	1010,	101,	1001,	1110,	1001
2017-01-05 14:07:23 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	1101,	1010,	1100,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	101,	1010,	101,	110
2017-01-05 14:07:23 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:23 AI_Player.update()	Search took325ms
2017-01-05 14:07:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1010,	1010,	101,	1001,	1100,	1001
2017-01-05 14:07:23 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	1101,	1010,	110,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	110,	1100,	101,	1010,	1001,	110
2017-01-05 14:07:23 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:23 AI_Player.update()	Search took4ms
2017-01-05 14:07:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	11,	1010,	101,	1001,	1100,	1001
2017-01-05 14:07:23 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	1001,	1100,	1101,	1010,	110,	11
2017-01-05 14:07:23 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:07:23 AI_Player.update()		1010,	1100,	1100,	101,	1010,	1001,	110
2017-01-05 14:07:23 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-05 14:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:23 AI_Player.update()	update
2017-01-05 14:07:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:24 AI_Player.update()	Search took452ms
2017-01-05 14:07:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-05 14:07:24 AI_Player.update()		1110,	11,	1010,	101,	1001,	1100,	1001
2017-01-05 14:07:24 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:24 AI_Player.update()		1001,	1100,	1101,	1010,	110,	11,	1010
2017-01-05 14:07:24 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-05 14:07:24 AI_Player.update()		1010,	1100,	1100,	101,	1010,	1001,	110
2017-01-05 14:07:24 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:07:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:24 AI_Player.update()	Search took3ms
2017-01-05 14:07:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-05 14:07:24 AI_Player.update()		1110,	11,	1010,	1010,	1001,	1100,	1001
2017-01-05 14:07:24 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-05 14:07:24 AI_Player.update()		1001,	1100,	1101,	1010,	110,	11,	1010
2017-01-05 14:07:24 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-05 14:07:24 AI_Player.update()		1010,	1100,	1100,	11,	1010,	1001,	110
2017-01-05 14:07:24 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 14:07:24 AI_Player.update()	Player b has won!
2017-01-05 14:07:24 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:24 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:24 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:24 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:24 AI_Player.update()	Search took98ms
2017-01-05 14:07:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()		110,	11,	111,	11,	111,	1001,	11
2017-01-05 14:07:24 AI_Player.update()		1011,	1010,	11,	110,	11,	1010,	1100
2017-01-05 14:07:24 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 14:07:24 AI_Player.update()		1010,	1100,	111,	1001,	101,	1001,	1001
2017-01-05 14:07:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	11,	1011
2017-01-05 14:07:24 AI_Player.update()		110,	110,	110,	101,	1010,	1001,	101
2017-01-05 14:07:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:24 AI_Player.update()	Search took1ms
2017-01-05 14:07:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()		110,	11,	111,	11,	111,	1001,	11
2017-01-05 14:07:24 AI_Player.update()		1010,	11,	110,	11,	1010,	1100,	1011
2017-01-05 14:07:24 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 14:07:24 AI_Player.update()		1010,	1100,	111,	1001,	101,	1001,	1001
2017-01-05 14:07:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	11,	1011
2017-01-05 14:07:24 AI_Player.update()		110,	110,	110,	101,	1010,	1001,	101
2017-01-05 14:07:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:24 AI_Player.update()	Search took118ms
2017-01-05 14:07:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()		110,	11,	111,	11,	111,	1001,	11
2017-01-05 14:07:24 AI_Player.update()		1011,	1010,	11,	110,	11,	1010,	1100
2017-01-05 14:07:24 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 14:07:24 AI_Player.update()		1010,	1100,	111,	1001,	101,	1001,	1001
2017-01-05 14:07:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	11,	1011
2017-01-05 14:07:24 AI_Player.update()		110,	110,	110,	101,	1010,	1001,	101
2017-01-05 14:07:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:24 AI_Player.update()	Search took1ms
2017-01-05 14:07:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()		110,	11,	111,	11,	111,	1001,	11
2017-01-05 14:07:24 AI_Player.update()		1011,	1010,	11,	110,	11,	1010,	1100
2017-01-05 14:07:24 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 14:07:24 AI_Player.update()		1100,	111,	1001,	101,	1001,	1001,	1010
2017-01-05 14:07:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	11,	1011
2017-01-05 14:07:24 AI_Player.update()		110,	110,	110,	101,	1010,	1001,	101
2017-01-05 14:07:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:24 AI_Player.update()	Search took161ms
2017-01-05 14:07:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()		110,	11,	111,	11,	111,	1001,	11
2017-01-05 14:07:24 AI_Player.update()		1100,	1011,	1010,	11,	110,	11,	1010
2017-01-05 14:07:24 AI_Player.update()		1110,	101,	1110,	1100,	111,	1010,	1011
2017-01-05 14:07:24 AI_Player.update()		1100,	111,	1001,	101,	1001,	1001,	1010
2017-01-05 14:07:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	11,	1011
2017-01-05 14:07:24 AI_Player.update()		110,	110,	110,	101,	1010,	1001,	101
2017-01-05 14:07:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:24 AI_Player.update()	Search took1ms
2017-01-05 14:07:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-05 14:07:24 AI_Player.update()		1100,	1011,	1010,	11,	110,	1010,	1010
2017-01-05 14:07:24 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-05 14:07:24 AI_Player.update()		1100,	111,	1001,	101,	1001,	11,	1010
2017-01-05 14:07:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 14:07:24 AI_Player.update()		110,	110,	110,	101,	1010,	1010,	101
2017-01-05 14:07:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:24 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:24 AI_Player.update()	update
2017-01-05 14:07:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took234ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	1010,	111,	11,	111,	11,	11
2017-01-05 14:07:25 AI_Player.update()		1100,	11,	1010,	11,	110,	1010,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		1100,	101,	1001,	101,	1001,	11,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	11,	110,	101,	1010,	1010,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took2ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-05 14:07:25 AI_Player.update()		1100,	1011,	1010,	11,	110,	1010,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		1100,	111,	1001,	101,	1001,	11,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	110,	110,	101,	1010,	1010,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took256ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-05 14:07:25 AI_Player.update()		1100,	1011,	1010,	11,	110,	1010,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		111,	1001,	101,	1001,	11,	1010,	1100
2017-01-05 14:07:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	110,	110,	101,	1010,	1010,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took1ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-05 14:07:25 AI_Player.update()		1100,	1011,	1010,	11,	110,	1010,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		111,	1001,	101,	1100,	11,	1010,	1100
2017-01-05 14:07:25 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	110,	110,	101,	1010,	1010,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took51ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	1011,	111,	11,	111,	11,	11
2017-01-05 14:07:25 AI_Player.update()		1100,	101,	1010,	11,	110,	1010,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		111,	11,	101,	1100,	11,	1010,	1100
2017-01-05 14:07:25 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	1010,	110,	101,	1010,	1010,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took1ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 14:07:25 AI_Player.update()		1100,	101,	1010,	11,	110,	1010,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		111,	11,	101,	11,	11,	1010,	1100
2017-01-05 14:07:25 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	1010,	110,	1001,	1010,	1010,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took62ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-05 14:07:25 AI_Player.update()		1010,	1100,	101,	1010,	11,	110,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		111,	11,	101,	11,	11,	1010,	1100
2017-01-05 14:07:25 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	1010,	110,	1001,	1010,	1010,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took3ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	1011,	111,	1010,	111,	11,	11
2017-01-05 14:07:25 AI_Player.update()		1010,	1100,	101,	11,	11,	110,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		111,	11,	101,	1100,	11,	1010,	1100
2017-01-05 14:07:25 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	1010,	110,	101,	1010,	1010,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took123ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	1011,	111,	1010,	111,	110,	11
2017-01-05 14:07:25 AI_Player.update()		1010,	1100,	101,	11,	11,	1001,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-05 14:07:25 AI_Player.update()		111,	11,	101,	1100,	11,	1001,	1100
2017-01-05 14:07:25 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	1010,	110,	101,	1010,	1001,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took4ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:25 AI_Player.update()		1010,	1001,	101,	11,	11,	1001,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 14:07:25 AI_Player.update()		111,	110,	101,	1100,	11,	1001,	1100
2017-01-05 14:07:25 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	11,	110,	101,	1010,	1001,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	1011,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took56ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:25 AI_Player.update()		1001,	101,	11,	11,	1001,	1010,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 14:07:25 AI_Player.update()		111,	110,	101,	1100,	11,	1001,	1100
2017-01-05 14:07:25 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	11,	110,	101,	1010,	1001,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	1011,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took4ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	1100,	111,	1010,	111,	110,	11
2017-01-05 14:07:25 AI_Player.update()		1001,	101,	11,	11,	1001,	1010,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 14:07:25 AI_Player.update()		1100,	111,	110,	101,	1100,	11,	1001
2017-01-05 14:07:25 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	11,	110,	101,	1010,	1001,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	1011,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took220ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-05 14:07:25 AI_Player.update()		1001,	101,	11,	11,	1001,	110,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 14:07:25 AI_Player.update()		1100,	111,	110,	101,	1100,	1010,	1001
2017-01-05 14:07:25 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	11,	110,	101,	1010,	1010,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1001,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:25 AI_Player.update()	Search took2ms
2017-01-05 14:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-05 14:07:25 AI_Player.update()		1001,	101,	11,	11,	1001,	110,	1010
2017-01-05 14:07:25 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 14:07:25 AI_Player.update()		111,	110,	101,	1100,	1010,	1001,	1100
2017-01-05 14:07:25 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 14:07:25 AI_Player.update()		110,	11,	110,	101,	1010,	1010,	101
2017-01-05 14:07:25 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1001,	1001
2017-01-05 14:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:25 AI_Player.update()	update
2017-01-05 14:07:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:26 AI_Player.update()	Search took285ms
2017-01-05 14:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-05 14:07:26 AI_Player.update()		1001,	101,	11,	11,	1001,	110,	1010
2017-01-05 14:07:26 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-05 14:07:26 AI_Player.update()		111,	110,	101,	1100,	1010,	1001,	1100
2017-01-05 14:07:26 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-05 14:07:26 AI_Player.update()		101,	110,	11,	110,	101,	1010,	1010
2017-01-05 14:07:26 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1001,	1001
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:26 AI_Player.update()	Search took2ms
2017-01-05 14:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-05 14:07:26 AI_Player.update()		1001,	101,	11,	11,	1001,	110,	1010
2017-01-05 14:07:26 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-05 14:07:26 AI_Player.update()		111,	110,	101,	1001,	1010,	1001,	1100
2017-01-05 14:07:26 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-05 14:07:26 AI_Player.update()		101,	110,	11,	101,	101,	1010,	1010
2017-01-05 14:07:26 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1001,	1001
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:26 AI_Player.update()	Search took44ms
2017-01-05 14:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()		110,	1100,	111,	11,	111,	1001,	11
2017-01-05 14:07:26 AI_Player.update()		1001,	101,	11,	11,	1001,	11,	1010
2017-01-05 14:07:26 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-05 14:07:26 AI_Player.update()		111,	110,	101,	1001,	1010,	1010,	1100
2017-01-05 14:07:26 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-05 14:07:26 AI_Player.update()		101,	110,	11,	101,	101,	11,	1010
2017-01-05 14:07:26 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:26 AI_Player.update()	Search took3ms
2017-01-05 14:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-05 14:07:26 AI_Player.update()		1001,	11,	11,	11,	1001,	11,	1010
2017-01-05 14:07:26 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-05 14:07:26 AI_Player.update()		111,	1010,	101,	1001,	1010,	1010,	1100
2017-01-05 14:07:26 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-05 14:07:26 AI_Player.update()		101,	1011,	11,	101,	101,	11,	1010
2017-01-05 14:07:26 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:26 AI_Player.update()	Search took70ms
2017-01-05 14:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-05 14:07:26 AI_Player.update()		1001,	11,	11,	11,	1001,	11,	1010
2017-01-05 14:07:26 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-05 14:07:26 AI_Player.update()		1010,	101,	1001,	1010,	1010,	1100,	111
2017-01-05 14:07:26 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-05 14:07:26 AI_Player.update()		101,	1011,	11,	101,	101,	11,	1010
2017-01-05 14:07:26 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:26 AI_Player.update()	Search took2ms
2017-01-05 14:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()		110,	11,	111,	11,	111,	1001,	11
2017-01-05 14:07:26 AI_Player.update()		1001,	110,	11,	11,	1001,	11,	1010
2017-01-05 14:07:26 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-05 14:07:26 AI_Player.update()		1010,	110,	1001,	1010,	1010,	1100,	111
2017-01-05 14:07:26 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1001,	1011
2017-01-05 14:07:26 AI_Player.update()		101,	1100,	11,	101,	101,	11,	1010
2017-01-05 14:07:26 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:26 AI_Player.update()	Search took181ms
2017-01-05 14:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()		110,	11,	111,	11,	111,	1001,	11
2017-01-05 14:07:26 AI_Player.update()		1010,	1001,	110,	11,	11,	1001,	11
2017-01-05 14:07:26 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-05 14:07:26 AI_Player.update()		1010,	110,	1001,	1010,	1010,	1100,	111
2017-01-05 14:07:26 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1001,	1011
2017-01-05 14:07:26 AI_Player.update()		101,	1100,	11,	101,	101,	11,	1010
2017-01-05 14:07:26 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:07:26 AI_Player.update()	Player a has won!
2017-01-05 14:07:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:26 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:26 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:26 AI_Player.update()	Search took185ms
2017-01-05 14:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:07:26 AI_Player.update()		101,	1100,	1011,	1100,	110,	110,	1100
2017-01-05 14:07:26 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 14:07:26 AI_Player.update()		101,	1101,	1010,	1100,	11,	1001,	1011
2017-01-05 14:07:26 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:26 AI_Player.update()		1100,	110,	1001,	11,	1100,	111,	110
2017-01-05 14:07:26 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:26 AI_Player.update()	Search took1ms
2017-01-05 14:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:07:26 AI_Player.update()		101,	1100,	1011,	1100,	110,	1001,	1100
2017-01-05 14:07:26 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-05 14:07:26 AI_Player.update()		101,	1101,	1010,	1100,	11,	1110,	1011
2017-01-05 14:07:26 AI_Player.update()		1110,	101,	1101,	1010,	1011,	111,	1011
2017-01-05 14:07:26 AI_Player.update()		1100,	110,	1001,	11,	1100,	1100,	110
2017-01-05 14:07:26 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:26 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:26 AI_Player.update()	update
2017-01-05 14:07:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took305ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 14:07:27 AI_Player.update()		101,	1100,	1011,	101,	110,	1001,	1100
2017-01-05 14:07:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	1101,	1010,	1010,	11,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-05 14:07:27 AI_Player.update()		1100,	110,	1001,	101,	1100,	1100,	110
2017-01-05 14:07:27 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took1ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	1011,	101,	110,	1001,	1100,	101
2017-01-05 14:07:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	1101,	1010,	1010,	11,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-05 14:07:27 AI_Player.update()		1100,	110,	1001,	101,	1100,	1100,	110
2017-01-05 14:07:27 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took175ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	1011,	101,	110,	1001,	1100,	101
2017-01-05 14:07:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	1101,	1010,	1010,	11,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	1100,	110,	1001,	101,	1100,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	3 1
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took1ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	1011,	101,	1100,	1001,	1100,	101
2017-01-05 14:07:27 AI_Player.update()		1110,	11,	1110,	110,	111,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	1101,	1010,	1100,	11,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	101,	1101,	1010,	1011,	111,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	1100,	110,	11,	101,	1100,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 1
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took42ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	1011,	101,	110,	1001,	1100,	101
2017-01-05 14:07:27 AI_Player.update()		1110,	11,	1110,	1100,	111,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	1101,	1010,	1010,	11,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	1100,	110,	1001,	101,	1100,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took1ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	1011,	111,	1100,	111,	110,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	11,	101,	110,	1001,	1100,	101
2017-01-05 14:07:27 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	101,	1010,	1010,	11,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	1100,	1101,	11,	1011,	111,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	1100,	110,	1001,	101,	1100,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took50ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	11,	111,	1100,	111,	110,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	1101,	101,	110,	1001,	1100,	101
2017-01-05 14:07:27 AI_Player.update()		1110,	101,	1110,	1100,	111,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	1100,	1010,	1010,	11,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	1100,	1101,	11,	1011,	111,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	101,	110,	1001,	101,	1100,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took1ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	1101,	111,	1100,	111,	110,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	101,	101,	110,	1001,	1100,	101
2017-01-05 14:07:27 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	1100,	1010,	1010,	11,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	101,	1101,	11,	1011,	111,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	1011,	110,	1001,	101,	1100,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took209ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	1101,	111,	101,	111,	110,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	101,	101,	1100,	1001,	1100,	101
2017-01-05 14:07:27 AI_Player.update()		1110,	1100,	1110,	110,	111,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	1100,	1010,	1100,	11,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	101,	1101,	1010,	1011,	111,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	1011,	110,	11,	101,	1100,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	4 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took2ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	1100,	101,	1100,	1001,	1100,	101
2017-01-05 14:07:27 AI_Player.update()		1110,	1100,	1110,	110,	111,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	101,	1010,	1100,	11,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	111,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	11,	110,	11,	101,	1100,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took120ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	101,	1100,	1001,	1100,	101,	1100
2017-01-05 14:07:27 AI_Player.update()		1110,	1100,	1110,	110,	111,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	101,	1010,	1100,	11,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	111,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	11,	110,	11,	101,	1100,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took2ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	101,	1100,	1001,	1100,	110,	1100
2017-01-05 14:07:27 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	101,	1010,	1100,	11,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	11,	110,	11,	101,	111,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	5 2
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took217ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	101,	1100,	110,	1100,	110,	1100
2017-01-05 14:07:27 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	101,	1010,	1010,	11,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	11,	110,	1001,	101,	111,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	5 3
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:27 AI_Player.update()	Search took2ms
2017-01-05 14:07:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-05 14:07:27 AI_Player.update()		1100,	1100,	1100,	110,	1100,	110,	1100
2017-01-05 14:07:27 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:27 AI_Player.update()		101,	1011,	1010,	1010,	11,	1001,	1011
2017-01-05 14:07:27 AI_Player.update()		1110,	11,	1101,	11,	1011,	1110,	1011
2017-01-05 14:07:27 AI_Player.update()		110,	1101,	110,	1001,	101,	111,	1100
2017-01-05 14:07:27 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	6 3
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:27 AI_Player.update()	update
2017-01-05 14:07:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took161ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:07:28 AI_Player.update()		1100,	1100,	1100,	1001,	1100,	110,	1100
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-05 14:07:28 AI_Player.update()		101,	1011,	1010,	1100,	11,	1001,	1011
2017-01-05 14:07:28 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:28 AI_Player.update()		110,	1101,	110,	11,	101,	111,	1100
2017-01-05 14:07:28 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took4ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-05 14:07:28 AI_Player.update()		1100,	101,	1100,	1001,	1100,	110,	1100
2017-01-05 14:07:28 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-05 14:07:28 AI_Player.update()		101,	11,	1010,	1100,	11,	1001,	1011
2017-01-05 14:07:28 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:28 AI_Player.update()		110,	101,	110,	11,	101,	111,	1100
2017-01-05 14:07:28 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took221ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-05 14:07:28 AI_Player.update()		1100,	1011,	1100,	1001,	1100,	110,	1100
2017-01-05 14:07:28 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-05 14:07:28 AI_Player.update()		101,	1101,	1010,	1100,	11,	1001,	1011
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:28 AI_Player.update()		110,	101,	110,	11,	101,	111,	1100
2017-01-05 14:07:28 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took3ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-05 14:07:28 AI_Player.update()		1100,	11,	1100,	1001,	1100,	110,	1100
2017-01-05 14:07:28 AI_Player.update()		1110,	1101,	1110,	110,	111,	101,	1011
2017-01-05 14:07:28 AI_Player.update()		101,	101,	1010,	1100,	11,	1001,	1011
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1110,	1011
2017-01-05 14:07:28 AI_Player.update()		110,	1100,	110,	11,	101,	111,	1100
2017-01-05 14:07:28 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took183ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	1011,	111,	1001,	111,	1100,	11
2017-01-05 14:07:28 AI_Player.update()		1100,	11,	1100,	110,	1100,	110,	1100
2017-01-05 14:07:28 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:28 AI_Player.update()		101,	101,	1010,	1010,	11,	1001,	1011
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1101,	11,	1011,	1110,	1011
2017-01-05 14:07:28 AI_Player.update()		110,	1100,	110,	1001,	101,	111,	1100
2017-01-05 14:07:28 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took3ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	11,	111,	1001,	111,	1100,	11
2017-01-05 14:07:28 AI_Player.update()		1100,	1101,	1100,	110,	1100,	110,	1100
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:28 AI_Player.update()		101,	101,	1010,	1010,	11,	1001,	1011
2017-01-05 14:07:28 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1110,	1011
2017-01-05 14:07:28 AI_Player.update()		110,	101,	110,	1001,	101,	111,	1100
2017-01-05 14:07:28 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took152ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	11,	111,	1001,	111,	1100,	11
2017-01-05 14:07:28 AI_Player.update()		1100,	1101,	1100,	110,	1100,	110,	1100
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-05 14:07:28 AI_Player.update()		1011,	101,	101,	1010,	1010,	11,	1001
2017-01-05 14:07:28 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1110,	1011
2017-01-05 14:07:28 AI_Player.update()		110,	101,	110,	1001,	101,	111,	1100
2017-01-05 14:07:28 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took2ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	11,	111,	110,	111,	1100,	11
2017-01-05 14:07:28 AI_Player.update()		1100,	1101,	1100,	1100,	1100,	110,	1100
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-05 14:07:28 AI_Player.update()		1011,	101,	101,	11,	1010,	11,	1001
2017-01-05 14:07:28 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1110,	1011
2017-01-05 14:07:28 AI_Player.update()		110,	101,	110,	101,	101,	111,	1100
2017-01-05 14:07:28 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 4
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took70ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	1011,	111,	110,	111,	1100,	11
2017-01-05 14:07:28 AI_Player.update()		1100,	11,	1100,	1100,	1100,	110,	1100
2017-01-05 14:07:28 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-05 14:07:28 AI_Player.update()		1011,	101,	101,	11,	1010,	11,	1001
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1110,	1011
2017-01-05 14:07:28 AI_Player.update()		110,	1100,	110,	101,	101,	111,	1100
2017-01-05 14:07:28 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:07:28 AI_Player.update()	Player a has won!
2017-01-05 14:07:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:28 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took11ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-05 14:07:28 AI_Player.update()		111,	110,	11,	101,	111,	1011,	111
2017-01-05 14:07:28 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-05 14:07:28 AI_Player.update()		1101,	110,	110,	1010,	1100,	101,	1001
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-05 14:07:28 AI_Player.update()		1010,	101,	1010,	111,	111,	1001,	1110
2017-01-05 14:07:28 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took1ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-05 14:07:28 AI_Player.update()		111,	111,	110,	11,	101,	111,	1011
2017-01-05 14:07:28 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-05 14:07:28 AI_Player.update()		1101,	110,	110,	1010,	1100,	101,	1001
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-05 14:07:28 AI_Player.update()		1010,	101,	1010,	111,	111,	1001,	1110
2017-01-05 14:07:28 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took133ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 14:07:28 AI_Player.update()		111,	110,	110,	11,	101,	111,	1011
2017-01-05 14:07:28 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-05 14:07:28 AI_Player.update()		1101,	101,	110,	1010,	1100,	101,	1001
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-05 14:07:28 AI_Player.update()		1010,	1010,	1010,	111,	111,	1001,	1110
2017-01-05 14:07:28 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:28 AI_Player.update()	Search took2ms
2017-01-05 14:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 14:07:28 AI_Player.update()		111,	110,	110,	11,	101,	111,	1011
2017-01-05 14:07:28 AI_Player.update()		1110,	110,	1110,	1011,	111,	11,	1011
2017-01-05 14:07:28 AI_Player.update()		101,	110,	1010,	1100,	101,	1001,	1101
2017-01-05 14:07:28 AI_Player.update()		1110,	101,	1101,	1011,	1011,	110,	1011
2017-01-05 14:07:28 AI_Player.update()		1010,	1010,	1010,	111,	111,	1001,	1110
2017-01-05 14:07:28 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:28 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:28 AI_Player.update()	update
2017-01-05 14:07:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:29 AI_Player.update()	Search took626ms
2017-01-05 14:07:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:29 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-05 14:07:29 AI_Player.update()		111,	110,	110,	1011,	101,	111,	1011
2017-01-05 14:07:29 AI_Player.update()		1110,	110,	1110,	1100,	111,	11,	1011
2017-01-05 14:07:29 AI_Player.update()		101,	110,	1010,	1011,	101,	1001,	1101
2017-01-05 14:07:29 AI_Player.update()		1110,	101,	1101,	111,	1011,	110,	1011
2017-01-05 14:07:29 AI_Player.update()		1010,	1010,	1010,	11,	111,	1001,	1110
2017-01-05 14:07:29 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-05 14:07:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:29 AI_Player.update()	update
2017-01-05 14:07:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:29 AI_Player.update()	update
2017-01-05 14:07:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:29 AI_Player.update()	Search took6ms
2017-01-05 14:07:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:29 AI_Player.update()		110,	111,	111,	11,	111,	1100,	11
2017-01-05 14:07:29 AI_Player.update()		111,	110,	110,	1011,	101,	1001,	1011
2017-01-05 14:07:29 AI_Player.update()		1110,	110,	1110,	1100,	111,	111,	1011
2017-01-05 14:07:29 AI_Player.update()		101,	110,	1010,	1011,	101,	11,	1101
2017-01-05 14:07:29 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 14:07:29 AI_Player.update()		1010,	1010,	1010,	11,	111,	110,	1110
2017-01-05 14:07:29 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:29 AI_Player.update()	update
2017-01-05 14:07:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:29 AI_Player.update()	update
2017-01-05 14:07:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:30 AI_Player.update()	Search took719ms
2017-01-05 14:07:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()		110,	111,	111,	11,	111,	1100,	11
2017-01-05 14:07:30 AI_Player.update()		1011,	111,	110,	110,	1011,	101,	1001
2017-01-05 14:07:30 AI_Player.update()		1110,	110,	1110,	1100,	111,	111,	1011
2017-01-05 14:07:30 AI_Player.update()		101,	110,	1010,	1011,	101,	11,	1101
2017-01-05 14:07:30 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 14:07:30 AI_Player.update()		1010,	1010,	1010,	11,	111,	110,	1110
2017-01-05 14:07:30 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:30 AI_Player.update()	Search took3ms
2017-01-05 14:07:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()		110,	111,	111,	11,	111,	1100,	11
2017-01-05 14:07:30 AI_Player.update()		111,	110,	110,	1011,	101,	1001,	1011
2017-01-05 14:07:30 AI_Player.update()		1110,	110,	1110,	1100,	111,	111,	1011
2017-01-05 14:07:30 AI_Player.update()		101,	110,	1010,	1011,	101,	11,	1101
2017-01-05 14:07:30 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 14:07:30 AI_Player.update()		1010,	1010,	1010,	11,	111,	110,	1110
2017-01-05 14:07:30 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:30 AI_Player.update()	Search took28ms
2017-01-05 14:07:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()		110,	111,	111,	11,	111,	1100,	11
2017-01-05 14:07:30 AI_Player.update()		1011,	111,	110,	110,	1011,	101,	1001
2017-01-05 14:07:30 AI_Player.update()		1110,	110,	1110,	1100,	111,	111,	1011
2017-01-05 14:07:30 AI_Player.update()		101,	110,	1010,	1011,	101,	11,	1101
2017-01-05 14:07:30 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 14:07:30 AI_Player.update()		1010,	1010,	1010,	11,	111,	110,	1110
2017-01-05 14:07:30 AI_Player.update()		1100,	101,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:30 AI_Player.update()	Search took2ms
2017-01-05 14:07:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()		110,	111,	111,	11,	111,	1100,	11
2017-01-05 14:07:30 AI_Player.update()		1011,	110,	110,	110,	1011,	101,	1001
2017-01-05 14:07:30 AI_Player.update()		1110,	110,	1110,	1100,	111,	111,	1011
2017-01-05 14:07:30 AI_Player.update()		101,	101,	1010,	1011,	101,	11,	1101
2017-01-05 14:07:30 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-05 14:07:30 AI_Player.update()		1010,	101,	1010,	11,	111,	110,	1110
2017-01-05 14:07:30 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:30 AI_Player.update()	Search took138ms
2017-01-05 14:07:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()		110,	111,	111,	11,	111,	1100,	11
2017-01-05 14:07:30 AI_Player.update()		110,	110,	110,	1011,	101,	1001,	1011
2017-01-05 14:07:30 AI_Player.update()		1110,	110,	1110,	1100,	111,	111,	1011
2017-01-05 14:07:30 AI_Player.update()		101,	101,	1010,	1011,	101,	11,	1101
2017-01-05 14:07:30 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-05 14:07:30 AI_Player.update()		1010,	101,	1010,	11,	111,	110,	1110
2017-01-05 14:07:30 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	4 5
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:30 AI_Player.update()	Search took3ms
2017-01-05 14:07:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:07:30 AI_Player.update()		110,	110,	110,	1011,	101,	1001,	1011
2017-01-05 14:07:30 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-05 14:07:30 AI_Player.update()		101,	1010,	1010,	1011,	101,	11,	1101
2017-01-05 14:07:30 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 14:07:30 AI_Player.update()		1010,	111,	1010,	11,	111,	110,	1110
2017-01-05 14:07:30 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:07:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:30 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:30 AI_Player.update()	update
2017-01-05 14:07:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:31 AI_Player.update()	Search took675ms
2017-01-05 14:07:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:07:31 AI_Player.update()		1011,	110,	110,	110,	1011,	101,	1001
2017-01-05 14:07:31 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-05 14:07:31 AI_Player.update()		101,	1010,	1010,	1011,	101,	11,	1101
2017-01-05 14:07:31 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 14:07:31 AI_Player.update()		1010,	111,	1010,	11,	111,	110,	1110
2017-01-05 14:07:31 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	5 6
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:07:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:31 AI_Player.update()	Search took4ms
2017-01-05 14:07:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-05 14:07:31 AI_Player.update()		110,	110,	110,	1011,	101,	1001,	1011
2017-01-05 14:07:31 AI_Player.update()		1110,	101,	1110,	1100,	111,	111,	1011
2017-01-05 14:07:31 AI_Player.update()		101,	1010,	1010,	1011,	101,	11,	1101
2017-01-05 14:07:31 AI_Player.update()		1110,	101,	1101,	111,	1011,	1001,	1011
2017-01-05 14:07:31 AI_Player.update()		1010,	111,	1010,	11,	111,	110,	1110
2017-01-05 14:07:31 AI_Player.update()		1100,	111,	1101,	11,	1101,	1001,	1001
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	6 6
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 14:07:31 AI_Player.update()	Player b has won!
2017-01-05 14:07:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:31 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:07:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:07:31 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:07:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:31 AI_Player.update()	Search took155ms
2017-01-05 14:07:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 14:07:31 AI_Player.update()		1010,	1010,	1001,	11,	11,	101,	1100
2017-01-05 14:07:31 AI_Player.update()		1110,	11,	1110,	11,	111,	110,	1011
2017-01-05 14:07:31 AI_Player.update()		1100,	1010,	1011,	101,	1011,	1101,	1010
2017-01-05 14:07:31 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-05 14:07:31 AI_Player.update()		110,	111,	1001,	1010,	101,	101,	11
2017-01-05 14:07:31 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:31 AI_Player.update()	Search took3ms
2017-01-05 14:07:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()		110,	1110,	111,	101,	111,	101,	11
2017-01-05 14:07:31 AI_Player.update()		1010,	1001,	11,	11,	101,	1100,	1010
2017-01-05 14:07:31 AI_Player.update()		1110,	11,	1110,	11,	111,	110,	1011
2017-01-05 14:07:31 AI_Player.update()		1100,	1010,	1011,	101,	1011,	1101,	1010
2017-01-05 14:07:31 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-05 14:07:31 AI_Player.update()		110,	111,	1001,	1010,	101,	101,	11
2017-01-05 14:07:31 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:31 AI_Player.update()	Search took175ms
2017-01-05 14:07:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:07:31 AI_Player.update()		1010,	1110,	11,	11,	101,	1100,	1010
2017-01-05 14:07:31 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 14:07:31 AI_Player.update()		1100,	11,	1011,	101,	1011,	1101,	1010
2017-01-05 14:07:31 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-05 14:07:31 AI_Player.update()		110,	110,	1001,	1010,	101,	101,	11
2017-01-05 14:07:31 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:31 AI_Player.update()	Search took7ms
2017-01-05 14:07:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:07:31 AI_Player.update()		1010,	1110,	11,	101,	101,	1100,	1010
2017-01-05 14:07:31 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 14:07:31 AI_Player.update()		1100,	11,	1011,	11,	1011,	1101,	1010
2017-01-05 14:07:31 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:31 AI_Player.update()		110,	110,	1001,	1001,	101,	101,	11
2017-01-05 14:07:31 AI_Player.update()		1100,	111,	1101,	1010,	1101,	11,	1001
2017-01-05 14:07:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	2 1
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:31 AI_Player.update()	update
2017-01-05 14:07:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:32 AI_Player.update()	Search took843ms
2017-01-05 14:07:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:32 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-05 14:07:32 AI_Player.update()		1010,	1110,	11,	101,	101,	1100,	1010
2017-01-05 14:07:32 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:07:32 AI_Player.update()		1100,	11,	1011,	11,	1011,	1101,	1010
2017-01-05 14:07:32 AI_Player.update()		1110,	1010,	1101,	11,	1011,	101,	1011
2017-01-05 14:07:32 AI_Player.update()		110,	110,	1001,	101,	101,	101,	11
2017-01-05 14:07:32 AI_Player.update()		1100,	111,	1101,	1001,	1101,	11,	1001
2017-01-05 14:07:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	2 2
2017-01-05 14:07:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:32 AI_Player.update()	update
2017-01-05 14:07:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:32 AI_Player.update()	update
2017-01-05 14:07:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:32 AI_Player.update()	Search took4ms
2017-01-05 14:07:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:32 AI_Player.update()		110,	111,	111,	1010,	111,	101,	11
2017-01-05 14:07:32 AI_Player.update()		1010,	111,	11,	101,	101,	1100,	1010
2017-01-05 14:07:32 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-05 14:07:32 AI_Player.update()		1100,	1001,	1011,	11,	1011,	1101,	1010
2017-01-05 14:07:32 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-05 14:07:32 AI_Player.update()		110,	1010,	1001,	101,	101,	101,	11
2017-01-05 14:07:32 AI_Player.update()		1100,	110,	1101,	1001,	1101,	11,	1001
2017-01-05 14:07:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	3 2
2017-01-05 14:07:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:32 AI_Player.update()	update
2017-01-05 14:07:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:32 AI_Player.update()	update
2017-01-05 14:07:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:33 AI_Player.update()	Search took544ms
2017-01-05 14:07:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:07:33 AI_Player.update()		1010,	111,	11,	101,	101,	1100,	1010
2017-01-05 14:07:33 AI_Player.update()		1110,	1110,	1110,	11,	111,	110,	1011
2017-01-05 14:07:33 AI_Player.update()		1100,	1001,	1011,	11,	1011,	1101,	1010
2017-01-05 14:07:33 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:33 AI_Player.update()		110,	1010,	1001,	1001,	101,	101,	11
2017-01-05 14:07:33 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-05 14:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	3 3
2017-01-05 14:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()	update
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()	update
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:33 AI_Player.update()	Search took4ms
2017-01-05 14:07:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:07:33 AI_Player.update()		1010,	1110,	11,	101,	101,	1100,	1010
2017-01-05 14:07:33 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 14:07:33 AI_Player.update()		1100,	11,	1011,	11,	1011,	1101,	1010
2017-01-05 14:07:33 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:33 AI_Player.update()		110,	110,	1001,	1001,	101,	101,	11
2017-01-05 14:07:33 AI_Player.update()		1100,	111,	1101,	1010,	1101,	11,	1001
2017-01-05 14:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	4 3
2017-01-05 14:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()	update
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()	update
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:33 AI_Player.update()	Search took706ms
2017-01-05 14:07:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:07:33 AI_Player.update()		1010,	1110,	11,	101,	101,	1100,	1010
2017-01-05 14:07:33 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 14:07:33 AI_Player.update()		1100,	11,	1011,	11,	1011,	1101,	1010
2017-01-05 14:07:33 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:33 AI_Player.update()		110,	1001,	1001,	101,	101,	11,	110
2017-01-05 14:07:33 AI_Player.update()		1100,	111,	1101,	1010,	1101,	11,	1001
2017-01-05 14:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	4 4
2017-01-05 14:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()	update
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()	update
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:33 AI_Player.update()	Search took5ms
2017-01-05 14:07:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-05 14:07:33 AI_Player.update()		1010,	1110,	11,	11,	101,	1100,	1010
2017-01-05 14:07:33 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-05 14:07:33 AI_Player.update()		1100,	11,	1011,	101,	1011,	1101,	1010
2017-01-05 14:07:33 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-05 14:07:33 AI_Player.update()		110,	1001,	1001,	1010,	101,	11,	110
2017-01-05 14:07:33 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	5 4
2017-01-05 14:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()	update
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:33 AI_Player.update()	update
2017-01-05 14:07:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:34 AI_Player.update()	Search took1074ms
2017-01-05 14:07:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:34 AI_Player.update()		110,	111,	111,	11,	111,	101,	11
2017-01-05 14:07:34 AI_Player.update()		1010,	1110,	11,	11,	101,	1100,	1010
2017-01-05 14:07:34 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:07:34 AI_Player.update()		1100,	11,	1011,	101,	1011,	1101,	1010
2017-01-05 14:07:34 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:07:34 AI_Player.update()		110,	1001,	1001,	101,	101,	11,	110
2017-01-05 14:07:34 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	5 5
2017-01-05 14:07:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:34 AI_Player.update()	update
2017-01-05 14:07:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 14:07:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:07:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:34 AI_Player.update()	update
2017-01-05 14:07:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:07:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:07:34 AI_Player.update()	Search took4ms
2017-01-05 14:07:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:34 AI_Player.update()		110,	1110,	111,	11,	111,	101,	11
2017-01-05 14:07:34 AI_Player.update()		1010,	1001,	11,	11,	101,	1100,	1010
2017-01-05 14:07:34 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-05 14:07:34 AI_Player.update()		1100,	1010,	1011,	101,	1011,	1101,	1010
2017-01-05 14:07:34 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	101,	1011
2017-01-05 14:07:34 AI_Player.update()		110,	111,	1001,	101,	101,	11,	110
2017-01-05 14:07:34 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:34 AI_Player.update()	update
2017-01-05 14:07:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:07:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:07:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:07:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:07:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:34 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:34 AI_Player.update()	update
2017-01-05 14:07:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:07:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:07:35 AI_Player.update()	Search took315ms
2017-01-05 14:07:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:07:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:35 AI_Player.update()		110,	111,	111,	11,	111,	101,	11
2017-01-05 14:07:35 AI_Player.update()		1010,	1110,	11,	11,	101,	1100,	1010
2017-01-05 14:07:35 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-05 14:07:35 AI_Player.update()		1100,	11,	1011,	101,	1011,	1101,	1010
2017-01-05 14:07:35 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-05 14:07:35 AI_Player.update()		110,	1001,	1001,	101,	101,	11,	110
2017-01-05 14:07:35 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-05 14:07:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:07:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:07:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:07:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:07:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:07:35 GameBoard.setupTreasurePanel()	6 5
2017-01-05 14:07:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:07:35 AI_Player.update()	update
2017-01-05 14:07:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:07:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:07:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:07:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:07:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:07:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:07:35 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 14:07:35 AI_Player.update()	Player a has won!
2017-01-05 14:08:11 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:08:11 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 14:08:11 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 14:08:11 QueryProlog.reset()	setup(h3/h1). suceeded
2017-01-05 14:08:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:08:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:08:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:08:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:08:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:08:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:08:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	adding book
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 14:08:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	adding map
2017-01-05 14:08:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:08:11 AI_Player.update()	update
2017-01-05 14:08:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:08:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:08:11 AI_Player.update()	Search took34ms
2017-01-05 14:08:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:08:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:08:11 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-05 14:08:11 AI_Player.update()		1100,	1110,	101,	1101,	1010,	101,	11
2017-01-05 14:08:11 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:08:11 AI_Player.update()		1010,	1100,	101,	101,	1110,	1001,	110
2017-01-05 14:08:11 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-05 14:08:11 AI_Player.update()		11,	110,	1110,	101,	11,	1010,	11
2017-01-05 14:08:11 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-05 14:08:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:08:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:08:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:08:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:08:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:08:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:08:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:08:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:08:11 AI_Player.update()	update
2017-01-05 14:08:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:08:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:08:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:08:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:08:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:08:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:08:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:08:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:08:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:08:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:08:11 AI_Player.update()	update
2017-01-05 14:08:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:08:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:08:11 AI_Player.update()	Search took2ms
2017-01-05 14:08:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:08:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:08:11 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-05 14:08:11 AI_Player.update()		1110,	101,	1101,	1010,	101,	11,	1100
2017-01-05 14:08:11 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-05 14:08:11 AI_Player.update()		1010,	1100,	101,	101,	1110,	1001,	110
2017-01-05 14:08:11 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-05 14:08:11 AI_Player.update()		11,	110,	1110,	101,	11,	1010,	11
2017-01-05 14:08:11 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-05 14:08:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:08:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:08:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:08:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:08:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:08:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:08:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:08:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:08:11 AI_Player.update()	update
2017-01-05 14:08:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:08:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:08:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:08:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:08:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:08:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:08:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:08:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:08:11 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:08:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:08:11 AI_Player.update()	update
2017-01-05 14:08:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 14:08:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 14:08:12 AI_Player.update()	Search took363ms
2017-01-05 14:08:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:08:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:08:12 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-05 14:08:12 AI_Player.update()		1110,	101,	1101,	11,	101,	11,	1100
2017-01-05 14:08:12 AI_Player.update()		1110,	1010,	1110,	1010,	111,	110,	1011
2017-01-05 14:08:12 AI_Player.update()		1010,	1100,	101,	101,	1110,	1001,	110
2017-01-05 14:08:12 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 14:08:12 AI_Player.update()		11,	110,	1110,	1001,	11,	1010,	11
2017-01-05 14:08:12 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-05 14:08:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:08:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:08:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:08:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:08:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:08:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:08:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:08:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:08:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:08:12 AI_Player.update()	update
2017-01-05 14:08:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 14:08:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 14:08:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 14:08:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:08:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:08:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 14:08:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 14:08:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:08:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:08:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:08:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:08:12 AI_Player.update()	update
2017-01-05 14:08:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 14:08:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h1). suceeded
2017-01-05 14:08:12 AI_Player.update()	Search took2ms
2017-01-05 14:08:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 14:08:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:08:12 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-05 14:08:12 AI_Player.update()		1110,	1010,	1101,	11,	101,	11,	1100
2017-01-05 14:08:12 AI_Player.update()		1110,	1100,	1110,	1010,	111,	110,	1011
2017-01-05 14:08:12 AI_Player.update()		1010,	101,	101,	101,	1110,	1001,	110
2017-01-05 14:08:12 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 14:08:12 AI_Player.update()		11,	1010,	1110,	1001,	11,	1010,	11
2017-01-05 14:08:12 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-05 14:08:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 14:08:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 14:08:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:08:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:08:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:08:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:08:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:08:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:08:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:08:12 AI_Player.update()	update
2017-01-05 14:08:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 14:08:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 14:08:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h1). suceeded
2017-01-05 14:08:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 14:08:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 14:08:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 14:08:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 14:08:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 14:08:12 GameBoard.setupTreasurePanel()	1 1
2017-01-05 14:08:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 14:08:12 AI_Player.update()	update
2017-01-05 14:08:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
