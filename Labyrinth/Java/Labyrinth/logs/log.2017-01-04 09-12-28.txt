2017-01-04 09:12:28 GameBoard.<init>()	Hello World!
2017-01-04 09:12:28 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-04 09:12:28 QueryProlog.initialise()	setup(h2/h2). suceeded
2017-01-04 09:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:28 GameBoard.setupBoardFromString()	Board created
2017-01-04 09:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:12:28 GameBoard.initialise()	[fairy, keys, candle, book, crown]
2017-01-04 09:12:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:12:28 GameBoard.initialise()	[chest, gold, ring, map, sword]
2017-01-04 09:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:28 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-04 09:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	null
2017-01-04 09:12:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:12:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:28 AI_Player.update()	update
2017-01-04 09:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:28 AI_Player.update()	Search took96ms
2017-01-04 09:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:28 AI_Player.update()		110,	1101,	111,	101,	111,	11,	11
2017-01-04 09:12:28 AI_Player.update()		110,	110,	101,	101,	110,	110,	110
2017-01-04 09:12:28 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-04 09:12:28 AI_Player.update()		1100,	1001,	1101,	1011,	1011,	11,	111
2017-01-04 09:12:28 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 09:12:28 AI_Player.update()		11,	1110,	11,	1010,	1011,	1101,	110
2017-01-04 09:12:28 AI_Player.update()		1100,	110,	1101,	1100,	1101,	111,	1001
2017-01-04 09:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:12:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:12:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:28 AI_Player.update()	update
2017-01-04 09:12:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:28 AI_Player.update()	update
2017-01-04 09:12:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:29 AI_Player.update()	Search took79ms
2017-01-04 09:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:29 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 09:12:29 AI_Player.update()		110,	1010,	101,	101,	110,	110,	110
2017-01-04 09:12:29 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-04 09:12:29 AI_Player.update()		1100,	11,	1101,	1011,	1011,	11,	111
2017-01-04 09:12:29 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-04 09:12:29 AI_Player.update()		11,	110,	11,	1010,	1011,	1101,	110
2017-01-04 09:12:29 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-04 09:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:29 AI_Player.update()	update
2017-01-04 09:12:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:29 AI_Player.update()	update
2017-01-04 09:12:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:29 AI_Player.update()	Search took559ms
2017-01-04 09:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:29 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:29 AI_Player.update()		110,	1010,	101,	101,	110,	110,	110
2017-01-04 09:12:29 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 09:12:29 AI_Player.update()		1100,	11,	1101,	1011,	1011,	101,	111
2017-01-04 09:12:29 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 09:12:29 AI_Player.update()		11,	110,	11,	1010,	1011,	111,	110
2017-01-04 09:12:29 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 09:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:29 AI_Player.update()	update
2017-01-04 09:12:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:30 AI_Player.update()	update
2017-01-04 09:12:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:30 AI_Player.update()	Search took49ms
2017-01-04 09:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:30 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 09:12:30 AI_Player.update()		110,	1010,	101,	101,	110,	110,	110
2017-01-04 09:12:30 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-04 09:12:30 AI_Player.update()		1100,	11,	1101,	1011,	1011,	11,	111
2017-01-04 09:12:30 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-04 09:12:30 AI_Player.update()		11,	110,	11,	1010,	1011,	1101,	110
2017-01-04 09:12:30 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-04 09:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:30 AI_Player.update()	update
2017-01-04 09:12:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:30 AI_Player.update()	update
2017-01-04 09:12:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:31 AI_Player.update()	Search took802ms
2017-01-04 09:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:31 AI_Player.update()		110,	1101,	111,	101,	111,	11,	11
2017-01-04 09:12:31 AI_Player.update()		110,	110,	101,	101,	110,	110,	110
2017-01-04 09:12:31 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-04 09:12:31 AI_Player.update()		1100,	1001,	1101,	1011,	1011,	11,	111
2017-01-04 09:12:31 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 09:12:31 AI_Player.update()		11,	1110,	11,	1010,	1011,	1101,	110
2017-01-04 09:12:31 AI_Player.update()		1100,	110,	1101,	1100,	1101,	111,	1001
2017-01-04 09:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	1 1
2017-01-04 09:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:31 AI_Player.update()	update
2017-01-04 09:12:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 09:12:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 09:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:31 AI_Player.update()	update
2017-01-04 09:12:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:31 AI_Player.update()	Search took49ms
2017-01-04 09:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:31 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 09:12:31 AI_Player.update()		110,	1010,	101,	101,	110,	110,	110
2017-01-04 09:12:31 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-04 09:12:31 AI_Player.update()		1100,	11,	1101,	1011,	1011,	11,	111
2017-01-04 09:12:31 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-04 09:12:31 AI_Player.update()		11,	110,	11,	1010,	1011,	1101,	110
2017-01-04 09:12:31 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-04 09:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:31 AI_Player.update()	update
2017-01-04 09:12:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:31 AI_Player.update()	update
2017-01-04 09:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:31 AI_Player.update()	Search took30ms
2017-01-04 09:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:31 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 09:12:31 AI_Player.update()		110,	1010,	101,	101,	110,	110,	110
2017-01-04 09:12:31 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-04 09:12:31 AI_Player.update()		11,	1101,	1011,	1011,	11,	111,	1100
2017-01-04 09:12:31 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-04 09:12:31 AI_Player.update()		11,	110,	11,	1010,	1011,	1101,	110
2017-01-04 09:12:31 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-04 09:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:31 AI_Player.update()	update
2017-01-04 09:12:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:31 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:31 AI_Player.update()	update
2017-01-04 09:12:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:32 AI_Player.update()	Search took135ms
2017-01-04 09:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:32 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 09:12:32 AI_Player.update()		110,	110,	1010,	101,	101,	110,	110
2017-01-04 09:12:32 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-04 09:12:32 AI_Player.update()		11,	1101,	1011,	1011,	11,	111,	1100
2017-01-04 09:12:32 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-04 09:12:32 AI_Player.update()		11,	110,	11,	1010,	1011,	1101,	110
2017-01-04 09:12:32 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-04 09:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:32 AI_Player.update()	update
2017-01-04 09:12:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:32 AI_Player.update()	update
2017-01-04 09:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:32 AI_Player.update()	Search took240ms
2017-01-04 09:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:32 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:32 AI_Player.update()		110,	110,	1010,	101,	101,	110,	110
2017-01-04 09:12:32 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 09:12:32 AI_Player.update()		11,	1101,	1011,	1011,	11,	101,	1100
2017-01-04 09:12:32 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 09:12:32 AI_Player.update()		11,	110,	11,	1010,	1011,	111,	110
2017-01-04 09:12:32 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 09:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:32 AI_Player.update()	update
2017-01-04 09:12:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:32 AI_Player.update()	update
2017-01-04 09:12:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:32 AI_Player.update()	Search took25ms
2017-01-04 09:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:32 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:32 AI_Player.update()		110,	110,	1010,	101,	101,	111,	110
2017-01-04 09:12:32 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:12:32 AI_Player.update()		11,	1101,	1011,	1011,	11,	1101,	1100
2017-01-04 09:12:32 AI_Player.update()		1110,	1110,	1101,	11,	1011,	111,	1011
2017-01-04 09:12:32 AI_Player.update()		11,	110,	11,	1010,	1011,	11,	110
2017-01-04 09:12:32 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:32 AI_Player.update()	update
2017-01-04 09:12:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:32 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:32 AI_Player.update()	update
2017-01-04 09:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:33 AI_Player.update()	Search took90ms
2017-01-04 09:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:33 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:33 AI_Player.update()		110,	110,	1010,	101,	101,	110,	110
2017-01-04 09:12:33 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 09:12:33 AI_Player.update()		11,	1101,	1011,	1011,	11,	101,	1100
2017-01-04 09:12:33 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 09:12:33 AI_Player.update()		11,	110,	11,	1010,	1011,	111,	110
2017-01-04 09:12:33 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 09:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:33 AI_Player.update()	update
2017-01-04 09:12:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:33 AI_Player.update()	update
2017-01-04 09:12:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:33 AI_Player.update()	Search took72ms
2017-01-04 09:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:33 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:33 AI_Player.update()		110,	110,	1010,	101,	101,	111,	110
2017-01-04 09:12:33 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:12:33 AI_Player.update()		11,	1101,	1011,	1011,	11,	1101,	1100
2017-01-04 09:12:33 AI_Player.update()		1110,	1110,	1101,	11,	1011,	111,	1011
2017-01-04 09:12:33 AI_Player.update()		11,	110,	11,	1010,	1011,	11,	110
2017-01-04 09:12:33 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:33 AI_Player.update()	update
2017-01-04 09:12:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:33 AI_Player.update()	update
2017-01-04 09:12:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:33 AI_Player.update()	Search took216ms
2017-01-04 09:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:33 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:33 AI_Player.update()		110,	1010,	101,	101,	111,	110,	110
2017-01-04 09:12:33 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:12:33 AI_Player.update()		11,	1101,	1011,	1011,	11,	1101,	1100
2017-01-04 09:12:33 AI_Player.update()		1110,	1110,	1101,	11,	1011,	111,	1011
2017-01-04 09:12:33 AI_Player.update()		11,	110,	11,	1010,	1011,	11,	110
2017-01-04 09:12:33 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:33 AI_Player.update()	update
2017-01-04 09:12:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:33 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:33 AI_Player.update()	update
2017-01-04 09:12:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:34 AI_Player.update()	Search took52ms
2017-01-04 09:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:34 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:34 AI_Player.update()		110,	110,	1010,	101,	101,	111,	110
2017-01-04 09:12:34 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:12:34 AI_Player.update()		11,	1101,	1011,	1011,	11,	1101,	1100
2017-01-04 09:12:34 AI_Player.update()		1110,	1110,	1101,	11,	1011,	111,	1011
2017-01-04 09:12:34 AI_Player.update()		11,	110,	11,	1010,	1011,	11,	110
2017-01-04 09:12:34 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:34 AI_Player.update()	update
2017-01-04 09:12:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:34 AI_Player.update()	update
2017-01-04 09:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:34 AI_Player.update()	Search took98ms
2017-01-04 09:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:34 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:34 AI_Player.update()		110,	1010,	101,	101,	111,	110,	110
2017-01-04 09:12:34 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:12:34 AI_Player.update()		11,	1101,	1011,	1011,	11,	1101,	1100
2017-01-04 09:12:34 AI_Player.update()		1110,	1110,	1101,	11,	1011,	111,	1011
2017-01-04 09:12:34 AI_Player.update()		11,	110,	11,	1010,	1011,	11,	110
2017-01-04 09:12:34 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:34 AI_Player.update()	update
2017-01-04 09:12:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:34 AI_Player.update()	update
2017-01-04 09:12:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:34 AI_Player.update()	Search took38ms
2017-01-04 09:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:34 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:34 AI_Player.update()		110,	110,	1010,	101,	101,	111,	110
2017-01-04 09:12:34 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:12:34 AI_Player.update()		11,	1101,	1011,	1011,	11,	1101,	1100
2017-01-04 09:12:34 AI_Player.update()		1110,	1110,	1101,	11,	1011,	111,	1011
2017-01-04 09:12:34 AI_Player.update()		11,	110,	11,	1010,	1011,	11,	110
2017-01-04 09:12:34 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:34 AI_Player.update()	update
2017-01-04 09:12:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:34 AI_Player.update()	update
2017-01-04 09:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:34 AI_Player.update()	Search took203ms
2017-01-04 09:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:34 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:34 AI_Player.update()		110,	110,	1010,	101,	101,	110,	110
2017-01-04 09:12:34 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 09:12:34 AI_Player.update()		11,	1101,	1011,	1011,	11,	101,	1100
2017-01-04 09:12:34 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 09:12:34 AI_Player.update()		11,	110,	11,	1010,	1011,	111,	110
2017-01-04 09:12:34 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 09:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:35 AI_Player.update()	update
2017-01-04 09:12:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:35 AI_Player.update()	update
2017-01-04 09:12:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:35 AI_Player.update()	Search took44ms
2017-01-04 09:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:35 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-04 09:12:35 AI_Player.update()		110,	110,	1010,	101,	101,	110,	110
2017-01-04 09:12:35 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-04 09:12:35 AI_Player.update()		11,	1101,	1011,	1011,	11,	111,	1100
2017-01-04 09:12:35 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-04 09:12:35 AI_Player.update()		11,	110,	11,	1010,	1011,	1101,	110
2017-01-04 09:12:35 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	111,	1001
2017-01-04 09:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:35 AI_Player.update()	update
2017-01-04 09:12:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:35 AI_Player.update()	update
2017-01-04 09:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:35 AI_Player.update()	Search took141ms
2017-01-04 09:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:35 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:35 AI_Player.update()		110,	110,	1010,	101,	101,	110,	110
2017-01-04 09:12:35 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 09:12:35 AI_Player.update()		11,	1101,	1011,	1011,	11,	101,	1100
2017-01-04 09:12:35 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 09:12:35 AI_Player.update()		11,	110,	11,	1010,	1011,	111,	110
2017-01-04 09:12:35 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 09:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:35 AI_Player.update()	update
2017-01-04 09:12:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:35 AI_Player.update()	update
2017-01-04 09:12:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:35 AI_Player.update()	Search took36ms
2017-01-04 09:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:35 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:35 AI_Player.update()		110,	110,	1010,	101,	101,	111,	110
2017-01-04 09:12:35 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:12:35 AI_Player.update()		11,	1101,	1011,	1011,	11,	1101,	1100
2017-01-04 09:12:35 AI_Player.update()		1110,	1110,	1101,	11,	1011,	111,	1011
2017-01-04 09:12:35 AI_Player.update()		11,	110,	11,	1010,	1011,	11,	110
2017-01-04 09:12:35 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:35 AI_Player.update()	update
2017-01-04 09:12:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:36 AI_Player.update()	update
2017-01-04 09:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:36 AI_Player.update()	Search took202ms
2017-01-04 09:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:36 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:36 AI_Player.update()		110,	110,	1010,	101,	101,	110,	110
2017-01-04 09:12:36 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 09:12:36 AI_Player.update()		11,	1101,	1011,	1011,	11,	101,	1100
2017-01-04 09:12:36 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 09:12:36 AI_Player.update()		11,	110,	11,	1010,	1011,	111,	110
2017-01-04 09:12:36 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 09:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:36 AI_Player.update()	update
2017-01-04 09:12:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:36 AI_Player.update()	update
2017-01-04 09:12:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:36 AI_Player.update()	Search took37ms
2017-01-04 09:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:36 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:36 AI_Player.update()		110,	110,	1010,	101,	101,	111,	110
2017-01-04 09:12:36 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:12:36 AI_Player.update()		11,	1101,	1011,	1011,	11,	1101,	1100
2017-01-04 09:12:36 AI_Player.update()		1110,	1110,	1101,	11,	1011,	111,	1011
2017-01-04 09:12:36 AI_Player.update()		11,	110,	11,	1010,	1011,	11,	110
2017-01-04 09:12:36 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:36 AI_Player.update()	update
2017-01-04 09:12:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:36 AI_Player.update()	update
2017-01-04 09:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:36 AI_Player.update()	Search took90ms
2017-01-04 09:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:36 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:36 AI_Player.update()		110,	110,	1010,	101,	101,	110,	110
2017-01-04 09:12:36 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 09:12:36 AI_Player.update()		11,	1101,	1011,	1011,	11,	101,	1100
2017-01-04 09:12:36 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 09:12:36 AI_Player.update()		11,	110,	11,	1010,	1011,	111,	110
2017-01-04 09:12:36 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 09:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:36 AI_Player.update()	update
2017-01-04 09:12:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:36 AI_Player.update()	update
2017-01-04 09:12:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:37 AI_Player.update()	Search took36ms
2017-01-04 09:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:37 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:37 AI_Player.update()		110,	110,	1010,	101,	101,	111,	110
2017-01-04 09:12:37 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:12:37 AI_Player.update()		11,	1101,	1011,	1011,	11,	1101,	1100
2017-01-04 09:12:37 AI_Player.update()		1110,	1110,	1101,	11,	1011,	111,	1011
2017-01-04 09:12:37 AI_Player.update()		11,	110,	11,	1010,	1011,	11,	110
2017-01-04 09:12:37 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:37 AI_Player.update()	update
2017-01-04 09:12:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:37 AI_Player.update()	update
2017-01-04 09:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:37 AI_Player.update()	Search took202ms
2017-01-04 09:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:37 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:37 AI_Player.update()		110,	110,	1010,	101,	101,	110,	110
2017-01-04 09:12:37 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 09:12:37 AI_Player.update()		11,	1101,	1011,	1011,	11,	101,	1100
2017-01-04 09:12:37 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 09:12:37 AI_Player.update()		11,	110,	11,	1010,	1011,	111,	110
2017-01-04 09:12:37 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 09:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:37 AI_Player.update()	update
2017-01-04 09:12:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:37 AI_Player.update()	update
2017-01-04 09:12:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:37 AI_Player.update()	Search took33ms
2017-01-04 09:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:37 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:37 AI_Player.update()		110,	110,	1010,	101,	101,	111,	110
2017-01-04 09:12:37 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:12:37 AI_Player.update()		11,	1101,	1011,	1011,	11,	1101,	1100
2017-01-04 09:12:37 AI_Player.update()		1110,	1110,	1101,	11,	1011,	111,	1011
2017-01-04 09:12:37 AI_Player.update()		11,	110,	11,	1010,	1011,	11,	110
2017-01-04 09:12:37 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:37 AI_Player.update()	update
2017-01-04 09:12:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:37 AI_Player.update()	update
2017-01-04 09:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:37 AI_Player.update()	Search took85ms
2017-01-04 09:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:37 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:37 AI_Player.update()		110,	110,	1010,	101,	101,	110,	110
2017-01-04 09:12:37 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 09:12:37 AI_Player.update()		11,	1101,	1011,	1011,	11,	101,	1100
2017-01-04 09:12:37 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 09:12:37 AI_Player.update()		11,	110,	11,	1010,	1011,	111,	110
2017-01-04 09:12:37 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 09:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:37 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:38 AI_Player.update()	update
2017-01-04 09:12:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:38 AI_Player.update()	update
2017-01-04 09:12:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 09:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-04 09:12:38 AI_Player.update()	Search took48ms
2017-01-04 09:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:38 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:38 AI_Player.update()		110,	110,	1010,	101,	101,	111,	110
2017-01-04 09:12:38 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 09:12:38 AI_Player.update()		11,	1101,	1011,	1011,	11,	1101,	1100
2017-01-04 09:12:38 AI_Player.update()		1110,	1110,	1101,	11,	1011,	111,	1011
2017-01-04 09:12:38 AI_Player.update()		11,	110,	11,	1010,	1011,	11,	110
2017-01-04 09:12:38 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	110,	1001
2017-01-04 09:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:38 AI_Player.update()	update
2017-01-04 09:12:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 09:12:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 09:12:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-04 09:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 09:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:38 AI_Player.update()	update
2017-01-04 09:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 09:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 09:12:38 AI_Player.update()	Search took211ms
2017-01-04 09:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 09:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:38 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-04 09:12:38 AI_Player.update()		110,	110,	1010,	101,	101,	110,	110
2017-01-04 09:12:38 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 09:12:38 AI_Player.update()		11,	1101,	1011,	1011,	11,	101,	1100
2017-01-04 09:12:38 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1101,	1011
2017-01-04 09:12:38 AI_Player.update()		11,	110,	11,	1010,	1011,	111,	110
2017-01-04 09:12:38 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 09:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 09:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 09:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:38 GameBoard.setupTreasurePanel()	2 1
2017-01-04 09:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 09:12:38 AI_Player.update()	update
2017-01-04 09:12:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 09:12:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 09:12:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 09:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 09:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 09:12:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 09:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 09:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 09:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 09:12:38 GameBoard.setupTreasurePanel()	2 1
