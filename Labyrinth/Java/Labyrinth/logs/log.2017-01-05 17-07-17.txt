2017-01-05 17:07:17 GameBoard.<init>()	Hello World!
2017-01-05 17:07:17 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-05 17:07:17 QueryProlog.initialise()	setup(h3/h3). suceeded
2017-01-05 17:07:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:17 GameBoard.setupBoardFromString()	Board created
2017-01-05 17:07:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:17 GameBoard.initialise()	[fairy, ring, gem, candle, helmet]
2017-01-05 17:07:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:17 GameBoard.initialise()	[sword, keys, map, crown, book]
2017-01-05 17:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:17 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-05 17:07:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	null
2017-01-05 17:07:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:17 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:17 AI_Player.update()	update
2017-01-05 17:07:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:18 AI_Player.update()	Search took246ms
2017-01-05 17:07:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:18 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-05 17:07:18 AI_Player.update()		1010,	1001,	110,	11,	110,	101,	11
2017-01-05 17:07:18 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 17:07:18 AI_Player.update()		1101,	11,	101,	101,	1010,	1010,	1001
2017-01-05 17:07:18 AI_Player.update()		1110,	1010,	1101,	111,	1011,	11,	1011
2017-01-05 17:07:18 AI_Player.update()		101,	110,	1100,	101,	1110,	110,	111
2017-01-05 17:07:18 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 17:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:18 AI_Player.update()	update
2017-01-05 17:07:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:18 AI_Player.update()	update
2017-01-05 17:07:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:18 AI_Player.update()	Search took59ms
2017-01-05 17:07:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:18 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-05 17:07:18 AI_Player.update()		1001,	110,	11,	110,	101,	11,	1010
2017-01-05 17:07:18 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 17:07:18 AI_Player.update()		1101,	11,	101,	101,	1010,	1010,	1001
2017-01-05 17:07:18 AI_Player.update()		1110,	1010,	1101,	111,	1011,	11,	1011
2017-01-05 17:07:18 AI_Player.update()		101,	110,	1100,	101,	1110,	110,	111
2017-01-05 17:07:18 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 17:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:18 AI_Player.update()	update
2017-01-05 17:07:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:18 AI_Player.update()	update
2017-01-05 17:07:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:18 AI_Player.update()	Search took49ms
2017-01-05 17:07:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:18 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-05 17:07:18 AI_Player.update()		1001,	1010,	11,	110,	101,	11,	1010
2017-01-05 17:07:18 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 17:07:18 AI_Player.update()		1101,	110,	101,	101,	1010,	1010,	1001
2017-01-05 17:07:18 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-05 17:07:18 AI_Player.update()		101,	1010,	1100,	101,	1110,	110,	111
2017-01-05 17:07:18 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 17:07:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:18 AI_Player.update()	update
2017-01-05 17:07:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:07:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:18 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()	update
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:19 AI_Player.update()	Search took72ms
2017-01-05 17:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-05 17:07:19 AI_Player.update()		1001,	110,	11,	110,	101,	11,	1010
2017-01-05 17:07:19 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 17:07:19 AI_Player.update()		1101,	11,	101,	101,	1010,	1010,	1001
2017-01-05 17:07:19 AI_Player.update()		1110,	1010,	1101,	111,	1011,	11,	1011
2017-01-05 17:07:19 AI_Player.update()		101,	110,	1100,	101,	1110,	110,	111
2017-01-05 17:07:19 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-05 17:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()	update
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()	update
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:19 AI_Player.update()	Search took10ms
2017-01-05 17:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 17:07:19 AI_Player.update()		1001,	110,	11,	110,	101,	11,	1010
2017-01-05 17:07:19 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 17:07:19 AI_Player.update()		1101,	1010,	101,	101,	1010,	1010,	1001
2017-01-05 17:07:19 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 17:07:19 AI_Player.update()		101,	101,	1100,	101,	1110,	110,	111
2017-01-05 17:07:19 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-05 17:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()	update
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()	update
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:19 AI_Player.update()	Search took35ms
2017-01-05 17:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 17:07:19 AI_Player.update()		1001,	110,	11,	101,	101,	11,	1010
2017-01-05 17:07:19 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-05 17:07:19 AI_Player.update()		1101,	1010,	101,	111,	1010,	1010,	1001
2017-01-05 17:07:19 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 17:07:19 AI_Player.update()		101,	101,	1100,	1100,	1110,	110,	111
2017-01-05 17:07:19 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-05 17:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()	update
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:07:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()	update
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:19 AI_Player.update()	Search took93ms
2017-01-05 17:07:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-05 17:07:19 AI_Player.update()		1001,	11,	11,	101,	101,	11,	1010
2017-01-05 17:07:19 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-05 17:07:19 AI_Player.update()		1101,	110,	101,	111,	1010,	1010,	1001
2017-01-05 17:07:19 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-05 17:07:19 AI_Player.update()		101,	1010,	1100,	1100,	1110,	110,	111
2017-01-05 17:07:19 AI_Player.update()		1100,	110,	1101,	110,	1101,	1010,	1001
2017-01-05 17:07:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:19 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:07:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:19 AI_Player.update()	update
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:20 AI_Player.update()	update
2017-01-05 17:07:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:20 AI_Player.update()	Search took51ms
2017-01-05 17:07:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:20 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 17:07:20 AI_Player.update()		1001,	1010,	11,	101,	101,	11,	1010
2017-01-05 17:07:20 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 17:07:20 AI_Player.update()		1101,	101,	101,	111,	1010,	1010,	1001
2017-01-05 17:07:20 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-05 17:07:20 AI_Player.update()		101,	110,	1100,	1100,	1110,	110,	111
2017-01-05 17:07:20 AI_Player.update()		1100,	110,	1101,	110,	1101,	1010,	1001
2017-01-05 17:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:20 AI_Player.update()	update
2017-01-05 17:07:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:20 AI_Player.update()	update
2017-01-05 17:07:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:20 AI_Player.update()	Search took352ms
2017-01-05 17:07:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:20 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 17:07:20 AI_Player.update()		1001,	1010,	11,	110,	101,	11,	1010
2017-01-05 17:07:20 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 17:07:20 AI_Player.update()		1101,	101,	101,	101,	1010,	1010,	1001
2017-01-05 17:07:20 AI_Player.update()		1110,	1010,	1101,	111,	1011,	11,	1011
2017-01-05 17:07:20 AI_Player.update()		101,	110,	1100,	101,	1110,	110,	111
2017-01-05 17:07:20 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 17:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	2 2
2017-01-05 17:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:20 AI_Player.update()	update
2017-01-05 17:07:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:07:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:20 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:20 AI_Player.update()	update
2017-01-05 17:07:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:20 AI_Player.update()	Search took61ms
2017-01-05 17:07:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:20 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-05 17:07:20 AI_Player.update()		1010,	1001,	1010,	11,	110,	101,	11
2017-01-05 17:07:20 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-05 17:07:20 AI_Player.update()		1101,	101,	101,	101,	1010,	1010,	1001
2017-01-05 17:07:20 AI_Player.update()		1110,	1010,	1101,	111,	1011,	11,	1011
2017-01-05 17:07:20 AI_Player.update()		101,	110,	1100,	101,	1110,	110,	111
2017-01-05 17:07:20 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-05 17:07:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	3 2
2017-01-05 17:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:21 AI_Player.update()	update
2017-01-05 17:07:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:07:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:21 AI_Player.update()	update
2017-01-05 17:07:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:21 AI_Player.update()	Search took41ms
2017-01-05 17:07:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:21 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-05 17:07:21 AI_Player.update()		1010,	110,	1010,	11,	110,	101,	11
2017-01-05 17:07:21 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 17:07:21 AI_Player.update()		1101,	1010,	101,	101,	1010,	1010,	1001
2017-01-05 17:07:21 AI_Player.update()		1110,	110,	1101,	111,	1011,	11,	1011
2017-01-05 17:07:21 AI_Player.update()		101,	110,	1100,	101,	1110,	110,	111
2017-01-05 17:07:21 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-05 17:07:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:21 AI_Player.update()	update
2017-01-05 17:07:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:21 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:07:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:21 AI_Player.update()	update
2017-01-05 17:07:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:22 AI_Player.update()	Search took629ms
2017-01-05 17:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:22 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-05 17:07:22 AI_Player.update()		1010,	110,	1010,	101,	110,	101,	11
2017-01-05 17:07:22 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 17:07:22 AI_Player.update()		1101,	1010,	101,	111,	1010,	1010,	1001
2017-01-05 17:07:22 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-05 17:07:22 AI_Player.update()		101,	110,	1100,	1100,	1110,	110,	111
2017-01-05 17:07:22 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-05 17:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:22 AI_Player.update()	update
2017-01-05 17:07:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:22 AI_Player.update()	update
2017-01-05 17:07:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:22 AI_Player.update()	Search took464ms
2017-01-05 17:07:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:22 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-05 17:07:22 AI_Player.update()		1010,	110,	1010,	101,	110,	101,	11
2017-01-05 17:07:22 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 17:07:22 AI_Player.update()		1101,	1010,	101,	111,	1010,	11,	1001
2017-01-05 17:07:22 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 17:07:22 AI_Player.update()		101,	110,	1100,	1100,	1110,	1010,	111
2017-01-05 17:07:22 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-05 17:07:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	3 3
2017-01-05 17:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:22 AI_Player.update()	update
2017-01-05 17:07:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:07:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:22 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:22 AI_Player.update()	update
2017-01-05 17:07:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:23 AI_Player.update()	Search took149ms
2017-01-05 17:07:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:23 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-05 17:07:23 AI_Player.update()		11,	1010,	110,	1010,	101,	110,	101
2017-01-05 17:07:23 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-05 17:07:23 AI_Player.update()		1101,	1010,	101,	111,	1010,	11,	1001
2017-01-05 17:07:23 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-05 17:07:23 AI_Player.update()		101,	110,	1100,	1100,	1110,	1010,	111
2017-01-05 17:07:23 AI_Player.update()		1100,	11,	1101,	110,	1101,	1010,	1001
2017-01-05 17:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	4 3
2017-01-05 17:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:23 AI_Player.update()	update
2017-01-05 17:07:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:07:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:23 AI_Player.update()	update
2017-01-05 17:07:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:23 AI_Player.update()	Search took319ms
2017-01-05 17:07:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:23 AI_Player.update()		110,	1001,	111,	11,	111,	110,	11
2017-01-05 17:07:23 AI_Player.update()		11,	1010,	110,	1010,	101,	1010,	101
2017-01-05 17:07:23 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 17:07:23 AI_Player.update()		1101,	1010,	101,	111,	1010,	110,	1001
2017-01-05 17:07:23 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 17:07:23 AI_Player.update()		101,	110,	1100,	1100,	1110,	1010,	111
2017-01-05 17:07:23 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-05 17:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:23 AI_Player.update()	update
2017-01-05 17:07:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:07:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:23 AI_Player.update()	update
2017-01-05 17:07:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:23 AI_Player.update()	Search took64ms
2017-01-05 17:07:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:23 AI_Player.update()		110,	1001,	111,	11,	111,	110,	11
2017-01-05 17:07:23 AI_Player.update()		11,	1010,	110,	1010,	101,	1010,	101
2017-01-05 17:07:23 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 17:07:23 AI_Player.update()		1010,	101,	111,	1010,	110,	1001,	1101
2017-01-05 17:07:23 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 17:07:23 AI_Player.update()		101,	110,	1100,	1100,	1110,	1010,	111
2017-01-05 17:07:23 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-05 17:07:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:23 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:24 AI_Player.update()	update
2017-01-05 17:07:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:24 AI_Player.update()	update
2017-01-05 17:07:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:24 AI_Player.update()	Search took513ms
2017-01-05 17:07:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:24 AI_Player.update()		110,	1001,	111,	11,	111,	110,	11
2017-01-05 17:07:24 AI_Player.update()		11,	1010,	110,	1010,	101,	1010,	101
2017-01-05 17:07:24 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 17:07:24 AI_Player.update()		1010,	101,	111,	1010,	110,	1001,	1101
2017-01-05 17:07:24 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-05 17:07:24 AI_Player.update()		111,	101,	110,	1100,	1100,	1110,	1010
2017-01-05 17:07:24 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-05 17:07:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	4 4
2017-01-05 17:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:24 AI_Player.update()	update
2017-01-05 17:07:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:07:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:24 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:24 AI_Player.update()	update
2017-01-05 17:07:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:25 AI_Player.update()	Search took164ms
2017-01-05 17:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:25 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 17:07:25 AI_Player.update()		11,	101,	110,	1010,	101,	1010,	101
2017-01-05 17:07:25 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-05 17:07:25 AI_Player.update()		1010,	110,	111,	1010,	110,	1001,	1101
2017-01-05 17:07:25 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-05 17:07:25 AI_Player.update()		111,	11,	110,	1100,	1100,	1110,	1010
2017-01-05 17:07:25 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-05 17:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:25 AI_Player.update()	update
2017-01-05 17:07:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:25 AI_Player.update()	update
2017-01-05 17:07:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:25 AI_Player.update()	Search took127ms
2017-01-05 17:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:25 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-05 17:07:25 AI_Player.update()		11,	101,	110,	1010,	101,	11,	101
2017-01-05 17:07:25 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 17:07:25 AI_Player.update()		1010,	110,	111,	1010,	110,	1010,	1101
2017-01-05 17:07:25 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-05 17:07:25 AI_Player.update()		111,	11,	110,	1100,	1100,	101,	1010
2017-01-05 17:07:25 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-05 17:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:25 AI_Player.update()	update
2017-01-05 17:07:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:25 AI_Player.update()	update
2017-01-05 17:07:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:25 AI_Player.update()	Search took276ms
2017-01-05 17:07:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:25 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-05 17:07:25 AI_Player.update()		101,	110,	1010,	101,	11,	101,	11
2017-01-05 17:07:25 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 17:07:25 AI_Player.update()		1010,	110,	111,	1010,	110,	1010,	1101
2017-01-05 17:07:25 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-05 17:07:25 AI_Player.update()		111,	11,	110,	1100,	1100,	101,	1010
2017-01-05 17:07:25 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-05 17:07:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:07:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:25 AI_Player.update()	update
2017-01-05 17:07:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:25 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:26 AI_Player.update()	update
2017-01-05 17:07:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:26 AI_Player.update()	Search took175ms
2017-01-05 17:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:26 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-05 17:07:26 AI_Player.update()		101,	110,	1010,	101,	11,	101,	11
2017-01-05 17:07:26 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-05 17:07:26 AI_Player.update()		110,	111,	1010,	110,	1010,	1101,	1010
2017-01-05 17:07:26 AI_Player.update()		1110,	101,	1101,	101,	1011,	1110,	1011
2017-01-05 17:07:26 AI_Player.update()		111,	11,	110,	1100,	1100,	101,	1010
2017-01-05 17:07:26 AI_Player.update()		1100,	1001,	1101,	110,	1101,	110,	1001
2017-01-05 17:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	5 4
2017-01-05 17:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:26 AI_Player.update()	update
2017-01-05 17:07:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	6 4
2017-01-05 17:07:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:26 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:26 AI_Player.update()	update
2017-01-05 17:07:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:26 AI_Player.update()	Search took563ms
2017-01-05 17:07:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:26 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 17:07:26 AI_Player.update()		101,	110,	1010,	101,	11,	1010,	11
2017-01-05 17:07:26 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 17:07:26 AI_Player.update()		110,	111,	1010,	110,	1010,	1001,	1010
2017-01-05 17:07:26 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-05 17:07:26 AI_Player.update()		111,	11,	110,	1100,	1100,	1110,	1010
2017-01-05 17:07:26 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-05 17:07:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	6 4
2017-01-05 17:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:27 AI_Player.update()	update
2017-01-05 17:07:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:07:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:27 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:27 AI_Player.update()	update
2017-01-05 17:07:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:28 AI_Player.update()	Search took902ms
2017-01-05 17:07:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:28 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 17:07:28 AI_Player.update()		11,	101,	110,	1010,	101,	11,	1010
2017-01-05 17:07:28 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 17:07:28 AI_Player.update()		110,	111,	1010,	110,	1010,	1001,	1010
2017-01-05 17:07:28 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-05 17:07:28 AI_Player.update()		111,	11,	110,	1100,	1100,	1110,	1010
2017-01-05 17:07:28 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-05 17:07:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:28 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:28 AI_Player.update()	update
2017-01-05 17:07:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:28 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:07:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:28 AI_Player.update()	update
2017-01-05 17:07:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:29 AI_Player.update()	Search took773ms
2017-01-05 17:07:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:29 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 17:07:29 AI_Player.update()		11,	101,	110,	1010,	101,	11,	1010
2017-01-05 17:07:29 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 17:07:29 AI_Player.update()		110,	111,	1010,	110,	1010,	1001,	1010
2017-01-05 17:07:29 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-05 17:07:29 AI_Player.update()		1010,	111,	11,	110,	1100,	1100,	1110
2017-01-05 17:07:29 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-05 17:07:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	6 5
2017-01-05 17:07:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:29 AI_Player.update()	update
2017-01-05 17:07:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:07:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:29 AI_Player.update()	update
2017-01-05 17:07:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:29 AI_Player.update()	Search took667ms
2017-01-05 17:07:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:29 AI_Player.update()		110,	1010,	111,	11,	111,	110,	11
2017-01-05 17:07:29 AI_Player.update()		1010,	11,	101,	110,	1010,	101,	11
2017-01-05 17:07:29 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-05 17:07:29 AI_Player.update()		110,	111,	1010,	110,	1010,	1001,	1010
2017-01-05 17:07:29 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-05 17:07:29 AI_Player.update()		1010,	111,	11,	110,	1100,	1100,	1110
2017-01-05 17:07:29 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-05 17:07:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:29 GameBoard.setupTreasurePanel()	6 6
2017-01-05 17:07:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:30 AI_Player.update()	update
2017-01-05 17:07:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:30 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-05 17:07:30 AI_Player.update()	Player a has won!
2017-01-05 17:07:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:07:32 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:07:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:07:32 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:07:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:32 AI_Player.update()	update
2017-01-05 17:07:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:32 AI_Player.update()	Search took141ms
2017-01-05 17:07:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:32 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-05 17:07:32 AI_Player.update()		1101,	1001,	1010,	1001,	1100,	1011,	110
2017-01-05 17:07:32 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-05 17:07:32 AI_Player.update()		110,	101,	1010,	11,	1010,	1100,	1011
2017-01-05 17:07:32 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-05 17:07:32 AI_Player.update()		1101,	1001,	1001,	101,	1001,	101,	1100
2017-01-05 17:07:32 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1100,	1001
2017-01-05 17:07:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:32 AI_Player.update()	update
2017-01-05 17:07:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:32 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:32 AI_Player.update()	update
2017-01-05 17:07:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:33 AI_Player.update()	Search took610ms
2017-01-05 17:07:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:33 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-05 17:07:33 AI_Player.update()		1101,	1001,	1010,	1001,	1100,	1011,	110
2017-01-05 17:07:33 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-05 17:07:33 AI_Player.update()		110,	101,	1010,	11,	1010,	1100,	1011
2017-01-05 17:07:33 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-05 17:07:33 AI_Player.update()		1001,	1001,	101,	1001,	101,	1100,	1101
2017-01-05 17:07:33 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1100,	1001
2017-01-05 17:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:33 AI_Player.update()	update
2017-01-05 17:07:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	1 2
2017-01-05 17:07:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:33 AI_Player.update()	update
2017-01-05 17:07:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:33 AI_Player.update()	Search took137ms
2017-01-05 17:07:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:33 AI_Player.update()		110,	1110,	111,	1110,	111,	101,	11
2017-01-05 17:07:33 AI_Player.update()		1101,	1001,	1010,	1101,	1100,	1011,	110
2017-01-05 17:07:33 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-05 17:07:33 AI_Player.update()		110,	101,	1010,	1010,	1010,	1100,	1011
2017-01-05 17:07:33 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-05 17:07:33 AI_Player.update()		1001,	1001,	101,	101,	101,	1100,	1101
2017-01-05 17:07:33 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-05 17:07:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	1 2
2017-01-05 17:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:33 AI_Player.update()	update
2017-01-05 17:07:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:33 GameBoard.setupTreasurePanel()	1 2
2017-01-05 17:07:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:33 AI_Player.update()	update
2017-01-05 17:07:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:34 AI_Player.update()	Search took245ms
2017-01-05 17:07:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:34 AI_Player.update()		110,	1110,	111,	1101,	111,	101,	11
2017-01-05 17:07:34 AI_Player.update()		1101,	1001,	1010,	1001,	1100,	1011,	110
2017-01-05 17:07:34 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-05 17:07:34 AI_Player.update()		110,	101,	1010,	11,	1010,	1100,	1011
2017-01-05 17:07:34 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-05 17:07:34 AI_Player.update()		1001,	1001,	101,	1001,	101,	1100,	1101
2017-01-05 17:07:34 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	1100,	1001
2017-01-05 17:07:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	1 2
2017-01-05 17:07:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:34 AI_Player.update()	update
2017-01-05 17:07:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	1 3
2017-01-05 17:07:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:34 AI_Player.update()	update
2017-01-05 17:07:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:34 AI_Player.update()	Search took543ms
2017-01-05 17:07:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:34 AI_Player.update()		110,	1001,	111,	1101,	111,	101,	11
2017-01-05 17:07:34 AI_Player.update()		1101,	11,	1010,	1001,	1100,	1011,	110
2017-01-05 17:07:34 AI_Player.update()		1110,	101,	1110,	1010,	111,	1100,	1011
2017-01-05 17:07:34 AI_Player.update()		110,	1001,	1010,	11,	1010,	1100,	1011
2017-01-05 17:07:34 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-05 17:07:34 AI_Player.update()		1001,	1100,	101,	1001,	101,	1100,	1101
2017-01-05 17:07:34 AI_Player.update()		1100,	1110,	1101,	1110,	1101,	1100,	1001
2017-01-05 17:07:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:34 GameBoard.setupTreasurePanel()	1 3
2017-01-05 17:07:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:35 AI_Player.update()	update
2017-01-05 17:07:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:35 GameBoard.setupTreasurePanel()	1 3
2017-01-05 17:07:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:35 AI_Player.update()	update
2017-01-05 17:07:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:35 AI_Player.update()	Search took525ms
2017-01-05 17:07:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:35 AI_Player.update()		110,	11,	111,	1101,	111,	101,	11
2017-01-05 17:07:35 AI_Player.update()		1101,	101,	1010,	1001,	1100,	1011,	110
2017-01-05 17:07:35 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-05 17:07:35 AI_Player.update()		110,	1001,	1010,	11,	1010,	1100,	1011
2017-01-05 17:07:35 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-05 17:07:35 AI_Player.update()		1001,	1110,	101,	1001,	101,	1100,	1101
2017-01-05 17:07:35 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1100,	1001
2017-01-05 17:07:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:35 GameBoard.setupTreasurePanel()	1 3
2017-01-05 17:07:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:35 AI_Player.update()	update
2017-01-05 17:07:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:35 GameBoard.setupTreasurePanel()	1 3
2017-01-05 17:07:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:35 AI_Player.update()	update
2017-01-05 17:07:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:36 AI_Player.update()	Search took682ms
2017-01-05 17:07:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:36 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 17:07:36 AI_Player.update()		1101,	101,	1010,	1010,	1100,	1011,	110
2017-01-05 17:07:36 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-05 17:07:36 AI_Player.update()		110,	1001,	1010,	101,	1010,	1100,	1011
2017-01-05 17:07:36 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-05 17:07:36 AI_Player.update()		1001,	1110,	101,	1110,	101,	1100,	1101
2017-01-05 17:07:36 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1100,	1001
2017-01-05 17:07:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	1 3
2017-01-05 17:07:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:36 AI_Player.update()	update
2017-01-05 17:07:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:07:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:36 AI_Player.update()	update
2017-01-05 17:07:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:37 AI_Player.update()	Search took388ms
2017-01-05 17:07:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:37 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-05 17:07:37 AI_Player.update()		1101,	101,	1010,	1010,	1100,	1011,	110
2017-01-05 17:07:37 AI_Player.update()		1110,	1001,	1110,	11,	111,	1100,	1011
2017-01-05 17:07:37 AI_Player.update()		1011,	110,	1001,	1010,	101,	1010,	1100
2017-01-05 17:07:37 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-05 17:07:37 AI_Player.update()		1001,	1110,	101,	1110,	101,	1100,	1101
2017-01-05 17:07:37 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	1100,	1001
2017-01-05 17:07:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	2 3
2017-01-05 17:07:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:37 AI_Player.update()	update
2017-01-05 17:07:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	2 4
2017-01-05 17:07:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:37 AI_Player.update()	update
2017-01-05 17:07:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:37 AI_Player.update()	Search took107ms
2017-01-05 17:07:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:37 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-05 17:07:37 AI_Player.update()		1101,	1001,	1010,	1010,	1100,	1011,	110
2017-01-05 17:07:37 AI_Player.update()		1110,	110,	1110,	11,	111,	1100,	1011
2017-01-05 17:07:37 AI_Player.update()		1011,	1100,	1001,	1010,	101,	1010,	1100
2017-01-05 17:07:37 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1001,	1011
2017-01-05 17:07:37 AI_Player.update()		1001,	1001,	101,	1110,	101,	1100,	1101
2017-01-05 17:07:37 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1100,	1001
2017-01-05 17:07:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	2 4
2017-01-05 17:07:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:37 AI_Player.update()	update
2017-01-05 17:07:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	2 4
2017-01-05 17:07:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:37 AI_Player.update()	update
2017-01-05 17:07:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:37 AI_Player.update()	Search took159ms
2017-01-05 17:07:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:37 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-05 17:07:37 AI_Player.update()		1101,	110,	1010,	1010,	1100,	1011,	110
2017-01-05 17:07:37 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-05 17:07:37 AI_Player.update()		1011,	1110,	1001,	1010,	101,	1010,	1100
2017-01-05 17:07:37 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1001,	1011
2017-01-05 17:07:37 AI_Player.update()		1001,	11,	101,	1110,	101,	1100,	1101
2017-01-05 17:07:37 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-05 17:07:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:37 GameBoard.setupTreasurePanel()	2 4
2017-01-05 17:07:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:38 AI_Player.update()	update
2017-01-05 17:07:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	2 4
2017-01-05 17:07:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:38 AI_Player.update()	update
2017-01-05 17:07:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:38 AI_Player.update()	Search took188ms
2017-01-05 17:07:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:38 AI_Player.update()		110,	1001,	111,	1101,	111,	101,	11
2017-01-05 17:07:38 AI_Player.update()		1101,	110,	1010,	1001,	1100,	1011,	110
2017-01-05 17:07:38 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 17:07:38 AI_Player.update()		1011,	1110,	1001,	11,	101,	1010,	1100
2017-01-05 17:07:38 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-05 17:07:38 AI_Player.update()		1001,	11,	101,	1001,	101,	1100,	1101
2017-01-05 17:07:38 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1100,	1001
2017-01-05 17:07:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	2 4
2017-01-05 17:07:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:38 AI_Player.update()	update
2017-01-05 17:07:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	3 4
2017-01-05 17:07:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:38 AI_Player.update()	update
2017-01-05 17:07:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:38 AI_Player.update()	Search took298ms
2017-01-05 17:07:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:38 AI_Player.update()		110,	1001,	111,	1101,	111,	101,	11
2017-01-05 17:07:38 AI_Player.update()		1101,	110,	1010,	1001,	1100,	1011,	110
2017-01-05 17:07:38 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 17:07:38 AI_Player.update()		1110,	1001,	11,	101,	1010,	1100,	1011
2017-01-05 17:07:38 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-05 17:07:38 AI_Player.update()		1001,	11,	101,	1001,	101,	1100,	1101
2017-01-05 17:07:38 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1100,	1001
2017-01-05 17:07:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	3 4
2017-01-05 17:07:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:38 AI_Player.update()	update
2017-01-05 17:07:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	3 5
2017-01-05 17:07:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:39 AI_Player.update()	update
2017-01-05 17:07:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:39 AI_Player.update()	Search took502ms
2017-01-05 17:07:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:39 AI_Player.update()		110,	1001,	111,	1101,	111,	1011,	11
2017-01-05 17:07:39 AI_Player.update()		1101,	110,	1010,	1001,	1100,	1100,	110
2017-01-05 17:07:39 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 17:07:39 AI_Player.update()		1110,	1001,	11,	101,	1010,	1001,	1011
2017-01-05 17:07:39 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:07:39 AI_Player.update()		1001,	11,	101,	1001,	101,	1100,	1101
2017-01-05 17:07:39 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 17:07:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	3 5
2017-01-05 17:07:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:39 AI_Player.update()	update
2017-01-05 17:07:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	4 5
2017-01-05 17:07:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:39 AI_Player.update()	update
2017-01-05 17:07:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:39 AI_Player.update()	Search took253ms
2017-01-05 17:07:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:39 AI_Player.update()		110,	1001,	111,	1101,	111,	1011,	11
2017-01-05 17:07:39 AI_Player.update()		1101,	110,	1010,	1001,	1100,	1100,	110
2017-01-05 17:07:39 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-05 17:07:39 AI_Player.update()		1110,	1001,	11,	101,	1010,	1001,	1011
2017-01-05 17:07:39 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-05 17:07:39 AI_Player.update()		11,	101,	1001,	101,	1100,	1101,	1001
2017-01-05 17:07:39 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-05 17:07:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:39 GameBoard.setupTreasurePanel()	4 5
2017-01-05 17:07:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:40 AI_Player.update()	update
2017-01-05 17:07:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	4 6
2017-01-05 17:07:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:40 AI_Player.update()	update
2017-01-05 17:07:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:40 AI_Player.update()	Search took259ms
2017-01-05 17:07:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:40 AI_Player.update()		110,	1001,	111,	1110,	111,	1011,	11
2017-01-05 17:07:40 AI_Player.update()		1101,	110,	1010,	1101,	1100,	1100,	110
2017-01-05 17:07:40 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-05 17:07:40 AI_Player.update()		1110,	1001,	11,	1010,	1010,	1001,	1011
2017-01-05 17:07:40 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 17:07:40 AI_Player.update()		11,	101,	1001,	1010,	1100,	1101,	1001
2017-01-05 17:07:40 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 17:07:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	4 6
2017-01-05 17:07:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:40 AI_Player.update()	update
2017-01-05 17:07:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	5 6
2017-01-05 17:07:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding map
2017-01-05 17:07:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:40 AI_Player.update()	update
2017-01-05 17:07:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:41 AI_Player.update()	Search took490ms
2017-01-05 17:07:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:41 AI_Player.update()		110,	1001,	111,	1110,	111,	1011,	11
2017-01-05 17:07:41 AI_Player.update()		110,	1010,	1101,	1100,	1100,	110,	1101
2017-01-05 17:07:41 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1100,	1011
2017-01-05 17:07:41 AI_Player.update()		1110,	1001,	11,	1010,	1010,	1001,	1011
2017-01-05 17:07:41 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-05 17:07:41 AI_Player.update()		11,	101,	1001,	1010,	1100,	1101,	1001
2017-01-05 17:07:41 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-05 17:07:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:41 GameBoard.setupTreasurePanel()	5 6
2017-01-05 17:07:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:41 AI_Player.update()	update
2017-01-05 17:07:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:41 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-05 17:07:41 AI_Player.update()	Player b has won!
2017-01-05 17:07:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:07:42 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-05 17:07:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-05 17:07:42 QueryProlog.reset()	setup(h3/h3). suceeded
2017-01-05 17:07:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:42 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:07:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:42 GameBoard.setupTreasurePanel()	adding book
2017-01-05 17:07:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:43 AI_Player.update()	update
2017-01-05 17:07:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:43 AI_Player.update()	Search took71ms
2017-01-05 17:07:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:43 AI_Player.update()		110,	11,	111,	1001,	111,	1011,	11
2017-01-05 17:07:43 AI_Player.update()		1010,	1010,	1100,	1010,	11,	110,	101
2017-01-05 17:07:43 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1011,	1011
2017-01-05 17:07:43 AI_Player.update()		1010,	1010,	1100,	110,	101,	11,	101
2017-01-05 17:07:43 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-05 17:07:43 AI_Player.update()		1001,	1001,	1011,	1010,	101,	1010,	1011
2017-01-05 17:07:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-05 17:07:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:43 AI_Player.update()	update
2017-01-05 17:07:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:43 AI_Player.update()	update
2017-01-05 17:07:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-05 17:07:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-05 17:07:43 AI_Player.update()	Search took16ms
2017-01-05 17:07:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:43 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-05 17:07:43 AI_Player.update()		1010,	1010,	1100,	1010,	11,	1011,	101
2017-01-05 17:07:43 AI_Player.update()		1110,	1100,	1110,	1100,	111,	11,	1011
2017-01-05 17:07:43 AI_Player.update()		1010,	1010,	1100,	110,	101,	101,	101
2017-01-05 17:07:43 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 17:07:43 AI_Player.update()		1001,	1001,	1011,	1010,	101,	101,	1011
2017-01-05 17:07:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-05 17:07:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:43 AI_Player.update()	update
2017-01-05 17:07:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-05 17:07:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-05 17:07:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:43 AI_Player.update()	update
2017-01-05 17:07:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-05 17:07:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h3). suceeded
2017-01-05 17:07:43 AI_Player.update()	Search took96ms
2017-01-05 17:07:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-05 17:07:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:43 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-05 17:07:43 AI_Player.update()		1010,	1010,	1100,	1010,	11,	1011,	101
2017-01-05 17:07:43 AI_Player.update()		1110,	1100,	1110,	1100,	111,	11,	1011
2017-01-05 17:07:43 AI_Player.update()		1010,	1010,	1100,	110,	101,	101,	101
2017-01-05 17:07:43 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-05 17:07:43 AI_Player.update()		1011,	1001,	1001,	1011,	1010,	101,	101
2017-01-05 17:07:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1011,	1001
2017-01-05 17:07:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-05 17:07:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	1 1
2017-01-05 17:07:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-05 17:07:43 AI_Player.update()	update
2017-01-05 17:07:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-05 17:07:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-05 17:07:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h3). suceeded
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-05 17:07:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-05 17:07:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-05 17:07:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-05 17:07:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	2 1
2017-01-05 17:07:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-05 17:07:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-05 17:07:43 GameBoard.setupTreasurePanel()	adding book
