2017-01-03 17:16:15 GameBoard.<init>()	Hello World!
2017-01-03 17:16:16 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-03 17:16:16 QueryProlog.initialise()	setup(h1/h3). suceeded
2017-01-03 17:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:16 GameBoard.setupBoardFromString()	Board created
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:16 GameBoard.initialise()	[chest, keys, helmet, gold, candle]
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:16 GameBoard.initialise()	[sword, ring, book, gem, fairy]
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	null
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:16 AI_Player.update()	Search took3ms
2017-01-03 17:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:16:16 AI_Player.update()		1010,	101,	1100,	101,	110,	1001,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 17:16:16 AI_Player.update()		101,	1010,	1010,	1010,	1101,	101,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-03 17:16:16 AI_Player.update()		1010,	1010,	1001,	1001,	1010,	1001,	110
2017-01-03 17:16:16 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:16 AI_Player.update()	Search took68ms
2017-01-03 17:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:16:16 AI_Player.update()		1010,	101,	1100,	11,	110,	1001,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-03 17:16:16 AI_Player.update()		101,	1010,	1010,	1100,	1101,	101,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-03 17:16:16 AI_Player.update()		1010,	1010,	1001,	101,	1010,	1001,	110
2017-01-03 17:16:16 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:16 AI_Player.update()	Search took4ms
2017-01-03 17:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:16:16 AI_Player.update()		1010,	11,	1100,	11,	110,	1001,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-03 17:16:16 AI_Player.update()		101,	110,	1010,	1100,	1101,	101,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:16:16 AI_Player.update()		1010,	1010,	1001,	101,	1010,	1001,	110
2017-01-03 17:16:16 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:16 AI_Player.update()	Search took82ms
2017-01-03 17:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:16:16 AI_Player.update()		11,	1100,	11,	110,	1001,	1001,	1010
2017-01-03 17:16:16 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-03 17:16:16 AI_Player.update()		101,	110,	1010,	1100,	1101,	101,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:16:16 AI_Player.update()		1010,	1010,	1001,	101,	1010,	1001,	110
2017-01-03 17:16:16 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:16 AI_Player.update()	Search took7ms
2017-01-03 17:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:16:16 AI_Player.update()		11,	1100,	11,	101,	1001,	1001,	1010
2017-01-03 17:16:16 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 17:16:16 AI_Player.update()		101,	110,	1010,	1010,	1101,	101,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-03 17:16:16 AI_Player.update()		1010,	1010,	1001,	1001,	1010,	1001,	110
2017-01-03 17:16:16 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:16 AI_Player.update()	Search took144ms
2017-01-03 17:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:16:16 AI_Player.update()		1010,	11,	1100,	11,	101,	1001,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 17:16:16 AI_Player.update()		101,	110,	1010,	1010,	1101,	101,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-03 17:16:16 AI_Player.update()		1010,	1010,	1001,	1001,	1010,	1001,	110
2017-01-03 17:16:16 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:16 AI_Player.update()	Search took7ms
2017-01-03 17:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-03 17:16:16 AI_Player.update()		1010,	1010,	1100,	11,	101,	1001,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	110,	1110,	110,	111,	1001,	1011
2017-01-03 17:16:16 AI_Player.update()		101,	1010,	1010,	1010,	1101,	101,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-03 17:16:16 AI_Player.update()		1010,	101,	1001,	1001,	1010,	1001,	110
2017-01-03 17:16:16 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:16 AI_Player.update()	Search took123ms
2017-01-03 17:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-03 17:16:16 AI_Player.update()		1010,	1010,	1100,	11,	101,	1001,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	110,	1110,	110,	111,	1001,	1011
2017-01-03 17:16:16 AI_Player.update()		1010,	1010,	1010,	1101,	101,	1001,	101
2017-01-03 17:16:16 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-03 17:16:16 AI_Player.update()		1010,	101,	1001,	1001,	1010,	1001,	110
2017-01-03 17:16:16 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:16 AI_Player.update()	Search took12ms
2017-01-03 17:16:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-03 17:16:16 AI_Player.update()		1010,	1010,	1100,	110,	101,	1001,	1001
2017-01-03 17:16:16 AI_Player.update()		1110,	110,	1110,	1101,	111,	1001,	1011
2017-01-03 17:16:16 AI_Player.update()		1010,	1010,	1010,	1100,	101,	1001,	101
2017-01-03 17:16:16 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:16:16 AI_Player.update()		1010,	101,	1001,	101,	1010,	1001,	110
2017-01-03 17:16:16 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:16 AI_Player.update()	update
2017-01-03 17:16:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:17 AI_Player.update()	Search took149ms
2017-01-03 17:16:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-03 17:16:17 AI_Player.update()		1010,	1010,	1100,	1101,	101,	1001,	1001
2017-01-03 17:16:17 AI_Player.update()		1110,	110,	1110,	1100,	111,	1001,	1011
2017-01-03 17:16:17 AI_Player.update()		1010,	1010,	1010,	1001,	101,	1001,	101
2017-01-03 17:16:17 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:17 AI_Player.update()		1010,	101,	1001,	101,	1010,	1001,	110
2017-01-03 17:16:17 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:17 AI_Player.update()	Search took4ms
2017-01-03 17:16:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-03 17:16:17 AI_Player.update()		1010,	1010,	1100,	110,	101,	1001,	1001
2017-01-03 17:16:17 AI_Player.update()		1110,	110,	1110,	1101,	111,	1001,	1011
2017-01-03 17:16:17 AI_Player.update()		1010,	1010,	1010,	1100,	101,	1001,	101
2017-01-03 17:16:17 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:16:17 AI_Player.update()		1010,	101,	1001,	101,	1010,	1001,	110
2017-01-03 17:16:17 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:17 AI_Player.update()	Search took348ms
2017-01-03 17:16:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-03 17:16:17 AI_Player.update()		1010,	110,	1100,	110,	101,	1001,	1001
2017-01-03 17:16:17 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 17:16:17 AI_Player.update()		1010,	1010,	1010,	1100,	101,	1001,	101
2017-01-03 17:16:17 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-03 17:16:17 AI_Player.update()		1010,	101,	1001,	101,	1010,	1001,	110
2017-01-03 17:16:17 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:17 AI_Player.update()	Search took5ms
2017-01-03 17:16:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-03 17:16:17 AI_Player.update()		1010,	110,	1100,	110,	101,	1001,	1001
2017-01-03 17:16:17 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-03 17:16:17 AI_Player.update()		101,	1010,	1010,	1010,	1100,	101,	1001
2017-01-03 17:16:17 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-03 17:16:17 AI_Player.update()		1010,	101,	1001,	101,	1010,	1001,	110
2017-01-03 17:16:17 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:17 AI_Player.update()	Search took176ms
2017-01-03 17:16:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-03 17:16:17 AI_Player.update()		1010,	110,	1100,	1101,	101,	1001,	1001
2017-01-03 17:16:17 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-03 17:16:17 AI_Player.update()		101,	1010,	1010,	1001,	1100,	101,	1001
2017-01-03 17:16:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:17 AI_Player.update()		1010,	101,	1001,	101,	1010,	1001,	110
2017-01-03 17:16:17 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:17 AI_Player.update()	Search took4ms
2017-01-03 17:16:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-03 17:16:17 AI_Player.update()		1010,	1010,	1100,	1101,	101,	1001,	1001
2017-01-03 17:16:17 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-03 17:16:17 AI_Player.update()		101,	101,	1010,	1001,	1100,	101,	1001
2017-01-03 17:16:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:17 AI_Player.update()		1010,	11,	1001,	101,	1010,	1001,	110
2017-01-03 17:16:17 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:17 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:17 AI_Player.update()	update
2017-01-03 17:16:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took295ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-03 17:16:18 AI_Player.update()		1010,	1010,	1100,	1101,	101,	1001,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	101,	1010,	1001,	1100,	101,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		11,	1001,	101,	1010,	1001,	110,	1010
2017-01-03 17:16:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took4ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-03 17:16:18 AI_Player.update()		1010,	1010,	1100,	1101,	101,	1001,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	101,	1010,	1001,	1100,	101,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		11,	1010,	101,	1010,	1001,	110,	1010
2017-01-03 17:16:18 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took40ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	110,	111,	110,	111,	1010,	11
2017-01-03 17:16:18 AI_Player.update()		1010,	1010,	1100,	1101,	101,	1001,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1001,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	101,	1010,	1001,	1100,	101,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		11,	1001,	101,	1010,	1001,	110,	1010
2017-01-03 17:16:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took4ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-03 17:16:18 AI_Player.update()		1010,	1010,	1100,	1101,	101,	1001,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	101,	1010,	1001,	1100,	101,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		11,	1010,	101,	1010,	1001,	110,	1010
2017-01-03 17:16:18 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took123ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-03 17:16:18 AI_Player.update()		1010,	1010,	1100,	110,	101,	1001,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	101,	1010,	1010,	1100,	101,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		11,	1010,	101,	101,	1001,	110,	1010
2017-01-03 17:16:18 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took4ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-03 17:16:18 AI_Player.update()		1010,	101,	1100,	110,	101,	1001,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	1001,	1010,	1010,	1100,	101,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		11,	110,	101,	101,	1001,	110,	1010
2017-01-03 17:16:18 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took312ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-03 17:16:18 AI_Player.update()		101,	1100,	110,	101,	1001,	1001,	1010
2017-01-03 17:16:18 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	1001,	1010,	1010,	1100,	101,	1001
2017-01-03 17:16:18 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		11,	110,	101,	101,	1001,	110,	1010
2017-01-03 17:16:18 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:18 AI_Player.update()	Player b has won!
2017-01-03 17:16:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:18 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took1ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	111,	111,	1001,	111,	1110,	11
2017-01-03 17:16:18 AI_Player.update()		101,	1011,	11,	1011,	110,	110,	101
2017-01-03 17:16:18 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-03 17:16:18 AI_Player.update()		1010,	11,	1001,	110,	1011,	1100,	110
2017-01-03 17:16:18 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	110,	101,	11,	101,	110,	1100
2017-01-03 17:16:18 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1100,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took25ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	111,	111,	1001,	111,	110,	11
2017-01-03 17:16:18 AI_Player.update()		101,	1011,	11,	1011,	110,	1010,	101
2017-01-03 17:16:18 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-03 17:16:18 AI_Player.update()		1010,	11,	1001,	110,	1011,	101,	110
2017-01-03 17:16:18 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	110,	101,	11,	101,	1100,	1100
2017-01-03 17:16:18 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1110,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took2ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	111,	111,	110,	111,	110,	11
2017-01-03 17:16:18 AI_Player.update()		101,	1011,	11,	1001,	110,	1010,	101
2017-01-03 17:16:18 AI_Player.update()		1110,	110,	1110,	1011,	111,	1100,	1011
2017-01-03 17:16:18 AI_Player.update()		1010,	11,	1001,	1010,	1011,	101,	110
2017-01-03 17:16:18 AI_Player.update()		1110,	1100,	1101,	110,	1011,	110,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	110,	101,	101,	101,	1100,	1100
2017-01-03 17:16:18 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1110,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took132ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-03 17:16:18 AI_Player.update()		101,	1011,	11,	1001,	110,	1100,	101
2017-01-03 17:16:18 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		1010,	11,	1001,	1010,	1011,	110,	110
2017-01-03 17:16:18 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1100,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	110,	101,	101,	101,	1110,	1100
2017-01-03 17:16:18 AI_Player.update()		1100,	1001,	1101,	11,	1101,	110,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took1ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-03 17:16:18 AI_Player.update()		1011,	11,	1001,	110,	1100,	101,	101
2017-01-03 17:16:18 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		1010,	11,	1001,	1010,	1011,	110,	110
2017-01-03 17:16:18 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1100,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	110,	101,	101,	101,	1110,	1100
2017-01-03 17:16:18 AI_Player.update()		1100,	1001,	1101,	11,	1101,	110,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took127ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-03 17:16:18 AI_Player.update()		1011,	11,	1001,	110,	1100,	101,	101
2017-01-03 17:16:18 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		1010,	11,	1001,	1011,	1011,	110,	110
2017-01-03 17:16:18 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	110,	101,	110,	101,	1110,	1100
2017-01-03 17:16:18 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:18 AI_Player.update()	Search took3ms
2017-01-03 17:16:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-03 17:16:18 AI_Player.update()		11,	1001,	110,	1100,	101,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-03 17:16:18 AI_Player.update()		1010,	11,	1001,	1011,	1011,	110,	110
2017-01-03 17:16:18 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-03 17:16:18 AI_Player.update()		101,	110,	101,	110,	101,	1110,	1100
2017-01-03 17:16:18 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-03 17:16:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:18 AI_Player.update()	update
2017-01-03 17:16:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took128ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-03 17:16:19 AI_Player.update()		11,	1001,	110,	1100,	101,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	11,	1001,	1011,	1011,	110,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	101,	110,	101,	110,	101,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took6ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-03 17:16:19 AI_Player.update()		11,	1001,	110,	110,	101,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	11,	1001,	1010,	1011,	110,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	101,	110,	101,	110,	101,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	1101,	11,	1101,	110,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took79ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	111,	111,	110,	111,	1010,	11
2017-01-03 17:16:19 AI_Player.update()		11,	1001,	110,	1011,	101,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	11,	1001,	101,	1011,	110,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	101,	110,	11,	110,	101,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took3ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-03 17:16:19 AI_Player.update()		11,	110,	110,	1011,	101,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	1100,	1001,	101,	1011,	110,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	110,	11,	110,	101,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	111,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took177ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-03 17:16:19 AI_Player.update()		11,	110,	110,	1011,	101,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	1100,	1001,	101,	1011,	1100,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	110,	11,	110,	110,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	111,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took7ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	1001,	111,	1011,	111,	101,	11
2017-01-03 17:16:19 AI_Player.update()		11,	110,	110,	1010,	101,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	1100,	1001,	101,	1011,	1100,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	110,	1100,	110,	110,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	111,	1101,	110,	1101,	1010,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took158ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	111,	111,	1011,	111,	101,	11
2017-01-03 17:16:19 AI_Player.update()		11,	1001,	110,	1010,	101,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	11,	1001,	101,	1011,	1100,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	101,	110,	1100,	110,	110,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took3ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	1001,	111,	1011,	111,	101,	11
2017-01-03 17:16:19 AI_Player.update()		11,	110,	110,	1010,	101,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	1100,	1001,	101,	1011,	1100,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	110,	1100,	110,	110,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	111,	1101,	110,	1101,	1010,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took97ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	1001,	111,	1011,	111,	101,	11
2017-01-03 17:16:19 AI_Player.update()		1011,	11,	110,	110,	1010,	101,	101
2017-01-03 17:16:19 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	1100,	1001,	101,	1011,	1100,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	110,	1100,	110,	110,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	111,	1101,	110,	1101,	1010,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took11ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	11,	111,	1011,	111,	101,	11
2017-01-03 17:16:19 AI_Player.update()		1011,	11,	110,	110,	1010,	101,	101
2017-01-03 17:16:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	101,	1001,	101,	1011,	1100,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	111,	110,	1100,	110,	110,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took56ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 17:16:19 AI_Player.update()		1011,	11,	110,	1011,	1010,	101,	101
2017-01-03 17:16:19 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	101,	1001,	101,	1011,	1100,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	111,	110,	11,	110,	110,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took6ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 17:16:19 AI_Player.update()		1011,	1100,	110,	1011,	1010,	101,	101
2017-01-03 17:16:19 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	1001,	1001,	101,	1011,	1100,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	1001,	110,	11,	110,	110,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:19 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()	update
2017-01-03 17:16:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:19 AI_Player.update()	Search took188ms
2017-01-03 17:16:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:19 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-03 17:16:19 AI_Player.update()		1011,	101,	110,	1011,	1010,	101,	101
2017-01-03 17:16:19 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-03 17:16:19 AI_Player.update()		1010,	111,	1001,	101,	1011,	1100,	110
2017-01-03 17:16:19 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:19 AI_Player.update()		1100,	11,	110,	11,	110,	110,	1110
2017-01-03 17:16:19 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:20 AI_Player.update()	Search took5ms
2017-01-03 17:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-03 17:16:20 AI_Player.update()		1011,	1001,	110,	1011,	1010,	101,	101
2017-01-03 17:16:20 AI_Player.update()		1110,	111,	1110,	110,	111,	110,	1011
2017-01-03 17:16:20 AI_Player.update()		1010,	1001,	1001,	101,	1011,	1100,	110
2017-01-03 17:16:20 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:20 AI_Player.update()		1100,	11,	110,	11,	110,	110,	1110
2017-01-03 17:16:20 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:20 AI_Player.update()	Search took386ms
2017-01-03 17:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-03 17:16:20 AI_Player.update()		1011,	101,	110,	1011,	1010,	101,	101
2017-01-03 17:16:20 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-03 17:16:20 AI_Player.update()		1010,	111,	1001,	101,	1011,	1100,	110
2017-01-03 17:16:20 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:20 AI_Player.update()		1100,	11,	110,	11,	110,	110,	1110
2017-01-03 17:16:20 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:20 AI_Player.update()	Player b has won!
2017-01-03 17:16:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:20 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:20 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:20 AI_Player.update()	Search took1ms
2017-01-03 17:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()		110,	1011,	111,	1001,	111,	110,	11
2017-01-03 17:16:20 AI_Player.update()		110,	1001,	110,	1010,	1100,	101,	11
2017-01-03 17:16:20 AI_Player.update()		1110,	1100,	1110,	11,	111,	1100,	1011
2017-01-03 17:16:20 AI_Player.update()		1010,	11,	1010,	11,	110,	1011,	101
2017-01-03 17:16:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:20 AI_Player.update()		1001,	110,	1001,	1100,	1010,	1010,	1110
2017-01-03 17:16:20 AI_Player.update()		1100,	101,	1101,	11,	1101,	1101,	1001
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:20 AI_Player.update()	Search took38ms
2017-01-03 17:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()		110,	1011,	111,	1001,	111,	101,	11
2017-01-03 17:16:20 AI_Player.update()		110,	1001,	110,	1010,	1100,	1100,	11
2017-01-03 17:16:20 AI_Player.update()		1110,	1100,	1110,	11,	111,	1011,	1011
2017-01-03 17:16:20 AI_Player.update()		1010,	11,	1010,	11,	110,	101,	101
2017-01-03 17:16:20 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:20 AI_Player.update()		1001,	110,	1001,	1100,	1010,	1101,	1110
2017-01-03 17:16:20 AI_Player.update()		1100,	101,	1101,	11,	1101,	110,	1001
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:20 AI_Player.update()	Search took2ms
2017-01-03 17:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-03 17:16:20 AI_Player.update()		110,	1011,	110,	1010,	1100,	1100,	11
2017-01-03 17:16:20 AI_Player.update()		1110,	1001,	1110,	11,	111,	1011,	1011
2017-01-03 17:16:20 AI_Player.update()		1010,	1100,	1010,	11,	110,	101,	101
2017-01-03 17:16:20 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:20 AI_Player.update()		1001,	1100,	1001,	1100,	1010,	1101,	1110
2017-01-03 17:16:20 AI_Player.update()		1100,	110,	1101,	11,	1101,	110,	1001
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:20 AI_Player.update()	Search took103ms
2017-01-03 17:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:16:20 AI_Player.update()		110,	1011,	110,	1010,	1100,	1011,	11
2017-01-03 17:16:20 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:16:20 AI_Player.update()		1010,	1100,	1010,	11,	110,	1010,	101
2017-01-03 17:16:20 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-03 17:16:20 AI_Player.update()		1001,	1100,	1001,	1100,	1010,	110,	1110
2017-01-03 17:16:20 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:20 AI_Player.update()	Search took4ms
2017-01-03 17:16:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:16:20 AI_Player.update()		1011,	110,	1010,	1100,	1011,	11,	110
2017-01-03 17:16:20 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:16:20 AI_Player.update()		1010,	1100,	1010,	11,	110,	1010,	101
2017-01-03 17:16:20 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-03 17:16:20 AI_Player.update()		1001,	1100,	1001,	1100,	1010,	110,	1110
2017-01-03 17:16:20 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-03 17:16:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:20 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:20 AI_Player.update()	update
2017-01-03 17:16:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:21 AI_Player.update()	Search took645ms
2017-01-03 17:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:16:21 AI_Player.update()		1011,	110,	1010,	1100,	1011,	11,	110
2017-01-03 17:16:21 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:16:21 AI_Player.update()		1100,	1010,	11,	110,	1010,	101,	1010
2017-01-03 17:16:21 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-03 17:16:21 AI_Player.update()		1001,	1100,	1001,	1100,	1010,	110,	1110
2017-01-03 17:16:21 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:21 AI_Player.update()	Search took6ms
2017-01-03 17:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:16:21 AI_Player.update()		1011,	110,	1010,	1100,	1011,	11,	110
2017-01-03 17:16:21 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:16:21 AI_Player.update()		1010,	1100,	1010,	11,	110,	1010,	101
2017-01-03 17:16:21 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-03 17:16:21 AI_Player.update()		1001,	1100,	1001,	1100,	1010,	110,	1110
2017-01-03 17:16:21 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:21 AI_Player.update()	Search took412ms
2017-01-03 17:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:16:21 AI_Player.update()		1011,	110,	1010,	1100,	1011,	11,	110
2017-01-03 17:16:21 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:16:21 AI_Player.update()		1100,	1010,	11,	110,	1010,	101,	1010
2017-01-03 17:16:21 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-03 17:16:21 AI_Player.update()		1001,	1100,	1001,	1100,	1010,	110,	1110
2017-01-03 17:16:21 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:21 AI_Player.update()	Search took3ms
2017-01-03 17:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:16:21 AI_Player.update()		1011,	110,	1010,	1100,	1011,	11,	110
2017-01-03 17:16:21 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:16:21 AI_Player.update()		1010,	1100,	1010,	11,	110,	1010,	101
2017-01-03 17:16:21 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-03 17:16:21 AI_Player.update()		1001,	1100,	1001,	1100,	1010,	110,	1110
2017-01-03 17:16:21 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:21 AI_Player.update()	Search took173ms
2017-01-03 17:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:16:21 AI_Player.update()		110,	1010,	1100,	1011,	11,	110,	1011
2017-01-03 17:16:21 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:16:21 AI_Player.update()		1010,	1100,	1010,	11,	110,	1010,	101
2017-01-03 17:16:21 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-03 17:16:21 AI_Player.update()		1001,	1100,	1001,	1100,	1010,	110,	1110
2017-01-03 17:16:21 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:21 AI_Player.update()	Search took4ms
2017-01-03 17:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:16:21 AI_Player.update()		1010,	1100,	1011,	11,	110,	1011,	110
2017-01-03 17:16:21 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:16:21 AI_Player.update()		1010,	1100,	1010,	11,	110,	1010,	101
2017-01-03 17:16:21 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-03 17:16:21 AI_Player.update()		1001,	1100,	1001,	1100,	1010,	110,	1110
2017-01-03 17:16:21 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:21 AI_Player.update()	Search took49ms
2017-01-03 17:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-03 17:16:21 AI_Player.update()		1010,	1001,	1011,	11,	110,	1011,	110
2017-01-03 17:16:21 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:16:21 AI_Player.update()		1010,	11,	1010,	11,	110,	1010,	101
2017-01-03 17:16:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-03 17:16:21 AI_Player.update()		1001,	110,	1001,	1100,	1010,	110,	1110
2017-01-03 17:16:21 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:21 AI_Player.update()	Search took5ms
2017-01-03 17:16:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()		110,	1100,	111,	1001,	111,	1011,	11
2017-01-03 17:16:21 AI_Player.update()		1010,	1001,	1011,	11,	110,	101,	110
2017-01-03 17:16:21 AI_Player.update()		1110,	1100,	1110,	11,	111,	1010,	1011
2017-01-03 17:16:21 AI_Player.update()		1010,	11,	1010,	11,	110,	1101,	101
2017-01-03 17:16:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:21 AI_Player.update()		1001,	110,	1001,	1100,	1010,	101,	1110
2017-01-03 17:16:21 AI_Player.update()		1100,	101,	1101,	11,	1101,	1100,	1001
2017-01-03 17:16:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:21 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:21 AI_Player.update()	update
2017-01-03 17:16:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:22 AI_Player.update()	Search took15ms
2017-01-03 17:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-03 17:16:22 AI_Player.update()		1010,	1001,	1011,	11,	110,	1010,	110
2017-01-03 17:16:22 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-03 17:16:22 AI_Player.update()		1010,	11,	1010,	11,	110,	110,	101
2017-01-03 17:16:22 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:22 AI_Player.update()		1001,	110,	1001,	1100,	1010,	1100,	1110
2017-01-03 17:16:22 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:22 AI_Player.update()	Search took3ms
2017-01-03 17:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-03 17:16:22 AI_Player.update()		1010,	1100,	1011,	11,	110,	1010,	110
2017-01-03 17:16:22 AI_Player.update()		1110,	11,	1110,	11,	111,	1101,	1011
2017-01-03 17:16:22 AI_Player.update()		1010,	1100,	1010,	11,	110,	110,	101
2017-01-03 17:16:22 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:22 AI_Player.update()		1001,	101,	1001,	1100,	1010,	1100,	1110
2017-01-03 17:16:22 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:22 AI_Player.update()	Search took69ms
2017-01-03 17:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:16:22 AI_Player.update()		1010,	1100,	1011,	1001,	110,	1010,	110
2017-01-03 17:16:22 AI_Player.update()		1110,	11,	1110,	11,	111,	1101,	1011
2017-01-03 17:16:22 AI_Player.update()		1010,	1100,	1010,	11,	110,	110,	101
2017-01-03 17:16:22 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-03 17:16:22 AI_Player.update()		1001,	101,	1001,	101,	1010,	1100,	1110
2017-01-03 17:16:22 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1011,	1001
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:22 AI_Player.update()	Search took3ms
2017-01-03 17:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-03 17:16:22 AI_Player.update()		1010,	11,	1011,	1001,	110,	1010,	110
2017-01-03 17:16:22 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-03 17:16:22 AI_Player.update()		1010,	110,	1010,	11,	110,	110,	101
2017-01-03 17:16:22 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-03 17:16:22 AI_Player.update()		1001,	1100,	1001,	101,	1010,	1100,	1110
2017-01-03 17:16:22 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1011,	1001
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:22 AI_Player.update()	Search took111ms
2017-01-03 17:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 17:16:22 AI_Player.update()		1010,	11,	1011,	1001,	110,	1101,	110
2017-01-03 17:16:22 AI_Player.update()		1110,	1100,	1110,	11,	111,	110,	1011
2017-01-03 17:16:22 AI_Player.update()		1010,	110,	1010,	11,	110,	101,	101
2017-01-03 17:16:22 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-03 17:16:22 AI_Player.update()		1001,	1100,	1001,	101,	1010,	1011,	1110
2017-01-03 17:16:22 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:22 AI_Player.update()	Search took3ms
2017-01-03 17:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-03 17:16:22 AI_Player.update()		1010,	1100,	1011,	1001,	110,	1101,	110
2017-01-03 17:16:22 AI_Player.update()		1110,	110,	1110,	11,	111,	110,	1011
2017-01-03 17:16:22 AI_Player.update()		1010,	101,	1010,	11,	110,	101,	101
2017-01-03 17:16:22 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-03 17:16:22 AI_Player.update()		1001,	1001,	1001,	101,	1010,	1011,	1110
2017-01-03 17:16:22 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:22 AI_Player.update()	Search took356ms
2017-01-03 17:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 17:16:22 AI_Player.update()		1010,	1100,	1011,	11,	110,	1101,	110
2017-01-03 17:16:22 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 17:16:22 AI_Player.update()		1010,	101,	1010,	11,	110,	101,	101
2017-01-03 17:16:22 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-03 17:16:22 AI_Player.update()		1001,	1001,	1001,	11,	1010,	1011,	1110
2017-01-03 17:16:22 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:22 AI_Player.update()	Search took4ms
2017-01-03 17:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-03 17:16:22 AI_Player.update()		1010,	110,	1011,	11,	110,	1101,	110
2017-01-03 17:16:22 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 17:16:22 AI_Player.update()		1010,	1100,	1010,	11,	110,	101,	101
2017-01-03 17:16:22 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-03 17:16:22 AI_Player.update()		1001,	1100,	1001,	11,	1010,	1011,	1110
2017-01-03 17:16:22 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:22 AI_Player.update()	Search took271ms
2017-01-03 17:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-03 17:16:22 AI_Player.update()		110,	1011,	11,	110,	1101,	110,	1010
2017-01-03 17:16:22 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 17:16:22 AI_Player.update()		1010,	1100,	1010,	11,	110,	101,	101
2017-01-03 17:16:22 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-03 17:16:22 AI_Player.update()		1001,	1100,	1001,	11,	1010,	1011,	1110
2017-01-03 17:16:22 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:22 AI_Player.update()	Search took3ms
2017-01-03 17:16:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()		110,	1011,	111,	1100,	111,	1010,	11
2017-01-03 17:16:22 AI_Player.update()		110,	101,	11,	110,	1101,	110,	1010
2017-01-03 17:16:22 AI_Player.update()		1110,	1100,	1110,	1001,	111,	110,	1011
2017-01-03 17:16:22 AI_Player.update()		1010,	1001,	1010,	11,	110,	101,	101
2017-01-03 17:16:22 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-03 17:16:22 AI_Player.update()		1001,	11,	1001,	11,	1010,	1011,	1110
2017-01-03 17:16:22 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-03 17:16:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:22 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:22 AI_Player.update()	update
2017-01-03 17:16:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:23 AI_Player.update()	Search took289ms
2017-01-03 17:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()		110,	1011,	111,	1100,	111,	110,	11
2017-01-03 17:16:23 AI_Player.update()		110,	101,	11,	110,	1101,	110,	1010
2017-01-03 17:16:23 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:23 AI_Player.update()		1010,	1001,	1010,	11,	110,	1100,	101
2017-01-03 17:16:23 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1011,	1011
2017-01-03 17:16:23 AI_Player.update()		1001,	11,	1001,	11,	1010,	101,	1110
2017-01-03 17:16:23 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:23 AI_Player.update()	Player b has won!
2017-01-03 17:16:23 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:23 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:23 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:23 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:23 AI_Player.update()	Search took5ms
2017-01-03 17:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-03 17:16:23 AI_Player.update()		1010,	110,	1100,	101,	1010,	101,	110
2017-01-03 17:16:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:23 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1001,	101
2017-01-03 17:16:23 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:23 AI_Player.update()		1110,	1101,	1101,	111,	101,	111,	111
2017-01-03 17:16:23 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:23 AI_Player.update()	Search took42ms
2017-01-03 17:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 17:16:23 AI_Player.update()		1010,	110,	1100,	101,	1010,	101,	110
2017-01-03 17:16:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:23 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1010,	101
2017-01-03 17:16:23 AI_Player.update()		1110,	11,	1101,	101,	1011,	111,	1011
2017-01-03 17:16:23 AI_Player.update()		1110,	1101,	1101,	111,	101,	1001,	111
2017-01-03 17:16:23 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:23 AI_Player.update()	Search took5ms
2017-01-03 17:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 17:16:23 AI_Player.update()		1010,	110,	1100,	101,	1010,	1001,	110
2017-01-03 17:16:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-03 17:16:23 AI_Player.update()		1010,	101,	1100,	1010,	1010,	111,	101
2017-01-03 17:16:23 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-03 17:16:23 AI_Player.update()		1110,	1101,	1101,	111,	101,	110,	111
2017-01-03 17:16:23 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:23 AI_Player.update()	Search took111ms
2017-01-03 17:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-03 17:16:23 AI_Player.update()		1010,	110,	1100,	1011,	1010,	1001,	110
2017-01-03 17:16:23 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-03 17:16:23 AI_Player.update()		1010,	101,	1100,	101,	1010,	111,	101
2017-01-03 17:16:23 AI_Player.update()		1110,	11,	1101,	111,	1011,	1001,	1011
2017-01-03 17:16:23 AI_Player.update()		1110,	1101,	1101,	1100,	101,	110,	111
2017-01-03 17:16:23 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:23 AI_Player.update()	Search took5ms
2017-01-03 17:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-03 17:16:23 AI_Player.update()		1010,	110,	1100,	1011,	1010,	1001,	110
2017-01-03 17:16:23 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-03 17:16:23 AI_Player.update()		1010,	101,	1100,	101,	1010,	111,	101
2017-01-03 17:16:23 AI_Player.update()		1110,	11,	1101,	111,	1011,	1001,	1011
2017-01-03 17:16:23 AI_Player.update()		111,	1110,	1101,	1101,	1100,	101,	110
2017-01-03 17:16:23 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:23 AI_Player.update()	Search took393ms
2017-01-03 17:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 17:16:23 AI_Player.update()		1010,	110,	1100,	101,	1010,	1001,	110
2017-01-03 17:16:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	1010,	1011
2017-01-03 17:16:23 AI_Player.update()		1010,	101,	1100,	1010,	1010,	111,	101
2017-01-03 17:16:23 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-03 17:16:23 AI_Player.update()		111,	1110,	1101,	111,	1100,	101,	110
2017-01-03 17:16:23 AI_Player.update()		1100,	110,	1101,	1101,	1101,	101,	1001
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:23 AI_Player.update()	Search took4ms
2017-01-03 17:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-03 17:16:23 AI_Player.update()		1010,	110,	1100,	101,	1010,	1010,	110
2017-01-03 17:16:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	111,	1011
2017-01-03 17:16:23 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1001,	101
2017-01-03 17:16:23 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:23 AI_Player.update()		111,	1110,	1101,	111,	1100,	101,	110
2017-01-03 17:16:23 AI_Player.update()		1100,	110,	1101,	1101,	1101,	101,	1001
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:23 AI_Player.update()	Search took102ms
2017-01-03 17:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-03 17:16:23 AI_Player.update()		110,	1010,	110,	1100,	101,	1010,	1010
2017-01-03 17:16:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	111,	1011
2017-01-03 17:16:23 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1001,	101
2017-01-03 17:16:23 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:23 AI_Player.update()		111,	1110,	1101,	111,	1100,	101,	110
2017-01-03 17:16:23 AI_Player.update()		1100,	110,	1101,	1101,	1101,	101,	1001
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:23 AI_Player.update()	Search took4ms
2017-01-03 17:16:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()		110,	1010,	111,	1010,	111,	1001,	11
2017-01-03 17:16:23 AI_Player.update()		110,	101,	110,	1100,	101,	1010,	1010
2017-01-03 17:16:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	111,	1011
2017-01-03 17:16:23 AI_Player.update()		1010,	11,	1100,	1010,	1010,	1001,	101
2017-01-03 17:16:23 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:23 AI_Player.update()		111,	110,	1101,	111,	1100,	101,	110
2017-01-03 17:16:23 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-03 17:16:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:23 AI_Player.update()	update
2017-01-03 17:16:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:24 AI_Player.update()	Search took141ms
2017-01-03 17:16:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-03 17:16:24 AI_Player.update()		110,	1010,	110,	1100,	101,	1010,	1010
2017-01-03 17:16:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	111,	1011
2017-01-03 17:16:24 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1001,	101
2017-01-03 17:16:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:24 AI_Player.update()		111,	1110,	1101,	111,	1100,	101,	110
2017-01-03 17:16:24 AI_Player.update()		1100,	110,	1101,	1101,	1101,	101,	1001
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:24 AI_Player.update()	Search took5ms
2017-01-03 17:16:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 17:16:24 AI_Player.update()		110,	1010,	110,	1100,	101,	111,	1010
2017-01-03 17:16:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:24 AI_Player.update()		1010,	101,	1100,	1010,	1010,	101,	101
2017-01-03 17:16:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:24 AI_Player.update()		111,	1110,	1101,	111,	1100,	101,	110
2017-01-03 17:16:24 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:24 AI_Player.update()	Search took133ms
2017-01-03 17:16:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 17:16:24 AI_Player.update()		1010,	110,	1010,	110,	1100,	101,	111
2017-01-03 17:16:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:24 AI_Player.update()		1010,	101,	1100,	1010,	1010,	101,	101
2017-01-03 17:16:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:24 AI_Player.update()		111,	1110,	1101,	111,	1100,	101,	110
2017-01-03 17:16:24 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:24 AI_Player.update()	Search took1ms
2017-01-03 17:16:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-03 17:16:24 AI_Player.update()		1010,	101,	1010,	110,	1100,	101,	111
2017-01-03 17:16:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:24 AI_Player.update()		1010,	11,	1100,	1010,	1010,	101,	101
2017-01-03 17:16:24 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:24 AI_Player.update()		111,	110,	1101,	111,	1100,	101,	110
2017-01-03 17:16:24 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:24 AI_Player.update()	Search took334ms
2017-01-03 17:16:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-03 17:16:24 AI_Player.update()		1010,	101,	1010,	110,	1100,	101,	111
2017-01-03 17:16:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:24 AI_Player.update()		1010,	11,	1100,	1010,	1010,	101,	101
2017-01-03 17:16:24 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:24 AI_Player.update()		110,	1101,	111,	1100,	101,	110,	111
2017-01-03 17:16:24 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:24 AI_Player.update()	Search took3ms
2017-01-03 17:16:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 17:16:24 AI_Player.update()		1010,	101,	1010,	110,	1100,	101,	111
2017-01-03 17:16:24 AI_Player.update()		1110,	11,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:24 AI_Player.update()		1010,	1110,	1100,	1010,	1010,	101,	101
2017-01-03 17:16:24 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:24 AI_Player.update()		110,	101,	111,	1100,	101,	110,	111
2017-01-03 17:16:24 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:16:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:24 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:24 AI_Player.update()	update
2017-01-03 17:16:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:25 AI_Player.update()	Search took766ms
2017-01-03 17:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 17:16:25 AI_Player.update()		1010,	11,	1010,	110,	1100,	101,	111
2017-01-03 17:16:25 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:25 AI_Player.update()		1010,	1101,	1100,	1010,	1010,	101,	101
2017-01-03 17:16:25 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:25 AI_Player.update()		110,	110,	111,	1100,	101,	110,	111
2017-01-03 17:16:25 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:25 AI_Player.update()	Search took2ms
2017-01-03 17:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()		110,	11,	111,	1010,	111,	1010,	11
2017-01-03 17:16:25 AI_Player.update()		1010,	1110,	1010,	110,	1100,	101,	111
2017-01-03 17:16:25 AI_Player.update()		1110,	1101,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:25 AI_Player.update()		1010,	101,	1100,	1010,	1010,	101,	101
2017-01-03 17:16:25 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:25 AI_Player.update()		110,	101,	111,	1100,	101,	110,	111
2017-01-03 17:16:25 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:25 AI_Player.update()	Search took168ms
2017-01-03 17:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-03 17:16:25 AI_Player.update()		1010,	1101,	1010,	110,	1100,	101,	111
2017-01-03 17:16:25 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:25 AI_Player.update()		1010,	110,	1100,	1010,	1010,	101,	101
2017-01-03 17:16:25 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:25 AI_Player.update()		110,	101,	111,	1100,	101,	110,	111
2017-01-03 17:16:25 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:25 AI_Player.update()	Search took11ms
2017-01-03 17:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-03 17:16:25 AI_Player.update()		1010,	101,	1010,	110,	1100,	101,	111
2017-01-03 17:16:25 AI_Player.update()		1110,	110,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:25 AI_Player.update()		1010,	101,	1100,	1010,	1010,	101,	101
2017-01-03 17:16:25 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:25 AI_Player.update()		110,	11,	111,	1100,	101,	110,	111
2017-01-03 17:16:25 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:25 AI_Player.update()	Search took335ms
2017-01-03 17:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-03 17:16:25 AI_Player.update()		1010,	101,	1010,	110,	1100,	1001,	111
2017-01-03 17:16:25 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:25 AI_Player.update()		1010,	101,	1100,	1010,	1010,	101,	101
2017-01-03 17:16:25 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:25 AI_Player.update()		110,	11,	111,	1100,	101,	1001,	111
2017-01-03 17:16:25 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1010,	1001
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:25 AI_Player.update()	Player b has won!
2017-01-03 17:16:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:25 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:25 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:25 AI_Player.update()	Search took2ms
2017-01-03 17:16:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-03 17:16:25 AI_Player.update()		1010,	1110,	101,	11,	101,	1010,	101
2017-01-03 17:16:25 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-03 17:16:25 AI_Player.update()		111,	1011,	11,	1100,	1110,	1010,	101
2017-01-03 17:16:25 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-03 17:16:25 AI_Player.update()		11,	1010,	1001,	101,	1001,	101,	101
2017-01-03 17:16:25 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1101,	1001
2017-01-03 17:16:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:25 AI_Player.update()	update
2017-01-03 17:16:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:26 AI_Player.update()	Search took48ms
2017-01-03 17:16:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()		110,	101,	111,	1101,	111,	1101,	11
2017-01-03 17:16:26 AI_Player.update()		1010,	1110,	101,	11,	101,	1100,	101
2017-01-03 17:16:26 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-03 17:16:26 AI_Player.update()		111,	1011,	11,	1100,	1110,	110,	101
2017-01-03 17:16:26 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:26 AI_Player.update()		11,	1010,	1001,	101,	1001,	101,	101
2017-01-03 17:16:26 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()	update
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()	update
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:26 AI_Player.update()	Search took1ms
2017-01-03 17:16:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()		110,	101,	111,	1101,	111,	1101,	11
2017-01-03 17:16:26 AI_Player.update()		1110,	101,	11,	101,	1100,	101,	1010
2017-01-03 17:16:26 AI_Player.update()		1110,	1100,	1110,	110,	111,	1010,	1011
2017-01-03 17:16:26 AI_Player.update()		111,	1011,	11,	1100,	1110,	110,	101
2017-01-03 17:16:26 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:26 AI_Player.update()		11,	1010,	1001,	101,	1001,	101,	101
2017-01-03 17:16:26 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()	update
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()	update
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:26 AI_Player.update()	Search took457ms
2017-01-03 17:16:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()		110,	101,	111,	1001,	111,	1101,	11
2017-01-03 17:16:26 AI_Player.update()		1110,	101,	11,	1101,	1100,	101,	1010
2017-01-03 17:16:26 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-03 17:16:26 AI_Player.update()		111,	1011,	11,	110,	1110,	110,	101
2017-01-03 17:16:26 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-03 17:16:26 AI_Player.update()		11,	1010,	1001,	1010,	1001,	101,	101
2017-01-03 17:16:26 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-03 17:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()	update
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()	update
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:26 AI_Player.update()	Search took5ms
2017-01-03 17:16:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 17:16:26 AI_Player.update()		1110,	101,	11,	1001,	1100,	101,	1010
2017-01-03 17:16:26 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-03 17:16:26 AI_Player.update()		111,	1011,	11,	101,	1110,	110,	101
2017-01-03 17:16:26 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:26 AI_Player.update()		11,	1010,	1001,	1100,	1001,	101,	101
2017-01-03 17:16:26 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-03 17:16:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()	update
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:26 AI_Player.update()	update
2017-01-03 17:16:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:27 AI_Player.update()	Search took567ms
2017-01-03 17:16:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 17:16:27 AI_Player.update()		1110,	1100,	11,	1001,	1100,	101,	1010
2017-01-03 17:16:27 AI_Player.update()		1110,	1011,	1110,	1101,	111,	1010,	1011
2017-01-03 17:16:27 AI_Player.update()		111,	1100,	11,	101,	1110,	110,	101
2017-01-03 17:16:27 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:27 AI_Player.update()		11,	1001,	1001,	1100,	1001,	101,	101
2017-01-03 17:16:27 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-03 17:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()	update
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()	update
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:27 AI_Player.update()	Search took4ms
2017-01-03 17:16:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-03 17:16:27 AI_Player.update()		1110,	1100,	11,	101,	1100,	101,	1010
2017-01-03 17:16:27 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1010,	1011
2017-01-03 17:16:27 AI_Player.update()		111,	1100,	11,	1101,	1110,	110,	101
2017-01-03 17:16:27 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:27 AI_Player.update()		11,	1001,	1001,	110,	1001,	101,	101
2017-01-03 17:16:27 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()	update
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()	update
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:27 AI_Player.update()	Search took258ms
2017-01-03 17:16:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 17:16:27 AI_Player.update()		1110,	1100,	11,	101,	1100,	1101,	1010
2017-01-03 17:16:27 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:27 AI_Player.update()		111,	1100,	11,	1101,	1110,	1010,	101
2017-01-03 17:16:27 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:27 AI_Player.update()		11,	1001,	1001,	110,	1001,	1010,	101
2017-01-03 17:16:27 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()	update
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()	update
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:27 AI_Player.update()	Search took7ms
2017-01-03 17:16:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-03 17:16:27 AI_Player.update()		1110,	1011,	11,	101,	1100,	1101,	1010
2017-01-03 17:16:27 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:27 AI_Player.update()		111,	1010,	11,	1101,	1110,	1010,	101
2017-01-03 17:16:27 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:27 AI_Player.update()		11,	101,	1001,	110,	1001,	1010,	101
2017-01-03 17:16:27 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()	update
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:27 AI_Player.update()	update
2017-01-03 17:16:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:28 AI_Player.update()	Search took703ms
2017-01-03 17:16:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-03 17:16:28 AI_Player.update()		1110,	1011,	11,	101,	1100,	1101,	1010
2017-01-03 17:16:28 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:28 AI_Player.update()		101,	111,	1010,	11,	1101,	1110,	1010
2017-01-03 17:16:28 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:28 AI_Player.update()		11,	101,	1001,	110,	1001,	1010,	101
2017-01-03 17:16:28 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:28 AI_Player.update()	Search took5ms
2017-01-03 17:16:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-03 17:16:28 AI_Player.update()		1110,	1011,	11,	101,	1100,	1101,	1010
2017-01-03 17:16:28 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:28 AI_Player.update()		111,	1010,	11,	1101,	1110,	1010,	101
2017-01-03 17:16:28 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:28 AI_Player.update()		11,	101,	1001,	110,	1001,	1010,	101
2017-01-03 17:16:28 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:28 AI_Player.update()	Search took96ms
2017-01-03 17:16:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-03 17:16:28 AI_Player.update()		1110,	1011,	11,	101,	1100,	1101,	1010
2017-01-03 17:16:28 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:28 AI_Player.update()		111,	1010,	11,	1101,	1110,	1010,	101
2017-01-03 17:16:28 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:28 AI_Player.update()		101,	1001,	110,	1001,	1010,	101,	11
2017-01-03 17:16:28 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:28 AI_Player.update()	Search took7ms
2017-01-03 17:16:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 17:16:28 AI_Player.update()		1110,	1100,	11,	101,	1100,	1101,	1010
2017-01-03 17:16:28 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:28 AI_Player.update()		111,	1001,	11,	1101,	1110,	1010,	101
2017-01-03 17:16:28 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:28 AI_Player.update()		101,	101,	110,	1001,	1010,	101,	11
2017-01-03 17:16:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:28 AI_Player.update()	Search took153ms
2017-01-03 17:16:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-03 17:16:28 AI_Player.update()		1110,	1100,	11,	101,	1100,	101,	1010
2017-01-03 17:16:28 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1101,	1011
2017-01-03 17:16:28 AI_Player.update()		111,	1001,	11,	1101,	1110,	101,	101
2017-01-03 17:16:28 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:28 AI_Player.update()		101,	101,	110,	1001,	1010,	110,	11
2017-01-03 17:16:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:28 AI_Player.update()	Search took7ms
2017-01-03 17:16:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-03 17:16:28 AI_Player.update()		1110,	1010,	11,	101,	1100,	101,	1010
2017-01-03 17:16:28 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-03 17:16:28 AI_Player.update()		111,	1001,	11,	1101,	1110,	101,	101
2017-01-03 17:16:28 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:28 AI_Player.update()		101,	1100,	110,	1001,	1010,	110,	11
2017-01-03 17:16:28 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:28 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:28 AI_Player.update()	update
2017-01-03 17:16:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:29 AI_Player.update()	Search took1020ms
2017-01-03 17:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-03 17:16:29 AI_Player.update()		1110,	1001,	11,	101,	1100,	101,	1010
2017-01-03 17:16:29 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-03 17:16:29 AI_Player.update()		111,	101,	11,	1101,	1110,	101,	101
2017-01-03 17:16:29 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:29 AI_Player.update()		101,	1011,	110,	1001,	1010,	110,	11
2017-01-03 17:16:29 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:29 AI_Player.update()	Player b has won!
2017-01-03 17:16:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:29 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:29 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:29 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:29 AI_Player.update()	Search took4ms
2017-01-03 17:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()		110,	1101,	111,	1101,	111,	1011,	11
2017-01-03 17:16:29 AI_Player.update()		1001,	1100,	1010,	101,	101,	1001,	1010
2017-01-03 17:16:29 AI_Player.update()		1110,	1010,	1110,	1001,	111,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		101,	111,	1010,	101,	1100,	101,	1010
2017-01-03 17:16:29 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		110,	101,	1011,	101,	1101,	11,	1110
2017-01-03 17:16:29 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:29 AI_Player.update()	Search took197ms
2017-01-03 17:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()		110,	1100,	111,	1101,	111,	1011,	11
2017-01-03 17:16:29 AI_Player.update()		1001,	1010,	1010,	101,	101,	1001,	1010
2017-01-03 17:16:29 AI_Player.update()		1110,	111,	1110,	1001,	111,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		101,	110,	1010,	101,	1100,	101,	1010
2017-01-03 17:16:29 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		110,	1001,	1011,	101,	1101,	11,	1110
2017-01-03 17:16:29 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:29 AI_Player.update()	Search took4ms
2017-01-03 17:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()		110,	1010,	111,	1101,	111,	1011,	11
2017-01-03 17:16:29 AI_Player.update()		1001,	111,	1010,	101,	101,	1001,	1010
2017-01-03 17:16:29 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		101,	101,	1010,	101,	1100,	101,	1010
2017-01-03 17:16:29 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		110,	1101,	1011,	101,	1101,	11,	1110
2017-01-03 17:16:29 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:29 AI_Player.update()	Search took203ms
2017-01-03 17:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()		110,	1010,	111,	1101,	111,	1011,	11
2017-01-03 17:16:29 AI_Player.update()		1001,	111,	1010,	101,	101,	1001,	1010
2017-01-03 17:16:29 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		1010,	101,	101,	1010,	101,	1100,	101
2017-01-03 17:16:29 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		110,	1101,	1011,	101,	1101,	11,	1110
2017-01-03 17:16:29 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:29 AI_Player.update()	Search took3ms
2017-01-03 17:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()		110,	1010,	111,	1101,	111,	1011,	11
2017-01-03 17:16:29 AI_Player.update()		1001,	111,	1010,	101,	101,	1001,	1010
2017-01-03 17:16:29 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		1010,	101,	101,	1010,	101,	1100,	101
2017-01-03 17:16:29 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		1110,	110,	1101,	1011,	101,	1101,	11
2017-01-03 17:16:29 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:29 AI_Player.update()	Search took96ms
2017-01-03 17:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()		110,	111,	111,	1101,	111,	1011,	11
2017-01-03 17:16:29 AI_Player.update()		1001,	110,	1010,	101,	101,	1001,	1010
2017-01-03 17:16:29 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		1010,	1001,	101,	1010,	101,	1100,	101
2017-01-03 17:16:29 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		1110,	1100,	1101,	1011,	101,	1101,	11
2017-01-03 17:16:29 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:29 AI_Player.update()	Search took3ms
2017-01-03 17:16:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()		110,	111,	111,	101,	111,	1011,	11
2017-01-03 17:16:29 AI_Player.update()		1001,	110,	1010,	1001,	101,	1001,	1010
2017-01-03 17:16:29 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		1010,	1001,	101,	101,	101,	1100,	101
2017-01-03 17:16:29 AI_Player.update()		1110,	110,	1101,	1011,	1011,	110,	1011
2017-01-03 17:16:29 AI_Player.update()		1110,	1100,	1101,	101,	101,	1101,	11
2017-01-03 17:16:29 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-03 17:16:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:29 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:29 AI_Player.update()	update
2017-01-03 17:16:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:30 AI_Player.update()	Search took183ms
2017-01-03 17:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()		110,	111,	111,	101,	111,	1011,	11
2017-01-03 17:16:30 AI_Player.update()		1001,	110,	1010,	1001,	101,	1001,	1010
2017-01-03 17:16:30 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1001,	101,	101,	101,	1100,	101,	1010
2017-01-03 17:16:30 AI_Player.update()		1110,	110,	1101,	1011,	1011,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1110,	1100,	1101,	101,	101,	1101,	11
2017-01-03 17:16:30 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:30 AI_Player.update()	Search took4ms
2017-01-03 17:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()		110,	110,	111,	101,	111,	1011,	11
2017-01-03 17:16:30 AI_Player.update()		1001,	101,	1010,	1001,	101,	1001,	1010
2017-01-03 17:16:30 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1001,	110,	101,	101,	1100,	101,	1010
2017-01-03 17:16:30 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1110,	1010,	1101,	101,	101,	1101,	11
2017-01-03 17:16:30 AI_Player.update()		1100,	111,	1101,	1101,	1101,	1010,	1001
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:30 AI_Player.update()	Search took292ms
2017-01-03 17:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-03 17:16:30 AI_Player.update()		1001,	101,	1010,	1001,	101,	1001,	1010
2017-01-03 17:16:30 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1001,	1100,	101,	101,	1100,	101,	1010
2017-01-03 17:16:30 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1110,	111,	1101,	101,	101,	1101,	11
2017-01-03 17:16:30 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1010,	1001
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:30 AI_Player.update()	Search took2ms
2017-01-03 17:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-03 17:16:30 AI_Player.update()		1001,	101,	1010,	1001,	101,	1001,	1010
2017-01-03 17:16:30 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1010,	1001,	1100,	101,	101,	1100,	101
2017-01-03 17:16:30 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1110,	111,	1101,	101,	101,	1101,	11
2017-01-03 17:16:30 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1010,	1001
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:30 AI_Player.update()	Search took176ms
2017-01-03 17:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-03 17:16:30 AI_Player.update()		1010,	1001,	101,	1010,	1001,	101,	1001
2017-01-03 17:16:30 AI_Player.update()		1110,	110,	1110,	1010,	111,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1010,	1001,	1100,	101,	101,	1100,	101
2017-01-03 17:16:30 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1110,	111,	1101,	101,	101,	1101,	11
2017-01-03 17:16:30 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1010,	1001
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:30 AI_Player.update()	Search took6ms
2017-01-03 17:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-03 17:16:30 AI_Player.update()		1010,	1001,	101,	1010,	1001,	101,	1001
2017-01-03 17:16:30 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1010,	1001,	1100,	1011,	101,	1100,	101
2017-01-03 17:16:30 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1110,	111,	1101,	1101,	101,	1101,	11
2017-01-03 17:16:30 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:30 AI_Player.update()	Search took106ms
2017-01-03 17:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-03 17:16:30 AI_Player.update()		1010,	1001,	101,	101,	1001,	101,	1001
2017-01-03 17:16:30 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1010,	1001,	1100,	101,	101,	1100,	101
2017-01-03 17:16:30 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1110,	111,	1101,	101,	101,	1101,	11
2017-01-03 17:16:30 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:30 AI_Player.update()	Search took3ms
2017-01-03 17:16:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()		110,	1001,	111,	1010,	111,	1011,	11
2017-01-03 17:16:30 AI_Player.update()		1010,	110,	101,	101,	1001,	101,	1001
2017-01-03 17:16:30 AI_Player.update()		1110,	1001,	1110,	1011,	111,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1010,	1010,	1100,	101,	101,	1100,	101
2017-01-03 17:16:30 AI_Player.update()		1110,	111,	1101,	1101,	1011,	110,	1011
2017-01-03 17:16:30 AI_Player.update()		1110,	110,	1101,	101,	101,	1101,	11
2017-01-03 17:16:30 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:30 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:30 AI_Player.update()	update
2017-01-03 17:16:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:31 AI_Player.update()	Search took423ms
2017-01-03 17:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()		110,	1001,	111,	1010,	111,	1011,	11
2017-01-03 17:16:31 AI_Player.update()		1010,	110,	101,	1010,	1001,	101,	1001
2017-01-03 17:16:31 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-03 17:16:31 AI_Player.update()		1010,	1010,	1100,	1011,	101,	1100,	101
2017-01-03 17:16:31 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:31 AI_Player.update()		1110,	110,	1101,	1101,	101,	1101,	11
2017-01-03 17:16:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:31 AI_Player.update()	Search took5ms
2017-01-03 17:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()		110,	1001,	111,	1010,	111,	1011,	11
2017-01-03 17:16:31 AI_Player.update()		1010,	110,	101,	1010,	1001,	101,	1001
2017-01-03 17:16:31 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-03 17:16:31 AI_Player.update()		1010,	1010,	1100,	1011,	101,	1100,	101
2017-01-03 17:16:31 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:31 AI_Player.update()		110,	1101,	1101,	101,	1101,	11,	1110
2017-01-03 17:16:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:31 AI_Player.update()	Search took347ms
2017-01-03 17:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()		110,	110,	111,	1010,	111,	1011,	11
2017-01-03 17:16:31 AI_Player.update()		1010,	1001,	101,	1010,	1001,	101,	1001
2017-01-03 17:16:31 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-03 17:16:31 AI_Player.update()		1010,	111,	1100,	1011,	101,	1100,	101
2017-01-03 17:16:31 AI_Player.update()		1110,	1101,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:31 AI_Player.update()		110,	101,	1101,	101,	1101,	11,	1110
2017-01-03 17:16:31 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:31 AI_Player.update()	Search took2ms
2017-01-03 17:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()		110,	1001,	111,	1010,	111,	1011,	11
2017-01-03 17:16:31 AI_Player.update()		1010,	110,	101,	1010,	1001,	101,	1001
2017-01-03 17:16:31 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-03 17:16:31 AI_Player.update()		1010,	1010,	1100,	1011,	101,	1100,	101
2017-01-03 17:16:31 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-03 17:16:31 AI_Player.update()		110,	1101,	1101,	101,	1101,	11,	1110
2017-01-03 17:16:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:31 AI_Player.update()	Search took345ms
2017-01-03 17:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()		110,	1001,	111,	1010,	111,	1010,	11
2017-01-03 17:16:31 AI_Player.update()		1010,	110,	101,	1010,	1001,	1011,	1001
2017-01-03 17:16:31 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:16:31 AI_Player.update()		1010,	1010,	1100,	1011,	101,	110,	101
2017-01-03 17:16:31 AI_Player.update()		1110,	111,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:31 AI_Player.update()		110,	1101,	1101,	101,	1101,	110,	1110
2017-01-03 17:16:31 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:31 AI_Player.update()	Search took8ms
2017-01-03 17:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-03 17:16:31 AI_Player.update()		1010,	1001,	101,	1010,	1001,	1011,	1001
2017-01-03 17:16:31 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:16:31 AI_Player.update()		1010,	111,	1100,	1011,	101,	110,	101
2017-01-03 17:16:31 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:31 AI_Player.update()		110,	101,	1101,	101,	1101,	110,	1110
2017-01-03 17:16:31 AI_Player.update()		1100,	1001,	1101,	101,	1101,	11,	1001
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:16:31 AI_Player.update()	Player a has won!
2017-01-03 17:16:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:31 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:31 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:31 AI_Player.update()	Search took2ms
2017-01-03 17:16:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 17:16:31 AI_Player.update()		111,	1010,	1010,	1100,	11,	1010,	1100
2017-01-03 17:16:31 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-03 17:16:31 AI_Player.update()		110,	11,	1100,	1010,	1010,	1100,	11
2017-01-03 17:16:31 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-03 17:16:31 AI_Player.update()		1011,	1100,	1010,	101,	1100,	1001,	1010
2017-01-03 17:16:31 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:31 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:31 AI_Player.update()	update
2017-01-03 17:16:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took187ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	101,	111,	1100,	111,	110,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	1010,	1100,	11,	1010,	1100,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		110,	11,	1100,	1010,	1010,	1100,	11
2017-01-03 17:16:32 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1011,	1100,	1010,	101,	1100,	1001,	1010
2017-01-03 17:16:32 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took3ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	1010,	1100,	1101,	1010,	1100,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		110,	11,	1100,	1100,	1010,	1100,	11
2017-01-03 17:16:32 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1011,	1100,	1010,	1010,	1100,	1001,	1010
2017-01-03 17:16:32 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took84ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	1010,	1100,	1101,	1010,	1010,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-03 17:16:32 AI_Player.update()		110,	11,	1100,	1100,	1010,	1010,	11
2017-01-03 17:16:32 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-03 17:16:32 AI_Player.update()		1011,	1100,	1010,	1010,	1100,	1010,	1010
2017-01-03 17:16:32 AI_Player.update()		1100,	11,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took3ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	101,	111,	11,	111,	1100,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	1010,	1100,	1101,	1010,	1010,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-03 17:16:32 AI_Player.update()		11,	110,	11,	1100,	1100,	1010,	1010
2017-01-03 17:16:32 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1001,	1011
2017-01-03 17:16:32 AI_Player.update()		1011,	1100,	1010,	1010,	1100,	1010,	1010
2017-01-03 17:16:32 AI_Player.update()		1100,	11,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took250ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	1010,	1100,	1101,	1010,	1100,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		11,	110,	11,	1100,	1100,	1001,	1010
2017-01-03 17:16:32 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1011,	1100,	1010,	1010,	1100,	110,	1010
2017-01-03 17:16:32 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took5ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	1010,	1100,	1010,	1010,	1100,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		11,	110,	11,	101,	1100,	1001,	1010
2017-01-03 17:16:32 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1011,	1100,	1010,	1100,	1100,	110,	1010
2017-01-03 17:16:32 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:16:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took234ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	1010,	1100,	1010,	1010,	1100,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		11,	110,	11,	101,	1100,	1001,	1010
2017-01-03 17:16:32 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1100,	1010,	1100,	1100,	110,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took2ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	11,	111,	1101,	111,	1010,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1100,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		11,	1100,	11,	101,	1100,	1001,	1010
2017-01-03 17:16:32 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1100,	1001,	1100,	1100,	110,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took33ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	11,	111,	1101,	111,	1010,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	101,	1100,	1010,	1010,	1100,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		11,	1100,	11,	101,	1100,	1001,	1010
2017-01-03 17:16:32 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1001,	1100,	1100,	110,	1010,	1011,	1100
2017-01-03 17:16:32 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took2ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	1010,	1100,	1010,	1010,	1100,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		11,	110,	11,	101,	1100,	1001,	1010
2017-01-03 17:16:32 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1001,	1010,	1100,	110,	1010,	1011,	1100
2017-01-03 17:16:32 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took67ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	1010,	1100,	1100,	1010,	1100,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	1100,	1110,	101,	111,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		11,	110,	11,	1010,	1100,	1001,	1010
2017-01-03 17:16:32 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1001,	1010,	1100,	11,	1010,	1011,	1100
2017-01-03 17:16:32 AI_Player.update()		1100,	11,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:32 AI_Player.update()	Search took2ms
2017-01-03 17:16:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-03 17:16:32 AI_Player.update()		1010,	1100,	1100,	1100,	1010,	1100,	111
2017-01-03 17:16:32 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		11,	1100,	11,	1010,	1100,	1001,	1010
2017-01-03 17:16:32 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:32 AI_Player.update()		1001,	11,	1100,	11,	1010,	1011,	1100
2017-01-03 17:16:32 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:16:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:32 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:32 AI_Player.update()	update
2017-01-03 17:16:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:33 AI_Player.update()	Search took253ms
2017-01-03 17:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-03 17:16:33 AI_Player.update()		1010,	1100,	1100,	1100,	1010,	1100,	111
2017-01-03 17:16:33 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1010,	11,	1100,	11,	1010,	1100,	1001
2017-01-03 17:16:33 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1001,	11,	1100,	11,	1010,	1011,	1100
2017-01-03 17:16:33 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:33 AI_Player.update()	Search took2ms
2017-01-03 17:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-03 17:16:33 AI_Player.update()		1010,	110,	1100,	1100,	1010,	1100,	111
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1010,	1010,	1100,	11,	1010,	1100,	1001
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1001,	101,	1100,	11,	1010,	1011,	1100
2017-01-03 17:16:33 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:33 AI_Player.update()	Search took368ms
2017-01-03 17:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-03 17:16:33 AI_Player.update()		1010,	110,	1100,	1100,	1010,	1100,	111
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1010,	1010,	1100,	11,	1010,	1100,	1001
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	1001,	101,	1100,	11,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:33 AI_Player.update()	Search took4ms
2017-01-03 17:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-03 17:16:33 AI_Player.update()		1010,	110,	1100,	1100,	1010,	1100,	111
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1010,	1100,	11,	1010,	1100,	1001,	1010
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	1001,	101,	1100,	11,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:33 AI_Player.update()	Search took161ms
2017-01-03 17:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-03 17:16:33 AI_Player.update()		110,	1100,	1100,	1010,	1100,	111,	1010
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1010,	1100,	11,	1010,	1100,	1001,	1010
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	1001,	101,	1100,	11,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:33 AI_Player.update()	Search took4ms
2017-01-03 17:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-03 17:16:33 AI_Player.update()		110,	1100,	1100,	1010,	1100,	111,	1010
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	11,	1010,	1100,	1001,	1010,	1010
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	1001,	101,	1100,	11,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:33 AI_Player.update()	Search took187ms
2017-01-03 17:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-03 17:16:33 AI_Player.update()		110,	1100,	1100,	1010,	1100,	111,	1010
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	11,	1010,	1100,	1001,	1010,	1010
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1011,	1100,	1001,	101,	1100,	11,	1010
2017-01-03 17:16:33 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:33 AI_Player.update()	Player b has won!
2017-01-03 17:16:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:33 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:33 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:33 AI_Player.update()	Search took0ms
2017-01-03 17:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()		110,	1001,	111,	1100,	111,	1010,	11
2017-01-03 17:16:33 AI_Player.update()		111,	1101,	101,	11,	110,	101,	11
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1110,	110,	111,	1100,	1011
2017-01-03 17:16:33 AI_Player.update()		1010,	1110,	110,	101,	110,	11,	1010
2017-01-03 17:16:33 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1001,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	1010,	1010,	1010,	110,	1010,	11
2017-01-03 17:16:33 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:33 AI_Player.update()	Search took12ms
2017-01-03 17:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()		110,	1001,	111,	1100,	111,	101,	11
2017-01-03 17:16:33 AI_Player.update()		111,	1101,	101,	11,	110,	1100,	11
2017-01-03 17:16:33 AI_Player.update()		1110,	11,	1110,	110,	111,	11,	1011
2017-01-03 17:16:33 AI_Player.update()		1010,	1110,	110,	101,	110,	1001,	1010
2017-01-03 17:16:33 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	1010,	1010,	1010,	110,	1010,	11
2017-01-03 17:16:33 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()	update
2017-01-03 17:16:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:33 AI_Player.update()	Search took1ms
2017-01-03 17:16:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:33 AI_Player.update()		110,	1101,	111,	1100,	111,	101,	11
2017-01-03 17:16:33 AI_Player.update()		111,	11,	101,	11,	110,	1100,	11
2017-01-03 17:16:33 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-03 17:16:33 AI_Player.update()		1010,	1001,	110,	101,	110,	1001,	1010
2017-01-03 17:16:33 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:33 AI_Player.update()		1100,	1001,	1010,	1010,	110,	1010,	11
2017-01-03 17:16:33 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:16:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took83ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	110,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		1010,	1001,	110,	1010,	110,	1001,	1010
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	1110,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took2ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	101,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	1010,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		1010,	1001,	110,	1010,	110,	1001,	1010
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	1100,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took168ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	1110,	101,	101,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1001,	1110,	1010,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		1010,	1010,	110,	1010,	110,	1001,	1010
2017-01-03 17:16:34 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	1100,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took4ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	101,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	1010,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		1010,	1001,	110,	1010,	110,	1001,	1010
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	1100,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took179ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	101,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	1010,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		1001,	110,	1010,	110,	1001,	1010,	1010
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	1100,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took0ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	1010,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		1001,	110,	1010,	1110,	1001,	1010,	1010
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	11,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took122ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	1010,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		110,	1010,	1110,	1001,	1010,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	11,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took2ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	110,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		110,	1010,	1110,	1100,	1010,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	110,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took155ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	1110,	101,	110,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1110,	1001,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		110,	1010,	1110,	1100,	1010,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	110,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took2ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	110,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		110,	1010,	1110,	1100,	1010,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	110,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took130ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	110,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		1010,	1110,	1100,	1010,	1010,	1001,	110
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	110,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took3ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	1001,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	1010,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		1010,	1110,	1100,	11,	1010,	1001,	110
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	101,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took40ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	1001,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	1010,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		1110,	1100,	11,	1010,	1001,	110,	1010
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	101,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:34 AI_Player.update()	Search took2ms
2017-01-03 17:16:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-03 17:16:34 AI_Player.update()		111,	11,	101,	1010,	110,	1100,	11
2017-01-03 17:16:34 AI_Player.update()		1110,	1110,	1110,	1010,	111,	11,	1011
2017-01-03 17:16:34 AI_Player.update()		1110,	1100,	11,	110,	1001,	110,	1010
2017-01-03 17:16:34 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1010,	1010,	110,	1010,	11
2017-01-03 17:16:34 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-03 17:16:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:34 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:34 AI_Player.update()	update
2017-01-03 17:16:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took128ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-03 17:16:35 AI_Player.update()		111,	11,	101,	1010,	110,	1100,	11
2017-01-03 17:16:35 AI_Player.update()		1110,	1110,	1110,	1010,	111,	11,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	11,	110,	1001,	110,	1010,	1110
2017-01-03 17:16:35 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1010,	1010,	110,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took3ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-03 17:16:35 AI_Player.update()		111,	11,	101,	1010,	110,	1100,	11
2017-01-03 17:16:35 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	11,	110,	101,	110,	1010,	1110
2017-01-03 17:16:35 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1010,	110,	110,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took86ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-03 17:16:35 AI_Player.update()		11,	101,	1010,	110,	1100,	11,	111
2017-01-03 17:16:35 AI_Player.update()		1110,	1110,	1110,	1001,	111,	11,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	11,	110,	101,	110,	1010,	1110
2017-01-03 17:16:35 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1010,	110,	110,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took3ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-03 17:16:35 AI_Player.update()		11,	101,	1010,	1001,	1100,	11,	111
2017-01-03 17:16:35 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	11,	110,	1010,	110,	1010,	1110
2017-01-03 17:16:35 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1010,	1001,	110,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took159ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-03 17:16:35 AI_Player.update()		11,	1110,	1010,	1001,	1100,	11,	111
2017-01-03 17:16:35 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1010,	110,	1010,	110,	1010,	1110
2017-01-03 17:16:35 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1010,	1001,	110,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took5ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-03 17:16:35 AI_Player.update()		11,	101,	1010,	1001,	1100,	11,	111
2017-01-03 17:16:35 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	11,	110,	1010,	110,	1010,	1110
2017-01-03 17:16:35 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1010,	1001,	110,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took178ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	1101,	111,	110,	111,	101,	11
2017-01-03 17:16:35 AI_Player.update()		11,	101,	1010,	1001,	1100,	11,	111
2017-01-03 17:16:35 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-03 17:16:35 AI_Player.update()		1110,	1100,	11,	110,	1010,	110,	1010
2017-01-03 17:16:35 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1010,	1001,	110,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took4ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-03 17:16:35 AI_Player.update()		11,	101,	1010,	101,	1100,	11,	111
2017-01-03 17:16:35 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-03 17:16:35 AI_Player.update()		1110,	1100,	11,	110,	1010,	110,	1010
2017-01-03 17:16:35 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1010,	1010,	110,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took111ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		11,	101,	1010,	101,	1100,	101,	111
2017-01-03 17:16:35 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-03 17:16:35 AI_Player.update()		1110,	1100,	11,	110,	1010,	11,	1010
2017-01-03 17:16:35 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1010,	1010,	110,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took2ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		11,	101,	1010,	110,	1100,	101,	111
2017-01-03 17:16:35 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-03 17:16:35 AI_Player.update()		1110,	1100,	11,	1001,	1010,	11,	1010
2017-01-03 17:16:35 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1010,	110,	110,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took104ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-03 17:16:35 AI_Player.update()		11,	101,	1010,	110,	1100,	11,	111
2017-01-03 17:16:35 AI_Player.update()		1110,	1110,	1110,	110,	111,	11,	1011
2017-01-03 17:16:35 AI_Player.update()		1110,	1100,	11,	1001,	1010,	110,	1010
2017-01-03 17:16:35 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1010,	110,	110,	1010,	11
2017-01-03 17:16:35 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:35 AI_Player.update()	Player b has won!
2017-01-03 17:16:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:35 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:35 AI_Player.update()	Search took1ms
2017-01-03 17:16:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()		110,	1001,	111,	1011,	111,	101,	11
2017-01-03 17:16:35 AI_Player.update()		1010,	1101,	1001,	11,	1001,	110,	1001
2017-01-03 17:16:35 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-03 17:16:35 AI_Player.update()		101,	1010,	1001,	1001,	1100,	110,	1010
2017-01-03 17:16:35 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:35 AI_Player.update()		101,	1010,	101,	11,	111,	1100,	101
2017-01-03 17:16:35 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:35 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:35 AI_Player.update()	update
2017-01-03 17:16:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took186ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	1001,	111,	1011,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	1010,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		101,	1010,	1001,	1001,	1100,	110,	1010
2017-01-03 17:16:36 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		101,	1010,	101,	11,	111,	1100,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took3ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	1001,	111,	1011,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	1010,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	11,	1110,	111,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		101,	1010,	1001,	1001,	1100,	110,	1010
2017-01-03 17:16:36 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	101,	11,	111,	1100,	101,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took117ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	1010,	1101,	1011,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		101,	1010,	1001,	111,	1100,	110,	1010
2017-01-03 17:16:36 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	101,	11,	1010,	1100,	101,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took5ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	11,	1101,	1011,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		101,	1101,	1001,	111,	1100,	110,	1010
2017-01-03 17:16:36 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	101,	11,	1010,	1100,	101,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	1001,	1101,	111,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took221ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	11,	1101,	1011,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	101,	1101,	1001,	111,	1100,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	101,	11,	1010,	1100,	101,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	1001,	1101,	111,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took2ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	11,	1101,	1011,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	101,	1101,	1001,	111,	1100,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		101,	1010,	101,	11,	1010,	1100,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	1001,	1101,	111,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took163ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	11,	1101,	1011,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	101,	1101,	1001,	111,	1100,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	101,	11,	1010,	1100,	101,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	1001,	1101,	111,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took2ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	1010,	1101,	1011,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	101,	1101,	1001,	111,	1100,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	1001,	11,	1010,	1100,	101,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took198ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	11,	111,	1011,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	1010,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	101,	1101,	1001,	111,	1100,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	1001,	11,	111,	1100,	101,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took1ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	1010,	111,	1011,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	101,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	101,	1101,	1001,	111,	1100,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	1010,	11,	111,	1100,	101,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	11,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took92ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	101,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	1001,	1101,	1001,	111,	1100,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	11,	11,	111,	1100,	101,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:36 AI_Player.update()	Search took2ms
2017-01-03 17:16:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-03 17:16:36 AI_Player.update()		1001,	101,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	1010,	1101,	1001,	111,	1100,	110
2017-01-03 17:16:36 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:36 AI_Player.update()		1010,	1010,	11,	111,	1100,	101,	101
2017-01-03 17:16:36 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:36 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:36 AI_Player.update()	update
2017-01-03 17:16:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took227ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-03 17:16:37 AI_Player.update()		1001,	101,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:37 AI_Player.update()		1010,	1010,	1101,	1001,	111,	1100,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	1010,	1010,	11,	111,	1100,	101
2017-01-03 17:16:37 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took1ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-03 17:16:37 AI_Player.update()		1001,	1001,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:37 AI_Player.update()		1010,	11,	1101,	1001,	111,	1100,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	101,	1010,	11,	111,	1100,	101
2017-01-03 17:16:37 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took64ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-03 17:16:37 AI_Player.update()		1001,	1001,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:37 AI_Player.update()		1010,	11,	1101,	1010,	111,	1100,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	101,	1010,	110,	111,	1100,	101
2017-01-03 17:16:37 AI_Player.update()		1100,	101,	1101,	1011,	1101,	11,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took3ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-03 17:16:37 AI_Player.update()		1001,	1010,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:37 AI_Player.update()		1010,	1010,	1101,	1010,	111,	1100,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	101,	1010,	110,	111,	1100,	101
2017-01-03 17:16:37 AI_Player.update()		1100,	101,	1101,	1011,	1101,	11,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took185ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-03 17:16:37 AI_Player.update()		1001,	1010,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:37 AI_Player.update()		1010,	1010,	1101,	1010,	111,	1100,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	101,	101,	1010,	110,	111,	1100
2017-01-03 17:16:37 AI_Player.update()		1100,	101,	1101,	1011,	1101,	11,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:16:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took3ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-03 17:16:37 AI_Player.update()		1001,	11,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:37 AI_Player.update()		1010,	101,	1101,	1010,	111,	1100,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	101,	101,	1010,	110,	111,	1100
2017-01-03 17:16:37 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	11,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took180ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-03 17:16:37 AI_Player.update()		1001,	1010,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:37 AI_Player.update()		1010,	101,	1101,	1010,	111,	1100,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	1001,	101,	1010,	110,	111,	1100
2017-01-03 17:16:37 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:16:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took2ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-03 17:16:37 AI_Player.update()		1001,	101,	1101,	1001,	11,	1001,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:37 AI_Player.update()		1010,	101,	1101,	1010,	111,	1100,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	1010,	101,	1010,	110,	111,	1100
2017-01-03 17:16:37 AI_Player.update()		1100,	11,	1101,	1011,	1101,	11,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took101ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	1010,	111,	1001,	111,	101,	11
2017-01-03 17:16:37 AI_Player.update()		110,	1001,	101,	1101,	1001,	11,	1001
2017-01-03 17:16:37 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:37 AI_Player.update()		1010,	101,	1101,	1010,	111,	1100,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	1010,	101,	1010,	110,	111,	1100
2017-01-03 17:16:37 AI_Player.update()		1100,	11,	1101,	1011,	1101,	11,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took2ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-03 17:16:37 AI_Player.update()		110,	101,	101,	1101,	1001,	11,	1001
2017-01-03 17:16:37 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:37 AI_Player.update()		1010,	1001,	1101,	1010,	111,	1100,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	11,	101,	1010,	110,	111,	1100
2017-01-03 17:16:37 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took212ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	1001,	111,	1001,	111,	11,	11
2017-01-03 17:16:37 AI_Player.update()		110,	101,	101,	1101,	1001,	1100,	1001
2017-01-03 17:16:37 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-03 17:16:37 AI_Player.update()		1010,	1001,	1101,	1010,	111,	1010,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	1010,	1101,	11,	1011,	111,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	11,	101,	1010,	110,	11,	1100
2017-01-03 17:16:37 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:37 AI_Player.update()	Player b has won!
2017-01-03 17:16:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:37 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:37 AI_Player.update()	Search took0ms
2017-01-03 17:16:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()		110,	1011,	111,	1010,	111,	1101,	11
2017-01-03 17:16:37 AI_Player.update()		110,	110,	101,	101,	1101,	101,	1010
2017-01-03 17:16:37 AI_Player.update()		1110,	1011,	1110,	111,	111,	101,	1011
2017-01-03 17:16:37 AI_Player.update()		101,	101,	1001,	1010,	1100,	111,	110
2017-01-03 17:16:37 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:37 AI_Player.update()		1110,	1010,	101,	101,	1010,	11,	111
2017-01-03 17:16:37 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1110,	1001
2017-01-03 17:16:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:37 AI_Player.update()	update
2017-01-03 17:16:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:38 AI_Player.update()	Search took759ms
2017-01-03 17:16:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()		110,	1011,	111,	1010,	111,	1101,	11
2017-01-03 17:16:38 AI_Player.update()		110,	110,	101,	101,	1101,	101,	1010
2017-01-03 17:16:38 AI_Player.update()		1110,	1011,	1110,	111,	111,	101,	1011
2017-01-03 17:16:38 AI_Player.update()		110,	101,	101,	1001,	1010,	1100,	111
2017-01-03 17:16:38 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:38 AI_Player.update()		1110,	1010,	101,	101,	1010,	11,	111
2017-01-03 17:16:38 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1110,	1001
2017-01-03 17:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()	update
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()	update
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:38 AI_Player.update()	Search took2ms
2017-01-03 17:16:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()		110,	1011,	111,	101,	111,	1101,	11
2017-01-03 17:16:38 AI_Player.update()		110,	110,	101,	111,	1101,	101,	1010
2017-01-03 17:16:38 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:38 AI_Player.update()		110,	101,	101,	11,	1010,	1100,	111
2017-01-03 17:16:38 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:38 AI_Player.update()		1110,	1010,	101,	11,	1010,	11,	111
2017-01-03 17:16:38 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1110,	1001
2017-01-03 17:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()	update
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()	update
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:38 AI_Player.update()	Search took280ms
2017-01-03 17:16:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()		110,	1100,	111,	101,	111,	1101,	11
2017-01-03 17:16:38 AI_Player.update()		110,	1011,	101,	111,	1101,	101,	1010
2017-01-03 17:16:38 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:38 AI_Player.update()		110,	1011,	101,	11,	1010,	1100,	111
2017-01-03 17:16:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:38 AI_Player.update()		1110,	1100,	101,	11,	1010,	11,	111
2017-01-03 17:16:38 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1110,	1001
2017-01-03 17:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()	update
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()	update
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:38 AI_Player.update()	Search took1ms
2017-01-03 17:16:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()		110,	1100,	111,	101,	111,	1101,	11
2017-01-03 17:16:38 AI_Player.update()		1010,	110,	1011,	101,	111,	1101,	101
2017-01-03 17:16:38 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:38 AI_Player.update()		110,	1011,	101,	11,	1010,	1100,	111
2017-01-03 17:16:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:38 AI_Player.update()		1110,	1100,	101,	11,	1010,	11,	111
2017-01-03 17:16:38 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1110,	1001
2017-01-03 17:16:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()	update
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:38 AI_Player.update()	update
2017-01-03 17:16:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:39 AI_Player.update()	Search took368ms
2017-01-03 17:16:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()		110,	110,	111,	101,	111,	1101,	11
2017-01-03 17:16:39 AI_Player.update()		1010,	110,	1011,	101,	111,	1101,	101
2017-01-03 17:16:39 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:39 AI_Player.update()		110,	101,	101,	11,	1010,	1100,	111
2017-01-03 17:16:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:39 AI_Player.update()		1110,	1010,	101,	11,	1010,	11,	111
2017-01-03 17:16:39 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1110,	1001
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:39 AI_Player.update()	Search took3ms
2017-01-03 17:16:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()		110,	110,	111,	101,	111,	1101,	11
2017-01-03 17:16:39 AI_Player.update()		1010,	110,	1011,	1001,	111,	1101,	101
2017-01-03 17:16:39 AI_Player.update()		1110,	1011,	1110,	11,	111,	101,	1011
2017-01-03 17:16:39 AI_Player.update()		110,	101,	101,	101,	1010,	1100,	111
2017-01-03 17:16:39 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:39 AI_Player.update()		1110,	1010,	101,	1010,	1010,	11,	111
2017-01-03 17:16:39 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1110,	1001
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:39 AI_Player.update()	Search took364ms
2017-01-03 17:16:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()		110,	110,	111,	101,	111,	1101,	11
2017-01-03 17:16:39 AI_Player.update()		1010,	110,	1011,	101,	111,	1101,	101
2017-01-03 17:16:39 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-03 17:16:39 AI_Player.update()		110,	101,	101,	11,	1010,	1100,	111
2017-01-03 17:16:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:39 AI_Player.update()		1110,	1010,	101,	11,	1010,	11,	111
2017-01-03 17:16:39 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1110,	1001
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:16:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:39 AI_Player.update()	Search took3ms
2017-01-03 17:16:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()		110,	110,	111,	1010,	111,	1101,	11
2017-01-03 17:16:39 AI_Player.update()		1010,	110,	1011,	101,	111,	1101,	101
2017-01-03 17:16:39 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-03 17:16:39 AI_Player.update()		110,	101,	101,	1001,	1010,	1100,	111
2017-01-03 17:16:39 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:39 AI_Player.update()		1110,	1010,	101,	101,	1010,	11,	111
2017-01-03 17:16:39 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1110,	1001
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:39 AI_Player.update()	Search took139ms
2017-01-03 17:16:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()		110,	110,	111,	1010,	111,	1101,	11
2017-01-03 17:16:39 AI_Player.update()		1010,	110,	1011,	101,	111,	1101,	101
2017-01-03 17:16:39 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-03 17:16:39 AI_Player.update()		111,	110,	101,	101,	1001,	1010,	1100
2017-01-03 17:16:39 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:39 AI_Player.update()		1110,	1010,	101,	101,	1010,	11,	111
2017-01-03 17:16:39 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1110,	1001
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:39 AI_Player.update()	Search took2ms
2017-01-03 17:16:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()		110,	110,	111,	11,	111,	1101,	11
2017-01-03 17:16:39 AI_Player.update()		1010,	110,	1011,	1010,	111,	1101,	101
2017-01-03 17:16:39 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-03 17:16:39 AI_Player.update()		111,	110,	101,	101,	1001,	1010,	1100
2017-01-03 17:16:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:39 AI_Player.update()		1110,	1010,	101,	11,	1010,	11,	111
2017-01-03 17:16:39 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1110,	1001
2017-01-03 17:16:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:39 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:39 AI_Player.update()	update
2017-01-03 17:16:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:40 AI_Player.update()	Search took908ms
2017-01-03 17:16:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()		110,	110,	111,	11,	111,	1101,	11
2017-01-03 17:16:40 AI_Player.update()		1010,	110,	1011,	1010,	111,	1101,	101
2017-01-03 17:16:40 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-03 17:16:40 AI_Player.update()		110,	101,	101,	1001,	1010,	1100,	111
2017-01-03 17:16:40 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:40 AI_Player.update()		1110,	1010,	101,	11,	1010,	11,	111
2017-01-03 17:16:40 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1110,	1001
2017-01-03 17:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()	update
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()	update
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:40 AI_Player.update()	Search took4ms
2017-01-03 17:16:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()		110,	110,	111,	11,	111,	1101,	11
2017-01-03 17:16:40 AI_Player.update()		110,	1011,	1010,	111,	1101,	101,	1010
2017-01-03 17:16:40 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-03 17:16:40 AI_Player.update()		110,	101,	101,	1001,	1010,	1100,	111
2017-01-03 17:16:40 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:40 AI_Player.update()		1110,	1010,	101,	11,	1010,	11,	111
2017-01-03 17:16:40 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1110,	1001
2017-01-03 17:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()	update
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()	update
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:40 AI_Player.update()	Search took55ms
2017-01-03 17:16:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()		110,	1011,	111,	11,	111,	1101,	11
2017-01-03 17:16:40 AI_Player.update()		110,	1011,	1010,	111,	1101,	101,	1010
2017-01-03 17:16:40 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-03 17:16:40 AI_Player.update()		110,	1100,	101,	1001,	1010,	1100,	111
2017-01-03 17:16:40 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:40 AI_Player.update()		1110,	1100,	101,	11,	1010,	11,	111
2017-01-03 17:16:40 AI_Player.update()		1100,	110,	1101,	101,	1101,	1110,	1001
2017-01-03 17:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()	update
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()	update
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:40 AI_Player.update()	Search took5ms
2017-01-03 17:16:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()		110,	1011,	111,	11,	111,	1101,	11
2017-01-03 17:16:40 AI_Player.update()		110,	101,	1010,	111,	1101,	101,	1010
2017-01-03 17:16:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 17:16:40 AI_Player.update()		110,	1010,	101,	1001,	1010,	1100,	111
2017-01-03 17:16:40 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-03 17:16:40 AI_Player.update()		1110,	110,	101,	11,	1010,	11,	111
2017-01-03 17:16:40 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1110,	1001
2017-01-03 17:16:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()	update
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:16:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:40 AI_Player.update()	update
2017-01-03 17:16:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:41 AI_Player.update()	Search took240ms
2017-01-03 17:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()		110,	1011,	111,	11,	111,	101,	11
2017-01-03 17:16:41 AI_Player.update()		110,	101,	1010,	111,	1101,	101,	1010
2017-01-03 17:16:41 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-03 17:16:41 AI_Player.update()		110,	1010,	101,	1001,	1010,	1010,	111
2017-01-03 17:16:41 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-03 17:16:41 AI_Player.update()		1110,	110,	101,	11,	1010,	1110,	111
2017-01-03 17:16:41 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1101,	1001
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:41 AI_Player.update()	Player b has won!
2017-01-03 17:16:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:41 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:41 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:41 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:41 AI_Player.update()	Search took0ms
2017-01-03 17:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-03 17:16:41 AI_Player.update()		101,	1110,	101,	1001,	1011,	1001,	101
2017-01-03 17:16:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-03 17:16:41 AI_Player.update()		11,	1010,	110,	101,	1011,	1010,	1001
2017-01-03 17:16:41 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-03 17:16:41 AI_Player.update()		1110,	1010,	11,	101,	1001,	101,	1001
2017-01-03 17:16:41 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:41 AI_Player.update()	Search took9ms
2017-01-03 17:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-03 17:16:41 AI_Player.update()		101,	101,	1110,	101,	1001,	1011,	1001
2017-01-03 17:16:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-03 17:16:41 AI_Player.update()		11,	1010,	110,	101,	1011,	1010,	1001
2017-01-03 17:16:41 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-03 17:16:41 AI_Player.update()		1110,	1010,	11,	101,	1001,	101,	1001
2017-01-03 17:16:41 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:41 AI_Player.update()	Search took3ms
2017-01-03 17:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-03 17:16:41 AI_Player.update()		101,	101,	1110,	101,	1001,	1011,	1001
2017-01-03 17:16:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1110,	1011
2017-01-03 17:16:41 AI_Player.update()		1010,	110,	101,	1011,	1010,	1001,	11
2017-01-03 17:16:41 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-03 17:16:41 AI_Player.update()		1110,	1010,	11,	101,	1001,	101,	1001
2017-01-03 17:16:41 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:41 AI_Player.update()	Search took114ms
2017-01-03 17:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-03 17:16:41 AI_Player.update()		101,	101,	1110,	101,	1001,	1110,	1001
2017-01-03 17:16:41 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-03 17:16:41 AI_Player.update()		1010,	110,	101,	1011,	1010,	11,	11
2017-01-03 17:16:41 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:41 AI_Player.update()		1110,	1010,	11,	101,	1001,	1100,	1001
2017-01-03 17:16:41 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1001,	1001
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:41 AI_Player.update()	Search took4ms
2017-01-03 17:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-03 17:16:41 AI_Player.update()		101,	101,	1110,	101,	1001,	1110,	1001
2017-01-03 17:16:41 AI_Player.update()		1110,	11,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:41 AI_Player.update()		1010,	110,	101,	101,	1010,	11,	11
2017-01-03 17:16:41 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:41 AI_Player.update()		1110,	1010,	11,	1100,	1001,	1100,	1001
2017-01-03 17:16:41 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:41 AI_Player.update()	Search took634ms
2017-01-03 17:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()		110,	101,	111,	101,	111,	1011,	11
2017-01-03 17:16:41 AI_Player.update()		101,	11,	1110,	101,	1001,	1110,	1001
2017-01-03 17:16:41 AI_Player.update()		1110,	110,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:41 AI_Player.update()		1010,	101,	101,	101,	1010,	11,	11
2017-01-03 17:16:41 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:41 AI_Player.update()		1110,	1010,	11,	1100,	1001,	1100,	1001
2017-01-03 17:16:41 AI_Player.update()		1100,	11,	1101,	101,	1101,	1001,	1001
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:41 AI_Player.update()	Search took5ms
2017-01-03 17:16:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-03 17:16:41 AI_Player.update()		101,	110,	1110,	101,	1001,	1110,	1001
2017-01-03 17:16:41 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-03 17:16:41 AI_Player.update()		1010,	1010,	101,	101,	1010,	11,	11
2017-01-03 17:16:41 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-03 17:16:41 AI_Player.update()		1110,	11,	11,	1100,	1001,	1100,	1001
2017-01-03 17:16:41 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-03 17:16:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:41 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:41 AI_Player.update()	update
2017-01-03 17:16:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:42 AI_Player.update()	Search took504ms
2017-01-03 17:16:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-03 17:16:42 AI_Player.update()		101,	110,	1110,	101,	1001,	1001,	1001
2017-01-03 17:16:42 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-03 17:16:42 AI_Player.update()		1010,	1010,	101,	101,	1010,	101,	11
2017-01-03 17:16:42 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:42 AI_Player.update()		1110,	11,	11,	1100,	1001,	1001,	1001
2017-01-03 17:16:42 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-03 17:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()	update
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()	update
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:42 AI_Player.update()	Search took3ms
2017-01-03 17:16:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()		110,	110,	111,	101,	111,	1110,	11
2017-01-03 17:16:42 AI_Player.update()		101,	101,	1110,	101,	1001,	1001,	1001
2017-01-03 17:16:42 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 17:16:42 AI_Player.update()		1010,	1010,	101,	101,	1010,	101,	11
2017-01-03 17:16:42 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:42 AI_Player.update()		1110,	101,	11,	1100,	1001,	1001,	1001
2017-01-03 17:16:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-03 17:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()	update
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()	update
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:42 AI_Player.update()	Search took333ms
2017-01-03 17:16:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()		110,	11,	111,	101,	111,	1110,	11
2017-01-03 17:16:42 AI_Player.update()		101,	110,	1110,	101,	1001,	1001,	1001
2017-01-03 17:16:42 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-03 17:16:42 AI_Player.update()		1010,	1010,	101,	101,	1010,	101,	11
2017-01-03 17:16:42 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:42 AI_Player.update()		1110,	11,	11,	1100,	1001,	1001,	1001
2017-01-03 17:16:42 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-03 17:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()	update
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()	update
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:42 AI_Player.update()	Search took4ms
2017-01-03 17:16:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()		110,	110,	111,	101,	111,	1110,	11
2017-01-03 17:16:42 AI_Player.update()		101,	101,	1110,	101,	1001,	1001,	1001
2017-01-03 17:16:42 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 17:16:42 AI_Player.update()		1010,	1010,	101,	101,	1010,	101,	11
2017-01-03 17:16:42 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:42 AI_Player.update()		1110,	101,	11,	1100,	1001,	1001,	1001
2017-01-03 17:16:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-03 17:16:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()	update
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:42 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:42 AI_Player.update()	update
2017-01-03 17:16:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:43 AI_Player.update()	Search took318ms
2017-01-03 17:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()		110,	110,	111,	101,	111,	1110,	11
2017-01-03 17:16:43 AI_Player.update()		101,	101,	1110,	1011,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-03 17:16:43 AI_Player.update()		1010,	1010,	101,	101,	1010,	101,	11
2017-01-03 17:16:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-03 17:16:43 AI_Player.update()		1110,	101,	11,	101,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1100,	11,	1101,	101,	1101,	1011,	1001
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:16:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:43 AI_Player.update()	Search took3ms
2017-01-03 17:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()		110,	101,	111,	101,	111,	1110,	11
2017-01-03 17:16:43 AI_Player.update()		101,	1010,	1110,	1011,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-03 17:16:43 AI_Player.update()		1010,	11,	101,	101,	1010,	101,	11
2017-01-03 17:16:43 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1100,	1011
2017-01-03 17:16:43 AI_Player.update()		1110,	11,	11,	101,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1100,	110,	1101,	101,	1101,	1011,	1001
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:43 AI_Player.update()	Search took159ms
2017-01-03 17:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()		110,	1010,	111,	101,	111,	1110,	11
2017-01-03 17:16:43 AI_Player.update()		101,	1010,	1110,	1011,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-03 17:16:43 AI_Player.update()		1010,	101,	101,	101,	1010,	101,	11
2017-01-03 17:16:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-03 17:16:43 AI_Player.update()		1110,	110,	11,	101,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:16:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:43 AI_Player.update()	Search took5ms
2017-01-03 17:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()		110,	1010,	111,	101,	111,	1110,	11
2017-01-03 17:16:43 AI_Player.update()		101,	11,	1110,	1011,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-03 17:16:43 AI_Player.update()		1010,	11,	101,	101,	1010,	101,	11
2017-01-03 17:16:43 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-03 17:16:43 AI_Player.update()		1110,	101,	11,	101,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1011,	1001
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:43 AI_Player.update()	Search took230ms
2017-01-03 17:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()		110,	1010,	111,	101,	111,	1110,	11
2017-01-03 17:16:43 AI_Player.update()		101,	1010,	1110,	1011,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-03 17:16:43 AI_Player.update()		1010,	101,	101,	101,	1010,	101,	11
2017-01-03 17:16:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1100,	1011
2017-01-03 17:16:43 AI_Player.update()		1110,	110,	11,	101,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:43 AI_Player.update()	Search took3ms
2017-01-03 17:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()		110,	1010,	111,	101,	111,	1110,	11
2017-01-03 17:16:43 AI_Player.update()		101,	11,	1110,	1011,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-03 17:16:43 AI_Player.update()		1010,	11,	101,	101,	1010,	101,	11
2017-01-03 17:16:43 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-03 17:16:43 AI_Player.update()		1110,	101,	11,	101,	1001,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1011,	1001
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:43 AI_Player.update()	Search took232ms
2017-01-03 17:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()		110,	1010,	111,	101,	111,	1011,	11
2017-01-03 17:16:43 AI_Player.update()		101,	11,	1110,	1011,	1001,	1110,	1001
2017-01-03 17:16:43 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-03 17:16:43 AI_Player.update()		1010,	11,	101,	101,	1010,	11,	11
2017-01-03 17:16:43 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-03 17:16:43 AI_Player.update()		1110,	101,	11,	101,	1001,	1100,	1001
2017-01-03 17:16:43 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:43 AI_Player.update()	Player b has won!
2017-01-03 17:16:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:43 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:43 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:43 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:43 AI_Player.update()	Search took2ms
2017-01-03 17:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()		110,	110,	111,	1100,	111,	1011,	11
2017-01-03 17:16:43 AI_Player.update()		1011,	1100,	111,	1011,	1110,	111,	101
2017-01-03 17:16:43 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-03 17:16:43 AI_Player.update()		11,	1110,	1100,	101,	1001,	1100,	101
2017-01-03 17:16:43 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-03 17:16:43 AI_Player.update()		1101,	1010,	110,	11,	1001,	1010,	1101
2017-01-03 17:16:43 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:43 AI_Player.update()	Search took32ms
2017-01-03 17:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()		110,	110,	111,	1100,	111,	1011,	11
2017-01-03 17:16:43 AI_Player.update()		1100,	111,	1011,	1110,	111,	101,	1011
2017-01-03 17:16:43 AI_Player.update()		1110,	11,	1110,	1010,	111,	1010,	1011
2017-01-03 17:16:43 AI_Player.update()		11,	1110,	1100,	101,	1001,	1100,	101
2017-01-03 17:16:43 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	110,	1011
2017-01-03 17:16:43 AI_Player.update()		1101,	1010,	110,	11,	1001,	1010,	1101
2017-01-03 17:16:43 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:43 AI_Player.update()	Search took1ms
2017-01-03 17:16:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()		110,	111,	111,	1100,	111,	1011,	11
2017-01-03 17:16:43 AI_Player.update()		1100,	11,	1011,	1110,	111,	101,	1011
2017-01-03 17:16:43 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-03 17:16:43 AI_Player.update()		11,	1001,	1100,	101,	1001,	1100,	101
2017-01-03 17:16:43 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-03 17:16:43 AI_Player.update()		1101,	1100,	110,	11,	1001,	1010,	1101
2017-01-03 17:16:43 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:43 AI_Player.update()	update
2017-01-03 17:16:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:44 AI_Player.update()	Search took197ms
2017-01-03 17:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()		110,	111,	111,	1100,	111,	1011,	11
2017-01-03 17:16:44 AI_Player.update()		11,	1011,	1110,	111,	101,	1011,	1100
2017-01-03 17:16:44 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-03 17:16:44 AI_Player.update()		11,	1001,	1100,	101,	1001,	1100,	101
2017-01-03 17:16:44 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	110,	1011
2017-01-03 17:16:44 AI_Player.update()		1101,	1100,	110,	11,	1001,	1010,	1101
2017-01-03 17:16:44 AI_Player.update()		1100,	110,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:44 AI_Player.update()	Search took3ms
2017-01-03 17:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()		110,	1011,	111,	1100,	111,	1011,	11
2017-01-03 17:16:44 AI_Player.update()		11,	1110,	1110,	111,	101,	1011,	1100
2017-01-03 17:16:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-03 17:16:44 AI_Player.update()		11,	1010,	1100,	101,	1001,	1100,	101
2017-01-03 17:16:44 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-03 17:16:44 AI_Player.update()		1101,	110,	110,	11,	1001,	1010,	1101
2017-01-03 17:16:44 AI_Player.update()		1100,	111,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:44 AI_Player.update()	Search took228ms
2017-01-03 17:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()		110,	1011,	111,	1100,	111,	1011,	11
2017-01-03 17:16:44 AI_Player.update()		11,	1110,	1110,	111,	101,	1011,	1100
2017-01-03 17:16:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1010,	1011
2017-01-03 17:16:44 AI_Player.update()		1010,	1100,	101,	1001,	1100,	101,	11
2017-01-03 17:16:44 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	110,	1011
2017-01-03 17:16:44 AI_Player.update()		1101,	110,	110,	11,	1001,	1010,	1101
2017-01-03 17:16:44 AI_Player.update()		1100,	111,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:44 AI_Player.update()	Search took3ms
2017-01-03 17:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()		110,	1011,	111,	110,	111,	1011,	11
2017-01-03 17:16:44 AI_Player.update()		11,	1110,	1110,	1100,	101,	1011,	1100
2017-01-03 17:16:44 AI_Player.update()		1110,	1001,	1110,	111,	111,	1010,	1011
2017-01-03 17:16:44 AI_Player.update()		1010,	1100,	101,	1010,	1100,	101,	11
2017-01-03 17:16:44 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:44 AI_Player.update()		1101,	110,	110,	1010,	1001,	1010,	1101
2017-01-03 17:16:44 AI_Player.update()		1100,	111,	1101,	11,	1101,	11,	1001
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:44 AI_Player.update()	Search took148ms
2017-01-03 17:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()		110,	1011,	111,	110,	111,	1011,	11
2017-01-03 17:16:44 AI_Player.update()		11,	1110,	1110,	1100,	101,	1010,	1100
2017-01-03 17:16:44 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-03 17:16:44 AI_Player.update()		1010,	1100,	101,	1010,	1100,	110,	11
2017-01-03 17:16:44 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:44 AI_Player.update()		1101,	110,	110,	1010,	1001,	11,	1101
2017-01-03 17:16:44 AI_Player.update()		1100,	111,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:44 AI_Player.update()	Search took2ms
2017-01-03 17:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()		110,	1011,	111,	110,	111,	1011,	11
2017-01-03 17:16:44 AI_Player.update()		11,	1110,	1110,	1100,	101,	1010,	1100
2017-01-03 17:16:44 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-03 17:16:44 AI_Player.update()		1100,	101,	1010,	1100,	110,	11,	1010
2017-01-03 17:16:44 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:44 AI_Player.update()		1101,	110,	110,	1010,	1001,	11,	1101
2017-01-03 17:16:44 AI_Player.update()		1100,	111,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:44 AI_Player.update()	Search took273ms
2017-01-03 17:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()		110,	1110,	111,	110,	111,	1011,	11
2017-01-03 17:16:44 AI_Player.update()		11,	1001,	1110,	1100,	101,	1010,	1100
2017-01-03 17:16:44 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-03 17:16:44 AI_Player.update()		1100,	1100,	1010,	1100,	110,	11,	1010
2017-01-03 17:16:44 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:44 AI_Player.update()		1101,	111,	110,	1010,	1001,	11,	1101
2017-01-03 17:16:44 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:44 AI_Player.update()	Search took2ms
2017-01-03 17:16:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()		110,	1110,	111,	110,	111,	1011,	11
2017-01-03 17:16:44 AI_Player.update()		11,	1001,	1110,	1100,	101,	1010,	1100
2017-01-03 17:16:44 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-03 17:16:44 AI_Player.update()		1100,	1100,	1010,	1100,	110,	11,	1010
2017-01-03 17:16:44 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:44 AI_Player.update()		111,	110,	1010,	1001,	11,	1101,	1101
2017-01-03 17:16:44 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:44 AI_Player.update()	update
2017-01-03 17:16:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:45 AI_Player.update()	Search took620ms
2017-01-03 17:16:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:45 AI_Player.update()		110,	1110,	111,	110,	111,	1011,	11
2017-01-03 17:16:45 AI_Player.update()		1001,	1110,	1100,	101,	1010,	1100,	11
2017-01-03 17:16:45 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-03 17:16:45 AI_Player.update()		1100,	1100,	1010,	1100,	110,	11,	1010
2017-01-03 17:16:45 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:45 AI_Player.update()		111,	110,	1010,	1001,	11,	1101,	1101
2017-01-03 17:16:45 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:45 AI_Player.update()	update
2017-01-03 17:16:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:45 AI_Player.update()	update
2017-01-03 17:16:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:45 AI_Player.update()	Search took5ms
2017-01-03 17:16:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:45 AI_Player.update()		110,	1110,	111,	101,	111,	1011,	11
2017-01-03 17:16:45 AI_Player.update()		1001,	1110,	1100,	111,	1010,	1100,	11
2017-01-03 17:16:45 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-03 17:16:45 AI_Player.update()		1100,	1100,	1010,	1001,	110,	11,	1010
2017-01-03 17:16:45 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:45 AI_Player.update()		111,	110,	1010,	11,	11,	1101,	1101
2017-01-03 17:16:45 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1011,	1001
2017-01-03 17:16:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:45 AI_Player.update()	update
2017-01-03 17:16:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:45 AI_Player.update()	update
2017-01-03 17:16:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:46 AI_Player.update()	Search took597ms
2017-01-03 17:16:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()		110,	1110,	111,	101,	111,	1011,	11
2017-01-03 17:16:46 AI_Player.update()		1110,	1100,	111,	1010,	1100,	11,	1001
2017-01-03 17:16:46 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-03 17:16:46 AI_Player.update()		1100,	1100,	1010,	1001,	110,	11,	1010
2017-01-03 17:16:46 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:46 AI_Player.update()		111,	110,	1010,	11,	11,	1101,	1101
2017-01-03 17:16:46 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1011,	1001
2017-01-03 17:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()	update
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()	update
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:46 AI_Player.update()	Search took4ms
2017-01-03 17:16:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()		110,	1110,	111,	101,	111,	1011,	11
2017-01-03 17:16:46 AI_Player.update()		1001,	1110,	1100,	111,	1010,	1100,	11
2017-01-03 17:16:46 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-03 17:16:46 AI_Player.update()		1100,	1100,	1010,	1001,	110,	11,	1010
2017-01-03 17:16:46 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:46 AI_Player.update()		111,	110,	1010,	11,	11,	1101,	1101
2017-01-03 17:16:46 AI_Player.update()		1100,	1011,	1101,	110,	1101,	1011,	1001
2017-01-03 17:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()	update
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()	update
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:46 AI_Player.update()	Search took221ms
2017-01-03 17:16:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()		110,	1110,	111,	110,	111,	1011,	11
2017-01-03 17:16:46 AI_Player.update()		1001,	1110,	1100,	101,	1010,	1100,	11
2017-01-03 17:16:46 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-03 17:16:46 AI_Player.update()		1100,	1100,	1010,	1100,	110,	11,	1010
2017-01-03 17:16:46 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:46 AI_Player.update()		111,	110,	1010,	1001,	11,	1101,	1101
2017-01-03 17:16:46 AI_Player.update()		1100,	1011,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()	update
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()	update
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:46 AI_Player.update()	Search took4ms
2017-01-03 17:16:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()		110,	1110,	111,	110,	111,	1011,	11
2017-01-03 17:16:46 AI_Player.update()		1001,	101,	1100,	101,	1010,	1100,	11
2017-01-03 17:16:46 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-03 17:16:46 AI_Player.update()		1100,	110,	1010,	1100,	110,	11,	1010
2017-01-03 17:16:46 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:46 AI_Player.update()		111,	1011,	1010,	1001,	11,	1101,	1101
2017-01-03 17:16:46 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()	update
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:46 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:46 AI_Player.update()	update
2017-01-03 17:16:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:47 AI_Player.update()	Search took830ms
2017-01-03 17:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()		110,	101,	111,	110,	111,	1011,	11
2017-01-03 17:16:47 AI_Player.update()		1001,	1100,	1100,	101,	1010,	1100,	11
2017-01-03 17:16:47 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-03 17:16:47 AI_Player.update()		1100,	110,	1010,	1100,	110,	11,	1010
2017-01-03 17:16:47 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:47 AI_Player.update()		111,	1110,	1010,	1001,	11,	1101,	1101
2017-01-03 17:16:47 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:47 AI_Player.update()	Search took2ms
2017-01-03 17:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()		110,	1100,	111,	110,	111,	1011,	11
2017-01-03 17:16:47 AI_Player.update()		1001,	110,	1100,	101,	1010,	1100,	11
2017-01-03 17:16:47 AI_Player.update()		1110,	110,	1110,	111,	111,	101,	1011
2017-01-03 17:16:47 AI_Player.update()		1100,	1011,	1010,	1100,	110,	11,	1010
2017-01-03 17:16:47 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:47 AI_Player.update()		111,	1110,	1010,	1001,	11,	1101,	1101
2017-01-03 17:16:47 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:47 AI_Player.update()	Search took624ms
2017-01-03 17:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()		110,	1100,	111,	110,	111,	1100,	11
2017-01-03 17:16:47 AI_Player.update()		1001,	110,	1100,	101,	1010,	101,	11
2017-01-03 17:16:47 AI_Player.update()		1110,	110,	1110,	111,	111,	11,	1011
2017-01-03 17:16:47 AI_Player.update()		1100,	1011,	1010,	1100,	110,	1010,	1010
2017-01-03 17:16:47 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1101,	1011
2017-01-03 17:16:47 AI_Player.update()		111,	1110,	1010,	1001,	11,	1011,	1101
2017-01-03 17:16:47 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:47 AI_Player.update()	Player b has won!
2017-01-03 17:16:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:47 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:47 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:47 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:47 AI_Player.update()	Search took0ms
2017-01-03 17:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()		110,	11,	111,	110,	111,	11,	11
2017-01-03 17:16:47 AI_Player.update()		101,	101,	101,	101,	101,	101,	11
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-03 17:16:47 AI_Player.update()		1011,	101,	1001,	11,	111,	101,	101
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-03 17:16:47 AI_Player.update()		110,	110,	1011,	11,	1001,	1100,	11
2017-01-03 17:16:47 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:47 AI_Player.update()	Search took13ms
2017-01-03 17:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()		110,	11,	111,	110,	111,	101,	11
2017-01-03 17:16:47 AI_Player.update()		101,	101,	101,	101,	101,	101,	11
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-03 17:16:47 AI_Player.update()		1011,	101,	1001,	11,	111,	1100,	101
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-03 17:16:47 AI_Player.update()		110,	110,	1011,	11,	1001,	101,	11
2017-01-03 17:16:47 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:47 AI_Player.update()	Search took0ms
2017-01-03 17:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:16:47 AI_Player.update()		101,	101,	101,	1010,	101,	101,	11
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:16:47 AI_Player.update()		1011,	101,	1001,	1010,	111,	1100,	101
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-03 17:16:47 AI_Player.update()		110,	110,	1011,	101,	1001,	101,	11
2017-01-03 17:16:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:47 AI_Player.update()	Search took79ms
2017-01-03 17:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:16:47 AI_Player.update()		101,	101,	1010,	101,	101,	11,	101
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:16:47 AI_Player.update()		1011,	101,	1001,	1010,	111,	1100,	101
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-03 17:16:47 AI_Player.update()		110,	110,	1011,	101,	1001,	101,	11
2017-01-03 17:16:47 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:47 AI_Player.update()	Search took2ms
2017-01-03 17:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:16:47 AI_Player.update()		101,	101,	1010,	11,	101,	11,	101
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-03 17:16:47 AI_Player.update()		1011,	101,	1001,	11,	111,	1100,	101
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:47 AI_Player.update()		110,	110,	1011,	110,	1001,	101,	11
2017-01-03 17:16:47 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:47 AI_Player.update()	Search took104ms
2017-01-03 17:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:16:47 AI_Player.update()		101,	11,	1010,	11,	101,	11,	101
2017-01-03 17:16:47 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-03 17:16:47 AI_Player.update()		1011,	1100,	1001,	11,	111,	1100,	101
2017-01-03 17:16:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:47 AI_Player.update()		110,	1100,	1011,	110,	1001,	101,	11
2017-01-03 17:16:47 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:47 AI_Player.update()	Search took2ms
2017-01-03 17:16:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:16:47 AI_Player.update()		101,	101,	1010,	11,	101,	11,	101
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-03 17:16:47 AI_Player.update()		1011,	101,	1001,	11,	111,	1100,	101
2017-01-03 17:16:47 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:47 AI_Player.update()		110,	110,	1011,	110,	1001,	101,	11
2017-01-03 17:16:47 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:16:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:47 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:47 AI_Player.update()	update
2017-01-03 17:16:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took57ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	1100,	1010,	11,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1011,	1100,	1001,	11,	111,	1100,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	1010,	1011,	110,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took2ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	101,	1010,	11,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1011,	101,	1001,	11,	111,	1100,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	110,	1011,	110,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took71ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	101,	1010,	11,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1110,	1010,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		101,	1001,	11,	111,	1100,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	110,	1011,	110,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took1ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	101,	1010,	1010,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		101,	1001,	11,	101,	1100,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	110,	1011,	101,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took345ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	101,	1010,	1010,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1011,	101,	1001,	11,	101,	1100,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	110,	1011,	101,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took1ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	101,	1010,	111,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1011,	101,	1001,	110,	101,	1100,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	110,	1011,	101,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took93ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	1100,	1010,	111,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1011,	1100,	1001,	110,	101,	1100,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	1010,	1011,	101,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took3ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	101,	1010,	111,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1011,	101,	1001,	110,	101,	1100,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	110,	1011,	101,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took39ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	1100,	1010,	111,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1011,	1100,	1001,	110,	101,	1100,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	1010,	1011,	101,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took1ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	101,	1010,	111,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1011,	101,	1001,	110,	101,	1100,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	110,	1011,	101,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took86ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	101,	1010,	111,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		101,	1001,	110,	101,	1100,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	110,	1011,	101,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:48 AI_Player.update()	Search took1ms
2017-01-03 17:16:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-03 17:16:48 AI_Player.update()		101,	101,	1010,	11,	101,	11,	101
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		101,	1001,	110,	101,	1100,	101,	1011
2017-01-03 17:16:48 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:48 AI_Player.update()		110,	110,	1011,	11,	1001,	101,	11
2017-01-03 17:16:48 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-03 17:16:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:48 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:48 AI_Player.update()	update
2017-01-03 17:16:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:49 AI_Player.update()	Search took343ms
2017-01-03 17:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()		110,	11,	111,	111,	111,	101,	11
2017-01-03 17:16:49 AI_Player.update()		101,	101,	1010,	11,	101,	11,	101
2017-01-03 17:16:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 17:16:49 AI_Player.update()		1001,	110,	101,	1100,	101,	1011,	101
2017-01-03 17:16:49 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:16:49 AI_Player.update()		110,	110,	1011,	11,	1001,	101,	11
2017-01-03 17:16:49 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:49 AI_Player.update()	Search took2ms
2017-01-03 17:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-03 17:16:49 AI_Player.update()		101,	101,	1010,	101,	101,	11,	101
2017-01-03 17:16:49 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-03 17:16:49 AI_Player.update()		1001,	110,	101,	101,	101,	1011,	101
2017-01-03 17:16:49 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-03 17:16:49 AI_Player.update()		110,	110,	1011,	1010,	1001,	101,	11
2017-01-03 17:16:49 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:49 AI_Player.update()	Search took142ms
2017-01-03 17:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-03 17:16:49 AI_Player.update()		101,	101,	1010,	101,	101,	11,	101
2017-01-03 17:16:49 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-03 17:16:49 AI_Player.update()		110,	101,	101,	101,	1011,	101,	1001
2017-01-03 17:16:49 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-03 17:16:49 AI_Player.update()		110,	110,	1011,	1010,	1001,	101,	11
2017-01-03 17:16:49 AI_Player.update()		1100,	1010,	1101,	111,	1101,	11,	1001
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:49 AI_Player.update()	Search took6ms
2017-01-03 17:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:16:49 AI_Player.update()		101,	101,	1010,	1100,	101,	11,	101
2017-01-03 17:16:49 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 17:16:49 AI_Player.update()		110,	101,	101,	11,	1011,	101,	1001
2017-01-03 17:16:49 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-03 17:16:49 AI_Player.update()		110,	110,	1011,	111,	1001,	101,	11
2017-01-03 17:16:49 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:49 AI_Player.update()	Search took367ms
2017-01-03 17:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-03 17:16:49 AI_Player.update()		101,	1100,	1010,	1100,	101,	11,	101
2017-01-03 17:16:49 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-03 17:16:49 AI_Player.update()		110,	1100,	101,	11,	1011,	101,	1001
2017-01-03 17:16:49 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-03 17:16:49 AI_Player.update()		110,	1010,	1011,	111,	1001,	101,	11
2017-01-03 17:16:49 AI_Player.update()		1100,	11,	1101,	11,	1101,	11,	1001
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:49 AI_Player.update()	Player b has won!
2017-01-03 17:16:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:49 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:49 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:49 AI_Player.update()	Search took2ms
2017-01-03 17:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:16:49 AI_Player.update()		1010,	1001,	1101,	110,	1100,	101,	111
2017-01-03 17:16:49 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1010,	1011
2017-01-03 17:16:49 AI_Player.update()		1110,	110,	110,	1011,	101,	111,	101
2017-01-03 17:16:49 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-03 17:16:49 AI_Player.update()		11,	11,	1010,	1010,	1010,	110,	1010
2017-01-03 17:16:49 AI_Player.update()		1100,	11,	1101,	1110,	1101,	11,	1001
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:49 AI_Player.update()	Search took72ms
2017-01-03 17:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-03 17:16:49 AI_Player.update()		1010,	1001,	1101,	110,	1100,	1010,	111
2017-01-03 17:16:49 AI_Player.update()		1110,	1100,	1110,	1100,	111,	111,	1011
2017-01-03 17:16:49 AI_Player.update()		1110,	110,	110,	1011,	101,	101,	101
2017-01-03 17:16:49 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-03 17:16:49 AI_Player.update()		11,	11,	1010,	1010,	1010,	11,	1010
2017-01-03 17:16:49 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:49 AI_Player.update()	Search took3ms
2017-01-03 17:16:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:16:49 AI_Player.update()		1010,	1001,	1101,	110,	1100,	111,	111
2017-01-03 17:16:49 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-03 17:16:49 AI_Player.update()		1110,	110,	110,	1011,	101,	110,	101
2017-01-03 17:16:49 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-03 17:16:49 AI_Player.update()		11,	11,	1010,	1010,	1010,	1010,	1010
2017-01-03 17:16:49 AI_Player.update()		1100,	11,	1101,	1110,	1101,	101,	1001
2017-01-03 17:16:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:49 AI_Player.update()	update
2017-01-03 17:16:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:50 AI_Player.update()	Search took840ms
2017-01-03 17:16:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:50 AI_Player.update()		110,	101,	111,	1110,	111,	1010,	11
2017-01-03 17:16:50 AI_Player.update()		1010,	1001,	1101,	101,	1100,	111,	111
2017-01-03 17:16:50 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-03 17:16:50 AI_Player.update()		1110,	110,	110,	1100,	101,	110,	101
2017-01-03 17:16:50 AI_Player.update()		1110,	101,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:50 AI_Player.update()		11,	11,	1010,	11,	1010,	1010,	1010
2017-01-03 17:16:50 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-03 17:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:50 AI_Player.update()	update
2017-01-03 17:16:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:50 AI_Player.update()	update
2017-01-03 17:16:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:50 AI_Player.update()	Search took3ms
2017-01-03 17:16:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:50 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:16:50 AI_Player.update()		1010,	1001,	1101,	110,	1100,	111,	111
2017-01-03 17:16:50 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-03 17:16:50 AI_Player.update()		1110,	110,	110,	1011,	101,	110,	101
2017-01-03 17:16:50 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-03 17:16:50 AI_Player.update()		11,	11,	1010,	1010,	1010,	1010,	1010
2017-01-03 17:16:50 AI_Player.update()		1100,	11,	1101,	1110,	1101,	101,	1001
2017-01-03 17:16:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:50 AI_Player.update()	update
2017-01-03 17:16:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:50 AI_Player.update()	update
2017-01-03 17:16:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:51 AI_Player.update()	Search took910ms
2017-01-03 17:16:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:51 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-03 17:16:51 AI_Player.update()		1010,	1100,	1101,	110,	1100,	111,	111
2017-01-03 17:16:51 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-03 17:16:51 AI_Player.update()		1110,	101,	110,	1011,	101,	110,	101
2017-01-03 17:16:51 AI_Player.update()		1110,	11,	1101,	11,	1011,	11,	1011
2017-01-03 17:16:51 AI_Player.update()		11,	11,	1010,	1010,	1010,	1010,	1010
2017-01-03 17:16:51 AI_Player.update()		1100,	101,	1101,	1110,	1101,	101,	1001
2017-01-03 17:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:51 AI_Player.update()	update
2017-01-03 17:16:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:51 AI_Player.update()	update
2017-01-03 17:16:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:51 AI_Player.update()	Search took5ms
2017-01-03 17:16:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:51 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:16:51 AI_Player.update()		1010,	1001,	1101,	110,	1100,	111,	111
2017-01-03 17:16:51 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-03 17:16:51 AI_Player.update()		1110,	110,	110,	1011,	101,	110,	101
2017-01-03 17:16:51 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-03 17:16:51 AI_Player.update()		11,	11,	1010,	1010,	1010,	1010,	1010
2017-01-03 17:16:51 AI_Player.update()		1100,	11,	1101,	1110,	1101,	101,	1001
2017-01-03 17:16:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:51 AI_Player.update()	update
2017-01-03 17:16:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:16:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:51 AI_Player.update()	update
2017-01-03 17:16:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:52 AI_Player.update()	Search took661ms
2017-01-03 17:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-03 17:16:52 AI_Player.update()		1010,	1001,	1101,	1100,	1100,	111,	111
2017-01-03 17:16:52 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:52 AI_Player.update()		1110,	110,	110,	11,	101,	110,	101
2017-01-03 17:16:52 AI_Player.update()		1110,	101,	1101,	1010,	1011,	11,	1011
2017-01-03 17:16:52 AI_Player.update()		11,	11,	1010,	1110,	1010,	1010,	1010
2017-01-03 17:16:52 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:52 AI_Player.update()	Search took2ms
2017-01-03 17:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-03 17:16:52 AI_Player.update()		1010,	1100,	1101,	1100,	1100,	111,	111
2017-01-03 17:16:52 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:52 AI_Player.update()		1110,	101,	110,	11,	101,	110,	101
2017-01-03 17:16:52 AI_Player.update()		1110,	11,	1101,	1010,	1011,	11,	1011
2017-01-03 17:16:52 AI_Player.update()		11,	11,	1010,	1110,	1010,	1010,	1010
2017-01-03 17:16:52 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:16:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:52 AI_Player.update()	Search took377ms
2017-01-03 17:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()		110,	1001,	111,	110,	111,	111,	11
2017-01-03 17:16:52 AI_Player.update()		1010,	1100,	1101,	1100,	1100,	101,	111
2017-01-03 17:16:52 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-03 17:16:52 AI_Player.update()		1110,	101,	110,	11,	101,	11,	101
2017-01-03 17:16:52 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:16:52 AI_Player.update()		11,	11,	1010,	1110,	1010,	101,	1010
2017-01-03 17:16:52 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:16:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:52 AI_Player.update()	Search took3ms
2017-01-03 17:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-03 17:16:52 AI_Player.update()		1010,	1100,	1101,	110,	1100,	101,	111
2017-01-03 17:16:52 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-03 17:16:52 AI_Player.update()		1110,	101,	110,	1011,	101,	11,	101
2017-01-03 17:16:52 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:52 AI_Player.update()		11,	11,	1010,	1010,	1010,	101,	1010
2017-01-03 17:16:52 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:52 AI_Player.update()	Search took343ms
2017-01-03 17:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-03 17:16:52 AI_Player.update()		1010,	1001,	1101,	110,	1100,	101,	111
2017-01-03 17:16:52 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-03 17:16:52 AI_Player.update()		1110,	110,	110,	1011,	101,	11,	101
2017-01-03 17:16:52 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:52 AI_Player.update()		11,	11,	1010,	1010,	1010,	101,	1010
2017-01-03 17:16:52 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:16:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:52 AI_Player.update()	Search took1ms
2017-01-03 17:16:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()		110,	1001,	111,	101,	111,	111,	11
2017-01-03 17:16:52 AI_Player.update()		1010,	1100,	1101,	110,	1100,	101,	111
2017-01-03 17:16:52 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-03 17:16:52 AI_Player.update()		1110,	101,	110,	1011,	101,	11,	101
2017-01-03 17:16:52 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:52 AI_Player.update()		11,	11,	1010,	1010,	1010,	101,	1010
2017-01-03 17:16:52 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:16:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:52 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:16:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:52 AI_Player.update()	update
2017-01-03 17:16:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:53 AI_Player.update()	Search took184ms
2017-01-03 17:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-03 17:16:53 AI_Player.update()		1010,	1001,	1101,	110,	1100,	101,	111
2017-01-03 17:16:53 AI_Player.update()		1110,	1100,	1110,	1100,	111,	110,	1011
2017-01-03 17:16:53 AI_Player.update()		1110,	110,	110,	1011,	101,	11,	101
2017-01-03 17:16:53 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 17:16:53 AI_Player.update()		11,	11,	1010,	1010,	1010,	101,	1010
2017-01-03 17:16:53 AI_Player.update()		1100,	11,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:53 AI_Player.update()	Player b has won!
2017-01-03 17:16:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:53 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:53 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:53 AI_Player.update()	Search took1ms
2017-01-03 17:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-03 17:16:53 AI_Player.update()		1010,	1001,	1010,	1101,	1001,	1010,	1100
2017-01-03 17:16:53 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-03 17:16:53 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		1110,	110,	1101,	1011,	1011,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		101,	110,	101,	101,	101,	11,	101
2017-01-03 17:16:53 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:53 AI_Player.update()	Search took151ms
2017-01-03 17:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-03 17:16:53 AI_Player.update()		1100,	1010,	1001,	1010,	1101,	1001,	1010
2017-01-03 17:16:53 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-03 17:16:53 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		1110,	110,	1101,	1011,	1011,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		101,	110,	101,	101,	101,	11,	101
2017-01-03 17:16:53 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:53 AI_Player.update()	Search took2ms
2017-01-03 17:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-03 17:16:53 AI_Player.update()		1100,	1010,	1001,	1010,	1101,	1001,	1010
2017-01-03 17:16:53 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-03 17:16:53 AI_Player.update()		1011,	110,	1010,	101,	110,	101,	101
2017-01-03 17:16:53 AI_Player.update()		1110,	110,	1101,	1011,	1011,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		101,	110,	101,	101,	101,	11,	101
2017-01-03 17:16:53 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:53 AI_Player.update()	Search took226ms
2017-01-03 17:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-03 17:16:53 AI_Player.update()		1100,	1010,	1001,	1010,	1101,	1001,	1010
2017-01-03 17:16:53 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-03 17:16:53 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		1110,	110,	1101,	1011,	1011,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		101,	110,	101,	101,	101,	11,	101
2017-01-03 17:16:53 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:53 AI_Player.update()	Search took2ms
2017-01-03 17:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-03 17:16:53 AI_Player.update()		1100,	11,	1001,	1010,	1101,	1001,	1010
2017-01-03 17:16:53 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1010,	1011
2017-01-03 17:16:53 AI_Player.update()		110,	110,	101,	110,	101,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		1110,	110,	1101,	1011,	1011,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		101,	1001,	101,	101,	101,	11,	101
2017-01-03 17:16:53 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:53 AI_Player.update()	Search took390ms
2017-01-03 17:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()		110,	1010,	111,	1110,	111,	1001,	11
2017-01-03 17:16:53 AI_Player.update()		1100,	11,	1001,	1010,	1101,	1010,	1010
2017-01-03 17:16:53 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		110,	110,	101,	110,	101,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		1110,	110,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:53 AI_Player.update()		101,	1001,	101,	101,	101,	1010,	101
2017-01-03 17:16:53 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:53 AI_Player.update()	Search took1ms
2017-01-03 17:16:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()		110,	1010,	111,	1110,	111,	1001,	11
2017-01-03 17:16:53 AI_Player.update()		1100,	1010,	1001,	1010,	1101,	1010,	1010
2017-01-03 17:16:53 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:53 AI_Player.update()		1110,	110,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:53 AI_Player.update()		101,	110,	101,	101,	101,	1010,	101
2017-01-03 17:16:53 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:53 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:53 AI_Player.update()	update
2017-01-03 17:16:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took139ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		1100,	11,	1001,	1010,	1101,	1010,	1010
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	110,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	110,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	1001,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took2ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	11,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		1100,	1010,	1001,	1010,	1101,	1010,	1010
2017-01-03 17:16:54 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	110,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took163ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		1100,	110,	1001,	1010,	1101,	1010,	1010
2017-01-03 17:16:54 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	11,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took2ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	110,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		1100,	110,	1001,	1010,	1101,	1010,	1010
2017-01-03 17:16:54 AI_Player.update()		1110,	1001,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	11,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took41ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		1100,	110,	1001,	1010,	1101,	1010,	1010
2017-01-03 17:16:54 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	11,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took2ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	110,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		1100,	110,	1001,	1010,	1101,	1010,	1010
2017-01-03 17:16:54 AI_Player.update()		1110,	1001,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	11,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took85ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	110,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	1010,	1101,	1010,	1010,	1100
2017-01-03 17:16:54 AI_Player.update()		1110,	1001,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	11,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took2ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	1010,	1101,	1010,	1010,	1100
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	11,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took78ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	110,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	1010,	1101,	1010,	1010,	1100
2017-01-03 17:16:54 AI_Player.update()		1110,	1001,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	11,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took2ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	1010,	1101,	1010,	1010,	1100
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	11,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took52ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	110,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	1010,	1101,	1010,	1010,	1100
2017-01-03 17:16:54 AI_Player.update()		1110,	1001,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	11,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took2ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	1010,	1101,	1010,	1010,	1100
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	11,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took136ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	1001,	111,	1110,	111,	1001,	11
2017-01-03 17:16:54 AI_Player.update()		1100,	110,	1001,	1010,	1101,	1010,	1010
2017-01-03 17:16:54 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:16:54 AI_Player.update()		1110,	11,	1101,	1011,	1011,	11,	1011
2017-01-03 17:16:54 AI_Player.update()		101,	1010,	101,	101,	101,	1010,	101
2017-01-03 17:16:54 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:54 AI_Player.update()	Player b has won!
2017-01-03 17:16:54 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:54 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:54 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took1ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	1110,	111,	110,	111,	101,	11
2017-01-03 17:16:54 AI_Player.update()		1010,	11,	1101,	1001,	1010,	110,	11
2017-01-03 17:16:54 AI_Player.update()		1110,	1001,	1110,	101,	111,	1101,	1011
2017-01-03 17:16:54 AI_Player.update()		1001,	101,	1011,	11,	101,	101,	1001
2017-01-03 17:16:54 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	110,	1001,	1001,	101,	110,	1010
2017-01-03 17:16:54 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took185ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	1110,	111,	1001,	111,	101,	11
2017-01-03 17:16:54 AI_Player.update()		1010,	11,	1101,	101,	1010,	110,	11
2017-01-03 17:16:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-03 17:16:54 AI_Player.update()		1001,	101,	1011,	1100,	101,	101,	1001
2017-01-03 17:16:54 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	110,	1001,	1001,	101,	110,	1010
2017-01-03 17:16:54 AI_Player.update()		1100,	1100,	1101,	110,	1101,	111,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:54 AI_Player.update()	Search took1ms
2017-01-03 17:16:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()		110,	1100,	111,	1001,	111,	101,	11
2017-01-03 17:16:54 AI_Player.update()		1010,	1110,	1101,	101,	1010,	110,	11
2017-01-03 17:16:54 AI_Player.update()		1110,	11,	1110,	11,	111,	1101,	1011
2017-01-03 17:16:54 AI_Player.update()		1001,	1001,	1011,	1100,	101,	101,	1001
2017-01-03 17:16:54 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:16:54 AI_Player.update()		110,	11,	1001,	1001,	101,	110,	1010
2017-01-03 17:16:54 AI_Player.update()		1100,	110,	1101,	110,	1101,	111,	1001
2017-01-03 17:16:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:54 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:54 AI_Player.update()	update
2017-01-03 17:16:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took210ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	1100,	111,	1001,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		1010,	1110,	1101,	101,	1010,	1101,	11
2017-01-03 17:16:55 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1001,	1001,	1011,	1100,	101,	1001,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	11,	1001,	1001,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took3ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	1100,	111,	1001,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		1010,	1110,	1101,	101,	1010,	1101,	11
2017-01-03 17:16:55 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1001,	1001,	1001,	1011,	1100,	101,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	11,	1001,	1001,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took109ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	1110,	111,	1001,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		1010,	11,	1101,	101,	1010,	1101,	11
2017-01-03 17:16:55 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1001,	101,	1001,	1011,	1100,	101,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	110,	1001,	1001,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took1ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	11,	111,	1001,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		1010,	1001,	1101,	101,	1010,	1101,	11
2017-01-03 17:16:55 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1001,	11,	1001,	1011,	1100,	101,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	1100,	1001,	1001,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	1110,	1101,	110,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took114ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		1010,	1001,	1101,	11,	1010,	1101,	11
2017-01-03 17:16:55 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1001,	11,	1001,	1001,	1100,	101,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	1100,	1001,	110,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took2ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		1010,	101,	1101,	11,	1010,	1101,	11
2017-01-03 17:16:55 AI_Player.update()		1110,	11,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1001,	110,	1001,	1001,	1100,	101,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	1110,	1001,	110,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took90ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	101,	111,	101,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		1010,	11,	1101,	11,	1010,	1101,	11
2017-01-03 17:16:55 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1001,	1100,	1001,	1001,	1100,	101,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	11,	1001,	110,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took1ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		1010,	110,	1101,	11,	1010,	1101,	11
2017-01-03 17:16:55 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1001,	1110,	1001,	1001,	1100,	101,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	1001,	1001,	110,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took197ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		1010,	110,	1101,	11,	1010,	1101,	11
2017-01-03 17:16:55 AI_Player.update()		1110,	1100,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1110,	1001,	1001,	1100,	101,	1001,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	1001,	1001,	110,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took2ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		1010,	1100,	1101,	11,	1010,	1101,	11
2017-01-03 17:16:55 AI_Player.update()		1110,	1001,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1110,	11,	1001,	1100,	101,	1001,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	101,	1001,	110,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took189ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		11,	1010,	1100,	1101,	11,	1010,	1101
2017-01-03 17:16:55 AI_Player.update()		1110,	1001,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1110,	11,	1001,	1100,	101,	1001,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	101,	1001,	110,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:55 AI_Player.update()	Search took2ms
2017-01-03 17:16:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-03 17:16:55 AI_Player.update()		11,	1001,	1100,	1101,	11,	1010,	1101
2017-01-03 17:16:55 AI_Player.update()		1110,	11,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:55 AI_Player.update()		1110,	1001,	1001,	1100,	101,	1001,	1001
2017-01-03 17:16:55 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:55 AI_Player.update()		110,	11,	1001,	110,	101,	111,	1010
2017-01-03 17:16:55 AI_Player.update()		1100,	110,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:55 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:55 AI_Player.update()	update
2017-01-03 17:16:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:56 AI_Player.update()	Search took181ms
2017-01-03 17:16:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()		110,	1010,	111,	101,	111,	110,	11
2017-01-03 17:16:56 AI_Player.update()		1001,	1100,	1101,	11,	1010,	1101,	11
2017-01-03 17:16:56 AI_Player.update()		1110,	11,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:56 AI_Player.update()		1110,	1001,	1001,	1100,	101,	1001,	1001
2017-01-03 17:16:56 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:56 AI_Player.update()		110,	11,	1001,	110,	101,	111,	1010
2017-01-03 17:16:56 AI_Player.update()		1100,	110,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()	update
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()	update
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:56 AI_Player.update()	Search took2ms
2017-01-03 17:16:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-03 17:16:56 AI_Player.update()		1001,	11,	1101,	11,	1010,	1101,	11
2017-01-03 17:16:56 AI_Player.update()		1110,	1001,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:56 AI_Player.update()		1110,	101,	1001,	1100,	101,	1001,	1001
2017-01-03 17:16:56 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:56 AI_Player.update()		110,	110,	1001,	110,	101,	111,	1010
2017-01-03 17:16:56 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()	update
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()	update
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:56 AI_Player.update()	Search took514ms
2017-01-03 17:16:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-03 17:16:56 AI_Player.update()		1001,	1001,	1101,	11,	1010,	1101,	11
2017-01-03 17:16:56 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:56 AI_Player.update()		1110,	11,	1001,	1100,	101,	1001,	1001
2017-01-03 17:16:56 AI_Player.update()		1110,	110,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:56 AI_Player.update()		110,	1010,	1001,	110,	101,	111,	1010
2017-01-03 17:16:56 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()	update
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()	update
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:56 AI_Player.update()	Search took3ms
2017-01-03 17:16:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()		110,	1001,	111,	101,	111,	110,	11
2017-01-03 17:16:56 AI_Player.update()		1001,	101,	1101,	11,	1010,	1101,	11
2017-01-03 17:16:56 AI_Player.update()		1110,	11,	1110,	1011,	111,	101,	1011
2017-01-03 17:16:56 AI_Player.update()		1110,	110,	1001,	1100,	101,	1001,	1001
2017-01-03 17:16:56 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	110,	1011
2017-01-03 17:16:56 AI_Player.update()		110,	1100,	1001,	110,	101,	111,	1010
2017-01-03 17:16:56 AI_Player.update()		1100,	11,	1101,	1001,	1101,	101,	1001
2017-01-03 17:16:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()	update
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:56 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:56 AI_Player.update()	update
2017-01-03 17:16:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:57 AI_Player.update()	Search took402ms
2017-01-03 17:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-03 17:16:57 AI_Player.update()		1001,	101,	1101,	11,	1010,	110,	11
2017-01-03 17:16:57 AI_Player.update()		1110,	11,	1110,	1011,	111,	1101,	1011
2017-01-03 17:16:57 AI_Player.update()		1110,	110,	1001,	1100,	101,	101,	1001
2017-01-03 17:16:57 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:16:57 AI_Player.update()		110,	1100,	1001,	110,	101,	110,	1010
2017-01-03 17:16:57 AI_Player.update()		1100,	11,	1101,	1001,	1101,	111,	1001
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:16:57 AI_Player.update()	Player b has won!
2017-01-03 17:16:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:57 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:16:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:16:57 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:57 AI_Player.update()	Search took4ms
2017-01-03 17:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-03 17:16:57 AI_Player.update()		1100,	101,	1010,	1101,	1011,	110,	1110
2017-01-03 17:16:57 AI_Player.update()		1110,	1011,	1110,	1010,	111,	11,	1011
2017-01-03 17:16:57 AI_Player.update()		101,	110,	1010,	1110,	1011,	11,	1100
2017-01-03 17:16:57 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:57 AI_Player.update()		1001,	1010,	1010,	1010,	1100,	1010,	1010
2017-01-03 17:16:57 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:57 AI_Player.update()	Search took47ms
2017-01-03 17:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-03 17:16:57 AI_Player.update()		1100,	101,	1010,	11,	1011,	110,	1110
2017-01-03 17:16:57 AI_Player.update()		1110,	1011,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:57 AI_Player.update()		101,	110,	1010,	1010,	1011,	11,	1100
2017-01-03 17:16:57 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:57 AI_Player.update()		1001,	1010,	1010,	1001,	1100,	1010,	1010
2017-01-03 17:16:57 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:57 AI_Player.update()	Search took4ms
2017-01-03 17:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()		110,	1101,	111,	11,	111,	110,	11
2017-01-03 17:16:57 AI_Player.update()		1100,	101,	1010,	11,	1011,	11,	1110
2017-01-03 17:16:57 AI_Player.update()		1110,	1011,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:57 AI_Player.update()		101,	110,	1010,	1010,	1011,	1010,	1100
2017-01-03 17:16:57 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:57 AI_Player.update()		1001,	1010,	1010,	1001,	1100,	11,	1010
2017-01-03 17:16:57 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:57 AI_Player.update()	Search took182ms
2017-01-03 17:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()		110,	1101,	111,	11,	111,	110,	11
2017-01-03 17:16:57 AI_Player.update()		1110,	1100,	101,	1010,	11,	1011,	11
2017-01-03 17:16:57 AI_Player.update()		1110,	1011,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:57 AI_Player.update()		101,	110,	1010,	1010,	1011,	1010,	1100
2017-01-03 17:16:57 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:57 AI_Player.update()		1001,	1010,	1010,	1001,	1100,	11,	1010
2017-01-03 17:16:57 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:57 AI_Player.update()	Search took5ms
2017-01-03 17:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-03 17:16:57 AI_Player.update()		1110,	1011,	101,	1010,	11,	1011,	11
2017-01-03 17:16:57 AI_Player.update()		1110,	110,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:57 AI_Player.update()		101,	101,	1010,	1010,	1011,	1010,	1100
2017-01-03 17:16:57 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:57 AI_Player.update()		1001,	1001,	1010,	1001,	1100,	11,	1010
2017-01-03 17:16:57 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:57 AI_Player.update()	Search took124ms
2017-01-03 17:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()		110,	1101,	111,	11,	111,	110,	11
2017-01-03 17:16:57 AI_Player.update()		1110,	1100,	101,	1010,	11,	1011,	11
2017-01-03 17:16:57 AI_Player.update()		1110,	1011,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:57 AI_Player.update()		101,	110,	1010,	1010,	1011,	1010,	1100
2017-01-03 17:16:57 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:57 AI_Player.update()		1001,	1010,	1010,	1001,	1100,	11,	1010
2017-01-03 17:16:57 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:57 AI_Player.update()	Search took4ms
2017-01-03 17:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-03 17:16:57 AI_Player.update()		1110,	1011,	101,	1010,	11,	1011,	11
2017-01-03 17:16:57 AI_Player.update()		1110,	110,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:57 AI_Player.update()		101,	101,	1010,	1010,	1011,	1010,	1100
2017-01-03 17:16:57 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:57 AI_Player.update()		1001,	1001,	1010,	1001,	1100,	11,	1010
2017-01-03 17:16:57 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:57 AI_Player.update()	Search took227ms
2017-01-03 17:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-03 17:16:57 AI_Player.update()		11,	1110,	1011,	101,	1010,	11,	1011
2017-01-03 17:16:57 AI_Player.update()		1110,	110,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:57 AI_Player.update()		101,	101,	1010,	1010,	1011,	1010,	1100
2017-01-03 17:16:57 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:57 AI_Player.update()		1001,	1001,	1010,	1001,	1100,	11,	1010
2017-01-03 17:16:57 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:57 AI_Player.update()	Search took4ms
2017-01-03 17:16:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-03 17:16:57 AI_Player.update()		11,	110,	1011,	101,	1010,	11,	1011
2017-01-03 17:16:57 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:57 AI_Player.update()		101,	1010,	1010,	1010,	1011,	1010,	1100
2017-01-03 17:16:57 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:57 AI_Player.update()		1001,	1101,	1010,	1001,	1100,	11,	1010
2017-01-03 17:16:57 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:57 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:57 AI_Player.update()	update
2017-01-03 17:16:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:58 AI_Player.update()	Search took688ms
2017-01-03 17:16:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-03 17:16:58 AI_Player.update()		11,	110,	1011,	101,	1010,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1100,	101,	1010,	1010,	1010,	1011,	1010
2017-01-03 17:16:58 AI_Player.update()		1110,	1001,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:58 AI_Player.update()		1001,	1101,	1010,	1001,	1100,	11,	1010
2017-01-03 17:16:58 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:58 AI_Player.update()	Search took4ms
2017-01-03 17:16:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-03 17:16:58 AI_Player.update()		11,	101,	1011,	101,	1010,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	1011,	1010
2017-01-03 17:16:58 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:58 AI_Player.update()		1001,	1100,	1010,	1001,	1100,	11,	1010
2017-01-03 17:16:58 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:58 AI_Player.update()	Search took142ms
2017-01-03 17:16:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-03 17:16:58 AI_Player.update()		11,	101,	1011,	101,	1010,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1110,	101,	1110,	1101,	111,	1011,	1011
2017-01-03 17:16:58 AI_Player.update()		1100,	1001,	1010,	1010,	1010,	1010,	1010
2017-01-03 17:16:58 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1001,	1100,	1010,	1001,	1100,	1010,	1010
2017-01-03 17:16:58 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	110,	1001
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:58 AI_Player.update()	Search took7ms
2017-01-03 17:16:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-03 17:16:58 AI_Player.update()		11,	101,	1011,	101,	1010,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1110,	101,	1110,	1101,	111,	1011,	1011
2017-01-03 17:16:58 AI_Player.update()		1010,	1100,	1001,	1010,	1010,	1010,	1010
2017-01-03 17:16:58 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1001,	1100,	1010,	1001,	1100,	1010,	1010
2017-01-03 17:16:58 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	110,	1001
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:58 AI_Player.update()	Search took221ms
2017-01-03 17:16:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-03 17:16:58 AI_Player.update()		101,	1011,	101,	1010,	11,	1011,	11
2017-01-03 17:16:58 AI_Player.update()		1110,	101,	1110,	1101,	111,	1011,	1011
2017-01-03 17:16:58 AI_Player.update()		1010,	1100,	1001,	1010,	1010,	1010,	1010
2017-01-03 17:16:58 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1001,	1100,	1010,	1001,	1100,	1010,	1010
2017-01-03 17:16:58 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	110,	1001
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:58 AI_Player.update()	Search took2ms
2017-01-03 17:16:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()		110,	110,	111,	11,	111,	11,	11
2017-01-03 17:16:58 AI_Player.update()		11,	101,	1011,	101,	1010,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1110,	101,	1110,	1101,	111,	1011,	1011
2017-01-03 17:16:58 AI_Player.update()		1010,	1100,	1001,	1010,	1010,	1010,	1010
2017-01-03 17:16:58 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1001,	1100,	1010,	1001,	1100,	1010,	1010
2017-01-03 17:16:58 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	110,	1001
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:58 AI_Player.update()	Search took194ms
2017-01-03 17:16:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-03 17:16:58 AI_Player.update()		11,	101,	1011,	1101,	1010,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-03 17:16:58 AI_Player.update()		1010,	1100,	1001,	1110,	1010,	1010,	1010
2017-01-03 17:16:58 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1001,	1100,	1010,	1010,	1100,	1010,	1010
2017-01-03 17:16:58 AI_Player.update()		1100,	1110,	1101,	11,	1101,	110,	1001
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:16:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:58 AI_Player.update()	Search took3ms
2017-01-03 17:16:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()		110,	110,	111,	101,	111,	110,	11
2017-01-03 17:16:58 AI_Player.update()		11,	101,	1011,	1101,	1010,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1110,	101,	1110,	1010,	111,	11,	1011
2017-01-03 17:16:58 AI_Player.update()		1010,	1100,	1001,	1110,	1010,	1011,	1010
2017-01-03 17:16:58 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:16:58 AI_Player.update()		1001,	1100,	1010,	1010,	1100,	11,	1010
2017-01-03 17:16:58 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1010,	1001
2017-01-03 17:16:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:58 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:16:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:58 AI_Player.update()	update
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:59 AI_Player.update()	update
2017-01-03 17:16:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:16:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:16:59 AI_Player.update()	Search took253ms
2017-01-03 17:16:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:59 AI_Player.update()		110,	110,	111,	11,	111,	110,	11
2017-01-03 17:16:59 AI_Player.update()		11,	101,	1011,	101,	1010,	11,	1011
2017-01-03 17:16:59 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:59 AI_Player.update()		1010,	1100,	1001,	1010,	1010,	1011,	1010
2017-01-03 17:16:59 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:59 AI_Player.update()		1001,	1100,	1010,	1001,	1100,	11,	1010
2017-01-03 17:16:59 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:59 AI_Player.update()	update
2017-01-03 17:16:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:16:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:16:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:16:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:16:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:59 AI_Player.update()	update
2017-01-03 17:16:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:16:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:16:59 AI_Player.update()	Search took2ms
2017-01-03 17:16:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:59 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-03 17:16:59 AI_Player.update()		11,	101,	1011,	101,	1010,	11,	1011
2017-01-03 17:16:59 AI_Player.update()		1110,	1100,	1110,	1101,	111,	11,	1011
2017-01-03 17:16:59 AI_Player.update()		1010,	1101,	1001,	1010,	1010,	1011,	1010
2017-01-03 17:16:59 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:16:59 AI_Player.update()		1001,	1110,	1010,	1001,	1100,	11,	1010
2017-01-03 17:16:59 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:16:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:16:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:59 AI_Player.update()	update
2017-01-03 17:16:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:16:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:16:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:16:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:16:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:16:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:16:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:16:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:16:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:16:59 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:16:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:16:59 AI_Player.update()	update
2017-01-03 17:16:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:00 AI_Player.update()	Search took819ms
2017-01-03 17:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-03 17:17:00 AI_Player.update()		11,	1100,	1011,	101,	1010,	11,	1011
2017-01-03 17:17:00 AI_Player.update()		1110,	1101,	1110,	1101,	111,	11,	1011
2017-01-03 17:17:00 AI_Player.update()		1010,	1100,	1001,	1010,	1010,	1011,	1010
2017-01-03 17:17:00 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:17:00 AI_Player.update()		1001,	110,	1010,	1001,	1100,	11,	1010
2017-01-03 17:17:00 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:00 AI_Player.update()	Search took2ms
2017-01-03 17:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-03 17:17:00 AI_Player.update()		11,	1101,	1011,	101,	1010,	11,	1011
2017-01-03 17:17:00 AI_Player.update()		1110,	1100,	1110,	1101,	111,	11,	1011
2017-01-03 17:17:00 AI_Player.update()		1010,	1110,	1001,	1010,	1010,	1011,	1010
2017-01-03 17:17:00 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:17:00 AI_Player.update()		1001,	101,	1010,	1001,	1100,	11,	1010
2017-01-03 17:17:00 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:00 AI_Player.update()	Search took680ms
2017-01-03 17:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()		110,	1100,	111,	11,	111,	110,	11
2017-01-03 17:17:00 AI_Player.update()		11,	1101,	1011,	101,	1010,	11,	1011
2017-01-03 17:17:00 AI_Player.update()		1110,	1100,	1110,	1101,	111,	11,	1011
2017-01-03 17:17:00 AI_Player.update()		1010,	1010,	1110,	1001,	1010,	1010,	1011
2017-01-03 17:17:00 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1010,	1011
2017-01-03 17:17:00 AI_Player.update()		1001,	101,	1010,	1001,	1100,	11,	1010
2017-01-03 17:17:00 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:17:00 AI_Player.update()	Player b has won!
2017-01-03 17:17:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:00 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:00 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:00 AI_Player.update()	Search took1ms
2017-01-03 17:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()		110,	1011,	111,	1010,	111,	1010,	11
2017-01-03 17:17:00 AI_Player.update()		110,	1100,	101,	101,	111,	1100,	1010
2017-01-03 17:17:00 AI_Player.update()		1110,	1110,	1110,	101,	111,	11,	1011
2017-01-03 17:17:00 AI_Player.update()		110,	1001,	11,	110,	1100,	1100,	1100
2017-01-03 17:17:00 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	101,	1011
2017-01-03 17:17:00 AI_Player.update()		101,	1100,	11,	101,	11,	11,	1100
2017-01-03 17:17:00 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:00 AI_Player.update()	Search took68ms
2017-01-03 17:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-03 17:17:00 AI_Player.update()		110,	1110,	101,	101,	111,	1100,	1010
2017-01-03 17:17:00 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-03 17:17:00 AI_Player.update()		110,	1001,	11,	110,	1100,	1100,	1100
2017-01-03 17:17:00 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	101,	1011
2017-01-03 17:17:00 AI_Player.update()		101,	1010,	11,	101,	11,	11,	1100
2017-01-03 17:17:00 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	101,	1001
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:00 AI_Player.update()	Search took1ms
2017-01-03 17:17:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-03 17:17:00 AI_Player.update()		1010,	110,	1110,	101,	101,	111,	1100
2017-01-03 17:17:00 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-03 17:17:00 AI_Player.update()		110,	1001,	11,	110,	1100,	1100,	1100
2017-01-03 17:17:00 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	101,	1011
2017-01-03 17:17:00 AI_Player.update()		101,	1010,	11,	101,	11,	11,	1100
2017-01-03 17:17:00 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	101,	1001
2017-01-03 17:17:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:00 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:00 AI_Player.update()	update
2017-01-03 17:17:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took144ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	110,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		110,	1001,	11,	110,	1100,	11,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		101,	1010,	11,	101,	11,	101,	1100
2017-01-03 17:17:01 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took3ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	110,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	1001,	1110,	101,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1001,	11,	110,	1100,	11,	1100,	110
2017-01-03 17:17:01 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		101,	1010,	11,	101,	11,	101,	1100
2017-01-03 17:17:01 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took165ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	1001,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	11,	1110,	101,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1001,	1100,	110,	1100,	11,	1100,	110
2017-01-03 17:17:01 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		101,	1011,	11,	101,	11,	101,	1100
2017-01-03 17:17:01 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took2ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	11,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1001,	1010,	110,	1100,	11,	1100,	110
2017-01-03 17:17:01 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		101,	1100,	11,	101,	11,	101,	1100
2017-01-03 17:17:01 AI_Player.update()		1100,	110,	1101,	1011,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took187ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	11,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	1100,	1110,	101,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1001,	1010,	110,	1100,	11,	1100,	110
2017-01-03 17:17:01 AI_Player.update()		1110,	1011,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		1100,	101,	1100,	11,	101,	11,	101
2017-01-03 17:17:01 AI_Player.update()		1100,	110,	1101,	1011,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took2ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	11,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	1100,	1110,	1100,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1001,	1010,	110,	1101,	11,	1100,	110
2017-01-03 17:17:01 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		1100,	101,	1100,	1011,	101,	11,	101
2017-01-03 17:17:01 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took149ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	1001,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	11,	1110,	1100,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1001,	1100,	110,	1101,	11,	1100,	110
2017-01-03 17:17:01 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		1100,	1011,	1100,	1011,	101,	11,	101
2017-01-03 17:17:01 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took3ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	11,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	1100,	1110,	1100,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1001,	1010,	110,	1101,	11,	1100,	110
2017-01-03 17:17:01 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		1100,	101,	1100,	1011,	101,	11,	101
2017-01-03 17:17:01 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took41ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	11,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	1100,	1110,	1100,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1001,	1010,	110,	1101,	11,	1100,	110
2017-01-03 17:17:01 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		101,	1100,	1011,	101,	11,	101,	1100
2017-01-03 17:17:01 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took1ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	1100,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	1010,	1110,	1100,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1001,	1011,	110,	1101,	11,	1100,	110
2017-01-03 17:17:01 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		101,	110,	1011,	101,	11,	101,	1100
2017-01-03 17:17:01 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took33ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	1100,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	1010,	1110,	1100,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1011,	110,	1101,	11,	1100,	110,	1001
2017-01-03 17:17:01 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		101,	110,	1011,	101,	11,	101,	1100
2017-01-03 17:17:01 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took1ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	1010,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	110,	1110,	1100,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1011,	1100,	1101,	11,	1100,	110,	1001
2017-01-03 17:17:01 AI_Player.update()		1110,	110,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		101,	1001,	1011,	101,	11,	101,	1100
2017-01-03 17:17:01 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took142ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	110,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	1100,	1110,	1100,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1011,	110,	1101,	11,	1100,	110,	1001
2017-01-03 17:17:01 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		101,	11,	1011,	101,	11,	101,	1100
2017-01-03 17:17:01 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:17:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:01 AI_Player.update()	Search took1ms
2017-01-03 17:17:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-03 17:17:01 AI_Player.update()		1010,	1100,	1110,	101,	101,	1010,	1100
2017-01-03 17:17:01 AI_Player.update()		1110,	110,	1110,	1100,	111,	111,	1011
2017-01-03 17:17:01 AI_Player.update()		1011,	1001,	1101,	11,	1100,	110,	1001
2017-01-03 17:17:01 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:01 AI_Player.update()		101,	1100,	1011,	101,	11,	101,	1100
2017-01-03 17:17:01 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-03 17:17:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:01 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:17:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:01 AI_Player.update()	update
2017-01-03 17:17:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took316ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-03 17:17:02 AI_Player.update()		1010,	1100,	1110,	101,	101,	101,	1100
2017-01-03 17:17:02 AI_Player.update()		1110,	110,	1110,	1100,	111,	1010,	1011
2017-01-03 17:17:02 AI_Player.update()		1011,	1001,	1101,	11,	1100,	111,	1001
2017-01-03 17:17:02 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-03 17:17:02 AI_Player.update()		101,	1100,	1011,	101,	11,	1100,	1100
2017-01-03 17:17:02 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took2ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-03 17:17:02 AI_Player.update()		1010,	110,	1110,	101,	101,	101,	1100
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-03 17:17:02 AI_Player.update()		1011,	11,	1101,	11,	1100,	111,	1001
2017-01-03 17:17:02 AI_Player.update()		1110,	1100,	1101,	11,	1011,	110,	1011
2017-01-03 17:17:02 AI_Player.update()		101,	1010,	1011,	101,	11,	1100,	1100
2017-01-03 17:17:02 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took232ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:17:02 AI_Player.update()		1010,	110,	1110,	101,	101,	11,	1100
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-03 17:17:02 AI_Player.update()		1011,	11,	1101,	11,	1100,	1010,	1001
2017-01-03 17:17:02 AI_Player.update()		1110,	1100,	1101,	11,	1011,	111,	1011
2017-01-03 17:17:02 AI_Player.update()		101,	1010,	1011,	101,	11,	110,	1100
2017-01-03 17:17:02 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:17:02 AI_Player.update()	Player b has won!
2017-01-03 17:17:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:02 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:02 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took1ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	1100,	111,	1100,	111,	1110,	11
2017-01-03 17:17:02 AI_Player.update()		1100,	101,	1001,	1010,	110,	1001,	111
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:17:02 AI_Player.update()		101,	111,	101,	11,	1001,	11,	11
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-03 17:17:02 AI_Player.update()		1100,	1001,	11,	101,	11,	101,	1101
2017-01-03 17:17:02 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took60ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	1100,	111,	1100,	111,	1110,	11
2017-01-03 17:17:02 AI_Player.update()		1100,	101,	1001,	1100,	110,	1001,	111
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-03 17:17:02 AI_Player.update()		101,	111,	101,	101,	1001,	11,	11
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:02 AI_Player.update()		1100,	1001,	11,	1001,	11,	101,	1101
2017-01-03 17:17:02 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took1ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-03 17:17:02 AI_Player.update()		1100,	1001,	1001,	1100,	110,	1001,	111
2017-01-03 17:17:02 AI_Player.update()		1110,	111,	1110,	1010,	111,	101,	1011
2017-01-03 17:17:02 AI_Player.update()		101,	1001,	101,	101,	1001,	11,	11
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:02 AI_Player.update()		1100,	110,	11,	1001,	11,	101,	1101
2017-01-03 17:17:02 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took76ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:02 AI_Player.update()		1100,	1001,	1001,	1100,	110,	1110,	111
2017-01-03 17:17:02 AI_Player.update()		1110,	111,	1110,	1010,	111,	1001,	1011
2017-01-03 17:17:02 AI_Player.update()		101,	1001,	101,	101,	1001,	101,	11
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-03 17:17:02 AI_Player.update()		1100,	110,	11,	1001,	11,	1100,	1101
2017-01-03 17:17:02 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took3ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	1001,	111,	1100,	111,	101,	11
2017-01-03 17:17:02 AI_Player.update()		1100,	111,	1001,	1100,	110,	1110,	111
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-03 17:17:02 AI_Player.update()		101,	1001,	101,	101,	1001,	101,	11
2017-01-03 17:17:02 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-03 17:17:02 AI_Player.update()		1100,	1100,	11,	1001,	11,	1100,	1101
2017-01-03 17:17:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took137ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	1001,	111,	1100,	111,	101,	11
2017-01-03 17:17:02 AI_Player.update()		1100,	111,	1001,	1100,	110,	1110,	111
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-03 17:17:02 AI_Player.update()		1001,	101,	101,	1001,	101,	11,	101
2017-01-03 17:17:02 AI_Player.update()		1110,	110,	1101,	11,	1011,	11,	1011
2017-01-03 17:17:02 AI_Player.update()		1100,	1100,	11,	1001,	11,	1100,	1101
2017-01-03 17:17:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took1ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:02 AI_Player.update()		1100,	1001,	1001,	1100,	110,	1110,	111
2017-01-03 17:17:02 AI_Player.update()		1110,	111,	1110,	1010,	111,	1001,	1011
2017-01-03 17:17:02 AI_Player.update()		1001,	1001,	101,	1001,	101,	11,	101
2017-01-03 17:17:02 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-03 17:17:02 AI_Player.update()		1100,	110,	11,	1001,	11,	1100,	1101
2017-01-03 17:17:02 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took129ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-03 17:17:02 AI_Player.update()		1100,	101,	1001,	1100,	110,	1110,	111
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-03 17:17:02 AI_Player.update()		1001,	111,	101,	1001,	101,	11,	101
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-03 17:17:02 AI_Player.update()		1100,	101,	11,	1001,	11,	1100,	1101
2017-01-03 17:17:02 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:02 AI_Player.update()	Search took6ms
2017-01-03 17:17:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()		110,	1100,	111,	1100,	111,	1110,	11
2017-01-03 17:17:02 AI_Player.update()		1100,	101,	1001,	1100,	110,	1001,	111
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1110,	1010,	111,	11,	1011
2017-01-03 17:17:02 AI_Player.update()		1001,	111,	101,	1001,	101,	11,	101
2017-01-03 17:17:02 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:02 AI_Player.update()		1100,	101,	11,	1001,	11,	101,	1101
2017-01-03 17:17:02 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:02 AI_Player.update()	update
2017-01-03 17:17:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took295ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-03 17:17:03 AI_Player.update()		1100,	101,	1001,	1100,	110,	1110,	111
2017-01-03 17:17:03 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-03 17:17:03 AI_Player.update()		1001,	111,	101,	1001,	101,	11,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	101,	11,	1001,	11,	1100,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took3ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-03 17:17:03 AI_Player.update()		101,	1001,	1100,	110,	1110,	111,	1100
2017-01-03 17:17:03 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-03 17:17:03 AI_Player.update()		1001,	111,	101,	1001,	101,	11,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	1001,	1101,	11,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	101,	11,	1001,	11,	1100,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took302ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-03 17:17:03 AI_Player.update()		101,	1001,	1100,	1010,	1110,	111,	1100
2017-01-03 17:17:03 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-03 17:17:03 AI_Player.update()		1001,	111,	101,	11,	101,	11,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	101,	11,	101,	11,	1100,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took2ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-03 17:17:03 AI_Player.update()		101,	1001,	1100,	1010,	1110,	111,	1100
2017-01-03 17:17:03 AI_Player.update()		1110,	111,	1110,	1001,	111,	1001,	1011
2017-01-03 17:17:03 AI_Player.update()		1001,	1001,	101,	11,	101,	11,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	110,	11,	101,	11,	1100,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	5 2
2017-01-03 17:17:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took179ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-03 17:17:03 AI_Player.update()		1100,	101,	1001,	1100,	1010,	1110,	111
2017-01-03 17:17:03 AI_Player.update()		1110,	111,	1110,	1001,	111,	1001,	1011
2017-01-03 17:17:03 AI_Player.update()		1001,	1001,	101,	11,	101,	11,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	110,	11,	101,	11,	1100,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	5 2
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:17:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took1ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-03 17:17:03 AI_Player.update()		101,	1001,	1100,	1010,	1110,	111,	1100
2017-01-03 17:17:03 AI_Player.update()		1110,	111,	1110,	1001,	111,	1001,	1011
2017-01-03 17:17:03 AI_Player.update()		1001,	1001,	101,	11,	101,	11,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	110,	11,	101,	11,	1100,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took21ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-03 17:17:03 AI_Player.update()		101,	1001,	1100,	1010,	1110,	101,	1100
2017-01-03 17:17:03 AI_Player.update()		1110,	111,	1110,	1001,	111,	111,	1011
2017-01-03 17:17:03 AI_Player.update()		1001,	1001,	101,	11,	101,	1001,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	110,	11,	101,	11,	11,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took2ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1001,	111,	110,	111,	101,	11
2017-01-03 17:17:03 AI_Player.update()		1001,	1100,	1010,	1110,	101,	1100,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	111,	1110,	1001,	111,	111,	1011
2017-01-03 17:17:03 AI_Player.update()		1001,	1001,	101,	11,	101,	1001,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	110,	11,	101,	11,	11,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took92ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-03 17:17:03 AI_Player.update()		1001,	1100,	1010,	1110,	101,	111,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	111,	1110,	1001,	111,	1001,	1011
2017-01-03 17:17:03 AI_Player.update()		1001,	1001,	101,	11,	101,	11,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	101,	1101,	1001,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	110,	11,	101,	11,	1100,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took4ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1100,	111,	110,	111,	1100,	11
2017-01-03 17:17:03 AI_Player.update()		1001,	111,	1010,	1110,	101,	111,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-03 17:17:03 AI_Player.update()		1001,	101,	101,	11,	101,	11,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	1100,	11,	101,	11,	1100,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took33ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1100,	111,	110,	111,	1100,	11
2017-01-03 17:17:03 AI_Player.update()		1001,	111,	1010,	1110,	101,	111,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-03 17:17:03 AI_Player.update()		101,	101,	11,	101,	11,	101,	1001
2017-01-03 17:17:03 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	1100,	11,	101,	11,	1100,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:17:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:03 AI_Player.update()	Search took3ms
2017-01-03 17:17:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()		110,	1100,	111,	1110,	111,	1100,	11
2017-01-03 17:17:03 AI_Player.update()		1001,	111,	1010,	1001,	101,	111,	101
2017-01-03 17:17:03 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-03 17:17:03 AI_Player.update()		101,	101,	11,	1001,	11,	101,	1001
2017-01-03 17:17:03 AI_Player.update()		1110,	110,	1101,	101,	1011,	11,	1011
2017-01-03 17:17:03 AI_Player.update()		1100,	1100,	11,	1100,	11,	1100,	1101
2017-01-03 17:17:03 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:03 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:17:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:03 AI_Player.update()	update
2017-01-03 17:17:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:04 AI_Player.update()	Search took184ms
2017-01-03 17:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()		110,	1001,	111,	1110,	111,	1100,	11
2017-01-03 17:17:04 AI_Player.update()		1001,	1100,	1010,	1001,	101,	111,	101
2017-01-03 17:17:04 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-03 17:17:04 AI_Player.update()		101,	1001,	11,	1001,	11,	101,	1001
2017-01-03 17:17:04 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-03 17:17:04 AI_Player.update()		1100,	110,	11,	1100,	11,	1100,	1101
2017-01-03 17:17:04 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:04 AI_Player.update()	Search took2ms
2017-01-03 17:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()		110,	1001,	111,	1110,	111,	1100,	11
2017-01-03 17:17:04 AI_Player.update()		1100,	1010,	1001,	101,	111,	101,	1001
2017-01-03 17:17:04 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-03 17:17:04 AI_Player.update()		101,	1001,	11,	1001,	11,	101,	1001
2017-01-03 17:17:04 AI_Player.update()		1110,	101,	1101,	101,	1011,	11,	1011
2017-01-03 17:17:04 AI_Player.update()		1100,	110,	11,	1100,	11,	1100,	1101
2017-01-03 17:17:04 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:17:04 AI_Player.update()	Player a has won!
2017-01-03 17:17:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:04 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:04 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:04 AI_Player.update()	Search took1ms
2017-01-03 17:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 17:17:04 AI_Player.update()		1010,	1100,	1010,	110,	11,	111,	101
2017-01-03 17:17:04 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-03 17:17:04 AI_Player.update()		1010,	110,	1001,	110,	101,	101,	101
2017-01-03 17:17:04 AI_Player.update()		1110,	1110,	1101,	101,	1011,	110,	1011
2017-01-03 17:17:04 AI_Player.update()		1011,	110,	101,	110,	1010,	1110,	1010
2017-01-03 17:17:04 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:04 AI_Player.update()	Search took106ms
2017-01-03 17:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 17:17:04 AI_Player.update()		1100,	1010,	110,	11,	111,	101,	1010
2017-01-03 17:17:04 AI_Player.update()		1110,	101,	1110,	1001,	111,	1010,	1011
2017-01-03 17:17:04 AI_Player.update()		1010,	110,	1001,	110,	101,	101,	101
2017-01-03 17:17:04 AI_Player.update()		1110,	1110,	1101,	101,	1011,	110,	1011
2017-01-03 17:17:04 AI_Player.update()		1011,	110,	101,	110,	1010,	1110,	1010
2017-01-03 17:17:04 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1001,	1001
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:04 AI_Player.update()	Search took2ms
2017-01-03 17:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 17:17:04 AI_Player.update()		1100,	101,	110,	11,	111,	101,	1010
2017-01-03 17:17:04 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-03 17:17:04 AI_Player.update()		1010,	1110,	1001,	110,	101,	101,	101
2017-01-03 17:17:04 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-03 17:17:04 AI_Player.update()		1011,	101,	101,	110,	1010,	1110,	1010
2017-01-03 17:17:04 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:04 AI_Player.update()	Search took166ms
2017-01-03 17:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-03 17:17:04 AI_Player.update()		1100,	101,	110,	11,	111,	101,	1010
2017-01-03 17:17:04 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-03 17:17:04 AI_Player.update()		1110,	1001,	110,	101,	101,	101,	1010
2017-01-03 17:17:04 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-03 17:17:04 AI_Player.update()		1011,	101,	101,	110,	1010,	1110,	1010
2017-01-03 17:17:04 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1001,	1001
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:04 AI_Player.update()	Search took3ms
2017-01-03 17:17:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-03 17:17:04 AI_Player.update()		1100,	101,	110,	1001,	111,	101,	1010
2017-01-03 17:17:04 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-03 17:17:04 AI_Player.update()		1110,	1001,	110,	101,	101,	101,	1010
2017-01-03 17:17:04 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-03 17:17:04 AI_Player.update()		1011,	101,	101,	1011,	1010,	1110,	1010
2017-01-03 17:17:04 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-03 17:17:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:04 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:04 AI_Player.update()	update
2017-01-03 17:17:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:05 AI_Player.update()	Search took807ms
2017-01-03 17:17:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-03 17:17:05 AI_Player.update()		1100,	101,	110,	1001,	111,	1010,	1010
2017-01-03 17:17:05 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-03 17:17:05 AI_Player.update()		1110,	1001,	110,	101,	101,	110,	1010
2017-01-03 17:17:05 AI_Player.update()		1110,	110,	1101,	110,	1011,	1110,	1011
2017-01-03 17:17:05 AI_Player.update()		1011,	101,	101,	1011,	1010,	1001,	1010
2017-01-03 17:17:05 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()	update
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()	update
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:05 AI_Player.update()	Search took5ms
2017-01-03 17:17:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-03 17:17:05 AI_Player.update()		1100,	110,	110,	1001,	111,	1010,	1010
2017-01-03 17:17:05 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:17:05 AI_Player.update()		1110,	110,	110,	101,	101,	110,	1010
2017-01-03 17:17:05 AI_Player.update()		1110,	101,	1101,	110,	1011,	1110,	1011
2017-01-03 17:17:05 AI_Player.update()		1011,	1010,	101,	1011,	1010,	1001,	1010
2017-01-03 17:17:05 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()	update
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()	update
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:05 AI_Player.update()	Search took534ms
2017-01-03 17:17:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-03 17:17:05 AI_Player.update()		1100,	1001,	110,	1001,	111,	1010,	1010
2017-01-03 17:17:05 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-03 17:17:05 AI_Player.update()		1110,	101,	110,	101,	101,	110,	1010
2017-01-03 17:17:05 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1110,	1011
2017-01-03 17:17:05 AI_Player.update()		1011,	1010,	101,	1011,	1010,	1001,	1010
2017-01-03 17:17:05 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()	update
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()	update
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:05 AI_Player.update()	Search took6ms
2017-01-03 17:17:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:17:05 AI_Player.update()		1100,	110,	110,	1001,	111,	1010,	1010
2017-01-03 17:17:05 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-03 17:17:05 AI_Player.update()		1110,	1010,	110,	101,	101,	110,	1010
2017-01-03 17:17:05 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1110,	1011
2017-01-03 17:17:05 AI_Player.update()		1011,	101,	101,	1011,	1010,	1001,	1010
2017-01-03 17:17:05 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()	update
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:17:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:05 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:05 AI_Player.update()	update
2017-01-03 17:17:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:06 AI_Player.update()	Search took315ms
2017-01-03 17:17:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:06 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-03 17:17:06 AI_Player.update()		1100,	101,	110,	1001,	111,	1010,	1010
2017-01-03 17:17:06 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:17:06 AI_Player.update()		1110,	1010,	110,	101,	101,	110,	1010
2017-01-03 17:17:06 AI_Player.update()		1110,	101,	1101,	110,	1011,	1110,	1011
2017-01-03 17:17:06 AI_Player.update()		1011,	110,	101,	1011,	1010,	1001,	1010
2017-01-03 17:17:06 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:06 AI_Player.update()	update
2017-01-03 17:17:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:06 AI_Player.update()	update
2017-01-03 17:17:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:06 AI_Player.update()	Search took6ms
2017-01-03 17:17:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:06 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-03 17:17:06 AI_Player.update()		1100,	1010,	110,	1001,	111,	1010,	1010
2017-01-03 17:17:06 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:17:06 AI_Player.update()		1110,	101,	110,	101,	101,	110,	1010
2017-01-03 17:17:06 AI_Player.update()		1110,	110,	1101,	110,	1011,	1110,	1011
2017-01-03 17:17:06 AI_Player.update()		1011,	1001,	101,	1011,	1010,	1001,	1010
2017-01-03 17:17:06 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:06 AI_Player.update()	update
2017-01-03 17:17:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:06 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:06 AI_Player.update()	update
2017-01-03 17:17:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took1064ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	101,	110,	1001,	111,	1010,	1010
2017-01-03 17:17:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:17:07 AI_Player.update()		1110,	1010,	110,	101,	101,	110,	1010
2017-01-03 17:17:07 AI_Player.update()		1110,	101,	1101,	110,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1011,	110,	101,	1011,	1010,	1001,	1010
2017-01-03 17:17:07 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took6ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1010,	110,	1001,	111,	1010,	1010
2017-01-03 17:17:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:17:07 AI_Player.update()		1110,	101,	110,	101,	101,	110,	1010
2017-01-03 17:17:07 AI_Player.update()		1110,	110,	1101,	110,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1011,	1001,	101,	1011,	1010,	1001,	1010
2017-01-03 17:17:07 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:17:07 AI_Player.update()	Player a has won!
2017-01-03 17:17:07 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:07 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:07 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took0ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1010,	11,	1100,	1001,	1101,	1100,	1100
2017-01-03 17:17:07 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1010,	1010,	110,	110,	1001,	101,	1001
2017-01-03 17:17:07 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		11,	101,	1101,	101,	1011,	1001,	101
2017-01-03 17:17:07 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took93ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1010,	1001,	1100,	1001,	1101,	1100,	1100
2017-01-03 17:17:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1010,	101,	110,	110,	1001,	101,	1001
2017-01-03 17:17:07 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		11,	1001,	1101,	101,	1011,	1001,	101
2017-01-03 17:17:07 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took4ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1010,	1001,	1100,	1001,	1101,	1100,	1100
2017-01-03 17:17:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1010,	101,	110,	110,	1001,	101,	1001
2017-01-03 17:17:07 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1101,	101,	1011,	1001,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took92ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1010,	1001,	1100,	101,	1101,	1100,	1100
2017-01-03 17:17:07 AI_Player.update()		1110,	1010,	1110,	110,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1010,	101,	110,	1011,	1001,	101,	1001
2017-01-03 17:17:07 AI_Player.update()		1110,	101,	1101,	1011,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1101,	101,	1001,	1001,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took1ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1010,	1001,	1100,	110,	1101,	1100,	1100
2017-01-03 17:17:07 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1010,	101,	110,	1011,	1001,	101,	1001
2017-01-03 17:17:07 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1101,	101,	1100,	1001,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took60ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1010,	1010,	1100,	110,	1101,	1100,	1100
2017-01-03 17:17:07 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1010,	101,	110,	1011,	1001,	101,	1001
2017-01-03 17:17:07 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1100,	101,	1100,	1001,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	11,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took1ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1010,	101,	1100,	110,	1101,	1100,	1100
2017-01-03 17:17:07 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1010,	1101,	110,	1011,	1001,	101,	1001
2017-01-03 17:17:07 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	11,	101,	1100,	1001,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took69ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1010,	101,	1100,	110,	1101,	1100,	1100
2017-01-03 17:17:07 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1010,	1101,	110,	1011,	1001,	101
2017-01-03 17:17:07 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	11,	101,	1100,	1001,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took1ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1010,	101,	1100,	110,	1101,	1100,	1100
2017-01-03 17:17:07 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1100,	1101,	110,	1011,	1001,	101
2017-01-03 17:17:07 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1001,	101,	1100,	1001,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took319ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1010,	101,	1100,	110,	1101,	1100
2017-01-03 17:17:07 AI_Player.update()		1110,	1010,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1100,	1101,	110,	1011,	1001,	101
2017-01-03 17:17:07 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1001,	101,	1100,	1001,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took2ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1010,	101,	1100,	110,	1101,	1100
2017-01-03 17:17:07 AI_Player.update()		1110,	1100,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	11,	1101,	110,	1011,	1001,	101
2017-01-03 17:17:07 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1010,	101,	1100,	1001,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took99ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1100,	1010,	101,	1100,	110,	1101
2017-01-03 17:17:07 AI_Player.update()		1110,	1100,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	11,	1101,	110,	1011,	1001,	101
2017-01-03 17:17:07 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1010,	101,	1100,	1001,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:07 AI_Player.update()	Search took2ms
2017-01-03 17:17:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1100,	1010,	101,	1100,	110,	1101
2017-01-03 17:17:07 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	1001,	1101,	110,	1011,	1001,	101
2017-01-03 17:17:07 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:07 AI_Player.update()		1001,	101,	101,	1100,	1001,	101,	11
2017-01-03 17:17:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:07 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:07 AI_Player.update()	update
2017-01-03 17:17:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:08 AI_Player.update()	Search took313ms
2017-01-03 17:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:17:08 AI_Player.update()		1100,	1100,	1010,	1011,	1100,	110,	1101
2017-01-03 17:17:08 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-03 17:17:08 AI_Player.update()		1001,	1001,	1101,	1001,	1011,	1001,	101
2017-01-03 17:17:08 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1110,	1011
2017-01-03 17:17:08 AI_Player.update()		1001,	101,	101,	1001,	1001,	101,	11
2017-01-03 17:17:08 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:08 AI_Player.update()	Search took2ms
2017-01-03 17:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:17:08 AI_Player.update()		1100,	1100,	1010,	101,	1100,	110,	1101
2017-01-03 17:17:08 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:08 AI_Player.update()		1001,	1001,	1101,	110,	1011,	1001,	101
2017-01-03 17:17:08 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:08 AI_Player.update()		1001,	101,	101,	1100,	1001,	101,	11
2017-01-03 17:17:08 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:08 AI_Player.update()	Search took293ms
2017-01-03 17:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:17:08 AI_Player.update()		1100,	1100,	1010,	101,	1100,	110,	1101
2017-01-03 17:17:08 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:08 AI_Player.update()		1001,	1001,	1101,	110,	1011,	1001,	101
2017-01-03 17:17:08 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:08 AI_Player.update()		11,	1001,	101,	101,	1100,	1001,	101
2017-01-03 17:17:08 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:08 AI_Player.update()	Search took2ms
2017-01-03 17:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:17:08 AI_Player.update()		1100,	11,	1010,	101,	1100,	110,	1101
2017-01-03 17:17:08 AI_Player.update()		1110,	1001,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:08 AI_Player.update()		1001,	1010,	1101,	110,	1011,	1001,	101
2017-01-03 17:17:08 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:08 AI_Player.update()		11,	1010,	101,	101,	1100,	1001,	101
2017-01-03 17:17:08 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:08 AI_Player.update()	Search took246ms
2017-01-03 17:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:17:08 AI_Player.update()		1100,	11,	1010,	101,	1100,	110,	1101
2017-01-03 17:17:08 AI_Player.update()		1110,	1001,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:08 AI_Player.update()		101,	1001,	1010,	1101,	110,	1011,	1001
2017-01-03 17:17:08 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:08 AI_Player.update()		11,	1010,	101,	101,	1100,	1001,	101
2017-01-03 17:17:08 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:17:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:08 AI_Player.update()	Search took2ms
2017-01-03 17:17:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:17:08 AI_Player.update()		1100,	1001,	1010,	101,	1100,	110,	1101
2017-01-03 17:17:08 AI_Player.update()		1110,	1001,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:08 AI_Player.update()		101,	1001,	1010,	1101,	110,	1011,	1001
2017-01-03 17:17:08 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:08 AI_Player.update()		11,	1100,	101,	101,	1100,	1001,	101
2017-01-03 17:17:08 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:08 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:17:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:08 AI_Player.update()	update
2017-01-03 17:17:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:09 AI_Player.update()	Search took379ms
2017-01-03 17:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-03 17:17:09 AI_Player.update()		1100,	1001,	1010,	101,	1100,	110,	1101
2017-01-03 17:17:09 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1011,	1011
2017-01-03 17:17:09 AI_Player.update()		101,	1001,	1010,	1101,	110,	1110,	1001
2017-01-03 17:17:09 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:09 AI_Player.update()		11,	1100,	101,	101,	1100,	11,	101
2017-01-03 17:17:09 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-03 17:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()	update
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:17:09 AI_Player.update()	Player b has won!
2017-01-03 17:17:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:09 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:09 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()	update
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:09 AI_Player.update()	Search took1ms
2017-01-03 17:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()		110,	1011,	111,	101,	111,	110,	11
2017-01-03 17:17:09 AI_Player.update()		1100,	1010,	1100,	1010,	11,	1100,	1001
2017-01-03 17:17:09 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-03 17:17:09 AI_Player.update()		11,	1011,	1101,	1100,	1110,	1001,	1010
2017-01-03 17:17:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1011,	1011
2017-01-03 17:17:09 AI_Player.update()		111,	110,	110,	111,	1110,	1001,	1010
2017-01-03 17:17:09 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()	update
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()	update
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:09 AI_Player.update()	Search took95ms
2017-01-03 17:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()		110,	1011,	111,	101,	111,	110,	11
2017-01-03 17:17:09 AI_Player.update()		1010,	1100,	1010,	11,	1100,	1001,	1100
2017-01-03 17:17:09 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-03 17:17:09 AI_Player.update()		11,	1011,	1101,	1100,	1110,	1001,	1010
2017-01-03 17:17:09 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1011,	1011
2017-01-03 17:17:09 AI_Player.update()		111,	110,	110,	111,	1110,	1001,	1010
2017-01-03 17:17:09 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()	update
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()	update
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:09 AI_Player.update()	Search took4ms
2017-01-03 17:17:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()		110,	1011,	111,	101,	111,	110,	11
2017-01-03 17:17:09 AI_Player.update()		1010,	1100,	1010,	101,	1100,	1001,	1100
2017-01-03 17:17:09 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 17:17:09 AI_Player.update()		11,	1011,	1101,	1011,	1110,	1001,	1010
2017-01-03 17:17:09 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1011,	1011
2017-01-03 17:17:09 AI_Player.update()		111,	110,	110,	101,	1110,	1001,	1010
2017-01-03 17:17:09 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1010,	1001
2017-01-03 17:17:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()	update
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:09 AI_Player.update()	update
2017-01-03 17:17:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:10 AI_Player.update()	Search took1384ms
2017-01-03 17:17:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:10 AI_Player.update()		110,	1011,	111,	101,	111,	1010,	11
2017-01-03 17:17:10 AI_Player.update()		1010,	1100,	1010,	101,	1100,	110,	1100
2017-01-03 17:17:10 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-03 17:17:10 AI_Player.update()		11,	1011,	1101,	1011,	1110,	1001,	1010
2017-01-03 17:17:10 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-03 17:17:10 AI_Player.update()		111,	110,	110,	101,	1110,	1011,	1010
2017-01-03 17:17:10 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-03 17:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:10 AI_Player.update()	update
2017-01-03 17:17:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:10 AI_Player.update()	update
2017-01-03 17:17:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:10 AI_Player.update()	Search took6ms
2017-01-03 17:17:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:10 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-03 17:17:10 AI_Player.update()		1010,	1010,	1010,	101,	1100,	110,	1100
2017-01-03 17:17:10 AI_Player.update()		1110,	1011,	1110,	11,	111,	1001,	1011
2017-01-03 17:17:10 AI_Player.update()		11,	1100,	1101,	1011,	1110,	1001,	1010
2017-01-03 17:17:10 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-03 17:17:10 AI_Player.update()		111,	1100,	110,	101,	1110,	1011,	1010
2017-01-03 17:17:10 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1001,	1001
2017-01-03 17:17:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:10 AI_Player.update()	update
2017-01-03 17:17:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:10 AI_Player.update()	update
2017-01-03 17:17:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:12 AI_Player.update()	Search took1554ms
2017-01-03 17:17:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-03 17:17:12 AI_Player.update()		1010,	1011,	1010,	101,	1100,	110,	1100
2017-01-03 17:17:12 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-03 17:17:12 AI_Player.update()		11,	110,	1101,	1011,	1110,	1001,	1010
2017-01-03 17:17:12 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-03 17:17:12 AI_Player.update()		111,	1011,	110,	101,	1110,	1011,	1010
2017-01-03 17:17:12 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-03 17:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()	update
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()	update
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:12 AI_Player.update()	Search took6ms
2017-01-03 17:17:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()		110,	1011,	111,	101,	111,	1010,	11
2017-01-03 17:17:12 AI_Player.update()		1010,	1100,	1010,	101,	1100,	110,	1100
2017-01-03 17:17:12 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-03 17:17:12 AI_Player.update()		11,	1100,	1101,	1011,	1110,	1001,	1010
2017-01-03 17:17:12 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1001,	1011
2017-01-03 17:17:12 AI_Player.update()		111,	1100,	110,	101,	1110,	1011,	1010
2017-01-03 17:17:12 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-03 17:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()	update
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:17:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()	update
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:12 AI_Player.update()	Search took493ms
2017-01-03 17:17:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-03 17:17:12 AI_Player.update()		1010,	110,	1010,	101,	1100,	110,	1100
2017-01-03 17:17:12 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-03 17:17:12 AI_Player.update()		11,	1011,	1101,	1011,	1110,	1001,	1010
2017-01-03 17:17:12 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-03 17:17:12 AI_Player.update()		111,	1010,	110,	101,	1110,	1011,	1010
2017-01-03 17:17:12 AI_Player.update()		1100,	1011,	1101,	111,	1101,	1001,	1001
2017-01-03 17:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()	update
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()	update
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:12 AI_Player.update()	Search took4ms
2017-01-03 17:17:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-03 17:17:12 AI_Player.update()		1010,	1100,	1010,	101,	1100,	110,	1100
2017-01-03 17:17:12 AI_Player.update()		1110,	1011,	1110,	11,	111,	1001,	1011
2017-01-03 17:17:12 AI_Player.update()		11,	1100,	1101,	1011,	1110,	1001,	1010
2017-01-03 17:17:12 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-03 17:17:12 AI_Player.update()		111,	1011,	110,	101,	1110,	1011,	1010
2017-01-03 17:17:12 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-03 17:17:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()	update
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:12 AI_Player.update()	update
2017-01-03 17:17:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:14 AI_Player.update()	Search took1396ms
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-03 17:17:14 AI_Player.update()		1010,	1100,	1010,	101,	1100,	110,	1100
2017-01-03 17:17:14 AI_Player.update()		1110,	1011,	1110,	11,	111,	1001,	1011
2017-01-03 17:17:14 AI_Player.update()		1010,	11,	1100,	1101,	1011,	1110,	1001
2017-01-03 17:17:14 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-03 17:17:14 AI_Player.update()		111,	1011,	110,	101,	1110,	1011,	1010
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:14 AI_Player.update()	Search took3ms
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-03 17:17:14 AI_Player.update()		1010,	1011,	1010,	101,	1100,	110,	1100
2017-01-03 17:17:14 AI_Player.update()		1110,	11,	1110,	11,	111,	1001,	1011
2017-01-03 17:17:14 AI_Player.update()		1010,	1010,	1100,	1101,	1011,	1110,	1001
2017-01-03 17:17:14 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1001,	1011
2017-01-03 17:17:14 AI_Player.update()		111,	1100,	110,	101,	1110,	1011,	1010
2017-01-03 17:17:14 AI_Player.update()		1100,	110,	1101,	111,	1101,	1001,	1001
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:17:14 AI_Player.update()	Player a has won!
2017-01-03 17:17:14 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:14 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:14 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:14 AI_Player.update()	Search took1ms
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-03 17:17:14 AI_Player.update()		1110,	1100,	11,	101,	1110,	11,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-03 17:17:14 AI_Player.update()		1011,	1100,	101,	111,	101,	110,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	101,	1110,	1010,	101,	11
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:14 AI_Player.update()	Search took22ms
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-03 17:17:14 AI_Player.update()		1100,	11,	101,	1110,	11,	101,	1110
2017-01-03 17:17:14 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-03 17:17:14 AI_Player.update()		1011,	1100,	101,	111,	101,	110,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	101,	1110,	1010,	101,	11
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:14 AI_Player.update()	Search took3ms
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-03 17:17:14 AI_Player.update()		1110,	1100,	11,	101,	1110,	11,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-03 17:17:14 AI_Player.update()		1011,	1100,	101,	111,	101,	110,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	101,	1110,	1010,	101,	11
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:14 AI_Player.update()	Search took129ms
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-03 17:17:14 AI_Player.update()		1110,	1100,	11,	1100,	1110,	11,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-03 17:17:14 AI_Player.update()		1011,	1100,	101,	11,	101,	110,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1100,	1011
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	101,	110,	1010,	101,	11
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:14 AI_Player.update()	Search took2ms
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-03 17:17:14 AI_Player.update()		1110,	1100,	11,	111,	1110,	11,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:17:14 AI_Player.update()		1011,	1100,	101,	1110,	101,	110,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	11,	1101,	110,	1011,	1100,	1011
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	101,	1010,	1010,	101,	11
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:14 AI_Player.update()	Search took144ms
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-03 17:17:14 AI_Player.update()		1110,	1100,	11,	1100,	1110,	11,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-03 17:17:14 AI_Player.update()		1011,	1100,	101,	11,	101,	110,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1100,	1011
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	101,	110,	1010,	101,	11
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:14 AI_Player.update()	Search took2ms
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-03 17:17:14 AI_Player.update()		1110,	101,	11,	1100,	1110,	11,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-03 17:17:14 AI_Player.update()		1011,	1010,	101,	11,	101,	110,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1100,	1011
2017-01-03 17:17:14 AI_Player.update()		1100,	11,	101,	110,	1010,	101,	11
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:14 AI_Player.update()	Search took236ms
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-03 17:17:14 AI_Player.update()		1110,	101,	11,	1100,	1110,	11,	101
2017-01-03 17:17:14 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-03 17:17:14 AI_Player.update()		1010,	101,	11,	101,	110,	101,	1011
2017-01-03 17:17:14 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1100,	1011
2017-01-03 17:17:14 AI_Player.update()		1100,	11,	101,	110,	1010,	101,	11
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:14 AI_Player.update()	Search took4ms
2017-01-03 17:17:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-03 17:17:14 AI_Player.update()		101,	1110,	101,	11,	1100,	1110,	11
2017-01-03 17:17:14 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-03 17:17:14 AI_Player.update()		1010,	101,	11,	101,	110,	101,	1011
2017-01-03 17:17:14 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1100,	1011
2017-01-03 17:17:14 AI_Player.update()		1100,	11,	101,	110,	1010,	101,	11
2017-01-03 17:17:14 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:17:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:14 AI_Player.update()	update
2017-01-03 17:17:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:15 AI_Player.update()	Search took818ms
2017-01-03 17:17:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-03 17:17:15 AI_Player.update()		101,	1110,	101,	101,	1100,	1110,	11
2017-01-03 17:17:15 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:15 AI_Player.update()		1010,	101,	11,	111,	110,	101,	1011
2017-01-03 17:17:15 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:17:15 AI_Player.update()		1100,	11,	101,	1110,	1010,	101,	11
2017-01-03 17:17:15 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-03 17:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()	update
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()	update
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:15 AI_Player.update()	Search took5ms
2017-01-03 17:17:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-03 17:17:15 AI_Player.update()		101,	1110,	101,	11,	1100,	1110,	11
2017-01-03 17:17:15 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-03 17:17:15 AI_Player.update()		1010,	101,	11,	101,	110,	101,	1011
2017-01-03 17:17:15 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1100,	1011
2017-01-03 17:17:15 AI_Player.update()		1100,	11,	101,	110,	1010,	101,	11
2017-01-03 17:17:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()	update
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()	update
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:15 AI_Player.update()	Search took146ms
2017-01-03 17:17:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-03 17:17:15 AI_Player.update()		101,	1110,	101,	11,	1100,	1110,	11
2017-01-03 17:17:15 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-03 17:17:15 AI_Player.update()		1010,	101,	11,	101,	110,	101,	1011
2017-01-03 17:17:15 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1100,	1011
2017-01-03 17:17:15 AI_Player.update()		11,	1100,	11,	101,	110,	1010,	101
2017-01-03 17:17:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()	update
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()	update
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:15 AI_Player.update()	Search took6ms
2017-01-03 17:17:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-03 17:17:15 AI_Player.update()		101,	1110,	101,	111,	1100,	1110,	11
2017-01-03 17:17:15 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 17:17:15 AI_Player.update()		1010,	101,	11,	1110,	110,	101,	1011
2017-01-03 17:17:15 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1100,	1011
2017-01-03 17:17:15 AI_Player.update()		11,	1100,	11,	1010,	110,	1010,	101
2017-01-03 17:17:15 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:17:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()	update
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:15 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:15 AI_Player.update()	update
2017-01-03 17:17:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:16 AI_Player.update()	Search took731ms
2017-01-03 17:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-03 17:17:16 AI_Player.update()		101,	1100,	101,	111,	1100,	1110,	11
2017-01-03 17:17:16 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-03 17:17:16 AI_Player.update()		1010,	1100,	11,	1110,	110,	101,	1011
2017-01-03 17:17:16 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-03 17:17:16 AI_Player.update()		11,	1100,	11,	1010,	110,	1010,	101
2017-01-03 17:17:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()	update
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()	update
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:16 AI_Player.update()	Search took1ms
2017-01-03 17:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-03 17:17:16 AI_Player.update()		1100,	101,	111,	1100,	1110,	11,	101
2017-01-03 17:17:16 AI_Player.update()		1110,	1110,	1110,	101,	111,	101,	1011
2017-01-03 17:17:16 AI_Player.update()		1010,	1100,	11,	1110,	110,	101,	1011
2017-01-03 17:17:16 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-03 17:17:16 AI_Player.update()		11,	1100,	11,	1010,	110,	1010,	101
2017-01-03 17:17:16 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()	update
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:16 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:17:16 AI_Player.update()	Player a has won!
2017-01-03 17:17:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:16 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:16 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()	update
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:16 AI_Player.update()	Search took1ms
2017-01-03 17:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()		110,	1100,	111,	1010,	111,	1101,	11
2017-01-03 17:17:16 AI_Player.update()		1010,	11,	1010,	11,	101,	110,	11
2017-01-03 17:17:16 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-03 17:17:16 AI_Player.update()		1100,	101,	111,	101,	110,	1011,	1010
2017-01-03 17:17:16 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:16 AI_Player.update()		1101,	1100,	1100,	1001,	1010,	1100,	11
2017-01-03 17:17:16 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()	update
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()	update
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:16 AI_Player.update()	Search took124ms
2017-01-03 17:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()		110,	1100,	111,	1010,	111,	1101,	11
2017-01-03 17:17:16 AI_Player.update()		11,	1010,	11,	101,	110,	11,	1010
2017-01-03 17:17:16 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-03 17:17:16 AI_Player.update()		1100,	101,	111,	101,	110,	1011,	1010
2017-01-03 17:17:16 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:16 AI_Player.update()		1101,	1100,	1100,	1001,	1010,	1100,	11
2017-01-03 17:17:16 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()	update
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()	update
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:16 AI_Player.update()	Search took1ms
2017-01-03 17:17:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-03 17:17:16 AI_Player.update()		11,	1001,	11,	101,	110,	11,	1010
2017-01-03 17:17:16 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-03 17:17:16 AI_Player.update()		1100,	101,	111,	101,	110,	1011,	1010
2017-01-03 17:17:16 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:16 AI_Player.update()		1101,	1011,	1100,	1001,	1010,	1100,	11
2017-01-03 17:17:16 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:17:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()	update
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:16 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:16 AI_Player.update()	update
2017-01-03 17:17:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:17 AI_Player.update()	Search took680ms
2017-01-03 17:17:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()		110,	1100,	111,	1010,	111,	1101,	11
2017-01-03 17:17:17 AI_Player.update()		11,	1010,	11,	101,	110,	11,	1010
2017-01-03 17:17:17 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-03 17:17:17 AI_Player.update()		1100,	101,	111,	101,	110,	1011,	1010
2017-01-03 17:17:17 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:17 AI_Player.update()		1101,	1100,	1100,	1001,	1010,	1100,	11
2017-01-03 17:17:17 AI_Player.update()		1100,	1011,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()	update
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()	update
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:17 AI_Player.update()	Search took2ms
2017-01-03 17:17:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()		110,	1010,	111,	1010,	111,	1101,	11
2017-01-03 17:17:17 AI_Player.update()		11,	1001,	11,	101,	110,	11,	1010
2017-01-03 17:17:17 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-03 17:17:17 AI_Player.update()		1100,	101,	111,	101,	110,	1011,	1010
2017-01-03 17:17:17 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:17 AI_Player.update()		1101,	1011,	1100,	1001,	1010,	1100,	11
2017-01-03 17:17:17 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()	update
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()	update
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:17 AI_Player.update()	Search took515ms
2017-01-03 17:17:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()		110,	1010,	111,	101,	111,	1101,	11
2017-01-03 17:17:17 AI_Player.update()		11,	1001,	11,	110,	110,	11,	1010
2017-01-03 17:17:17 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-03 17:17:17 AI_Player.update()		1100,	101,	111,	1101,	110,	1011,	1010
2017-01-03 17:17:17 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-03 17:17:17 AI_Player.update()		1101,	1011,	1100,	1011,	1010,	1100,	11
2017-01-03 17:17:17 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()	update
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()	update
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:17 AI_Player.update()	Search took2ms
2017-01-03 17:17:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-03 17:17:17 AI_Player.update()		11,	101,	11,	110,	110,	11,	1010
2017-01-03 17:17:17 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-03 17:17:17 AI_Player.update()		1100,	1100,	111,	1101,	110,	1011,	1010
2017-01-03 17:17:17 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-03 17:17:17 AI_Player.update()		1101,	1100,	1100,	1011,	1010,	1100,	11
2017-01-03 17:17:17 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:17:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()	update
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:17 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:17 AI_Player.update()	update
2017-01-03 17:17:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:18 AI_Player.update()	Search took276ms
2017-01-03 17:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()		110,	1001,	111,	101,	111,	1101,	11
2017-01-03 17:17:18 AI_Player.update()		11,	101,	11,	110,	110,	11,	1010
2017-01-03 17:17:18 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-03 17:17:18 AI_Player.update()		1100,	111,	1101,	110,	1011,	1010,	1100
2017-01-03 17:17:18 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	1100,	1011
2017-01-03 17:17:18 AI_Player.update()		1101,	1100,	1100,	1011,	1010,	1100,	11
2017-01-03 17:17:18 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:18 AI_Player.update()	Search took1ms
2017-01-03 17:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()		110,	101,	111,	101,	111,	1101,	11
2017-01-03 17:17:18 AI_Player.update()		11,	101,	11,	110,	110,	11,	1010
2017-01-03 17:17:18 AI_Player.update()		1110,	111,	1110,	101,	111,	110,	1011
2017-01-03 17:17:18 AI_Player.update()		1100,	1011,	1101,	110,	1011,	1010,	1100
2017-01-03 17:17:18 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1100,	1011
2017-01-03 17:17:18 AI_Player.update()		1101,	1010,	1100,	1011,	1010,	1100,	11
2017-01-03 17:17:18 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:18 AI_Player.update()	Search took274ms
2017-01-03 17:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-03 17:17:18 AI_Player.update()		11,	101,	11,	101,	110,	11,	1010
2017-01-03 17:17:18 AI_Player.update()		1110,	111,	1110,	110,	111,	110,	1011
2017-01-03 17:17:18 AI_Player.update()		1100,	1011,	1101,	101,	1011,	1010,	1100
2017-01-03 17:17:18 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1100,	1011
2017-01-03 17:17:18 AI_Player.update()		1101,	1010,	1100,	1001,	1010,	1100,	11
2017-01-03 17:17:18 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:18 AI_Player.update()	Search took1ms
2017-01-03 17:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-03 17:17:18 AI_Player.update()		11,	111,	11,	101,	110,	11,	1010
2017-01-03 17:17:18 AI_Player.update()		1110,	1011,	1110,	110,	111,	110,	1011
2017-01-03 17:17:18 AI_Player.update()		1100,	1100,	1101,	101,	1011,	1010,	1100
2017-01-03 17:17:18 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-03 17:17:18 AI_Player.update()		1101,	1001,	1100,	1001,	1010,	1100,	11
2017-01-03 17:17:18 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:18 AI_Player.update()	Search took223ms
2017-01-03 17:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-03 17:17:18 AI_Player.update()		11,	111,	11,	101,	110,	11,	1010
2017-01-03 17:17:18 AI_Player.update()		1110,	1011,	1110,	110,	111,	110,	1011
2017-01-03 17:17:18 AI_Player.update()		1100,	1100,	1100,	1101,	101,	1011,	1010
2017-01-03 17:17:18 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-03 17:17:18 AI_Player.update()		1101,	1001,	1100,	1001,	1010,	1100,	11
2017-01-03 17:17:18 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:18 AI_Player.update()	Search took1ms
2017-01-03 17:17:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()		110,	111,	111,	1010,	111,	1101,	11
2017-01-03 17:17:18 AI_Player.update()		11,	1011,	11,	101,	110,	11,	1010
2017-01-03 17:17:18 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-03 17:17:18 AI_Player.update()		1100,	1010,	1100,	1101,	101,	1011,	1010
2017-01-03 17:17:18 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-03 17:17:18 AI_Player.update()		1101,	101,	1100,	1001,	1010,	1100,	11
2017-01-03 17:17:18 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:17:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:18 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:18 AI_Player.update()	update
2017-01-03 17:17:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:19 AI_Player.update()	Search took386ms
2017-01-03 17:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()		110,	111,	111,	1011,	111,	1101,	11
2017-01-03 17:17:19 AI_Player.update()		11,	1011,	11,	1010,	110,	11,	1010
2017-01-03 17:17:19 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-03 17:17:19 AI_Player.update()		1100,	1010,	1100,	110,	101,	1011,	1010
2017-01-03 17:17:19 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:19 AI_Player.update()		1101,	101,	1100,	110,	1010,	1100,	11
2017-01-03 17:17:19 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1100,	1001
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:19 AI_Player.update()	Search took2ms
2017-01-03 17:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()		110,	1011,	111,	1011,	111,	1101,	11
2017-01-03 17:17:19 AI_Player.update()		11,	1100,	11,	1010,	110,	11,	1010
2017-01-03 17:17:19 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-03 17:17:19 AI_Player.update()		1100,	1001,	1100,	110,	101,	1011,	1010
2017-01-03 17:17:19 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:19 AI_Player.update()		1101,	101,	1100,	110,	1010,	1100,	11
2017-01-03 17:17:19 AI_Player.update()		1100,	111,	1101,	1001,	1101,	1100,	1001
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:19 AI_Player.update()	Search took569ms
2017-01-03 17:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()		110,	1100,	111,	1011,	111,	1101,	11
2017-01-03 17:17:19 AI_Player.update()		11,	1010,	11,	1010,	110,	11,	1010
2017-01-03 17:17:19 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-03 17:17:19 AI_Player.update()		1100,	101,	1100,	110,	101,	1011,	1010
2017-01-03 17:17:19 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-03 17:17:19 AI_Player.update()		1101,	111,	1100,	110,	1010,	1100,	11
2017-01-03 17:17:19 AI_Player.update()		1100,	1011,	1101,	1001,	1101,	1100,	1001
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:17:19 AI_Player.update()	Player b has won!
2017-01-03 17:17:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:19 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:19 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:19 AI_Player.update()	Search took1ms
2017-01-03 17:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()		110,	1001,	111,	111,	111,	11,	11
2017-01-03 17:17:19 AI_Player.update()		11,	1100,	1101,	1110,	11,	101,	101
2017-01-03 17:17:19 AI_Player.update()		1110,	1100,	1110,	1101,	111,	11,	1011
2017-01-03 17:17:19 AI_Player.update()		1010,	11,	11,	1100,	101,	101,	101
2017-01-03 17:17:19 AI_Player.update()		1110,	110,	1101,	111,	1011,	1010,	1011
2017-01-03 17:17:19 AI_Player.update()		110,	110,	1110,	1100,	101,	1110,	110
2017-01-03 17:17:19 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:19 AI_Player.update()	Search took38ms
2017-01-03 17:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()		110,	1001,	111,	111,	111,	101,	11
2017-01-03 17:17:19 AI_Player.update()		11,	1100,	1101,	1110,	11,	11,	101
2017-01-03 17:17:19 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-03 17:17:19 AI_Player.update()		1010,	11,	11,	1100,	101,	1010,	101
2017-01-03 17:17:19 AI_Player.update()		1110,	110,	1101,	111,	1011,	1110,	1011
2017-01-03 17:17:19 AI_Player.update()		110,	110,	1110,	1100,	101,	1010,	110
2017-01-03 17:17:19 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:19 AI_Player.update()	Search took1ms
2017-01-03 17:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()		110,	1001,	111,	1110,	111,	101,	11
2017-01-03 17:17:19 AI_Player.update()		11,	1100,	1101,	1101,	11,	11,	101
2017-01-03 17:17:19 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-03 17:17:19 AI_Player.update()		1010,	11,	11,	111,	101,	1010,	101
2017-01-03 17:17:19 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1110,	1011
2017-01-03 17:17:19 AI_Player.update()		110,	110,	1110,	1001,	101,	1010,	110
2017-01-03 17:17:19 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:19 AI_Player.update()	Search took144ms
2017-01-03 17:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()		110,	1001,	111,	1110,	111,	101,	11
2017-01-03 17:17:19 AI_Player.update()		11,	1100,	1101,	1101,	11,	11,	101
2017-01-03 17:17:19 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-03 17:17:19 AI_Player.update()		101,	1010,	11,	11,	111,	101,	1010
2017-01-03 17:17:19 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1110,	1011
2017-01-03 17:17:19 AI_Player.update()		110,	110,	1110,	1001,	101,	1010,	110
2017-01-03 17:17:19 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:19 AI_Player.update()	Search took1ms
2017-01-03 17:17:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()		110,	1001,	111,	1110,	111,	101,	11
2017-01-03 17:17:19 AI_Player.update()		1100,	1101,	1101,	11,	11,	101,	11
2017-01-03 17:17:19 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-03 17:17:19 AI_Player.update()		101,	1010,	11,	11,	111,	101,	1010
2017-01-03 17:17:19 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1110,	1011
2017-01-03 17:17:19 AI_Player.update()		110,	110,	1110,	1001,	101,	1010,	110
2017-01-03 17:17:19 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-03 17:17:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:19 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:19 AI_Player.update()	update
2017-01-03 17:17:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:20 AI_Player.update()	Search took293ms
2017-01-03 17:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1100,	1101,	1101,	1100,	11,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:20 AI_Player.update()		101,	1010,	11,	1100,	111,	101,	1010
2017-01-03 17:17:20 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:20 AI_Player.update()		110,	110,	1110,	111,	101,	1010,	110
2017-01-03 17:17:20 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	11,	1001
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:20 AI_Player.update()	Search took3ms
2017-01-03 17:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1100,	1101,	1101,	1100,	11,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:20 AI_Player.update()		101,	1010,	11,	1100,	111,	1110,	1010
2017-01-03 17:17:20 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:17:20 AI_Player.update()		110,	110,	1110,	111,	101,	11,	110
2017-01-03 17:17:20 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	101,	1001
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:20 AI_Player.update()	Search took68ms
2017-01-03 17:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1100,	1101,	1101,	1100,	11,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:20 AI_Player.update()		101,	1010,	11,	1100,	111,	101,	1010
2017-01-03 17:17:20 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1110,	1011
2017-01-03 17:17:20 AI_Player.update()		110,	110,	1110,	111,	101,	1010,	110
2017-01-03 17:17:20 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	11,	1001
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:20 AI_Player.update()	Search took1ms
2017-01-03 17:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()		110,	1001,	111,	1100,	111,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1100,	1101,	1101,	11,	11,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-03 17:17:20 AI_Player.update()		101,	1010,	11,	1001,	111,	101,	1010
2017-01-03 17:17:20 AI_Player.update()		1110,	110,	1101,	111,	1011,	1110,	1011
2017-01-03 17:17:20 AI_Player.update()		110,	110,	1110,	1110,	101,	1010,	110
2017-01-03 17:17:20 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:20 AI_Player.update()	Search took246ms
2017-01-03 17:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()		110,	1001,	111,	1100,	111,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1100,	1101,	1101,	11,	11,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1110,	1100,	1110,	1100,	111,	101,	1011
2017-01-03 17:17:20 AI_Player.update()		101,	1010,	11,	1001,	111,	101,	1010
2017-01-03 17:17:20 AI_Player.update()		1110,	110,	1101,	111,	1011,	1110,	1011
2017-01-03 17:17:20 AI_Player.update()		110,	1110,	1110,	101,	1010,	110,	110
2017-01-03 17:17:20 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:20 AI_Player.update()	Search took1ms
2017-01-03 17:17:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1100,	1101,	1101,	1100,	11,	101,	11
2017-01-03 17:17:20 AI_Player.update()		1110,	1100,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:20 AI_Player.update()		101,	1010,	11,	111,	111,	101,	1010
2017-01-03 17:17:20 AI_Player.update()		1110,	110,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:20 AI_Player.update()		110,	1110,	1110,	11,	1010,	110,	110
2017-01-03 17:17:20 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:20 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:20 AI_Player.update()	update
2017-01-03 17:17:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:21 AI_Player.update()	Search took498ms
2017-01-03 17:17:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()		110,	1101,	111,	11,	111,	101,	11
2017-01-03 17:17:21 AI_Player.update()		1100,	1100,	1101,	1100,	11,	101,	11
2017-01-03 17:17:21 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:21 AI_Player.update()		101,	110,	11,	111,	111,	101,	1010
2017-01-03 17:17:21 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:21 AI_Player.update()		110,	1100,	1110,	11,	1010,	110,	110
2017-01-03 17:17:21 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()	update
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()	update
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:21 AI_Player.update()	Search took4ms
2017-01-03 17:17:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-03 17:17:21 AI_Player.update()		1100,	1010,	1101,	1100,	11,	101,	11
2017-01-03 17:17:21 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:21 AI_Player.update()		101,	1110,	11,	111,	111,	101,	1010
2017-01-03 17:17:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:21 AI_Player.update()		110,	1001,	1110,	11,	1010,	110,	110
2017-01-03 17:17:21 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()	update
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()	update
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:21 AI_Player.update()	Search took615ms
2017-01-03 17:17:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-03 17:17:21 AI_Player.update()		1100,	1010,	1101,	1100,	11,	101,	11
2017-01-03 17:17:21 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:21 AI_Player.update()		1110,	11,	111,	111,	101,	1010,	101
2017-01-03 17:17:21 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:21 AI_Player.update()		110,	1001,	1110,	11,	1010,	110,	110
2017-01-03 17:17:21 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()	update
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()	update
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:21 AI_Player.update()	Search took1ms
2017-01-03 17:17:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-03 17:17:21 AI_Player.update()		1100,	110,	1101,	1100,	11,	101,	11
2017-01-03 17:17:21 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:21 AI_Player.update()		1110,	1100,	111,	111,	101,	1010,	101
2017-01-03 17:17:21 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:21 AI_Player.update()		110,	1101,	1110,	11,	1010,	110,	110
2017-01-03 17:17:21 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()	update
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:21 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:21 AI_Player.update()	update
2017-01-03 17:17:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:22 AI_Player.update()	Search took661ms
2017-01-03 17:17:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:22 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-03 17:17:22 AI_Player.update()		1100,	110,	1101,	1100,	11,	101,	11
2017-01-03 17:17:22 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:22 AI_Player.update()		1100,	111,	111,	101,	1010,	101,	1110
2017-01-03 17:17:22 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:22 AI_Player.update()		110,	1101,	1110,	11,	1010,	110,	110
2017-01-03 17:17:22 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:22 AI_Player.update()	update
2017-01-03 17:17:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:22 AI_Player.update()	update
2017-01-03 17:17:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:22 AI_Player.update()	Search took3ms
2017-01-03 17:17:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:22 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-03 17:17:22 AI_Player.update()		11,	1100,	110,	1101,	1100,	11,	101
2017-01-03 17:17:22 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:22 AI_Player.update()		1100,	111,	111,	101,	1010,	101,	1110
2017-01-03 17:17:22 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:22 AI_Player.update()		110,	1101,	1110,	11,	1010,	110,	110
2017-01-03 17:17:22 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:22 AI_Player.update()	update
2017-01-03 17:17:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:22 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:22 AI_Player.update()	update
2017-01-03 17:17:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:23 AI_Player.update()	Search took774ms
2017-01-03 17:17:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-03 17:17:23 AI_Player.update()		1100,	110,	1101,	1100,	11,	101,	11
2017-01-03 17:17:23 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:23 AI_Player.update()		1100,	111,	111,	101,	1010,	101,	1110
2017-01-03 17:17:23 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:23 AI_Player.update()		110,	1101,	1110,	11,	1010,	110,	110
2017-01-03 17:17:23 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()	update
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()	update
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:23 AI_Player.update()	Search took1ms
2017-01-03 17:17:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-03 17:17:23 AI_Player.update()		110,	1101,	1100,	11,	101,	11,	1100
2017-01-03 17:17:23 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:23 AI_Player.update()		1100,	111,	111,	101,	1010,	101,	1110
2017-01-03 17:17:23 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:23 AI_Player.update()		110,	1101,	1110,	11,	1010,	110,	110
2017-01-03 17:17:23 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()	update
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()	update
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:23 AI_Player.update()	Search took772ms
2017-01-03 17:17:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-03 17:17:23 AI_Player.update()		110,	1101,	1100,	1001,	101,	11,	1100
2017-01-03 17:17:23 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-03 17:17:23 AI_Player.update()		1100,	111,	111,	101,	1010,	101,	1110
2017-01-03 17:17:23 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1110,	1011
2017-01-03 17:17:23 AI_Player.update()		110,	1101,	1110,	1100,	1010,	110,	110
2017-01-03 17:17:23 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-03 17:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()	update
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()	update
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:23 AI_Player.update()	Search took2ms
2017-01-03 17:17:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-03 17:17:23 AI_Player.update()		110,	1101,	1100,	11,	101,	11,	1100
2017-01-03 17:17:23 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:23 AI_Player.update()		1100,	111,	111,	101,	1010,	101,	1110
2017-01-03 17:17:23 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:23 AI_Player.update()		110,	1101,	1110,	11,	1010,	110,	110
2017-01-03 17:17:23 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()	update
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:23 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:23 AI_Player.update()	update
2017-01-03 17:17:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:24 AI_Player.update()	Search took572ms
2017-01-03 17:17:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-03 17:17:24 AI_Player.update()		1100,	110,	1101,	1100,	11,	101,	11
2017-01-03 17:17:24 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:24 AI_Player.update()		1100,	111,	111,	101,	1010,	101,	1110
2017-01-03 17:17:24 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:24 AI_Player.update()		110,	1101,	1110,	11,	1010,	110,	110
2017-01-03 17:17:24 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:24 AI_Player.update()	Search took2ms
2017-01-03 17:17:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()		110,	110,	111,	11,	111,	101,	11
2017-01-03 17:17:24 AI_Player.update()		1100,	11,	1101,	1100,	11,	101,	11
2017-01-03 17:17:24 AI_Player.update()		1110,	111,	1110,	1001,	111,	101,	1011
2017-01-03 17:17:24 AI_Player.update()		1100,	1001,	111,	101,	1010,	101,	1110
2017-01-03 17:17:24 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1110,	1011
2017-01-03 17:17:24 AI_Player.update()		110,	1100,	1110,	11,	1010,	110,	110
2017-01-03 17:17:24 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:24 AI_Player.update()	Search took317ms
2017-01-03 17:17:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()		110,	110,	111,	1100,	111,	101,	11
2017-01-03 17:17:24 AI_Player.update()		1100,	11,	1101,	1001,	11,	101,	11
2017-01-03 17:17:24 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-03 17:17:24 AI_Player.update()		1100,	1001,	111,	101,	1010,	101,	1110
2017-01-03 17:17:24 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1110,	1011
2017-01-03 17:17:24 AI_Player.update()		110,	1100,	1110,	1100,	1010,	110,	110
2017-01-03 17:17:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:17:24 AI_Player.update()	Player b has won!
2017-01-03 17:17:24 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:24 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:24 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:24 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:24 AI_Player.update()	Search took1ms
2017-01-03 17:17:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-03 17:17:24 AI_Player.update()		1010,	1110,	101,	101,	1110,	101,	11
2017-01-03 17:17:24 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1011,	1011
2017-01-03 17:17:24 AI_Player.update()		110,	1010,	1110,	1010,	1001,	110,	1010
2017-01-03 17:17:24 AI_Player.update()		1110,	101,	1101,	110,	1011,	1011,	1011
2017-01-03 17:17:24 AI_Player.update()		1101,	11,	11,	110,	1100,	1100,	1011
2017-01-03 17:17:24 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:24 AI_Player.update()	Search took40ms
2017-01-03 17:17:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-03 17:17:24 AI_Player.update()		1110,	101,	101,	1110,	101,	11,	1010
2017-01-03 17:17:24 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1011,	1011
2017-01-03 17:17:24 AI_Player.update()		110,	1010,	1110,	1010,	1001,	110,	1010
2017-01-03 17:17:24 AI_Player.update()		1110,	101,	1101,	110,	1011,	1011,	1011
2017-01-03 17:17:24 AI_Player.update()		1101,	11,	11,	110,	1100,	1100,	1011
2017-01-03 17:17:24 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:24 AI_Player.update()	Search took1ms
2017-01-03 17:17:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-03 17:17:24 AI_Player.update()		1010,	1110,	101,	101,	1110,	101,	11
2017-01-03 17:17:24 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1011,	1011
2017-01-03 17:17:24 AI_Player.update()		110,	1010,	1110,	1010,	1001,	110,	1010
2017-01-03 17:17:24 AI_Player.update()		1110,	101,	1101,	110,	1011,	1011,	1011
2017-01-03 17:17:24 AI_Player.update()		1101,	11,	11,	110,	1100,	1100,	1011
2017-01-03 17:17:24 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:24 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:24 AI_Player.update()	update
2017-01-03 17:17:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:25 AI_Player.update()	Search took304ms
2017-01-03 17:17:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-03 17:17:25 AI_Player.update()		1110,	101,	101,	1110,	101,	11,	1010
2017-01-03 17:17:25 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		110,	1010,	1110,	1010,	1001,	110,	1010
2017-01-03 17:17:25 AI_Player.update()		1110,	101,	1101,	110,	1011,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		1101,	11,	11,	110,	1100,	1100,	1011
2017-01-03 17:17:25 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:25 AI_Player.update()	Search took1ms
2017-01-03 17:17:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-03 17:17:25 AI_Player.update()		1010,	1110,	101,	101,	1110,	101,	11
2017-01-03 17:17:25 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		110,	1010,	1110,	1010,	1001,	110,	1010
2017-01-03 17:17:25 AI_Player.update()		1110,	101,	1101,	110,	1011,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		1101,	11,	11,	110,	1100,	1100,	1011
2017-01-03 17:17:25 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:25 AI_Player.update()	Search took332ms
2017-01-03 17:17:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()		110,	11,	111,	110,	111,	1010,	11
2017-01-03 17:17:25 AI_Player.update()		1010,	1110,	101,	101,	1110,	101,	11
2017-01-03 17:17:25 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		110,	1010,	1110,	1010,	1001,	110,	1010
2017-01-03 17:17:25 AI_Player.update()		1110,	101,	1101,	110,	1011,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		1011,	1101,	11,	11,	110,	1100,	1100
2017-01-03 17:17:25 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:25 AI_Player.update()	Search took2ms
2017-01-03 17:17:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-03 17:17:25 AI_Player.update()		1010,	1110,	101,	1100,	1110,	101,	11
2017-01-03 17:17:25 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		110,	1010,	1110,	110,	1001,	110,	1010
2017-01-03 17:17:25 AI_Player.update()		1110,	101,	1101,	11,	1011,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		1011,	1101,	11,	101,	110,	1100,	1100
2017-01-03 17:17:25 AI_Player.update()		1100,	111,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:25 AI_Player.update()	Search took208ms
2017-01-03 17:17:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 17:17:25 AI_Player.update()		1010,	1110,	101,	1010,	1110,	101,	11
2017-01-03 17:17:25 AI_Player.update()		1110,	1100,	1110,	110,	111,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		110,	1010,	1110,	11,	1001,	110,	1010
2017-01-03 17:17:25 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		1011,	1101,	11,	110,	110,	1100,	1100
2017-01-03 17:17:25 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:25 AI_Player.update()	Search took2ms
2017-01-03 17:17:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()		110,	11,	111,	1100,	111,	1010,	11
2017-01-03 17:17:25 AI_Player.update()		1010,	1110,	101,	1010,	1110,	101,	11
2017-01-03 17:17:25 AI_Player.update()		1110,	1100,	1110,	110,	111,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		110,	1010,	1110,	11,	1001,	110,	1010
2017-01-03 17:17:25 AI_Player.update()		1110,	101,	1101,	101,	1011,	1011,	1011
2017-01-03 17:17:25 AI_Player.update()		1101,	11,	110,	110,	1100,	1100,	1011
2017-01-03 17:17:25 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:25 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:25 AI_Player.update()	update
2017-01-03 17:17:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:26 AI_Player.update()	Search took509ms
2017-01-03 17:17:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:26 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-03 17:17:26 AI_Player.update()		1010,	1110,	101,	1010,	1110,	1010,	11
2017-01-03 17:17:26 AI_Player.update()		1110,	1100,	1110,	110,	111,	101,	1011
2017-01-03 17:17:26 AI_Player.update()		110,	1010,	1110,	11,	1001,	1011,	1010
2017-01-03 17:17:26 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-03 17:17:26 AI_Player.update()		1101,	11,	110,	110,	1100,	1011,	1011
2017-01-03 17:17:26 AI_Player.update()		1100,	111,	1101,	101,	1101,	1100,	1001
2017-01-03 17:17:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:26 AI_Player.update()	update
2017-01-03 17:17:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:17:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:26 AI_Player.update()	update
2017-01-03 17:17:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:26 AI_Player.update()	Search took4ms
2017-01-03 17:17:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:26 AI_Player.update()		110,	1110,	111,	1100,	111,	11,	11
2017-01-03 17:17:26 AI_Player.update()		1010,	1100,	101,	1010,	1110,	1010,	11
2017-01-03 17:17:26 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-03 17:17:26 AI_Player.update()		110,	101,	1110,	11,	1001,	1011,	1010
2017-01-03 17:17:26 AI_Player.update()		1110,	11,	1101,	101,	1011,	110,	1011
2017-01-03 17:17:26 AI_Player.update()		1101,	111,	110,	110,	1100,	1011,	1011
2017-01-03 17:17:26 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-03 17:17:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:17:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:26 AI_Player.update()	update
2017-01-03 17:17:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:26 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:17:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:26 AI_Player.update()	update
2017-01-03 17:17:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:27 AI_Player.update()	Search took788ms
2017-01-03 17:17:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:27 AI_Player.update()		110,	1100,	111,	1100,	111,	11,	11
2017-01-03 17:17:27 AI_Player.update()		1010,	1010,	101,	1010,	1110,	1010,	11
2017-01-03 17:17:27 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-03 17:17:27 AI_Player.update()		110,	11,	1110,	11,	1001,	1011,	1010
2017-01-03 17:17:27 AI_Player.update()		1110,	111,	1101,	101,	1011,	110,	1011
2017-01-03 17:17:27 AI_Player.update()		1101,	11,	110,	110,	1100,	1011,	1011
2017-01-03 17:17:27 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1100,	1001
2017-01-03 17:17:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:17:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:27 AI_Player.update()	update
2017-01-03 17:17:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:17:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:27 AI_Player.update()	update
2017-01-03 17:17:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:27 AI_Player.update()	Search took6ms
2017-01-03 17:17:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:27 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-03 17:17:27 AI_Player.update()		1010,	1010,	101,	110,	1110,	1010,	11
2017-01-03 17:17:27 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 17:17:27 AI_Player.update()		110,	11,	1110,	101,	1001,	1011,	1010
2017-01-03 17:17:27 AI_Player.update()		1110,	111,	1101,	110,	1011,	110,	1011
2017-01-03 17:17:27 AI_Player.update()		1101,	11,	110,	101,	1100,	1011,	1011
2017-01-03 17:17:27 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:17:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:27 AI_Player.update()	update
2017-01-03 17:17:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:27 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:27 AI_Player.update()	update
2017-01-03 17:17:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:28 AI_Player.update()	Search took934ms
2017-01-03 17:17:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:28 AI_Player.update()		1010,	101,	101,	110,	1110,	1010,	11
2017-01-03 17:17:28 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-03 17:17:28 AI_Player.update()		110,	111,	1110,	101,	1001,	1011,	1010
2017-01-03 17:17:28 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 17:17:28 AI_Player.update()		1101,	1110,	110,	101,	1100,	1011,	1011
2017-01-03 17:17:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:17:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:28 AI_Player.update()	Search took2ms
2017-01-03 17:17:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-03 17:17:28 AI_Player.update()		1010,	1010,	101,	110,	1110,	1010,	11
2017-01-03 17:17:28 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 17:17:28 AI_Player.update()		110,	11,	1110,	101,	1001,	1011,	1010
2017-01-03 17:17:28 AI_Player.update()		1110,	111,	1101,	110,	1011,	110,	1011
2017-01-03 17:17:28 AI_Player.update()		1101,	11,	110,	101,	1100,	1011,	1011
2017-01-03 17:17:28 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:28 AI_Player.update()	Search took97ms
2017-01-03 17:17:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:28 AI_Player.update()		1010,	101,	101,	110,	1110,	1010,	11
2017-01-03 17:17:28 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-03 17:17:28 AI_Player.update()		110,	111,	1110,	101,	1001,	1011,	1010
2017-01-03 17:17:28 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 17:17:28 AI_Player.update()		1101,	1110,	110,	101,	1100,	1011,	1011
2017-01-03 17:17:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:28 AI_Player.update()	Search took6ms
2017-01-03 17:17:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:28 AI_Player.update()		101,	101,	110,	1110,	1010,	11,	1010
2017-01-03 17:17:28 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-03 17:17:28 AI_Player.update()		110,	111,	1110,	101,	1001,	1011,	1010
2017-01-03 17:17:28 AI_Player.update()		1110,	11,	1101,	110,	1011,	110,	1011
2017-01-03 17:17:28 AI_Player.update()		1101,	1110,	110,	101,	1100,	1011,	1011
2017-01-03 17:17:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:28 AI_Player.update()	Search took697ms
2017-01-03 17:17:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:28 AI_Player.update()		101,	101,	110,	1110,	1010,	101,	1010
2017-01-03 17:17:28 AI_Player.update()		1110,	11,	1110,	11,	111,	1011,	1011
2017-01-03 17:17:28 AI_Player.update()		110,	111,	1110,	101,	1001,	110,	1010
2017-01-03 17:17:28 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-03 17:17:28 AI_Player.update()		1101,	1110,	110,	101,	1100,	1100,	1011
2017-01-03 17:17:28 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:17:28 AI_Player.update()	Player b has won!
2017-01-03 17:17:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:28 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:28 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:28 AI_Player.update()	Search took1ms
2017-01-03 17:17:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-03 17:17:28 AI_Player.update()		1010,	110,	1100,	1110,	11,	1011,	101
2017-01-03 17:17:28 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1101,	1011
2017-01-03 17:17:28 AI_Player.update()		101,	1001,	101,	1101,	1010,	11,	110
2017-01-03 17:17:28 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:28 AI_Player.update()		1001,	101,	1010,	1001,	1001,	1100,	1010
2017-01-03 17:17:28 AI_Player.update()		1100,	111,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:28 AI_Player.update()	update
2017-01-03 17:17:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:29 AI_Player.update()	Search took485ms
2017-01-03 17:17:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()		110,	111,	111,	110,	111,	110,	11
2017-01-03 17:17:29 AI_Player.update()		1010,	101,	1100,	1110,	11,	1011,	101
2017-01-03 17:17:29 AI_Player.update()		1110,	110,	1110,	1110,	111,	1101,	1011
2017-01-03 17:17:29 AI_Player.update()		101,	1100,	101,	1101,	1010,	11,	110
2017-01-03 17:17:29 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:29 AI_Player.update()		1001,	110,	1010,	1001,	1001,	1100,	1010
2017-01-03 17:17:29 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()	update
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()	update
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:29 AI_Player.update()	Search took2ms
2017-01-03 17:17:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()		110,	111,	111,	110,	111,	110,	11
2017-01-03 17:17:29 AI_Player.update()		101,	1100,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:29 AI_Player.update()		1110,	110,	1110,	1110,	111,	1101,	1011
2017-01-03 17:17:29 AI_Player.update()		101,	1100,	101,	1101,	1010,	11,	110
2017-01-03 17:17:29 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:29 AI_Player.update()		1001,	110,	1010,	1001,	1001,	1100,	1010
2017-01-03 17:17:29 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()	update
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()	update
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:29 AI_Player.update()	Search took543ms
2017-01-03 17:17:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()		110,	111,	111,	110,	111,	110,	11
2017-01-03 17:17:29 AI_Player.update()		101,	1100,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:29 AI_Player.update()		1110,	110,	1110,	1110,	111,	1101,	1011
2017-01-03 17:17:29 AI_Player.update()		1100,	101,	1101,	1010,	11,	110,	101
2017-01-03 17:17:29 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:29 AI_Player.update()		1001,	110,	1010,	1001,	1001,	1100,	1010
2017-01-03 17:17:29 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()	update
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()	update
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:29 AI_Player.update()	Search took3ms
2017-01-03 17:17:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()		110,	111,	111,	110,	111,	110,	11
2017-01-03 17:17:29 AI_Player.update()		101,	1100,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:29 AI_Player.update()		1110,	110,	1110,	1110,	111,	1101,	1011
2017-01-03 17:17:29 AI_Player.update()		101,	1101,	1010,	11,	110,	101,	1100
2017-01-03 17:17:29 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:29 AI_Player.update()		1001,	110,	1010,	1001,	1001,	1100,	1010
2017-01-03 17:17:29 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()	update
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:29 AI_Player.update()	update
2017-01-03 17:17:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took83ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	111,	111,	110,	111,	110,	11
2017-01-03 17:17:30 AI_Player.update()		101,	1100,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	110,	1110,	1110,	111,	1101,	1011
2017-01-03 17:17:30 AI_Player.update()		1100,	101,	1101,	1010,	11,	110,	101
2017-01-03 17:17:30 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	110,	1010,	1001,	1001,	1100,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took4ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	111,	111,	110,	111,	110,	11
2017-01-03 17:17:30 AI_Player.update()		101,	1100,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	110,	1110,	1110,	111,	1101,	1011
2017-01-03 17:17:30 AI_Player.update()		101,	1101,	1010,	11,	110,	101,	1100
2017-01-03 17:17:30 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	110,	1010,	1001,	1001,	1100,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took340ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	111,	111,	110,	111,	101,	11
2017-01-03 17:17:30 AI_Player.update()		101,	1100,	1110,	11,	1011,	1101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-03 17:17:30 AI_Player.update()		101,	1101,	1010,	11,	110,	110,	1100
2017-01-03 17:17:30 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1100,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	110,	1010,	1001,	1001,	11,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	101,	1101,	110,	1101,	110,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took6ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-03 17:17:30 AI_Player.update()		101,	110,	1110,	11,	1011,	1101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	1101,	1110,	1110,	111,	101,	1011
2017-01-03 17:17:30 AI_Player.update()		101,	1001,	1010,	11,	110,	110,	1100
2017-01-03 17:17:30 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1100,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	101,	1010,	1001,	1001,	11,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	111,	1101,	110,	1101,	110,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took94ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	1100,	111,	110,	111,	1101,	11
2017-01-03 17:17:30 AI_Player.update()		101,	110,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	1101,	1110,	1110,	111,	110,	1011
2017-01-03 17:17:30 AI_Player.update()		101,	1001,	1010,	11,	110,	1100,	1100
2017-01-03 17:17:30 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	101,	1010,	1001,	1001,	110,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	111,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took3ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	110,	111,	110,	111,	1101,	11
2017-01-03 17:17:30 AI_Player.update()		101,	1101,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	1001,	1110,	1110,	111,	110,	1011
2017-01-03 17:17:30 AI_Player.update()		101,	110,	1010,	11,	110,	1100,	1100
2017-01-03 17:17:30 AI_Player.update()		1110,	101,	1101,	1100,	1011,	11,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	111,	1010,	1001,	1001,	110,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	1100,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took102ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	1101,	111,	110,	111,	1101,	11
2017-01-03 17:17:30 AI_Player.update()		101,	1001,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	110,	1110,	1110,	111,	110,	1011
2017-01-03 17:17:30 AI_Player.update()		101,	101,	1010,	11,	110,	1100,	1100
2017-01-03 17:17:30 AI_Player.update()		1110,	111,	1101,	1100,	1011,	11,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	1100,	1010,	1001,	1001,	110,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took3ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	1001,	111,	110,	111,	1101,	11
2017-01-03 17:17:30 AI_Player.update()		101,	110,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	101,	1110,	1110,	111,	110,	1011
2017-01-03 17:17:30 AI_Player.update()		101,	111,	1010,	11,	110,	1100,	1100
2017-01-03 17:17:30 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	11,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	110,	1010,	1001,	1001,	110,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	1101,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took114ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	1001,	111,	11,	111,	1101,	11
2017-01-03 17:17:30 AI_Player.update()		101,	110,	1110,	1110,	1011,	101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	101,	1110,	11,	111,	110,	1011
2017-01-03 17:17:30 AI_Player.update()		101,	111,	1010,	1100,	110,	1100,	1100
2017-01-03 17:17:30 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	11,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	110,	1010,	110,	1001,	110,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	1101,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took4ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	110,	111,	11,	111,	1101,	11
2017-01-03 17:17:30 AI_Player.update()		101,	101,	1110,	1110,	1011,	101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	111,	1110,	11,	111,	110,	1011
2017-01-03 17:17:30 AI_Player.update()		101,	1100,	1010,	1100,	110,	1100,	1100
2017-01-03 17:17:30 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	1101,	1010,	110,	1001,	110,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took56ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	110,	111,	110,	111,	1101,	11
2017-01-03 17:17:30 AI_Player.update()		101,	101,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	111,	1110,	1110,	111,	110,	1011
2017-01-03 17:17:30 AI_Player.update()		101,	1100,	1010,	11,	110,	1100,	1100
2017-01-03 17:17:30 AI_Player.update()		1110,	110,	1101,	1100,	1011,	11,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	1101,	1010,	1001,	1001,	110,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:30 AI_Player.update()	Search took3ms
2017-01-03 17:17:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-03 17:17:30 AI_Player.update()		101,	111,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:30 AI_Player.update()		1110,	1100,	1110,	1110,	111,	110,	1011
2017-01-03 17:17:30 AI_Player.update()		101,	110,	1010,	11,	110,	1100,	1100
2017-01-03 17:17:30 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-03 17:17:30 AI_Player.update()		1001,	1001,	1010,	1001,	1001,	110,	1010
2017-01-03 17:17:30 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:30 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:30 AI_Player.update()	update
2017-01-03 17:17:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:31 AI_Player.update()	Search took215ms
2017-01-03 17:17:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-03 17:17:31 AI_Player.update()		101,	111,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:31 AI_Player.update()		1110,	1100,	1110,	1110,	111,	110,	1011
2017-01-03 17:17:31 AI_Player.update()		1100,	101,	110,	1010,	11,	110,	1100
2017-01-03 17:17:31 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-03 17:17:31 AI_Player.update()		1001,	1001,	1010,	1001,	1001,	110,	1010
2017-01-03 17:17:31 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:31 AI_Player.update()	Search took2ms
2017-01-03 17:17:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()		110,	101,	111,	110,	111,	1101,	11
2017-01-03 17:17:31 AI_Player.update()		101,	111,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:31 AI_Player.update()		1110,	1100,	1110,	1110,	111,	110,	1011
2017-01-03 17:17:31 AI_Player.update()		101,	110,	1010,	11,	110,	1100,	1100
2017-01-03 17:17:31 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	11,	1011
2017-01-03 17:17:31 AI_Player.update()		1001,	1001,	1010,	1001,	1001,	110,	1010
2017-01-03 17:17:31 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:31 AI_Player.update()	Search took270ms
2017-01-03 17:17:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-03 17:17:31 AI_Player.update()		101,	111,	1110,	11,	1011,	1101,	1010
2017-01-03 17:17:31 AI_Player.update()		1110,	1100,	1110,	1110,	111,	101,	1011
2017-01-03 17:17:31 AI_Player.update()		101,	110,	1010,	11,	110,	110,	1100
2017-01-03 17:17:31 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1100,	1011
2017-01-03 17:17:31 AI_Player.update()		1001,	1001,	1010,	1001,	1001,	11,	1010
2017-01-03 17:17:31 AI_Player.update()		1100,	110,	1101,	110,	1101,	110,	1001
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:31 AI_Player.update()	Search took5ms
2017-01-03 17:17:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()		110,	111,	111,	110,	111,	101,	11
2017-01-03 17:17:31 AI_Player.update()		101,	1100,	1110,	11,	1011,	1101,	1010
2017-01-03 17:17:31 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-03 17:17:31 AI_Player.update()		101,	1101,	1010,	11,	110,	110,	1100
2017-01-03 17:17:31 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1100,	1011
2017-01-03 17:17:31 AI_Player.update()		1001,	110,	1010,	1001,	1001,	11,	1010
2017-01-03 17:17:31 AI_Player.update()		1100,	101,	1101,	110,	1101,	110,	1001
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:31 AI_Player.update()	Search took528ms
2017-01-03 17:17:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()		110,	111,	111,	110,	111,	110,	11
2017-01-03 17:17:31 AI_Player.update()		101,	1100,	1110,	11,	1011,	101,	1010
2017-01-03 17:17:31 AI_Player.update()		1110,	110,	1110,	1110,	111,	1101,	1011
2017-01-03 17:17:31 AI_Player.update()		101,	1101,	1010,	11,	110,	101,	1100
2017-01-03 17:17:31 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:31 AI_Player.update()		1001,	110,	1010,	1001,	1001,	1100,	1010
2017-01-03 17:17:31 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:17:31 AI_Player.update()	Player b has won!
2017-01-03 17:17:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:31 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:31 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:31 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:31 AI_Player.update()	Search took1ms
2017-01-03 17:17:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()		110,	1011,	111,	111,	111,	11,	11
2017-01-03 17:17:31 AI_Player.update()		110,	1010,	11,	1010,	110,	110,	1110
2017-01-03 17:17:31 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1010,	1011
2017-01-03 17:17:31 AI_Player.update()		11,	101,	1001,	110,	11,	111,	1001
2017-01-03 17:17:31 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1011,	1011
2017-01-03 17:17:31 AI_Player.update()		101,	1100,	101,	1010,	1010,	101,	101
2017-01-03 17:17:31 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-03 17:17:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:31 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:31 AI_Player.update()	update
2017-01-03 17:17:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:32 AI_Player.update()	Search took117ms
2017-01-03 17:17:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()		110,	1011,	111,	1010,	111,	11,	11
2017-01-03 17:17:32 AI_Player.update()		110,	1010,	11,	1100,	110,	110,	1110
2017-01-03 17:17:32 AI_Player.update()		1110,	1110,	1110,	110,	111,	1010,	1011
2017-01-03 17:17:32 AI_Player.update()		11,	101,	1001,	1010,	11,	111,	1001
2017-01-03 17:17:32 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1011,	1011
2017-01-03 17:17:32 AI_Player.update()		101,	1100,	101,	1010,	1010,	101,	101
2017-01-03 17:17:32 AI_Player.update()		1100,	101,	1101,	111,	1101,	101,	1001
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:32 AI_Player.update()	Search took1ms
2017-01-03 17:17:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:32 AI_Player.update()		110,	1110,	11,	1100,	110,	110,	1110
2017-01-03 17:17:32 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-03 17:17:32 AI_Player.update()		11,	1110,	1001,	1010,	11,	111,	1001
2017-01-03 17:17:32 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1011,	1011
2017-01-03 17:17:32 AI_Player.update()		101,	101,	101,	1010,	1010,	101,	101
2017-01-03 17:17:32 AI_Player.update()		1100,	1011,	1101,	111,	1101,	101,	1001
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:32 AI_Player.update()	Search took133ms
2017-01-03 17:17:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:32 AI_Player.update()		110,	1110,	11,	1100,	110,	110,	1110
2017-01-03 17:17:32 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-03 17:17:32 AI_Player.update()		1110,	1001,	1010,	11,	111,	1001,	11
2017-01-03 17:17:32 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1011,	1011
2017-01-03 17:17:32 AI_Player.update()		101,	101,	101,	1010,	1010,	101,	101
2017-01-03 17:17:32 AI_Player.update()		1100,	1011,	1101,	111,	1101,	101,	1001
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:32 AI_Player.update()	Search took2ms
2017-01-03 17:17:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-03 17:17:32 AI_Player.update()		110,	1110,	11,	110,	110,	110,	1110
2017-01-03 17:17:32 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-03 17:17:32 AI_Player.update()		1110,	1001,	1010,	1010,	111,	1001,	11
2017-01-03 17:17:32 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1011,	1011
2017-01-03 17:17:32 AI_Player.update()		101,	101,	101,	111,	1010,	101,	101
2017-01-03 17:17:32 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	101,	1001
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:32 AI_Player.update()	Search took66ms
2017-01-03 17:17:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:32 AI_Player.update()		110,	1110,	11,	1100,	110,	110,	1110
2017-01-03 17:17:32 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-03 17:17:32 AI_Player.update()		1110,	1001,	1010,	11,	111,	1001,	11
2017-01-03 17:17:32 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1011,	1011
2017-01-03 17:17:32 AI_Player.update()		101,	101,	101,	1010,	1010,	101,	101
2017-01-03 17:17:32 AI_Player.update()		1100,	1011,	1101,	111,	1101,	101,	1001
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:32 AI_Player.update()	Search took2ms
2017-01-03 17:17:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-03 17:17:32 AI_Player.update()		110,	1110,	11,	110,	110,	110,	1110
2017-01-03 17:17:32 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-03 17:17:32 AI_Player.update()		1110,	1001,	1010,	1010,	111,	1001,	11
2017-01-03 17:17:32 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1011,	1011
2017-01-03 17:17:32 AI_Player.update()		101,	101,	101,	111,	1010,	101,	101
2017-01-03 17:17:32 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	101,	1001
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:32 AI_Player.update()	Search took263ms
2017-01-03 17:17:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-03 17:17:32 AI_Player.update()		110,	1110,	11,	11,	110,	110,	1110
2017-01-03 17:17:32 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-03 17:17:32 AI_Player.update()		1110,	1001,	1010,	1010,	111,	1001,	11
2017-01-03 17:17:32 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1011,	1011
2017-01-03 17:17:32 AI_Player.update()		101,	101,	101,	1010,	1010,	101,	101
2017-01-03 17:17:32 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:32 AI_Player.update()	Search took2ms
2017-01-03 17:17:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-03 17:17:32 AI_Player.update()		1110,	11,	11,	110,	110,	1110,	110
2017-01-03 17:17:32 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-03 17:17:32 AI_Player.update()		1110,	1001,	1010,	1010,	111,	1001,	11
2017-01-03 17:17:32 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1011,	1011
2017-01-03 17:17:32 AI_Player.update()		101,	101,	101,	1010,	1010,	101,	101
2017-01-03 17:17:32 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:32 AI_Player.update()	Search took244ms
2017-01-03 17:17:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-03 17:17:32 AI_Player.update()		110,	1110,	11,	11,	110,	110,	1110
2017-01-03 17:17:32 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-03 17:17:32 AI_Player.update()		1110,	1001,	1010,	1010,	111,	1001,	11
2017-01-03 17:17:32 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1011,	1011
2017-01-03 17:17:32 AI_Player.update()		101,	101,	101,	1010,	1010,	101,	101
2017-01-03 17:17:32 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:32 AI_Player.update()	Search took3ms
2017-01-03 17:17:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-03 17:17:32 AI_Player.update()		110,	1110,	11,	11,	110,	1010,	1110
2017-01-03 17:17:32 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-03 17:17:32 AI_Player.update()		1110,	1001,	1010,	1010,	111,	1011,	11
2017-01-03 17:17:32 AI_Player.update()		1110,	1100,	1101,	111,	1011,	101,	1011
2017-01-03 17:17:32 AI_Player.update()		101,	101,	101,	1010,	1010,	101,	101
2017-01-03 17:17:32 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:32 AI_Player.update()	update
2017-01-03 17:17:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took512ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	1110,	111,	110,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		110,	101,	11,	11,	110,	1010,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1110,	1100,	1010,	1010,	111,	1011,	11
2017-01-03 17:17:33 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1011,	101,	1010,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took3ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	1110,	111,	110,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		110,	101,	11,	11,	110,	1010,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1100,	1010,	1010,	111,	1011,	11,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	101,	1101,	111,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1011,	101,	1010,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took20ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		110,	101,	11,	1010,	110,	1010,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1001,	1110,	111,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1100,	1010,	1010,	111,	1011,	11,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1011,	101,	1100,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took4ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	1110,	111,	1010,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		110,	101,	11,	111,	110,	1010,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1001,	1110,	111,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1100,	1010,	1010,	1010,	1011,	11,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1011,	101,	110,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took13ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	1110,	111,	11,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		110,	101,	11,	1010,	110,	1010,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1001,	1110,	111,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1100,	1010,	1010,	111,	1011,	11,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1011,	101,	1100,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took8ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		110,	1001,	11,	1010,	110,	1010,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1010,	1110,	111,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1100,	101,	1010,	111,	1011,	11,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1010,	101,	1100,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	1110,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took127ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		1110,	110,	1001,	11,	1010,	110,	1010
2017-01-03 17:17:33 AI_Player.update()		1110,	1010,	1110,	111,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1100,	101,	1010,	111,	1011,	11,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1010,	101,	1100,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	1110,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took3ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		110,	1001,	11,	1010,	110,	1010,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1010,	1110,	111,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1100,	101,	1010,	111,	1011,	11,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1010,	101,	1100,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	1110,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took11ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		1110,	110,	1001,	11,	1010,	110,	1010
2017-01-03 17:17:33 AI_Player.update()		1110,	1010,	1110,	111,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1100,	101,	1010,	111,	1011,	11,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1010,	101,	1100,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	1110,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took2ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		110,	1001,	11,	1010,	110,	1010,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1010,	1110,	111,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1100,	101,	1010,	111,	1011,	11,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1010,	101,	1100,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	1110,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took135ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	101,	111,	11,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		1001,	11,	1010,	110,	1010,	1110,	110
2017-01-03 17:17:33 AI_Player.update()		1110,	1010,	1110,	111,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1100,	101,	1010,	111,	1011,	11,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1010,	101,	1100,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	1110,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took1ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	11,	111,	11,	111,	110,	11
2017-01-03 17:17:33 AI_Player.update()		1001,	1010,	1010,	110,	1010,	1110,	110
2017-01-03 17:17:33 AI_Player.update()		1110,	101,	1110,	111,	111,	1001,	1011
2017-01-03 17:17:33 AI_Player.update()		1100,	1011,	1010,	111,	1011,	11,	1110
2017-01-03 17:17:33 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	101,	1011
2017-01-03 17:17:33 AI_Player.update()		101,	1110,	101,	1100,	1010,	101,	101
2017-01-03 17:17:33 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:17:33 AI_Player.update()	Player a has won!
2017-01-03 17:17:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:33 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took1ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-03 17:17:33 AI_Player.update()		1011,	101,	1010,	11,	110,	101,	110
2017-01-03 17:17:33 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:33 AI_Player.update()		1001,	1100,	110,	1010,	1010,	111,	1001
2017-01-03 17:17:33 AI_Player.update()		1110,	110,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:33 AI_Player.update()		1110,	101,	1100,	110,	11,	111,	1100
2017-01-03 17:17:33 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took85ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	1100,	111,	1101,	111,	101,	11
2017-01-03 17:17:33 AI_Player.update()		1011,	101,	1010,	1100,	110,	101,	110
2017-01-03 17:17:33 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-03 17:17:33 AI_Player.update()		1001,	1100,	110,	1101,	1010,	111,	1001
2017-01-03 17:17:33 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-03 17:17:33 AI_Player.update()		1110,	101,	1100,	1101,	11,	111,	1100
2017-01-03 17:17:33 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:33 AI_Player.update()	Search took1ms
2017-01-03 17:17:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-03 17:17:33 AI_Player.update()		1011,	101,	1010,	11,	110,	101,	110
2017-01-03 17:17:33 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:33 AI_Player.update()		1001,	1100,	110,	1010,	1010,	111,	1001
2017-01-03 17:17:33 AI_Player.update()		1110,	110,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:33 AI_Player.update()		1110,	101,	1100,	110,	11,	111,	1100
2017-01-03 17:17:33 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:33 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:33 AI_Player.update()	update
2017-01-03 17:17:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:34 AI_Player.update()	Search took512ms
2017-01-03 17:17:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:34 AI_Player.update()		1011,	1001,	1010,	11,	110,	101,	110
2017-01-03 17:17:34 AI_Player.update()		1110,	1100,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:34 AI_Player.update()		1001,	110,	110,	1010,	1010,	111,	1001
2017-01-03 17:17:34 AI_Player.update()		1110,	101,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:34 AI_Player.update()		1110,	101,	1100,	110,	11,	111,	1100
2017-01-03 17:17:34 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()	update
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()	update
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:34 AI_Player.update()	Search took1ms
2017-01-03 17:17:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-03 17:17:34 AI_Player.update()		1011,	101,	1010,	11,	110,	101,	110
2017-01-03 17:17:34 AI_Player.update()		1110,	1001,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:34 AI_Player.update()		1001,	1100,	110,	1010,	1010,	111,	1001
2017-01-03 17:17:34 AI_Player.update()		1110,	110,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:34 AI_Player.update()		1110,	101,	1100,	110,	11,	111,	1100
2017-01-03 17:17:34 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()	update
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()	update
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:34 AI_Player.update()	Search took174ms
2017-01-03 17:17:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:34 AI_Player.update()		1011,	1100,	1010,	11,	110,	101,	110
2017-01-03 17:17:34 AI_Player.update()		1110,	101,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:34 AI_Player.update()		1001,	1001,	110,	1010,	1010,	111,	1001
2017-01-03 17:17:34 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:34 AI_Player.update()		1110,	110,	1100,	110,	11,	111,	1100
2017-01-03 17:17:34 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()	update
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()	update
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:34 AI_Player.update()	Search took1ms
2017-01-03 17:17:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:34 AI_Player.update()		1011,	1100,	1010,	11,	110,	101,	110
2017-01-03 17:17:34 AI_Player.update()		1110,	101,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:34 AI_Player.update()		1001,	110,	1010,	1010,	111,	1001,	1001
2017-01-03 17:17:34 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:34 AI_Player.update()		1110,	110,	1100,	110,	11,	111,	1100
2017-01-03 17:17:34 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()	update
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:34 AI_Player.update()	update
2017-01-03 17:17:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:35 AI_Player.update()	Search took828ms
2017-01-03 17:17:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:35 AI_Player.update()		110,	1011,	1100,	1010,	11,	110,	101
2017-01-03 17:17:35 AI_Player.update()		1110,	101,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		1001,	110,	1010,	1010,	111,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		1110,	110,	1100,	110,	11,	111,	1100
2017-01-03 17:17:35 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:35 AI_Player.update()	Search took3ms
2017-01-03 17:17:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()		110,	1011,	111,	1100,	111,	101,	11
2017-01-03 17:17:35 AI_Player.update()		110,	101,	1100,	1010,	11,	110,	101
2017-01-03 17:17:35 AI_Player.update()		1110,	110,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		1001,	1100,	1010,	1010,	111,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()		1110,	110,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		1110,	101,	1100,	110,	11,	111,	1100
2017-01-03 17:17:35 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:35 AI_Player.update()	Search took60ms
2017-01-03 17:17:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:35 AI_Player.update()		110,	1011,	1100,	1010,	11,	110,	101
2017-01-03 17:17:35 AI_Player.update()		1110,	101,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		1001,	110,	1010,	1010,	111,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		1110,	110,	1100,	110,	11,	111,	1100
2017-01-03 17:17:35 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:35 AI_Player.update()	Search took5ms
2017-01-03 17:17:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:35 AI_Player.update()		101,	110,	1011,	1100,	1010,	11,	110
2017-01-03 17:17:35 AI_Player.update()		1110,	101,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		1001,	110,	1010,	1010,	111,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		1110,	110,	1100,	110,	11,	111,	1100
2017-01-03 17:17:35 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:35 AI_Player.update()	Search took491ms
2017-01-03 17:17:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:35 AI_Player.update()		101,	110,	1011,	1100,	1010,	11,	110
2017-01-03 17:17:35 AI_Player.update()		1110,	101,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		110,	1010,	1010,	111,	1001,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		1110,	110,	1100,	110,	11,	111,	1100
2017-01-03 17:17:35 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:35 AI_Player.update()	Search took2ms
2017-01-03 17:17:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 17:17:35 AI_Player.update()		101,	110,	1011,	1100,	1010,	11,	110
2017-01-03 17:17:35 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		110,	1010,	1010,	1101,	1001,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()		1110,	1100,	1101,	111,	1011,	110,	1011
2017-01-03 17:17:35 AI_Player.update()		1110,	110,	1100,	1101,	11,	111,	1100
2017-01-03 17:17:35 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-03 17:17:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:35 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:35 AI_Player.update()	update
2017-01-03 17:17:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:36 AI_Player.update()	Search took137ms
2017-01-03 17:17:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()		110,	101,	111,	1101,	111,	101,	11
2017-01-03 17:17:36 AI_Player.update()		101,	110,	1011,	1100,	1010,	11,	110
2017-01-03 17:17:36 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		1010,	1010,	1101,	1001,	1001,	1001,	110
2017-01-03 17:17:36 AI_Player.update()		1110,	1100,	1101,	111,	1011,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		1110,	110,	1100,	1101,	11,	111,	1100
2017-01-03 17:17:36 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:36 AI_Player.update()	Search took3ms
2017-01-03 17:17:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:36 AI_Player.update()		101,	110,	1011,	1100,	1010,	11,	110
2017-01-03 17:17:36 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		1010,	1010,	1101,	111,	1001,	1001,	110
2017-01-03 17:17:36 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		1110,	110,	1100,	110,	11,	111,	1100
2017-01-03 17:17:36 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:36 AI_Player.update()	Search took302ms
2017-01-03 17:17:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:36 AI_Player.update()		101,	101,	1011,	1100,	1010,	11,	110
2017-01-03 17:17:36 AI_Player.update()		1110,	110,	1110,	1001,	111,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		1010,	101,	1101,	111,	1001,	1001,	110
2017-01-03 17:17:36 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		1110,	1100,	1100,	110,	11,	111,	1100
2017-01-03 17:17:36 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:36 AI_Player.update()	Search took3ms
2017-01-03 17:17:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:36 AI_Player.update()		101,	110,	1011,	1100,	1010,	11,	110
2017-01-03 17:17:36 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		1010,	1010,	1101,	111,	1001,	1001,	110
2017-01-03 17:17:36 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		1110,	110,	1100,	110,	11,	111,	1100
2017-01-03 17:17:36 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:36 AI_Player.update()	Search took357ms
2017-01-03 17:17:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:36 AI_Player.update()		101,	110,	1011,	1100,	1010,	11,	110
2017-01-03 17:17:36 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		110,	1010,	1010,	1101,	111,	1001,	1001
2017-01-03 17:17:36 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		1110,	110,	1100,	110,	11,	111,	1100
2017-01-03 17:17:36 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:36 AI_Player.update()	Search took4ms
2017-01-03 17:17:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-03 17:17:36 AI_Player.update()		101,	110,	1011,	1001,	1010,	11,	110
2017-01-03 17:17:36 AI_Player.update()		1110,	101,	1110,	1101,	111,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		110,	1010,	1010,	1101,	111,	1001,	1001
2017-01-03 17:17:36 AI_Player.update()		1110,	1100,	1101,	110,	1011,	110,	1011
2017-01-03 17:17:36 AI_Player.update()		1110,	110,	1100,	1101,	11,	111,	1100
2017-01-03 17:17:36 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-03 17:17:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:36 AI_Player.update()	update
2017-01-03 17:17:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:37 AI_Player.update()	Search took369ms
2017-01-03 17:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-03 17:17:37 AI_Player.update()		101,	110,	1011,	1001,	1010,	101,	110
2017-01-03 17:17:37 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-03 17:17:37 AI_Player.update()		110,	1010,	1010,	1101,	111,	110,	1001
2017-01-03 17:17:37 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1001,	1011
2017-01-03 17:17:37 AI_Player.update()		1110,	110,	1100,	1101,	11,	110,	1100
2017-01-03 17:17:37 AI_Player.update()		1100,	101,	1101,	1100,	1101,	111,	1001
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:37 AI_Player.update()	Search took3ms
2017-01-03 17:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-03 17:17:37 AI_Player.update()		101,	110,	1011,	1101,	1010,	101,	110
2017-01-03 17:17:37 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-03 17:17:37 AI_Player.update()		110,	1010,	1010,	110,	111,	110,	1001
2017-01-03 17:17:37 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1001,	1011
2017-01-03 17:17:37 AI_Player.update()		1110,	110,	1100,	1100,	11,	110,	1100
2017-01-03 17:17:37 AI_Player.update()		1100,	101,	1101,	1100,	1101,	111,	1001
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:37 AI_Player.update()	Search took195ms
2017-01-03 17:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()		110,	101,	111,	1001,	111,	111,	11
2017-01-03 17:17:37 AI_Player.update()		101,	110,	1011,	1101,	1010,	1001,	110
2017-01-03 17:17:37 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-03 17:17:37 AI_Player.update()		110,	1010,	1010,	110,	111,	11,	1001
2017-01-03 17:17:37 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:37 AI_Player.update()		1110,	110,	1100,	1100,	11,	1001,	1100
2017-01-03 17:17:37 AI_Player.update()		1100,	101,	1101,	1100,	1101,	110,	1001
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:37 AI_Player.update()	Search took6ms
2017-01-03 17:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()		110,	101,	111,	1001,	111,	111,	11
2017-01-03 17:17:37 AI_Player.update()		101,	101,	1011,	1101,	1010,	1001,	110
2017-01-03 17:17:37 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:17:37 AI_Player.update()		110,	101,	1010,	110,	111,	11,	1001
2017-01-03 17:17:37 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-03 17:17:37 AI_Player.update()		1110,	1100,	1100,	1100,	11,	1001,	1100
2017-01-03 17:17:37 AI_Player.update()		1100,	110,	1101,	1100,	1101,	110,	1001
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:17:37 AI_Player.update()	Player a has won!
2017-01-03 17:17:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:37 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:37 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:37 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:37 AI_Player.update()	Search took1ms
2017-01-03 17:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-03 17:17:37 AI_Player.update()		1100,	101,	101,	11,	101,	1110,	101
2017-01-03 17:17:37 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-03 17:17:37 AI_Player.update()		1100,	1001,	110,	1101,	1001,	101,	1011
2017-01-03 17:17:37 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-03 17:17:37 AI_Player.update()		1011,	110,	11,	101,	1010,	101,	1010
2017-01-03 17:17:37 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:37 AI_Player.update()	Search took25ms
2017-01-03 17:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-03 17:17:37 AI_Player.update()		101,	1100,	101,	101,	11,	101,	1110
2017-01-03 17:17:37 AI_Player.update()		1110,	11,	1110,	11,	111,	1010,	1011
2017-01-03 17:17:37 AI_Player.update()		1100,	1001,	110,	1101,	1001,	101,	1011
2017-01-03 17:17:37 AI_Player.update()		1110,	1100,	1101,	11,	1011,	11,	1011
2017-01-03 17:17:37 AI_Player.update()		1011,	110,	11,	101,	1010,	101,	1010
2017-01-03 17:17:37 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1010,	1001
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:37 AI_Player.update()	Search took1ms
2017-01-03 17:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-03 17:17:37 AI_Player.update()		101,	1100,	101,	11,	11,	101,	1110
2017-01-03 17:17:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-03 17:17:37 AI_Player.update()		1100,	1001,	110,	11,	1001,	101,	1011
2017-01-03 17:17:37 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	11,	1011
2017-01-03 17:17:37 AI_Player.update()		1011,	110,	11,	11,	1010,	101,	1010
2017-01-03 17:17:37 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:37 AI_Player.update()	Search took373ms
2017-01-03 17:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-03 17:17:37 AI_Player.update()		101,	1100,	101,	11,	11,	1010,	1110
2017-01-03 17:17:37 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-03 17:17:37 AI_Player.update()		1100,	1001,	110,	11,	1001,	1010,	1011
2017-01-03 17:17:37 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	101,	1011
2017-01-03 17:17:37 AI_Player.update()		1011,	110,	11,	11,	1010,	11,	1010
2017-01-03 17:17:37 AI_Player.update()		1100,	1101,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:37 AI_Player.update()	Search took8ms
2017-01-03 17:17:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-03 17:17:37 AI_Player.update()		101,	11,	101,	11,	11,	1010,	1110
2017-01-03 17:17:37 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:17:37 AI_Player.update()		1100,	1100,	110,	11,	1001,	1010,	1011
2017-01-03 17:17:37 AI_Player.update()		1110,	110,	1101,	1101,	1011,	101,	1011
2017-01-03 17:17:37 AI_Player.update()		1011,	1101,	11,	11,	1010,	11,	1010
2017-01-03 17:17:37 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:37 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:37 AI_Player.update()	update
2017-01-03 17:17:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:39 AI_Player.update()	Search took1277ms
2017-01-03 17:17:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:39 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 17:17:39 AI_Player.update()		101,	11,	101,	101,	11,	1010,	1110
2017-01-03 17:17:39 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:17:39 AI_Player.update()		1100,	1100,	110,	1101,	1001,	1010,	1011
2017-01-03 17:17:39 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-03 17:17:39 AI_Player.update()		1011,	1101,	11,	101,	1010,	11,	1010
2017-01-03 17:17:39 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:39 AI_Player.update()	update
2017-01-03 17:17:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:39 AI_Player.update()	update
2017-01-03 17:17:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:39 AI_Player.update()	Search took4ms
2017-01-03 17:17:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:39 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-03 17:17:39 AI_Player.update()		101,	1001,	101,	101,	11,	1010,	1110
2017-01-03 17:17:39 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:39 AI_Player.update()		1100,	110,	110,	1101,	1001,	1010,	1011
2017-01-03 17:17:39 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-03 17:17:39 AI_Player.update()		1011,	101,	11,	101,	1010,	11,	1010
2017-01-03 17:17:39 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:39 AI_Player.update()	update
2017-01-03 17:17:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:39 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:39 AI_Player.update()	update
2017-01-03 17:17:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:40 AI_Player.update()	Search took1013ms
2017-01-03 17:17:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:40 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 17:17:40 AI_Player.update()		101,	11,	101,	101,	11,	1010,	1110
2017-01-03 17:17:40 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:17:40 AI_Player.update()		1100,	1100,	110,	1101,	1001,	1010,	1011
2017-01-03 17:17:40 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-03 17:17:40 AI_Player.update()		1011,	1101,	11,	101,	1010,	11,	1010
2017-01-03 17:17:40 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-03 17:17:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:40 AI_Player.update()	update
2017-01-03 17:17:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:40 AI_Player.update()	update
2017-01-03 17:17:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:40 AI_Player.update()	Search took5ms
2017-01-03 17:17:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:40 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-03 17:17:40 AI_Player.update()		101,	11,	101,	11,	11,	1010,	1110
2017-01-03 17:17:40 AI_Player.update()		1110,	1001,	1110,	1101,	111,	101,	1011
2017-01-03 17:17:40 AI_Player.update()		1100,	1100,	110,	11,	1001,	1010,	1011
2017-01-03 17:17:40 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-03 17:17:40 AI_Player.update()		1011,	1101,	11,	1100,	1010,	11,	1010
2017-01-03 17:17:40 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:17:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:40 AI_Player.update()	update
2017-01-03 17:17:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:40 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:40 AI_Player.update()	update
2017-01-03 17:17:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:41 AI_Player.update()	Search took994ms
2017-01-03 17:17:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:41 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 17:17:41 AI_Player.update()		101,	11,	101,	1101,	11,	1010,	1110
2017-01-03 17:17:41 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:17:41 AI_Player.update()		1100,	1100,	110,	101,	1001,	1010,	1011
2017-01-03 17:17:41 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-03 17:17:41 AI_Player.update()		1011,	1101,	11,	11,	1010,	11,	1010
2017-01-03 17:17:41 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:41 AI_Player.update()	update
2017-01-03 17:17:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:41 AI_Player.update()	update
2017-01-03 17:17:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:41 AI_Player.update()	Search took3ms
2017-01-03 17:17:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:41 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-03 17:17:41 AI_Player.update()		101,	1001,	101,	1101,	11,	1010,	1110
2017-01-03 17:17:41 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:41 AI_Player.update()		1100,	110,	110,	101,	1001,	1010,	1011
2017-01-03 17:17:41 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	101,	1011
2017-01-03 17:17:41 AI_Player.update()		1011,	101,	11,	11,	1010,	11,	1010
2017-01-03 17:17:41 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:41 AI_Player.update()	update
2017-01-03 17:17:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:41 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:41 AI_Player.update()	update
2017-01-03 17:17:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took977ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-03 17:17:42 AI_Player.update()		101,	1001,	101,	11,	11,	1010,	1110
2017-01-03 17:17:42 AI_Player.update()		1110,	1100,	1110,	1101,	111,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1100,	110,	110,	11,	1001,	1010,	1011
2017-01-03 17:17:42 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1011,	101,	11,	1100,	1010,	11,	1010
2017-01-03 17:17:42 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took1ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-03 17:17:42 AI_Player.update()		101,	1100,	101,	11,	11,	1010,	1110
2017-01-03 17:17:42 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1100,	1101,	110,	11,	1001,	1010,	1011
2017-01-03 17:17:42 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1011,	1100,	11,	1100,	1010,	11,	1010
2017-01-03 17:17:42 AI_Player.update()		1100,	11,	1101,	11,	1101,	101,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took438ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-03 17:17:42 AI_Player.update()		101,	1100,	101,	1101,	11,	1010,	1110
2017-01-03 17:17:42 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1100,	1101,	110,	101,	1001,	1010,	1011
2017-01-03 17:17:42 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1011,	1100,	11,	11,	1010,	11,	1010
2017-01-03 17:17:42 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took2ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	1001,	111,	1101,	111,	1010,	11
2017-01-03 17:17:42 AI_Player.update()		101,	1100,	101,	11,	11,	1010,	1110
2017-01-03 17:17:42 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1100,	1101,	110,	1100,	1001,	1010,	1011
2017-01-03 17:17:42 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1011,	1100,	11,	101,	1010,	11,	1010
2017-01-03 17:17:42 AI_Player.update()		1100,	11,	1101,	11,	1101,	101,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took73ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-03 17:17:42 AI_Player.update()		101,	110,	101,	11,	11,	1010,	1110
2017-01-03 17:17:42 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1100,	101,	110,	1100,	1001,	1010,	1011
2017-01-03 17:17:42 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1011,	11,	11,	101,	1010,	11,	1010
2017-01-03 17:17:42 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took1ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	110,	111,	1101,	111,	1010,	11
2017-01-03 17:17:42 AI_Player.update()		101,	1101,	101,	11,	11,	1010,	1110
2017-01-03 17:17:42 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1100,	1100,	110,	1100,	1001,	1010,	1011
2017-01-03 17:17:42 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1011,	1001,	11,	101,	1010,	11,	1010
2017-01-03 17:17:42 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took215ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	110,	111,	1101,	111,	101,	11
2017-01-03 17:17:42 AI_Player.update()		101,	1101,	101,	11,	11,	1010,	1110
2017-01-03 17:17:42 AI_Player.update()		1110,	101,	1110,	101,	111,	1010,	1011
2017-01-03 17:17:42 AI_Player.update()		1100,	1100,	110,	1100,	1001,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		1110,	11,	1101,	11,	1011,	1010,	1011
2017-01-03 17:17:42 AI_Player.update()		1011,	1001,	11,	101,	1010,	101,	1010
2017-01-03 17:17:42 AI_Player.update()		1100,	1100,	1101,	11,	1101,	11,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:17:42 AI_Player.update()	Player b has won!
2017-01-03 17:17:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:42 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took0ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-03 17:17:42 AI_Player.update()		1100,	1110,	1010,	1100,	111,	11,	101
2017-01-03 17:17:42 AI_Player.update()		1110,	11,	1110,	111,	111,	1010,	1011
2017-01-03 17:17:42 AI_Player.update()		11,	1001,	11,	11,	111,	11,	11
2017-01-03 17:17:42 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		101,	11,	1010,	1100,	101,	1001,	11
2017-01-03 17:17:42 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1101,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took17ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-03 17:17:42 AI_Player.update()		1100,	1110,	1010,	11,	111,	11,	101
2017-01-03 17:17:42 AI_Player.update()		1110,	11,	1110,	1100,	111,	1010,	1011
2017-01-03 17:17:42 AI_Player.update()		11,	1001,	11,	111,	111,	11,	11
2017-01-03 17:17:42 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		101,	11,	1010,	1101,	101,	1001,	11
2017-01-03 17:17:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1101,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took0ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	1110,	111,	1010,	111,	1100,	11
2017-01-03 17:17:42 AI_Player.update()		1100,	11,	1010,	11,	111,	11,	101
2017-01-03 17:17:42 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1010,	1011
2017-01-03 17:17:42 AI_Player.update()		11,	1001,	11,	111,	111,	11,	11
2017-01-03 17:17:42 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-03 17:17:42 AI_Player.update()		101,	1010,	1010,	1101,	101,	1001,	11
2017-01-03 17:17:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1101,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took33ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	1110,	111,	1010,	111,	11,	11
2017-01-03 17:17:42 AI_Player.update()		1100,	11,	1010,	11,	111,	1010,	101
2017-01-03 17:17:42 AI_Player.update()		1110,	1001,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:42 AI_Player.update()		11,	1001,	11,	111,	111,	101,	11
2017-01-03 17:17:42 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:42 AI_Player.update()		101,	1010,	1010,	1101,	101,	1101,	11
2017-01-03 17:17:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:42 AI_Player.update()	Search took1ms
2017-01-03 17:17:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:42 AI_Player.update()		1100,	1110,	1010,	11,	111,	1010,	101
2017-01-03 17:17:42 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:42 AI_Player.update()		11,	1001,	11,	111,	111,	101,	11
2017-01-03 17:17:42 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:42 AI_Player.update()		101,	11,	1010,	1101,	101,	1101,	11
2017-01-03 17:17:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:42 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:42 AI_Player.update()	update
2017-01-03 17:17:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took164ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	1110,	1010,	11,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		11,	1001,	11,	111,	111,	101,	11
2017-01-03 17:17:43 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		11,	101,	11,	1010,	1101,	101,	1101
2017-01-03 17:17:43 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took1ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	1010,	1010,	11,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		11,	11,	11,	111,	111,	101,	11
2017-01-03 17:17:43 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		11,	1001,	11,	1010,	1101,	101,	1101
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took73ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	1010,	1010,	11,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		11,	11,	11,	111,	111,	101,	11
2017-01-03 17:17:43 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	11,	1001,	11,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took2ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	1010,	1010,	11,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		11,	1110,	11,	111,	111,	101,	11
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	1001,	1001,	11,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took112ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	1010,	1010,	11,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1110,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		11,	11,	11,	111,	111,	101,	11
2017-01-03 17:17:43 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	11,	1001,	11,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took2ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	1010,	1010,	11,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		11,	1110,	11,	111,	111,	101,	11
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	1001,	1001,	11,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took62ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	1010,	1010,	11,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	111,	111,	101,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	1001,	1001,	11,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took3ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1010,	11,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	111,	111,	101,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	11,	1001,	11,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took62ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	11,	111,	1010,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1010,	11,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		1010,	111,	111,	101,	11,	11,	1110
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	11,	1001,	11,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took2ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1010,	1100,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		1010,	111,	111,	11,	11,	11,	1110
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	11,	1001,	1100,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took86ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1010,	1100,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		111,	111,	11,	11,	11,	1110,	1010
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	11,	1001,	1100,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took3ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1010,	101,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		111,	111,	11,	11,	11,	1110,	1010
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	11,	1001,	1010,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took106ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1010,	1100,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		111,	111,	11,	11,	11,	1110,	1010
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	11,	1001,	1100,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took2ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1010,	101,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		111,	111,	11,	11,	11,	1110,	1010
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	11,	1001,	1010,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took86ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1010,	11,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		111,	111,	11,	1100,	11,	1110,	1010
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	11,	1001,	11,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:43 AI_Player.update()	Search took2ms
2017-01-03 17:17:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-03 17:17:43 AI_Player.update()		1100,	101,	1010,	11,	111,	1010,	101
2017-01-03 17:17:43 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:43 AI_Player.update()		111,	111,	11,	1010,	11,	1110,	1010
2017-01-03 17:17:43 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:43 AI_Player.update()		1101,	11,	1001,	1100,	1010,	1101,	101
2017-01-03 17:17:43 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-03 17:17:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:43 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:43 AI_Player.update()	update
2017-01-03 17:17:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:44 AI_Player.update()	Search took180ms
2017-01-03 17:17:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-03 17:17:44 AI_Player.update()		1100,	101,	1010,	11,	111,	1010,	101
2017-01-03 17:17:44 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-03 17:17:44 AI_Player.update()		111,	111,	11,	1100,	11,	1110,	1010
2017-01-03 17:17:44 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-03 17:17:44 AI_Player.update()		1101,	11,	1001,	11,	1010,	1101,	101
2017-01-03 17:17:44 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1100,	1001
2017-01-03 17:17:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()	update
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()	update
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:44 AI_Player.update()	Search took2ms
2017-01-03 17:17:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-03 17:17:44 AI_Player.update()		1100,	101,	1010,	11,	111,	1010,	101
2017-01-03 17:17:44 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:44 AI_Player.update()		111,	111,	11,	1010,	11,	1110,	1010
2017-01-03 17:17:44 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:44 AI_Player.update()		1101,	11,	1001,	1100,	1010,	1101,	101
2017-01-03 17:17:44 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-03 17:17:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()	update
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()	update
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:44 AI_Player.update()	Search took61ms
2017-01-03 17:17:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-03 17:17:44 AI_Player.update()		101,	1100,	101,	1010,	11,	111,	1010
2017-01-03 17:17:44 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-03 17:17:44 AI_Player.update()		111,	111,	11,	1010,	11,	1110,	1010
2017-01-03 17:17:44 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:17:44 AI_Player.update()		1101,	11,	1001,	1100,	1010,	1101,	101
2017-01-03 17:17:44 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-03 17:17:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	1 6
2017-01-03 17:17:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()	update
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:17:44 AI_Player.update()	Player b has won!
2017-01-03 17:17:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:44 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:44 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()	update
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:44 AI_Player.update()	Search took0ms
2017-01-03 17:17:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-03 17:17:44 AI_Player.update()		101,	1010,	1010,	1100,	101,	11,	1010
2017-01-03 17:17:44 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-03 17:17:44 AI_Player.update()		1010,	1010,	1100,	101,	1010,	101,	1011
2017-01-03 17:17:44 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:44 AI_Player.update()		1010,	1011,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:44 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-03 17:17:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()	update
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:44 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:44 AI_Player.update()	update
2017-01-03 17:17:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:45 AI_Player.update()	Search took1154ms
2017-01-03 17:17:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-03 17:17:45 AI_Player.update()		101,	1010,	1010,	1100,	101,	11,	1010
2017-01-03 17:17:45 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-03 17:17:45 AI_Player.update()		1010,	1100,	101,	1010,	101,	1011,	1010
2017-01-03 17:17:45 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:45 AI_Player.update()		1010,	1011,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:45 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-03 17:17:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()	update
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()	update
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:45 AI_Player.update()	Search took2ms
2017-01-03 17:17:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:17:45 AI_Player.update()		101,	110,	1010,	1100,	101,	11,	1010
2017-01-03 17:17:45 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:45 AI_Player.update()		1010,	1001,	101,	1010,	101,	1011,	1010
2017-01-03 17:17:45 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:45 AI_Player.update()		1010,	110,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:45 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-03 17:17:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()	update
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()	update
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:45 AI_Player.update()	Search took577ms
2017-01-03 17:17:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:17:45 AI_Player.update()		101,	110,	1010,	1100,	101,	11,	1010
2017-01-03 17:17:45 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:45 AI_Player.update()		1010,	1010,	1001,	101,	1010,	101,	1011
2017-01-03 17:17:45 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:45 AI_Player.update()		1010,	110,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:45 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-03 17:17:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()	update
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()	update
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:45 AI_Player.update()	Search took6ms
2017-01-03 17:17:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-03 17:17:45 AI_Player.update()		101,	110,	1010,	1100,	101,	101,	1010
2017-01-03 17:17:45 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:45 AI_Player.update()		1010,	1010,	1001,	101,	1010,	1010,	1011
2017-01-03 17:17:45 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1001,	1011
2017-01-03 17:17:45 AI_Player.update()		1010,	110,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:45 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()	update
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:45 AI_Player.update()	update
2017-01-03 17:17:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:46 AI_Player.update()	Search took879ms
2017-01-03 17:17:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:46 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-03 17:17:46 AI_Player.update()		101,	110,	1010,	1100,	101,	101,	1010
2017-01-03 17:17:46 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:46 AI_Player.update()		1010,	1001,	101,	1010,	1010,	1011,	1010
2017-01-03 17:17:46 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1001,	1011
2017-01-03 17:17:46 AI_Player.update()		1010,	110,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:46 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:17:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:46 AI_Player.update()	update
2017-01-03 17:17:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:46 AI_Player.update()	update
2017-01-03 17:17:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:46 AI_Player.update()	Search took5ms
2017-01-03 17:17:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:46 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-03 17:17:46 AI_Player.update()		101,	110,	1010,	1100,	101,	101,	1010
2017-01-03 17:17:46 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:46 AI_Player.update()		1001,	101,	1010,	1010,	1011,	1010,	1010
2017-01-03 17:17:46 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1001,	1011
2017-01-03 17:17:46 AI_Player.update()		1010,	110,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:46 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:17:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:46 AI_Player.update()	update
2017-01-03 17:17:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:46 AI_Player.update()	update
2017-01-03 17:17:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:47 AI_Player.update()	Search took809ms
2017-01-03 17:17:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-03 17:17:47 AI_Player.update()		101,	110,	1010,	1100,	101,	101,	1010
2017-01-03 17:17:47 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-03 17:17:47 AI_Player.update()		101,	1010,	1010,	1011,	1010,	1010,	1001
2017-01-03 17:17:47 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1001,	1011
2017-01-03 17:17:47 AI_Player.update()		1010,	110,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:47 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()	update
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()	update
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:47 AI_Player.update()	Search took4ms
2017-01-03 17:17:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-03 17:17:47 AI_Player.update()		101,	1100,	1010,	1100,	101,	101,	1010
2017-01-03 17:17:47 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:17:47 AI_Player.update()		101,	1011,	1010,	1011,	1010,	1010,	1001
2017-01-03 17:17:47 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-03 17:17:47 AI_Player.update()		1010,	101,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:47 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()	update
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()	update
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:47 AI_Player.update()	Search took332ms
2017-01-03 17:17:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-03 17:17:47 AI_Player.update()		101,	1100,	1010,	1100,	101,	101,	1010
2017-01-03 17:17:47 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:17:47 AI_Player.update()		1001,	101,	1011,	1010,	1011,	1010,	1010
2017-01-03 17:17:47 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-03 17:17:47 AI_Player.update()		1010,	101,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:47 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()	update
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()	update
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:47 AI_Player.update()	Search took5ms
2017-01-03 17:17:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-03 17:17:47 AI_Player.update()		101,	1010,	1010,	1100,	101,	101,	1010
2017-01-03 17:17:47 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 17:17:47 AI_Player.update()		1001,	110,	1011,	1010,	1011,	1010,	1010
2017-01-03 17:17:47 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-03 17:17:47 AI_Player.update()		1010,	1010,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:47 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()	update
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:47 AI_Player.update()	update
2017-01-03 17:17:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:49 AI_Player.update()	Search took1648ms
2017-01-03 17:17:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-03 17:17:49 AI_Player.update()		101,	1010,	1010,	1100,	101,	101,	1010
2017-01-03 17:17:49 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 17:17:49 AI_Player.update()		110,	1011,	1010,	1011,	1010,	1010,	1001
2017-01-03 17:17:49 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-03 17:17:49 AI_Player.update()		1010,	1010,	1110,	1001,	1100,	1001,	1010
2017-01-03 17:17:49 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-03 17:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()	update
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:17:49 AI_Player.update()	Player b has won!
2017-01-03 17:17:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:49 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:49 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:49 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()	update
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:49 AI_Player.update()	Search took1ms
2017-01-03 17:17:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 17:17:49 AI_Player.update()		1010,	110,	101,	1001,	110,	110,	110
2017-01-03 17:17:49 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-03 17:17:49 AI_Player.update()		1110,	110,	111,	1001,	101,	1011,	1010
2017-01-03 17:17:49 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:49 AI_Player.update()		1110,	111,	11,	1001,	1010,	1100,	11
2017-01-03 17:17:49 AI_Player.update()		1100,	1101,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()	update
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()	update
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:49 AI_Player.update()	Search took26ms
2017-01-03 17:17:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 17:17:49 AI_Player.update()		110,	101,	1001,	110,	110,	110,	1010
2017-01-03 17:17:49 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-03 17:17:49 AI_Player.update()		1110,	110,	111,	1001,	101,	1011,	1010
2017-01-03 17:17:49 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:49 AI_Player.update()		1110,	111,	11,	1001,	1010,	1100,	11
2017-01-03 17:17:49 AI_Player.update()		1100,	1101,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()	update
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()	update
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:49 AI_Player.update()	Search took6ms
2017-01-03 17:17:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-03 17:17:49 AI_Player.update()		110,	101,	1001,	110,	110,	110,	1010
2017-01-03 17:17:49 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-03 17:17:49 AI_Player.update()		1110,	101,	111,	1001,	101,	1011,	1010
2017-01-03 17:17:49 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:49 AI_Player.update()		1110,	1101,	11,	1001,	1010,	1100,	11
2017-01-03 17:17:49 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()	update
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:49 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:49 AI_Player.update()	update
2017-01-03 17:17:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:50 AI_Player.update()	Search took560ms
2017-01-03 17:17:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()		110,	101,	111,	11,	111,	11,	11
2017-01-03 17:17:50 AI_Player.update()		110,	101,	1001,	110,	110,	1010,	1010
2017-01-03 17:17:50 AI_Player.update()		1110,	110,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:50 AI_Player.update()		1110,	101,	111,	1001,	101,	101,	1010
2017-01-03 17:17:50 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1011,	1011
2017-01-03 17:17:50 AI_Player.update()		1110,	1101,	11,	1001,	1010,	1001,	11
2017-01-03 17:17:50 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-03 17:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()	update
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()	update
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:50 AI_Player.update()	Search took3ms
2017-01-03 17:17:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-03 17:17:50 AI_Player.update()		110,	101,	1001,	110,	110,	1010,	1010
2017-01-03 17:17:50 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:50 AI_Player.update()		1110,	110,	111,	1001,	101,	101,	1010
2017-01-03 17:17:50 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1011,	1011
2017-01-03 17:17:50 AI_Player.update()		1110,	111,	11,	1001,	1010,	1001,	11
2017-01-03 17:17:50 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-03 17:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()	update
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()	update
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:50 AI_Player.update()	Search took134ms
2017-01-03 17:17:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 17:17:50 AI_Player.update()		110,	101,	1001,	110,	110,	110,	1010
2017-01-03 17:17:50 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-03 17:17:50 AI_Player.update()		1110,	110,	111,	1001,	101,	1011,	1010
2017-01-03 17:17:50 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:50 AI_Player.update()		1110,	111,	11,	1001,	1010,	1100,	11
2017-01-03 17:17:50 AI_Player.update()		1100,	1101,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()	update
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()	update
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:50 AI_Player.update()	Search took6ms
2017-01-03 17:17:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-03 17:17:50 AI_Player.update()		110,	101,	1001,	11,	110,	110,	1010
2017-01-03 17:17:50 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-03 17:17:50 AI_Player.update()		1110,	110,	111,	1011,	101,	1011,	1010
2017-01-03 17:17:50 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:50 AI_Player.update()		1110,	111,	11,	1001,	1010,	1100,	11
2017-01-03 17:17:50 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()	update
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:17:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:50 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:50 AI_Player.update()	update
2017-01-03 17:17:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:51 AI_Player.update()	Search took1105ms
2017-01-03 17:17:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:51 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:17:51 AI_Player.update()		110,	101,	1001,	11,	110,	110,	1010
2017-01-03 17:17:51 AI_Player.update()		1110,	110,	1110,	110,	111,	101,	1011
2017-01-03 17:17:51 AI_Player.update()		1110,	101,	111,	1011,	101,	1011,	1010
2017-01-03 17:17:51 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:51 AI_Player.update()		1110,	1101,	11,	1001,	1010,	1100,	11
2017-01-03 17:17:51 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:17:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:51 AI_Player.update()	update
2017-01-03 17:17:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:17:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:51 AI_Player.update()	update
2017-01-03 17:17:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:51 AI_Player.update()	Search took4ms
2017-01-03 17:17:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:51 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-03 17:17:51 AI_Player.update()		110,	101,	1001,	11,	110,	110,	1010
2017-01-03 17:17:51 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-03 17:17:51 AI_Player.update()		1110,	110,	111,	1011,	101,	1011,	1010
2017-01-03 17:17:51 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:51 AI_Player.update()		1110,	111,	11,	1001,	1010,	1100,	11
2017-01-03 17:17:51 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:17:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:51 AI_Player.update()	update
2017-01-03 17:17:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:17:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:51 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:51 AI_Player.update()	update
2017-01-03 17:17:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:52 AI_Player.update()	Search took1300ms
2017-01-03 17:17:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:52 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 17:17:52 AI_Player.update()		110,	101,	1001,	110,	110,	110,	1010
2017-01-03 17:17:52 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-03 17:17:52 AI_Player.update()		1110,	110,	111,	1001,	101,	1011,	1010
2017-01-03 17:17:52 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:52 AI_Player.update()		1110,	111,	11,	1001,	1010,	1100,	11
2017-01-03 17:17:52 AI_Player.update()		1100,	1101,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	6 4
2017-01-03 17:17:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:52 AI_Player.update()	update
2017-01-03 17:17:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:52 AI_Player.update()	update
2017-01-03 17:17:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:52 AI_Player.update()	Search took3ms
2017-01-03 17:17:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:52 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-03 17:17:52 AI_Player.update()		110,	101,	1001,	11,	110,	110,	1010
2017-01-03 17:17:52 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-03 17:17:52 AI_Player.update()		1110,	110,	111,	1011,	101,	1011,	1010
2017-01-03 17:17:52 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:52 AI_Player.update()		1110,	111,	11,	1001,	1010,	1100,	11
2017-01-03 17:17:52 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	11,	1001
2017-01-03 17:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:52 AI_Player.update()	update
2017-01-03 17:17:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:52 AI_Player.update()	update
2017-01-03 17:17:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:52 AI_Player.update()	Search took186ms
2017-01-03 17:17:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:52 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-03 17:17:52 AI_Player.update()		110,	101,	1001,	110,	110,	110,	1010
2017-01-03 17:17:52 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-03 17:17:52 AI_Player.update()		1110,	110,	111,	1001,	101,	1011,	1010
2017-01-03 17:17:52 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:52 AI_Player.update()		1110,	111,	11,	1001,	1010,	1100,	11
2017-01-03 17:17:52 AI_Player.update()		1100,	1101,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:17:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:52 AI_Player.update()	update
2017-01-03 17:17:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:52 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:52 AI_Player.update()	update
2017-01-03 17:17:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:53 AI_Player.update()	Search took5ms
2017-01-03 17:17:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-03 17:17:53 AI_Player.update()		110,	101,	1001,	110,	110,	110,	1010
2017-01-03 17:17:53 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-03 17:17:53 AI_Player.update()		1110,	101,	111,	1001,	101,	1011,	1010
2017-01-03 17:17:53 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:53 AI_Player.update()		1110,	1101,	11,	1001,	1010,	1100,	11
2017-01-03 17:17:53 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:17:53 AI_Player.update()	Player a has won!
2017-01-03 17:17:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:53 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:53 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:53 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:53 AI_Player.update()	Search took2ms
2017-01-03 17:17:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-03 17:17:53 AI_Player.update()		101,	1100,	1010,	11,	1011,	1010,	110
2017-01-03 17:17:53 AI_Player.update()		1110,	1100,	1110,	111,	111,	11,	1011
2017-01-03 17:17:53 AI_Player.update()		1100,	1001,	101,	11,	1010,	101,	101
2017-01-03 17:17:53 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:53 AI_Player.update()		1100,	11,	11,	11,	110,	1010,	1010
2017-01-03 17:17:53 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:53 AI_Player.update()	Search took8ms
2017-01-03 17:17:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-03 17:17:53 AI_Player.update()		110,	101,	1100,	1010,	11,	1011,	1010
2017-01-03 17:17:53 AI_Player.update()		1110,	1100,	1110,	111,	111,	11,	1011
2017-01-03 17:17:53 AI_Player.update()		1100,	1001,	101,	11,	1010,	101,	101
2017-01-03 17:17:53 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:53 AI_Player.update()		1100,	11,	11,	11,	110,	1010,	1010
2017-01-03 17:17:53 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:53 AI_Player.update()	Search took2ms
2017-01-03 17:17:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-03 17:17:53 AI_Player.update()		110,	101,	1100,	1010,	11,	1011,	1010
2017-01-03 17:17:53 AI_Player.update()		1110,	1100,	1110,	111,	111,	11,	1011
2017-01-03 17:17:53 AI_Player.update()		1100,	1001,	101,	11,	1010,	101,	101
2017-01-03 17:17:53 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:53 AI_Player.update()		11,	11,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:53 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	1010,	1001
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:53 AI_Player.update()	Search took103ms
2017-01-03 17:17:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()		110,	111,	111,	1010,	111,	1011,	11
2017-01-03 17:17:53 AI_Player.update()		110,	101,	1100,	1010,	11,	11,	1010
2017-01-03 17:17:53 AI_Player.update()		1110,	1100,	1110,	111,	111,	101,	1011
2017-01-03 17:17:53 AI_Player.update()		1100,	1001,	101,	11,	1010,	1010,	101
2017-01-03 17:17:53 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:53 AI_Player.update()		11,	11,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:53 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:53 AI_Player.update()	Search took6ms
2017-01-03 17:17:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-03 17:17:53 AI_Player.update()		110,	1100,	1100,	1010,	11,	11,	1010
2017-01-03 17:17:53 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-03 17:17:53 AI_Player.update()		1100,	101,	101,	11,	1010,	1010,	101
2017-01-03 17:17:53 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:53 AI_Player.update()		11,	1010,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:53 AI_Player.update()		1100,	111,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:53 AI_Player.update()	Search took642ms
2017-01-03 17:17:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-03 17:17:53 AI_Player.update()		110,	1100,	1100,	1010,	11,	11,	1010
2017-01-03 17:17:53 AI_Player.update()		1110,	1001,	1110,	111,	111,	101,	1011
2017-01-03 17:17:53 AI_Player.update()		101,	101,	11,	1010,	1010,	101,	1100
2017-01-03 17:17:53 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:53 AI_Player.update()		11,	1010,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:53 AI_Player.update()		1100,	111,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:53 AI_Player.update()	Search took3ms
2017-01-03 17:17:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-03 17:17:53 AI_Player.update()		110,	1001,	1100,	1010,	11,	11,	1010
2017-01-03 17:17:53 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-03 17:17:53 AI_Player.update()		101,	11,	11,	1010,	1010,	101,	1100
2017-01-03 17:17:53 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:53 AI_Player.update()		11,	111,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:53 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:53 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:53 AI_Player.update()	update
2017-01-03 17:17:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:54 AI_Player.update()	Search took245ms
2017-01-03 17:17:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-03 17:17:54 AI_Player.update()		1001,	1100,	1010,	11,	11,	1010,	110
2017-01-03 17:17:54 AI_Player.update()		1110,	101,	1110,	111,	111,	101,	1011
2017-01-03 17:17:54 AI_Player.update()		101,	11,	11,	1010,	1010,	101,	1100
2017-01-03 17:17:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:54 AI_Player.update()		11,	111,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:54 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:54 AI_Player.update()	Search took5ms
2017-01-03 17:17:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-03 17:17:54 AI_Player.update()		1001,	101,	1010,	11,	11,	1010,	110
2017-01-03 17:17:54 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-03 17:17:54 AI_Player.update()		101,	1010,	11,	1010,	1010,	101,	1100
2017-01-03 17:17:54 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:54 AI_Player.update()		11,	101,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:54 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:54 AI_Player.update()	Search took146ms
2017-01-03 17:17:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-03 17:17:54 AI_Player.update()		1001,	101,	1010,	11,	11,	1010,	110
2017-01-03 17:17:54 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-03 17:17:54 AI_Player.update()		1010,	11,	1010,	1010,	101,	1100,	101
2017-01-03 17:17:54 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:54 AI_Player.update()		11,	101,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:54 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:54 AI_Player.update()	Search took7ms
2017-01-03 17:17:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()		110,	1100,	111,	1101,	111,	1011,	11
2017-01-03 17:17:54 AI_Player.update()		1001,	101,	1010,	1010,	11,	1010,	110
2017-01-03 17:17:54 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-03 17:17:54 AI_Player.update()		1010,	11,	1010,	111,	101,	1100,	101
2017-01-03 17:17:54 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:17:54 AI_Player.update()		11,	101,	11,	101,	1010,	1010,	1100
2017-01-03 17:17:54 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:54 AI_Player.update()	Search took499ms
2017-01-03 17:17:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-03 17:17:54 AI_Player.update()		1001,	101,	1010,	11,	11,	1010,	110
2017-01-03 17:17:54 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-03 17:17:54 AI_Player.update()		1010,	11,	1010,	1010,	101,	1100,	101
2017-01-03 17:17:54 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:54 AI_Player.update()		11,	101,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:54 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:54 AI_Player.update()	Search took2ms
2017-01-03 17:17:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()		110,	1100,	111,	1101,	111,	1011,	11
2017-01-03 17:17:54 AI_Player.update()		1001,	101,	1010,	1010,	11,	1010,	110
2017-01-03 17:17:54 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-03 17:17:54 AI_Player.update()		1010,	11,	1010,	111,	101,	1100,	101
2017-01-03 17:17:54 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:17:54 AI_Player.update()		11,	101,	11,	101,	1010,	1010,	1100
2017-01-03 17:17:54 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:54 AI_Player.update()	Search took186ms
2017-01-03 17:17:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()		110,	1100,	111,	1010,	111,	1011,	11
2017-01-03 17:17:54 AI_Player.update()		1001,	101,	1010,	11,	11,	1010,	110
2017-01-03 17:17:54 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-03 17:17:54 AI_Player.update()		1010,	11,	1010,	1010,	101,	1100,	101
2017-01-03 17:17:54 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:54 AI_Player.update()		11,	101,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:54 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:54 AI_Player.update()	Search took8ms
2017-01-03 17:17:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-03 17:17:54 AI_Player.update()		1001,	11,	1010,	11,	11,	1010,	110
2017-01-03 17:17:54 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-03 17:17:54 AI_Player.update()		1010,	111,	1010,	1010,	101,	1100,	101
2017-01-03 17:17:54 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:54 AI_Player.update()		11,	1100,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:54 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:54 AI_Player.update()	update
2017-01-03 17:17:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:55 AI_Player.update()	Search took1000ms
2017-01-03 17:17:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:55 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-03 17:17:55 AI_Player.update()		1001,	11,	1010,	11,	11,	1010,	110
2017-01-03 17:17:55 AI_Player.update()		1110,	111,	1110,	111,	111,	101,	1011
2017-01-03 17:17:55 AI_Player.update()		1010,	101,	1010,	1010,	101,	1100,	101
2017-01-03 17:17:55 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:55 AI_Player.update()		11,	1100,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:55 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:55 AI_Player.update()	update
2017-01-03 17:17:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:55 AI_Player.update()	update
2017-01-03 17:17:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:55 AI_Player.update()	Search took5ms
2017-01-03 17:17:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:55 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-03 17:17:55 AI_Player.update()		1001,	11,	1010,	11,	11,	1010,	110
2017-01-03 17:17:55 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-03 17:17:55 AI_Player.update()		1010,	111,	1010,	1010,	101,	1100,	101
2017-01-03 17:17:55 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:17:55 AI_Player.update()		11,	1100,	11,	110,	1010,	1010,	1100
2017-01-03 17:17:55 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	11,	1001
2017-01-03 17:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:55 AI_Player.update()	update
2017-01-03 17:17:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:55 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:17:55 AI_Player.update()	Player a has won!
2017-01-03 17:17:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:55 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:55 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:55 AI_Player.update()	update
2017-01-03 17:17:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:55 AI_Player.update()	Search took3ms
2017-01-03 17:17:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:55 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 17:17:55 AI_Player.update()		1010,	110,	1011,	101,	1001,	101,	1100
2017-01-03 17:17:55 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-03 17:17:55 AI_Player.update()		1010,	110,	1010,	1010,	1001,	101,	11
2017-01-03 17:17:55 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:55 AI_Player.update()		11,	1100,	1011,	11,	11,	1010,	110
2017-01-03 17:17:55 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:55 AI_Player.update()	update
2017-01-03 17:17:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:55 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:55 AI_Player.update()	update
2017-01-03 17:17:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:56 AI_Player.update()	Search took114ms
2017-01-03 17:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 17:17:56 AI_Player.update()		110,	1011,	101,	1001,	101,	1100,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1010,	110,	1010,	1010,	1001,	101,	11
2017-01-03 17:17:56 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		11,	1100,	1011,	11,	11,	1010,	110
2017-01-03 17:17:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:56 AI_Player.update()	Search took2ms
2017-01-03 17:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 17:17:56 AI_Player.update()		110,	1011,	101,	1001,	101,	1100,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1010,	110,	1010,	1010,	1001,	101,	11
2017-01-03 17:17:56 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1100,	1011,	11,	11,	1010,	110,	11
2017-01-03 17:17:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:56 AI_Player.update()	Search took81ms
2017-01-03 17:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 17:17:56 AI_Player.update()		110,	1011,	101,	1001,	101,	1100,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	1010,	1001,	101,	11,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1100,	1011,	11,	11,	1010,	110,	11
2017-01-03 17:17:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:56 AI_Player.update()	Search took2ms
2017-01-03 17:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	101,	1001,	101,	1100,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	1011,	1110,	1100,	111,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		110,	11,	1010,	1001,	101,	11,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1100,	111,	11,	11,	1010,	110,	11
2017-01-03 17:17:56 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:56 AI_Player.update()	Search took124ms
2017-01-03 17:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 17:17:56 AI_Player.update()		110,	1011,	101,	1001,	101,	1100,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	1010,	1001,	101,	11,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1100,	1011,	11,	11,	1010,	110,	11
2017-01-03 17:17:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:56 AI_Player.update()	Search took2ms
2017-01-03 17:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-03 17:17:56 AI_Player.update()		110,	1011,	101,	1100,	101,	1100,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	1010,	1100,	101,	11,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1100,	1011,	11,	101,	1010,	110,	11
2017-01-03 17:17:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:56 AI_Player.update()	Search took163ms
2017-01-03 17:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-03 17:17:56 AI_Player.update()		110,	1011,	101,	1100,	101,	1100,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1010,	110,	1010,	1010,	1100,	101,	11
2017-01-03 17:17:56 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1100,	1011,	11,	101,	1010,	110,	11
2017-01-03 17:17:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:56 AI_Player.update()	Search took5ms
2017-01-03 17:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	101,	1100,	101,	1100,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	1011,	1110,	1001,	111,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1010,	11,	1010,	1010,	1100,	101,	11
2017-01-03 17:17:56 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1100,	111,	11,	101,	1010,	110,	11
2017-01-03 17:17:56 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:56 AI_Player.update()	Search took331ms
2017-01-03 17:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-03 17:17:56 AI_Player.update()		110,	1011,	101,	1100,	101,	1100,	1010
2017-01-03 17:17:56 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1010,	110,	1010,	1010,	1100,	101,	11
2017-01-03 17:17:56 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1100,	1011,	11,	101,	1010,	110,	11
2017-01-03 17:17:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:56 AI_Player.update()	Search took5ms
2017-01-03 17:17:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-03 17:17:56 AI_Player.update()		1010,	110,	1011,	101,	1100,	101,	1100
2017-01-03 17:17:56 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1010,	110,	1010,	1010,	1100,	101,	11
2017-01-03 17:17:56 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 17:17:56 AI_Player.update()		1100,	1011,	11,	101,	1010,	110,	11
2017-01-03 17:17:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:56 AI_Player.update()	update
2017-01-03 17:17:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:57 AI_Player.update()	Search took484ms
2017-01-03 17:17:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()		110,	1010,	111,	1001,	111,	1100,	11
2017-01-03 17:17:57 AI_Player.update()		1100,	1010,	110,	1011,	101,	1100,	101
2017-01-03 17:17:57 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-03 17:17:57 AI_Player.update()		1010,	110,	1010,	1010,	1100,	101,	11
2017-01-03 17:17:57 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-03 17:17:57 AI_Player.update()		1100,	1011,	11,	101,	1010,	110,	11
2017-01-03 17:17:57 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()	update
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()	update
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:57 AI_Player.update()	Search took3ms
2017-01-03 17:17:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 17:17:57 AI_Player.update()		1100,	1010,	110,	1001,	101,	1100,	101
2017-01-03 17:17:57 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:57 AI_Player.update()		1010,	110,	1010,	1001,	1100,	101,	11
2017-01-03 17:17:57 AI_Player.update()		1110,	111,	1101,	1010,	1011,	110,	1011
2017-01-03 17:17:57 AI_Player.update()		1100,	1011,	11,	11,	1010,	110,	11
2017-01-03 17:17:57 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()	update
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()	update
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:57 AI_Player.update()	Search took337ms
2017-01-03 17:17:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 17:17:57 AI_Player.update()		101,	1100,	1010,	110,	1001,	101,	1100
2017-01-03 17:17:57 AI_Player.update()		1110,	11,	1110,	1011,	111,	110,	1011
2017-01-03 17:17:57 AI_Player.update()		1010,	110,	1010,	1001,	1100,	101,	11
2017-01-03 17:17:57 AI_Player.update()		1110,	111,	1101,	1010,	1011,	110,	1011
2017-01-03 17:17:57 AI_Player.update()		1100,	1011,	11,	11,	1010,	110,	11
2017-01-03 17:17:57 AI_Player.update()		1100,	1010,	1101,	101,	1101,	110,	1001
2017-01-03 17:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()	update
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()	update
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:57 AI_Player.update()	Search took3ms
2017-01-03 17:17:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()		110,	1010,	111,	101,	111,	1100,	11
2017-01-03 17:17:57 AI_Player.update()		101,	1100,	1010,	101,	1001,	101,	1100
2017-01-03 17:17:57 AI_Player.update()		1110,	11,	1110,	110,	111,	110,	1011
2017-01-03 17:17:57 AI_Player.update()		1010,	110,	1010,	1011,	1100,	101,	11
2017-01-03 17:17:57 AI_Player.update()		1110,	111,	1101,	1001,	1011,	110,	1011
2017-01-03 17:17:57 AI_Player.update()		1100,	1011,	11,	1010,	1010,	110,	11
2017-01-03 17:17:57 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-03 17:17:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()	update
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:17:57 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:57 AI_Player.update()	update
2017-01-03 17:17:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:58 AI_Player.update()	Search took569ms
2017-01-03 17:17:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:17:58 AI_Player.update()		101,	1100,	1010,	101,	1001,	110,	1100
2017-01-03 17:17:58 AI_Player.update()		1110,	11,	1110,	110,	111,	101,	1011
2017-01-03 17:17:58 AI_Player.update()		1010,	110,	1010,	1011,	1100,	110,	11
2017-01-03 17:17:58 AI_Player.update()		1110,	111,	1101,	1001,	1011,	110,	1011
2017-01-03 17:17:58 AI_Player.update()		1100,	1011,	11,	1010,	1010,	110,	11
2017-01-03 17:17:58 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:17:58 AI_Player.update()	Player b has won!
2017-01-03 17:17:58 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:58 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:17:58 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:17:58 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:17:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:58 AI_Player.update()	Search took1ms
2017-01-03 17:17:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()		110,	1001,	111,	1011,	111,	101,	11
2017-01-03 17:17:58 AI_Player.update()		1001,	1100,	1011,	101,	11,	1100,	101
2017-01-03 17:17:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 17:17:58 AI_Player.update()		1100,	111,	1010,	101,	101,	11,	1010
2017-01-03 17:17:58 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:17:58 AI_Player.update()		1001,	1010,	101,	1001,	110,	1001,	1001
2017-01-03 17:17:58 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	111,	1001
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:58 AI_Player.update()	Search took99ms
2017-01-03 17:17:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-03 17:17:58 AI_Player.update()		1001,	1100,	1011,	101,	11,	1100,	101
2017-01-03 17:17:58 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-03 17:17:58 AI_Player.update()		1100,	111,	1010,	1001,	101,	11,	1010
2017-01-03 17:17:58 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:17:58 AI_Player.update()		1001,	1010,	101,	1010,	110,	1001,	1001
2017-01-03 17:17:58 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	111,	1001
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:58 AI_Player.update()	Search took0ms
2017-01-03 17:17:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:17:58 AI_Player.update()		1001,	1100,	1011,	101,	11,	1100,	101
2017-01-03 17:17:58 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-03 17:17:58 AI_Player.update()		1100,	1010,	1010,	1001,	101,	11,	1010
2017-01-03 17:17:58 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:17:58 AI_Player.update()		1001,	1100,	101,	1010,	110,	1001,	1001
2017-01-03 17:17:58 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	111,	1001
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:58 AI_Player.update()	Search took460ms
2017-01-03 17:17:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 17:17:58 AI_Player.update()		1001,	1100,	1011,	101,	11,	101,	101
2017-01-03 17:17:58 AI_Player.update()		1110,	111,	1110,	101,	111,	11,	1011
2017-01-03 17:17:58 AI_Player.update()		1100,	1010,	1010,	1001,	101,	101,	1010
2017-01-03 17:17:58 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:58 AI_Player.update()		1001,	1100,	101,	1010,	110,	111,	1001
2017-01-03 17:17:58 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	101,	1001
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:58 AI_Player.update()	Search took1ms
2017-01-03 17:17:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 17:17:58 AI_Player.update()		1001,	111,	1011,	101,	11,	101,	101
2017-01-03 17:17:58 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-03 17:17:58 AI_Player.update()		1100,	1010,	1010,	1001,	101,	101,	1010
2017-01-03 17:17:58 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:58 AI_Player.update()		1001,	1001,	101,	1010,	110,	111,	1001
2017-01-03 17:17:58 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-03 17:17:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:58 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:58 AI_Player.update()	update
2017-01-03 17:17:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:59 AI_Player.update()	Search took471ms
2017-01-03 17:17:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 17:17:59 AI_Player.update()		111,	1011,	101,	11,	101,	101,	1001
2017-01-03 17:17:59 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-03 17:17:59 AI_Player.update()		1100,	1010,	1010,	1001,	101,	101,	1010
2017-01-03 17:17:59 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:59 AI_Player.update()		1001,	1001,	101,	1010,	110,	111,	1001
2017-01-03 17:17:59 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-03 17:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()	update
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()	update
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:59 AI_Player.update()	Search took2ms
2017-01-03 17:17:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()		110,	1100,	111,	101,	111,	1100,	11
2017-01-03 17:17:59 AI_Player.update()		1001,	111,	1011,	101,	11,	101,	101
2017-01-03 17:17:59 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-03 17:17:59 AI_Player.update()		1100,	1010,	1010,	1001,	101,	101,	1010
2017-01-03 17:17:59 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-03 17:17:59 AI_Player.update()		1001,	1001,	101,	1010,	110,	111,	1001
2017-01-03 17:17:59 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-03 17:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()	update
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()	update
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:17:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:17:59 AI_Player.update()	Search took432ms
2017-01-03 17:17:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:17:59 AI_Player.update()		1001,	111,	1011,	101,	11,	11,	101
2017-01-03 17:17:59 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:17:59 AI_Player.update()		1100,	1010,	1010,	1001,	101,	1001,	1010
2017-01-03 17:17:59 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	111,	1011
2017-01-03 17:17:59 AI_Player.update()		1001,	1001,	101,	1010,	110,	101,	1001
2017-01-03 17:17:59 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()	update
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:17:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:17:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()	update
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:17:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:17:59 AI_Player.update()	Search took1ms
2017-01-03 17:17:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-03 17:17:59 AI_Player.update()		1001,	1010,	1011,	101,	11,	11,	101
2017-01-03 17:17:59 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:17:59 AI_Player.update()		1100,	1100,	1010,	1001,	101,	1001,	1010
2017-01-03 17:17:59 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	111,	1011
2017-01-03 17:17:59 AI_Player.update()		1001,	1100,	101,	1010,	110,	101,	1001
2017-01-03 17:17:59 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:17:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:17:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()	update
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:17:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:17:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:17:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:17:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:17:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:17:59 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:17:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:17:59 AI_Player.update()	update
2017-01-03 17:17:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:00 AI_Player.update()	Search took444ms
2017-01-03 17:18:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:18:00 AI_Player.update()		1001,	111,	1011,	101,	11,	11,	101
2017-01-03 17:18:00 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:18:00 AI_Player.update()		1100,	1010,	1010,	1001,	101,	1001,	1010
2017-01-03 17:18:00 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	111,	1011
2017-01-03 17:18:00 AI_Player.update()		1001,	1001,	101,	1010,	110,	101,	1001
2017-01-03 17:18:00 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:00 AI_Player.update()	Search took4ms
2017-01-03 17:18:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:18:00 AI_Player.update()		1001,	1100,	1011,	101,	11,	11,	101
2017-01-03 17:18:00 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-03 17:18:00 AI_Player.update()		1100,	1010,	1010,	1001,	101,	1001,	1010
2017-01-03 17:18:00 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	111,	1011
2017-01-03 17:18:00 AI_Player.update()		1001,	1100,	101,	1010,	110,	101,	1001
2017-01-03 17:18:00 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:00 AI_Player.update()	Search took204ms
2017-01-03 17:18:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:18:00 AI_Player.update()		1001,	1100,	1011,	101,	11,	11,	101
2017-01-03 17:18:00 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-03 17:18:00 AI_Player.update()		1010,	1010,	1001,	101,	1001,	1010,	1100
2017-01-03 17:18:00 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	111,	1011
2017-01-03 17:18:00 AI_Player.update()		1001,	1100,	101,	1010,	110,	101,	1001
2017-01-03 17:18:00 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	1100,	1001
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:00 AI_Player.update()	Search took2ms
2017-01-03 17:18:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:18:00 AI_Player.update()		1001,	1100,	1011,	101,	11,	11,	101
2017-01-03 17:18:00 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-03 17:18:00 AI_Player.update()		1010,	1010,	1001,	1001,	1001,	1010,	1100
2017-01-03 17:18:00 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	111,	1011
2017-01-03 17:18:00 AI_Player.update()		1001,	1100,	101,	1011,	110,	101,	1001
2017-01-03 17:18:00 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:00 AI_Player.update()	Search took165ms
2017-01-03 17:18:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:18:00 AI_Player.update()		1001,	1100,	1011,	101,	11,	11,	101
2017-01-03 17:18:00 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-03 17:18:00 AI_Player.update()		1010,	1001,	1001,	1001,	1010,	1100,	1010
2017-01-03 17:18:00 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	111,	1011
2017-01-03 17:18:00 AI_Player.update()		1001,	1100,	101,	1011,	110,	101,	1001
2017-01-03 17:18:00 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:00 AI_Player.update()	Search took3ms
2017-01-03 17:18:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:18:00 AI_Player.update()		1001,	111,	1011,	101,	11,	11,	101
2017-01-03 17:18:00 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:18:00 AI_Player.update()		1010,	1010,	1001,	1001,	1010,	1100,	1010
2017-01-03 17:18:00 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	111,	1011
2017-01-03 17:18:00 AI_Player.update()		1001,	1001,	101,	1011,	110,	101,	1001
2017-01-03 17:18:00 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:00 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:00 AI_Player.update()	update
2017-01-03 17:18:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:01 AI_Player.update()	Search took784ms
2017-01-03 17:18:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:18:01 AI_Player.update()		1001,	111,	1011,	101,	11,	11,	101
2017-01-03 17:18:01 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-03 17:18:01 AI_Player.update()		1010,	1010,	1001,	1010,	1010,	1100,	1010
2017-01-03 17:18:01 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	111,	1011
2017-01-03 17:18:01 AI_Player.update()		1001,	1001,	101,	101,	110,	101,	1001
2017-01-03 17:18:01 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()	update
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:01 AI_Player.update()	Player b has won!
2017-01-03 17:18:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:01 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:01 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:01 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()	update
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:01 AI_Player.update()	Search took1ms
2017-01-03 17:18:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-03 17:18:01 AI_Player.update()		1010,	1001,	101,	1110,	110,	101,	1011
2017-01-03 17:18:01 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:18:01 AI_Player.update()		1100,	110,	1010,	1001,	1001,	1100,	1110
2017-01-03 17:18:01 AI_Player.update()		1110,	11,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:01 AI_Player.update()		110,	1001,	1010,	1100,	1001,	1010,	101
2017-01-03 17:18:01 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()	update
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()	update
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:01 AI_Player.update()	Search took452ms
2017-01-03 17:18:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-03 17:18:01 AI_Player.update()		1001,	101,	1110,	110,	101,	1011,	1010
2017-01-03 17:18:01 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:18:01 AI_Player.update()		1100,	110,	1010,	1001,	1001,	1100,	1110
2017-01-03 17:18:01 AI_Player.update()		1110,	11,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:01 AI_Player.update()		110,	1001,	1010,	1100,	1001,	1010,	101
2017-01-03 17:18:01 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()	update
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()	update
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:01 AI_Player.update()	Search took3ms
2017-01-03 17:18:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-03 17:18:01 AI_Player.update()		1001,	1001,	1110,	110,	101,	1011,	1010
2017-01-03 17:18:01 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-03 17:18:01 AI_Player.update()		1100,	11,	1010,	1001,	1001,	1100,	1110
2017-01-03 17:18:01 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:01 AI_Player.update()		110,	1100,	1010,	1100,	1001,	1010,	101
2017-01-03 17:18:01 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()	update
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:01 AI_Player.update()	update
2017-01-03 17:18:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:02 AI_Player.update()	Search took120ms
2017-01-03 17:18:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-03 17:18:02 AI_Player.update()		1001,	1001,	1110,	110,	101,	1011,	1010
2017-01-03 17:18:02 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	11,	1010,	1001,	1001,	1100,	1110
2017-01-03 17:18:02 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	1010,	1100,	1001,	1010,	101,	110
2017-01-03 17:18:02 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:02 AI_Player.update()	Search took5ms
2017-01-03 17:18:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:18:02 AI_Player.update()		1001,	110,	1110,	110,	101,	1011,	1010
2017-01-03 17:18:02 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	1001,	1010,	1001,	1001,	1100,	1110
2017-01-03 17:18:02 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	101,	1100,	1001,	1010,	101,	110
2017-01-03 17:18:02 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:02 AI_Player.update()	Search took39ms
2017-01-03 17:18:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-03 17:18:02 AI_Player.update()		1001,	1001,	1110,	110,	101,	1011,	1010
2017-01-03 17:18:02 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	11,	1010,	1001,	1001,	1100,	1110
2017-01-03 17:18:02 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	1010,	1100,	1001,	1010,	101,	110
2017-01-03 17:18:02 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:02 AI_Player.update()	Search took3ms
2017-01-03 17:18:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:18:02 AI_Player.update()		1001,	110,	1110,	110,	101,	1011,	1010
2017-01-03 17:18:02 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	1001,	1010,	1001,	1001,	1100,	1110
2017-01-03 17:18:02 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	101,	1100,	1001,	1010,	101,	110
2017-01-03 17:18:02 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:02 AI_Player.update()	Search took39ms
2017-01-03 17:18:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:18:02 AI_Player.update()		1010,	1001,	110,	1110,	110,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	1001,	1010,	1001,	1001,	1100,	1110
2017-01-03 17:18:02 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	101,	1100,	1001,	1010,	101,	110
2017-01-03 17:18:02 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:02 AI_Player.update()	Search took5ms
2017-01-03 17:18:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:18:02 AI_Player.update()		1010,	11,	110,	1110,	110,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	1010,	1010,	1001,	1001,	1100,	1110
2017-01-03 17:18:02 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	101,	1100,	1001,	1010,	101,	110
2017-01-03 17:18:02 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:02 AI_Player.update()	Search took545ms
2017-01-03 17:18:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:18:02 AI_Player.update()		1010,	11,	110,	1110,	110,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1010,	1010,	1001,	1001,	1100,	1110,	1100
2017-01-03 17:18:02 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	101,	1100,	1001,	1010,	101,	110
2017-01-03 17:18:02 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:02 AI_Player.update()	Search took2ms
2017-01-03 17:18:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:18:02 AI_Player.update()		1010,	11,	110,	1110,	110,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1010,	1001,	1001,	1100,	1110,	1100,	1010
2017-01-03 17:18:02 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	101,	1100,	1001,	1010,	101,	110
2017-01-03 17:18:02 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:02 AI_Player.update()	Search took228ms
2017-01-03 17:18:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()		110,	11,	111,	11,	111,	101,	11
2017-01-03 17:18:02 AI_Player.update()		1010,	1001,	110,	1110,	110,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1010,	101,	1001,	1100,	1110,	1100,	1010
2017-01-03 17:18:02 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	1001,	1100,	1001,	1010,	101,	110
2017-01-03 17:18:02 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:02 AI_Player.update()	Search took3ms
2017-01-03 17:18:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:18:02 AI_Player.update()		1010,	1001,	110,	1110,	110,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-03 17:18:02 AI_Player.update()		1010,	101,	1001,	1100,	1110,	1100,	1010
2017-01-03 17:18:02 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:02 AI_Player.update()		1100,	1001,	1100,	1001,	1010,	101,	110
2017-01-03 17:18:02 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:02 AI_Player.update()	update
2017-01-03 17:18:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:03 AI_Player.update()	Search took533ms
2017-01-03 17:18:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:03 AI_Player.update()		110,	1001,	111,	1110,	111,	101,	11
2017-01-03 17:18:03 AI_Player.update()		1010,	1001,	110,	101,	110,	101,	1011
2017-01-03 17:18:03 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-03 17:18:03 AI_Player.update()		1010,	101,	1001,	110,	1110,	1100,	1010
2017-01-03 17:18:03 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	11,	1011
2017-01-03 17:18:03 AI_Player.update()		1100,	1001,	1100,	1010,	1010,	101,	110
2017-01-03 17:18:03 AI_Player.update()		1100,	11,	1101,	11,	1101,	1100,	1001
2017-01-03 17:18:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:03 AI_Player.update()	update
2017-01-03 17:18:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:03 AI_Player.update()	update
2017-01-03 17:18:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:03 AI_Player.update()	Search took4ms
2017-01-03 17:18:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:03 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-03 17:18:03 AI_Player.update()		1010,	1001,	110,	1110,	110,	101,	1011
2017-01-03 17:18:03 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-03 17:18:03 AI_Player.update()		1010,	101,	1001,	1100,	1110,	1100,	1010
2017-01-03 17:18:03 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:03 AI_Player.update()		1100,	1001,	1100,	1001,	1010,	101,	110
2017-01-03 17:18:03 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:03 AI_Player.update()	update
2017-01-03 17:18:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:03 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:03 AI_Player.update()	update
2017-01-03 17:18:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:04 AI_Player.update()	Search took708ms
2017-01-03 17:18:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:04 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-03 17:18:04 AI_Player.update()		1010,	1001,	110,	1110,	110,	101,	1011
2017-01-03 17:18:04 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-03 17:18:04 AI_Player.update()		1010,	101,	1001,	1100,	1110,	101,	1010
2017-01-03 17:18:04 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:04 AI_Player.update()		1100,	1001,	1100,	1001,	1010,	11,	110
2017-01-03 17:18:04 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-03 17:18:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:04 AI_Player.update()	update
2017-01-03 17:18:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:04 AI_Player.update()	update
2017-01-03 17:18:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:04 AI_Player.update()	Search took3ms
2017-01-03 17:18:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:04 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-03 17:18:04 AI_Player.update()		1010,	101,	110,	1110,	110,	101,	1011
2017-01-03 17:18:04 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-03 17:18:04 AI_Player.update()		1010,	1001,	1001,	1100,	1110,	101,	1010
2017-01-03 17:18:04 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:04 AI_Player.update()		1100,	11,	1100,	1001,	1010,	11,	110
2017-01-03 17:18:04 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-03 17:18:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:04 AI_Player.update()	update
2017-01-03 17:18:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:04 AI_Player.update()	update
2017-01-03 17:18:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:05 AI_Player.update()	Search took898ms
2017-01-03 17:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()		110,	1001,	111,	11,	111,	1100,	11
2017-01-03 17:18:05 AI_Player.update()		101,	110,	1110,	110,	101,	1011,	1010
2017-01-03 17:18:05 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-03 17:18:05 AI_Player.update()		1010,	1001,	1001,	1100,	1110,	101,	1010
2017-01-03 17:18:05 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:05 AI_Player.update()		1100,	11,	1100,	1001,	1010,	11,	110
2017-01-03 17:18:05 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:05 AI_Player.update()	Search took4ms
2017-01-03 17:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-03 17:18:05 AI_Player.update()		101,	101,	1110,	110,	101,	1011,	1010
2017-01-03 17:18:05 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:18:05 AI_Player.update()		1010,	1001,	1001,	1100,	1110,	101,	1010
2017-01-03 17:18:05 AI_Player.update()		1110,	11,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:05 AI_Player.update()		1100,	1001,	1100,	1001,	1010,	11,	110
2017-01-03 17:18:05 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:05 AI_Player.update()	Search took570ms
2017-01-03 17:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-03 17:18:05 AI_Player.update()		101,	101,	1110,	110,	101,	1011,	1010
2017-01-03 17:18:05 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:18:05 AI_Player.update()		1010,	1010,	1001,	1001,	1100,	1110,	101
2017-01-03 17:18:05 AI_Player.update()		1110,	11,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:05 AI_Player.update()		1100,	1001,	1100,	1001,	1010,	11,	110
2017-01-03 17:18:05 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	101,	1001
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:05 AI_Player.update()	Player b has won!
2017-01-03 17:18:05 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:05 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:05 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:05 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:05 AI_Player.update()	Search took1ms
2017-01-03 17:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()		110,	110,	111,	111,	111,	11,	11
2017-01-03 17:18:05 AI_Player.update()		1110,	1001,	11,	101,	1010,	1100,	11
2017-01-03 17:18:05 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:05 AI_Player.update()		1011,	110,	1100,	1001,	1100,	11,	1001
2017-01-03 17:18:05 AI_Player.update()		1110,	1011,	1101,	11,	1011,	101,	1011
2017-01-03 17:18:05 AI_Player.update()		1011,	1100,	1101,	110,	1100,	1010,	111
2017-01-03 17:18:05 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:05 AI_Player.update()	Search took54ms
2017-01-03 17:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()		110,	110,	111,	111,	111,	11,	11
2017-01-03 17:18:05 AI_Player.update()		1001,	11,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:05 AI_Player.update()		1110,	1110,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:05 AI_Player.update()		1011,	110,	1100,	1001,	1100,	11,	1001
2017-01-03 17:18:05 AI_Player.update()		1110,	1011,	1101,	11,	1011,	101,	1011
2017-01-03 17:18:05 AI_Player.update()		1011,	1100,	1101,	110,	1100,	1010,	111
2017-01-03 17:18:05 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:05 AI_Player.update()	Search took3ms
2017-01-03 17:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-03 17:18:05 AI_Player.update()		1001,	1110,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:05 AI_Player.update()		1110,	110,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:05 AI_Player.update()		1011,	1011,	1100,	1001,	1100,	11,	1001
2017-01-03 17:18:05 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-03 17:18:05 AI_Player.update()		1011,	1011,	1101,	110,	1100,	1010,	111
2017-01-03 17:18:05 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:05 AI_Player.update()	Search took119ms
2017-01-03 17:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()		110,	1110,	111,	111,	111,	11,	11
2017-01-03 17:18:05 AI_Player.update()		1001,	110,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:05 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:05 AI_Player.update()		1011,	1100,	1100,	1001,	1100,	11,	1001
2017-01-03 17:18:05 AI_Player.update()		1110,	1011,	1101,	11,	1011,	101,	1011
2017-01-03 17:18:05 AI_Player.update()		1011,	110,	1101,	110,	1100,	1010,	111
2017-01-03 17:18:05 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:05 AI_Player.update()	Search took2ms
2017-01-03 17:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()		110,	1110,	111,	111,	111,	11,	11
2017-01-03 17:18:05 AI_Player.update()		1001,	110,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:05 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:05 AI_Player.update()		1100,	1100,	1001,	1100,	11,	1001,	1011
2017-01-03 17:18:05 AI_Player.update()		1110,	1011,	1101,	11,	1011,	101,	1011
2017-01-03 17:18:05 AI_Player.update()		1011,	110,	1101,	110,	1100,	1010,	111
2017-01-03 17:18:05 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:05 AI_Player.update()	Search took40ms
2017-01-03 17:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()		110,	1110,	111,	111,	111,	11,	11
2017-01-03 17:18:05 AI_Player.update()		1001,	110,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:05 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:05 AI_Player.update()		1100,	1100,	1001,	1100,	11,	1001,	1011
2017-01-03 17:18:05 AI_Player.update()		1110,	1011,	1101,	11,	1011,	101,	1011
2017-01-03 17:18:05 AI_Player.update()		110,	1101,	110,	1100,	1010,	111,	1011
2017-01-03 17:18:05 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:05 AI_Player.update()	Search took3ms
2017-01-03 17:18:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()		110,	1110,	111,	111,	111,	1100,	11
2017-01-03 17:18:05 AI_Player.update()		1001,	110,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:05 AI_Player.update()		1110,	1011,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:05 AI_Player.update()		1100,	1100,	1001,	1100,	11,	1100,	1011
2017-01-03 17:18:05 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:05 AI_Player.update()		110,	1101,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:05 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:18:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:05 AI_Player.update()	update
2017-01-03 17:18:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:06 AI_Player.update()	Search took120ms
2017-01-03 17:18:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()		110,	110,	111,	111,	111,	1100,	11
2017-01-03 17:18:06 AI_Player.update()		1001,	1011,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:06 AI_Player.update()		1110,	1100,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:06 AI_Player.update()		1100,	1011,	1001,	1100,	11,	1100,	1011
2017-01-03 17:18:06 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:06 AI_Player.update()		110,	11,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:06 AI_Player.update()		1100,	1110,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:18:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()	update
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()	update
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:06 AI_Player.update()	Search took4ms
2017-01-03 17:18:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()		110,	1011,	111,	111,	111,	1100,	11
2017-01-03 17:18:06 AI_Player.update()		1001,	1100,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:06 AI_Player.update()		1110,	1011,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:06 AI_Player.update()		1100,	1101,	1001,	1100,	11,	1100,	1011
2017-01-03 17:18:06 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:06 AI_Player.update()		110,	1110,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:06 AI_Player.update()		1100,	110,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()	update
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()	update
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:06 AI_Player.update()	Search took161ms
2017-01-03 17:18:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()		110,	1100,	111,	111,	111,	1100,	11
2017-01-03 17:18:06 AI_Player.update()		1001,	1011,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:06 AI_Player.update()		1110,	1101,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:06 AI_Player.update()		1100,	11,	1001,	1100,	11,	1100,	1011
2017-01-03 17:18:06 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:06 AI_Player.update()		110,	110,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:06 AI_Player.update()		1100,	1011,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()	update
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()	update
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:06 AI_Player.update()	Search took6ms
2017-01-03 17:18:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()		110,	1011,	111,	111,	111,	1100,	11
2017-01-03 17:18:06 AI_Player.update()		1001,	1101,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:06 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:06 AI_Player.update()		1100,	1110,	1001,	1100,	11,	1100,	1011
2017-01-03 17:18:06 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:06 AI_Player.update()		110,	1011,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:06 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()	update
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:06 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:06 AI_Player.update()	update
2017-01-03 17:18:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:07 AI_Player.update()	Search took914ms
2017-01-03 17:18:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()		110,	1011,	111,	111,	111,	1100,	11
2017-01-03 17:18:07 AI_Player.update()		1001,	1101,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:07 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:07 AI_Player.update()		1110,	1001,	1100,	11,	1100,	1011,	1100
2017-01-03 17:18:07 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:07 AI_Player.update()		110,	1011,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:07 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()	update
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()	update
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:07 AI_Player.update()	Search took3ms
2017-01-03 17:18:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()		110,	1101,	111,	111,	111,	1100,	11
2017-01-03 17:18:07 AI_Player.update()		1001,	11,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:07 AI_Player.update()		1110,	1001,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:07 AI_Player.update()		1110,	110,	1100,	11,	1100,	1011,	1100
2017-01-03 17:18:07 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:07 AI_Player.update()		110,	1100,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:07 AI_Player.update()		1100,	1011,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()	update
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()	update
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:07 AI_Player.update()	Search took563ms
2017-01-03 17:18:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()		110,	11,	111,	111,	111,	1100,	11
2017-01-03 17:18:07 AI_Player.update()		1001,	1001,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:07 AI_Player.update()		1110,	110,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:07 AI_Player.update()		1110,	1011,	1100,	11,	1100,	1011,	1100
2017-01-03 17:18:07 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:07 AI_Player.update()		110,	1011,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:07 AI_Player.update()		1100,	1101,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()	update
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()	update
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:07 AI_Player.update()	Search took3ms
2017-01-03 17:18:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()		110,	1001,	111,	111,	111,	1100,	11
2017-01-03 17:18:07 AI_Player.update()		1001,	110,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:07 AI_Player.update()		1110,	1011,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:07 AI_Player.update()		1110,	1100,	1100,	11,	1100,	1011,	1100
2017-01-03 17:18:07 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:07 AI_Player.update()		110,	1101,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:07 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()	update
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:07 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:07 AI_Player.update()	update
2017-01-03 17:18:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:08 AI_Player.update()	Search took269ms
2017-01-03 17:18:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()		110,	1001,	111,	111,	111,	1100,	11
2017-01-03 17:18:08 AI_Player.update()		1001,	110,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	1011,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	1100,	11,	1100,	1011,	1100,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:08 AI_Player.update()		110,	1101,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:08 AI_Player.update()	Search took5ms
2017-01-03 17:18:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()		110,	110,	111,	111,	111,	1100,	11
2017-01-03 17:18:08 AI_Player.update()		1001,	1011,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	1100,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	1011,	11,	1100,	1011,	1100,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:08 AI_Player.update()		110,	11,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	1001,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:08 AI_Player.update()	Search took268ms
2017-01-03 17:18:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()		110,	110,	111,	111,	111,	11,	11
2017-01-03 17:18:08 AI_Player.update()		1001,	1011,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	1011,	11,	1100,	1011,	1001,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	1101,	1101,	11,	1011,	101,	1011
2017-01-03 17:18:08 AI_Player.update()		110,	11,	110,	1100,	1010,	111,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:08 AI_Player.update()	Search took4ms
2017-01-03 17:18:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()		110,	1011,	111,	111,	111,	11,	11
2017-01-03 17:18:08 AI_Player.update()		1001,	1100,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	1101,	11,	1100,	1011,	1001,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-03 17:18:08 AI_Player.update()		110,	1001,	110,	1100,	1010,	111,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:08 AI_Player.update()	Search took139ms
2017-01-03 17:18:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()		110,	1100,	111,	111,	111,	11,	11
2017-01-03 17:18:08 AI_Player.update()		1001,	1011,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	11,	11,	1100,	1011,	1001,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-03 17:18:08 AI_Player.update()		110,	110,	110,	1100,	1010,	111,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:08 AI_Player.update()	Search took2ms
2017-01-03 17:18:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()		110,	1011,	111,	111,	111,	11,	11
2017-01-03 17:18:08 AI_Player.update()		1001,	1101,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	1001,	11,	1100,	1011,	1001,	1110
2017-01-03 17:18:08 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-03 17:18:08 AI_Player.update()		110,	1011,	110,	1100,	1010,	111,	1011
2017-01-03 17:18:08 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:08 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:08 AI_Player.update()	update
2017-01-03 17:18:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:09 AI_Player.update()	Search took715ms
2017-01-03 17:18:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:09 AI_Player.update()		110,	1011,	111,	111,	111,	1100,	11
2017-01-03 17:18:09 AI_Player.update()		1001,	1101,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:09 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:09 AI_Player.update()		1100,	1001,	11,	1100,	1011,	1100,	1110
2017-01-03 17:18:09 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:09 AI_Player.update()		110,	1011,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:09 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:09 AI_Player.update()	update
2017-01-03 17:18:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:09 AI_Player.update()	update
2017-01-03 17:18:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:09 AI_Player.update()	Search took2ms
2017-01-03 17:18:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:09 AI_Player.update()		110,	1101,	111,	111,	111,	1100,	11
2017-01-03 17:18:09 AI_Player.update()		1001,	11,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:09 AI_Player.update()		1110,	1001,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:09 AI_Player.update()		1100,	110,	11,	1100,	1011,	1100,	1110
2017-01-03 17:18:09 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:09 AI_Player.update()		110,	1100,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:09 AI_Player.update()		1100,	1011,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:09 AI_Player.update()	update
2017-01-03 17:18:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:09 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:09 AI_Player.update()	update
2017-01-03 17:18:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:10 AI_Player.update()	Search took965ms
2017-01-03 17:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()		110,	1101,	111,	111,	111,	1100,	11
2017-01-03 17:18:10 AI_Player.update()		1001,	11,	101,	1010,	1100,	11,	1110
2017-01-03 17:18:10 AI_Player.update()		1110,	1001,	1110,	1100,	111,	11,	1011
2017-01-03 17:18:10 AI_Player.update()		110,	11,	1100,	1011,	1100,	1110,	1100
2017-01-03 17:18:10 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1001,	1011
2017-01-03 17:18:10 AI_Player.update()		110,	1100,	110,	1100,	1010,	101,	1011
2017-01-03 17:18:10 AI_Player.update()		1100,	1011,	1101,	101,	1101,	111,	1001
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:10 AI_Player.update()	Player b has won!
2017-01-03 17:18:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:10 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:10 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:10 AI_Player.update()	Search took1ms
2017-01-03 17:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()		110,	1010,	111,	1100,	111,	1101,	11
2017-01-03 17:18:10 AI_Player.update()		1110,	111,	1100,	11,	1101,	1010,	110
2017-01-03 17:18:10 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	1100,	1011,	1001,	110,	1001,	1100
2017-01-03 17:18:10 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	111,	1100,	1010,	1001,	101,	101
2017-01-03 17:18:10 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:10 AI_Player.update()	Search took122ms
2017-01-03 17:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()		110,	1010,	111,	11,	111,	1101,	11
2017-01-03 17:18:10 AI_Player.update()		1110,	111,	1100,	1100,	1101,	1010,	110
2017-01-03 17:18:10 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	1100,	1011,	101,	110,	1001,	1100
2017-01-03 17:18:10 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	111,	1100,	110,	1001,	101,	101
2017-01-03 17:18:10 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:10 AI_Player.update()	Search took1ms
2017-01-03 17:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()		110,	1010,	111,	11,	111,	1101,	11
2017-01-03 17:18:10 AI_Player.update()		1110,	111,	1100,	1100,	1101,	1010,	110
2017-01-03 17:18:10 AI_Player.update()		1110,	1010,	1110,	11,	111,	110,	1011
2017-01-03 17:18:10 AI_Player.update()		1100,	1011,	101,	110,	1001,	1100,	101
2017-01-03 17:18:10 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	111,	1100,	110,	1001,	101,	101
2017-01-03 17:18:10 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:10 AI_Player.update()	Search took139ms
2017-01-03 17:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()		110,	101,	111,	11,	111,	1101,	11
2017-01-03 17:18:10 AI_Player.update()		1110,	1010,	1100,	1100,	1101,	1010,	110
2017-01-03 17:18:10 AI_Player.update()		1110,	111,	1110,	11,	111,	110,	1011
2017-01-03 17:18:10 AI_Player.update()		1100,	1010,	101,	110,	1001,	1100,	101
2017-01-03 17:18:10 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	110,	1100,	110,	1001,	101,	101
2017-01-03 17:18:10 AI_Player.update()		1100,	111,	1101,	1010,	1101,	11,	1001
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:10 AI_Player.update()	Search took1ms
2017-01-03 17:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-03 17:18:10 AI_Player.update()		1110,	1010,	1100,	11,	1101,	1010,	110
2017-01-03 17:18:10 AI_Player.update()		1110,	111,	1110,	1100,	111,	110,	1011
2017-01-03 17:18:10 AI_Player.update()		1100,	1010,	101,	11,	1001,	1100,	101
2017-01-03 17:18:10 AI_Player.update()		1110,	1011,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	110,	1100,	1001,	1001,	101,	101
2017-01-03 17:18:10 AI_Player.update()		1100,	111,	1101,	110,	1101,	11,	1001
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:10 AI_Player.update()	Search took229ms
2017-01-03 17:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()		110,	101,	111,	11,	111,	1101,	11
2017-01-03 17:18:10 AI_Player.update()		1110,	1010,	1100,	1100,	1101,	1010,	110
2017-01-03 17:18:10 AI_Player.update()		1110,	111,	1110,	11,	111,	110,	1011
2017-01-03 17:18:10 AI_Player.update()		1100,	1010,	101,	110,	1001,	1100,	101
2017-01-03 17:18:10 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	110,	1100,	110,	1001,	101,	101
2017-01-03 17:18:10 AI_Player.update()		1100,	111,	1101,	1010,	1101,	11,	1001
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:10 AI_Player.update()	Search took1ms
2017-01-03 17:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()		110,	101,	111,	11,	111,	1101,	11
2017-01-03 17:18:10 AI_Player.update()		1110,	1010,	1100,	1100,	1101,	1010,	110
2017-01-03 17:18:10 AI_Player.update()		1110,	111,	1110,	11,	111,	110,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	1100,	1010,	101,	110,	1001,	1100
2017-01-03 17:18:10 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	110,	1100,	110,	1001,	101,	101
2017-01-03 17:18:10 AI_Player.update()		1100,	111,	1101,	1010,	1101,	11,	1001
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:10 AI_Player.update()	Search took227ms
2017-01-03 17:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()		110,	101,	111,	11,	111,	1101,	11
2017-01-03 17:18:10 AI_Player.update()		1010,	1100,	1100,	1101,	1010,	110,	1110
2017-01-03 17:18:10 AI_Player.update()		1110,	111,	1110,	11,	111,	110,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	1100,	1010,	101,	110,	1001,	1100
2017-01-03 17:18:10 AI_Player.update()		1110,	1011,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	110,	1100,	110,	1001,	101,	101
2017-01-03 17:18:10 AI_Player.update()		1100,	111,	1101,	1010,	1101,	11,	1001
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()	update
2017-01-03 17:18:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:10 AI_Player.update()	Search took3ms
2017-01-03 17:18:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 AI_Player.update()		110,	1100,	111,	11,	111,	1101,	11
2017-01-03 17:18:10 AI_Player.update()		1010,	111,	1100,	1101,	1010,	110,	1110
2017-01-03 17:18:10 AI_Player.update()		1110,	1100,	1110,	11,	111,	110,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	1011,	1010,	101,	110,	1001,	1100
2017-01-03 17:18:10 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:10 AI_Player.update()		101,	111,	1100,	110,	1001,	101,	101
2017-01-03 17:18:10 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 17:18:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:11 AI_Player.update()	Search took321ms
2017-01-03 17:18:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()		110,	1100,	111,	11,	111,	1101,	11
2017-01-03 17:18:11 AI_Player.update()		1010,	111,	1100,	1101,	1010,	110,	1110
2017-01-03 17:18:11 AI_Player.update()		1110,	1100,	1110,	11,	111,	110,	1011
2017-01-03 17:18:11 AI_Player.update()		1011,	1010,	101,	110,	1001,	1100,	101
2017-01-03 17:18:11 AI_Player.update()		1110,	110,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:11 AI_Player.update()		101,	111,	1100,	110,	1001,	101,	101
2017-01-03 17:18:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:11 AI_Player.update()	Search took2ms
2017-01-03 17:18:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()		110,	1100,	111,	11,	111,	11,	11
2017-01-03 17:18:11 AI_Player.update()		1010,	111,	1100,	1101,	1010,	1101,	1110
2017-01-03 17:18:11 AI_Player.update()		1110,	1100,	1110,	11,	111,	110,	1011
2017-01-03 17:18:11 AI_Player.update()		1011,	1010,	101,	110,	1001,	110,	101
2017-01-03 17:18:11 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1100,	1011
2017-01-03 17:18:11 AI_Player.update()		101,	111,	1100,	110,	1001,	101,	101
2017-01-03 17:18:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:11 AI_Player.update()	Search took109ms
2017-01-03 17:18:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()		110,	1100,	111,	1101,	111,	11,	11
2017-01-03 17:18:11 AI_Player.update()		1010,	111,	1100,	11,	1010,	1101,	1110
2017-01-03 17:18:11 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-03 17:18:11 AI_Player.update()		1011,	1010,	101,	1001,	1001,	110,	101
2017-01-03 17:18:11 AI_Player.update()		1110,	110,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:11 AI_Player.update()		101,	111,	1100,	1010,	1001,	101,	101
2017-01-03 17:18:11 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:11 AI_Player.update()	Search took1ms
2017-01-03 17:18:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()		110,	1100,	111,	1101,	111,	11,	11
2017-01-03 17:18:11 AI_Player.update()		1010,	111,	1100,	11,	1010,	1101,	1110
2017-01-03 17:18:11 AI_Player.update()		1110,	1100,	1110,	110,	111,	110,	1011
2017-01-03 17:18:11 AI_Player.update()		1010,	101,	1001,	1001,	110,	101,	1011
2017-01-03 17:18:11 AI_Player.update()		1110,	110,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:11 AI_Player.update()		101,	111,	1100,	1010,	1001,	101,	101
2017-01-03 17:18:11 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:11 AI_Player.update()	Search took292ms
2017-01-03 17:18:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()		110,	101,	111,	1101,	111,	11,	11
2017-01-03 17:18:11 AI_Player.update()		1010,	1100,	1100,	11,	1010,	1101,	1110
2017-01-03 17:18:11 AI_Player.update()		1110,	111,	1110,	110,	111,	110,	1011
2017-01-03 17:18:11 AI_Player.update()		1010,	1100,	1001,	1001,	110,	101,	1011
2017-01-03 17:18:11 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:11 AI_Player.update()		101,	110,	1100,	1010,	1001,	101,	101
2017-01-03 17:18:11 AI_Player.update()		1100,	111,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:18:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:11 AI_Player.update()	Search took3ms
2017-01-03 17:18:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()		110,	101,	111,	1101,	111,	1101,	11
2017-01-03 17:18:11 AI_Player.update()		1010,	1100,	1100,	11,	1010,	110,	1110
2017-01-03 17:18:11 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-03 17:18:11 AI_Player.update()		1010,	1100,	1001,	1001,	110,	1100,	1011
2017-01-03 17:18:11 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:11 AI_Player.update()		101,	110,	1100,	1010,	1001,	101,	101
2017-01-03 17:18:11 AI_Player.update()		1100,	111,	1101,	11,	1101,	11,	1001
2017-01-03 17:18:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:11 AI_Player.update()	update
2017-01-03 17:18:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:12 AI_Player.update()	Search took591ms
2017-01-03 17:18:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()		110,	101,	111,	1101,	111,	1101,	11
2017-01-03 17:18:12 AI_Player.update()		1010,	1100,	1100,	11,	1010,	110,	1110
2017-01-03 17:18:12 AI_Player.update()		1110,	111,	1110,	110,	111,	101,	1011
2017-01-03 17:18:12 AI_Player.update()		1011,	1010,	1100,	1001,	1001,	110,	1100
2017-01-03 17:18:12 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:12 AI_Player.update()		101,	110,	1100,	1010,	1001,	101,	101
2017-01-03 17:18:12 AI_Player.update()		1100,	111,	1101,	11,	1101,	11,	1001
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:12 AI_Player.update()	Search took5ms
2017-01-03 17:18:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()		110,	1100,	111,	1101,	111,	1101,	11
2017-01-03 17:18:12 AI_Player.update()		1010,	111,	1100,	11,	1010,	110,	1110
2017-01-03 17:18:12 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-03 17:18:12 AI_Player.update()		1011,	101,	1100,	1001,	1001,	110,	1100
2017-01-03 17:18:12 AI_Player.update()		1110,	110,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:12 AI_Player.update()		101,	111,	1100,	1010,	1001,	101,	101
2017-01-03 17:18:12 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:12 AI_Player.update()	Search took500ms
2017-01-03 17:18:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()		110,	1100,	111,	11,	111,	1101,	11
2017-01-03 17:18:12 AI_Player.update()		1010,	111,	1100,	110,	1010,	110,	1110
2017-01-03 17:18:12 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-03 17:18:12 AI_Player.update()		1011,	101,	1100,	110,	1001,	110,	1100
2017-01-03 17:18:12 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-03 17:18:12 AI_Player.update()		101,	111,	1100,	11,	1001,	101,	101
2017-01-03 17:18:12 AI_Player.update()		1100,	101,	1101,	1101,	1101,	11,	1001
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:12 AI_Player.update()	Player b has won!
2017-01-03 17:18:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:12 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:12 AI_Player.update()	Search took2ms
2017-01-03 17:18:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()		110,	1001,	111,	111,	111,	1100,	11
2017-01-03 17:18:12 AI_Player.update()		1100,	101,	101,	1001,	11,	1110,	1110
2017-01-03 17:18:12 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-03 17:18:12 AI_Player.update()		1011,	1010,	1010,	101,	1001,	101,	101
2017-01-03 17:18:12 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:12 AI_Player.update()		1010,	1010,	1011,	1001,	1101,	1011,	1101
2017-01-03 17:18:12 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:12 AI_Player.update()	Search took93ms
2017-01-03 17:18:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()		110,	1001,	111,	111,	111,	1100,	11
2017-01-03 17:18:12 AI_Player.update()		1100,	101,	101,	1001,	11,	1110,	1110
2017-01-03 17:18:12 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-03 17:18:12 AI_Player.update()		1010,	1010,	101,	1001,	101,	101,	1011
2017-01-03 17:18:12 AI_Player.update()		1110,	1001,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:12 AI_Player.update()		1010,	1010,	1011,	1001,	1101,	1011,	1101
2017-01-03 17:18:12 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:12 AI_Player.update()	Search took2ms
2017-01-03 17:18:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-03 17:18:12 AI_Player.update()		1100,	110,	101,	1001,	11,	1110,	1110
2017-01-03 17:18:12 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-03 17:18:12 AI_Player.update()		1010,	1001,	101,	1001,	101,	101,	1011
2017-01-03 17:18:12 AI_Player.update()		1110,	1010,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:12 AI_Player.update()		1010,	110,	1011,	1001,	1101,	1011,	1101
2017-01-03 17:18:12 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1001,	1001
2017-01-03 17:18:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:12 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:12 AI_Player.update()	update
2017-01-03 17:18:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:13 AI_Player.update()	Search took234ms
2017-01-03 17:18:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:18:13 AI_Player.update()		1100,	110,	101,	101,	11,	1110,	1110
2017-01-03 17:18:13 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:13 AI_Player.update()		1010,	1001,	101,	110,	101,	101,	1011
2017-01-03 17:18:13 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-03 17:18:13 AI_Player.update()		1010,	110,	1011,	1100,	1101,	1011,	1101
2017-01-03 17:18:13 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1001,	1001
2017-01-03 17:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()	update
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()	update
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:13 AI_Player.update()	Search took1ms
2017-01-03 17:18:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()		110,	110,	111,	1001,	111,	1100,	11
2017-01-03 17:18:13 AI_Player.update()		1100,	1010,	101,	101,	11,	1110,	1110
2017-01-03 17:18:13 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:13 AI_Player.update()		1010,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:18:13 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-03 17:18:13 AI_Player.update()		1010,	1001,	1011,	1100,	1101,	1011,	1101
2017-01-03 17:18:13 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-03 17:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()	update
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()	update
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:13 AI_Player.update()	Search took347ms
2017-01-03 17:18:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()		110,	110,	111,	111,	111,	1100,	11
2017-01-03 17:18:13 AI_Player.update()		1100,	1010,	101,	1001,	11,	1110,	1110
2017-01-03 17:18:13 AI_Player.update()		1110,	1001,	1110,	101,	111,	1001,	1011
2017-01-03 17:18:13 AI_Player.update()		1010,	1010,	101,	1001,	101,	101,	1011
2017-01-03 17:18:13 AI_Player.update()		1110,	110,	1101,	110,	1011,	11,	1011
2017-01-03 17:18:13 AI_Player.update()		1010,	1001,	1011,	1001,	1101,	1011,	1101
2017-01-03 17:18:13 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1001,	1001
2017-01-03 17:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()	update
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()	update
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:13 AI_Player.update()	Search took3ms
2017-01-03 17:18:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()		110,	110,	111,	1001,	111,	1100,	11
2017-01-03 17:18:13 AI_Player.update()		1100,	1010,	101,	101,	11,	1110,	1110
2017-01-03 17:18:13 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:13 AI_Player.update()		1010,	1010,	101,	110,	101,	101,	1011
2017-01-03 17:18:13 AI_Player.update()		1110,	110,	1101,	1001,	1011,	11,	1011
2017-01-03 17:18:13 AI_Player.update()		1010,	1001,	1011,	1100,	1101,	1011,	1101
2017-01-03 17:18:13 AI_Player.update()		1100,	101,	1101,	111,	1101,	1001,	1001
2017-01-03 17:18:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()	update
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:13 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:13 AI_Player.update()	update
2017-01-03 17:18:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:14 AI_Player.update()	Search took570ms
2017-01-03 17:18:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:18:14 AI_Player.update()		1100,	110,	101,	101,	11,	1110,	1110
2017-01-03 17:18:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:14 AI_Player.update()		1010,	1001,	101,	110,	101,	101,	1011
2017-01-03 17:18:14 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-03 17:18:14 AI_Player.update()		1010,	110,	1011,	1100,	1101,	1011,	1101
2017-01-03 17:18:14 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1001,	1001
2017-01-03 17:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()	update
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()	update
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:14 AI_Player.update()	Search took2ms
2017-01-03 17:18:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:18:14 AI_Player.update()		1100,	110,	101,	101,	11,	1110,	1110
2017-01-03 17:18:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:14 AI_Player.update()		1011,	1010,	1001,	101,	110,	101,	101
2017-01-03 17:18:14 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-03 17:18:14 AI_Player.update()		1010,	110,	1011,	1100,	1101,	1011,	1101
2017-01-03 17:18:14 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1001,	1001
2017-01-03 17:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()	update
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()	update
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:14 AI_Player.update()	Search took501ms
2017-01-03 17:18:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-03 17:18:14 AI_Player.update()		1100,	110,	101,	101,	11,	1100,	1110
2017-01-03 17:18:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1110,	1011
2017-01-03 17:18:14 AI_Player.update()		1011,	1010,	1001,	101,	110,	1001,	101
2017-01-03 17:18:14 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:14 AI_Player.update()		1010,	110,	1011,	1100,	1101,	11,	1101
2017-01-03 17:18:14 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1011,	1001
2017-01-03 17:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()	update
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()	update
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:14 AI_Player.update()	Search took2ms
2017-01-03 17:18:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-03 17:18:14 AI_Player.update()		1110,	1100,	110,	101,	101,	11,	1100
2017-01-03 17:18:14 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1110,	1011
2017-01-03 17:18:14 AI_Player.update()		1011,	1010,	1001,	101,	110,	1001,	101
2017-01-03 17:18:14 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:14 AI_Player.update()		1010,	110,	1011,	1100,	1101,	11,	1101
2017-01-03 17:18:14 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1011,	1001
2017-01-03 17:18:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()	update
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:14 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:14 AI_Player.update()	update
2017-01-03 17:18:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took601ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1100,	110,	101,	101,	11,	1100,	1110
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1110,	1011
2017-01-03 17:18:15 AI_Player.update()		1011,	1010,	1001,	101,	110,	1001,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:15 AI_Player.update()		1010,	110,	1011,	1100,	1101,	11,	1101
2017-01-03 17:18:15 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1011,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took2ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	101,	111,	111,	111,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1100,	110,	101,	1001,	11,	1100,	1110
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-03 17:18:15 AI_Player.update()		1011,	1010,	1001,	1001,	110,	1001,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-03 17:18:15 AI_Player.update()		1010,	110,	1011,	1001,	1101,	11,	1101
2017-01-03 17:18:15 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1011,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took274ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1100,	110,	101,	101,	11,	1100,	1110
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1110,	1011
2017-01-03 17:18:15 AI_Player.update()		1011,	1010,	1001,	101,	110,	1001,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:15 AI_Player.update()		1010,	110,	1011,	1100,	1101,	11,	1101
2017-01-03 17:18:15 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1011,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:15 AI_Player.update()	Player b has won!
2017-01-03 17:18:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:15 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:15 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took2ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-03 17:18:15 AI_Player.update()		1010,	1010,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-03 17:18:15 AI_Player.update()		1100,	101,	1001,	1110,	101,	101,	110
2017-01-03 17:18:15 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:18:15 AI_Player.update()		101,	110,	1010,	1010,	1101,	1001,	1001
2017-01-03 17:18:15 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took11ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-03 17:18:15 AI_Player.update()		1010,	11,	1001,	1010,	1001,	11,	1010
2017-01-03 17:18:15 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-03 17:18:15 AI_Player.update()		1100,	101,	1001,	1110,	101,	101,	110
2017-01-03 17:18:15 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:18:15 AI_Player.update()		101,	110,	1010,	1010,	1101,	1001,	1001
2017-01-03 17:18:15 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took1ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-03 17:18:15 AI_Player.update()		1010,	11,	1001,	1010,	1001,	11,	1010
2017-01-03 17:18:15 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-03 17:18:15 AI_Player.update()		110,	1100,	101,	1001,	1110,	101,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:18:15 AI_Player.update()		101,	110,	1010,	1010,	1101,	1001,	1001
2017-01-03 17:18:15 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took145ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-03 17:18:15 AI_Player.update()		1010,	1010,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1110,	1001,	1110,	110,	111,	1001,	1011
2017-01-03 17:18:15 AI_Player.update()		110,	1100,	101,	1001,	1110,	101,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-03 17:18:15 AI_Player.update()		101,	110,	1010,	1010,	1101,	1001,	1001
2017-01-03 17:18:15 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took3ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-03 17:18:15 AI_Player.update()		1010,	1001,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1110,	1100,	1110,	110,	111,	1001,	1011
2017-01-03 17:18:15 AI_Player.update()		110,	101,	101,	1001,	1110,	101,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-03 17:18:15 AI_Player.update()		101,	1010,	1010,	1010,	1101,	1001,	1001
2017-01-03 17:18:15 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took28ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-03 17:18:15 AI_Player.update()		1010,	1001,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:15 AI_Player.update()		110,	101,	101,	110,	1110,	101,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:18:15 AI_Player.update()		101,	1010,	1010,	101,	1101,	1001,	1001
2017-01-03 17:18:15 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took1ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-03 17:18:15 AI_Player.update()		1010,	1100,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:15 AI_Player.update()		110,	110,	101,	110,	1110,	101,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:18:15 AI_Player.update()		101,	110,	1010,	101,	1101,	1001,	1001
2017-01-03 17:18:15 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took56ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	1100,	111,	101,	111,	1010,	11
2017-01-03 17:18:15 AI_Player.update()		1010,	101,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:15 AI_Player.update()		110,	1010,	101,	110,	1110,	101,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:18:15 AI_Player.update()		101,	1010,	1010,	101,	1101,	1001,	1001
2017-01-03 17:18:15 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took2ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:18:15 AI_Player.update()		1010,	110,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:15 AI_Player.update()		110,	110,	101,	110,	1110,	101,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:18:15 AI_Player.update()		101,	1001,	1010,	101,	1101,	1001,	1001
2017-01-03 17:18:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took47ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:18:15 AI_Player.update()		1010,	110,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:15 AI_Player.update()		110,	110,	101,	110,	1110,	101,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:18:15 AI_Player.update()		1001,	1010,	101,	1101,	1001,	1001,	101
2017-01-03 17:18:15 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:15 AI_Player.update()	Search took2ms
2017-01-03 17:18:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-03 17:18:15 AI_Player.update()		1010,	1010,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:15 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:15 AI_Player.update()		110,	1010,	101,	110,	1110,	101,	101
2017-01-03 17:18:15 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:18:15 AI_Player.update()		1001,	1100,	101,	1101,	1001,	1001,	101
2017-01-03 17:18:15 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:15 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:15 AI_Player.update()	update
2017-01-03 17:18:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:16 AI_Player.update()	Search took63ms
2017-01-03 17:18:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-03 17:18:16 AI_Player.update()		1010,	110,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:16 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:16 AI_Player.update()		110,	110,	101,	110,	1110,	101,	101
2017-01-03 17:18:16 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:18:16 AI_Player.update()		1001,	1010,	101,	1101,	1001,	1001,	101
2017-01-03 17:18:16 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:16 AI_Player.update()	Search took2ms
2017-01-03 17:18:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-03 17:18:16 AI_Player.update()		1010,	1010,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:16 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:16 AI_Player.update()		110,	1010,	101,	110,	1110,	101,	101
2017-01-03 17:18:16 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:18:16 AI_Player.update()		1001,	1100,	101,	1101,	1001,	1001,	101
2017-01-03 17:18:16 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:16 AI_Player.update()	Search took190ms
2017-01-03 17:18:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-03 17:18:16 AI_Player.update()		1010,	110,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:16 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:16 AI_Player.update()		110,	1010,	101,	110,	1110,	101,	101
2017-01-03 17:18:16 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1010,	1011
2017-01-03 17:18:16 AI_Player.update()		1001,	101,	101,	1101,	1001,	1001,	101
2017-01-03 17:18:16 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:16 AI_Player.update()	Search took2ms
2017-01-03 17:18:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-03 17:18:16 AI_Player.update()		1010,	110,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:16 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 17:18:16 AI_Player.update()		110,	1010,	101,	1001,	1110,	101,	101
2017-01-03 17:18:16 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-03 17:18:16 AI_Player.update()		1001,	101,	101,	1010,	1001,	1001,	101
2017-01-03 17:18:16 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:18:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:16 AI_Player.update()	Search took469ms
2017-01-03 17:18:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()		110,	110,	111,	1001,	111,	1010,	11
2017-01-03 17:18:16 AI_Player.update()		1010,	1010,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:16 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 17:18:16 AI_Player.update()		110,	1100,	101,	1001,	1110,	101,	101
2017-01-03 17:18:16 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-03 17:18:16 AI_Player.update()		1001,	110,	101,	1010,	1001,	1001,	101
2017-01-03 17:18:16 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:18:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:16 AI_Player.update()	Search took3ms
2017-01-03 17:18:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-03 17:18:16 AI_Player.update()		1010,	110,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:16 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 17:18:16 AI_Player.update()		110,	1010,	101,	1001,	1110,	101,	101
2017-01-03 17:18:16 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-03 17:18:16 AI_Player.update()		1001,	101,	101,	1010,	1001,	1001,	101
2017-01-03 17:18:16 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:16 AI_Player.update()	Search took93ms
2017-01-03 17:18:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()		110,	1010,	111,	1001,	111,	1010,	11
2017-01-03 17:18:16 AI_Player.update()		1010,	110,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:16 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-03 17:18:16 AI_Player.update()		1010,	101,	1001,	1110,	101,	101,	110
2017-01-03 17:18:16 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1010,	1011
2017-01-03 17:18:16 AI_Player.update()		1001,	101,	101,	1010,	1001,	1001,	101
2017-01-03 17:18:16 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:16 AI_Player.update()	Search took5ms
2017-01-03 17:18:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()		110,	1010,	111,	1001,	111,	1001,	11
2017-01-03 17:18:16 AI_Player.update()		1010,	110,	11,	1001,	1010,	1001,	11
2017-01-03 17:18:16 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-03 17:18:16 AI_Player.update()		1010,	101,	1001,	1110,	101,	1010,	110
2017-01-03 17:18:16 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1001,	1011
2017-01-03 17:18:16 AI_Player.update()		1001,	101,	101,	1010,	1001,	1100,	101
2017-01-03 17:18:16 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-03 17:18:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:16 AI_Player.update()	update
2017-01-03 17:18:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:17 AI_Player.update()	Search took184ms
2017-01-03 17:18:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()		110,	1010,	111,	1001,	111,	1001,	11
2017-01-03 17:18:17 AI_Player.update()		110,	11,	1001,	1010,	1001,	11,	1010
2017-01-03 17:18:17 AI_Player.update()		1110,	1010,	1110,	110,	111,	101,	1011
2017-01-03 17:18:17 AI_Player.update()		1010,	101,	1001,	1110,	101,	1010,	110
2017-01-03 17:18:17 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	1001,	1011
2017-01-03 17:18:17 AI_Player.update()		1001,	101,	101,	1010,	1001,	1100,	101
2017-01-03 17:18:17 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:17 AI_Player.update()	Player b has won!
2017-01-03 17:18:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:17 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:17 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:17 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:17 AI_Player.update()	Search took1ms
2017-01-03 17:18:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()		110,	1101,	111,	1110,	111,	1011,	11
2017-01-03 17:18:17 AI_Player.update()		1010,	101,	1011,	1010,	1010,	1001,	11
2017-01-03 17:18:17 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-03 17:18:17 AI_Player.update()		111,	1010,	1100,	1010,	110,	101,	101
2017-01-03 17:18:17 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-03 17:18:17 AI_Player.update()		1110,	1011,	1010,	110,	11,	110,	11
2017-01-03 17:18:17 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	101,	1001
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:17 AI_Player.update()	Search took52ms
2017-01-03 17:18:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()		110,	1101,	111,	1110,	111,	101,	11
2017-01-03 17:18:17 AI_Player.update()		1010,	101,	1011,	1010,	1010,	1011,	11
2017-01-03 17:18:17 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:17 AI_Player.update()		111,	1010,	1100,	1010,	110,	101,	101
2017-01-03 17:18:17 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:17 AI_Player.update()		1110,	1011,	1010,	110,	11,	1010,	11
2017-01-03 17:18:17 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	110,	1001
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:17 AI_Player.update()	Search took2ms
2017-01-03 17:18:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()		110,	1101,	111,	1110,	111,	101,	11
2017-01-03 17:18:17 AI_Player.update()		1010,	101,	1011,	1010,	1010,	1011,	11
2017-01-03 17:18:17 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:17 AI_Player.update()		1010,	1100,	1010,	110,	101,	101,	111
2017-01-03 17:18:17 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:17 AI_Player.update()		1110,	1011,	1010,	110,	11,	1010,	11
2017-01-03 17:18:17 AI_Player.update()		1100,	1010,	1101,	1110,	1101,	110,	1001
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:17 AI_Player.update()	Search took575ms
2017-01-03 17:18:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-03 17:18:17 AI_Player.update()		1010,	101,	1011,	1010,	1010,	1011,	11
2017-01-03 17:18:17 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:17 AI_Player.update()		1010,	11,	1010,	110,	101,	101,	111
2017-01-03 17:18:17 AI_Player.update()		1110,	1011,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:17 AI_Player.update()		1110,	1010,	1010,	110,	11,	1010,	11
2017-01-03 17:18:17 AI_Player.update()		1100,	1101,	1101,	1110,	1101,	110,	1001
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:17 AI_Player.update()	Search took3ms
2017-01-03 17:18:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-03 17:18:17 AI_Player.update()		1010,	1100,	1011,	1010,	1010,	1011,	11
2017-01-03 17:18:17 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:17 AI_Player.update()		1010,	1011,	1010,	110,	101,	101,	111
2017-01-03 17:18:17 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:17 AI_Player.update()		1110,	1101,	1010,	110,	11,	1010,	11
2017-01-03 17:18:17 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-03 17:18:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:17 AI_Player.update()	update
2017-01-03 17:18:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took762ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-03 17:18:18 AI_Player.update()		11,	1010,	1100,	1011,	1010,	1010,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	11,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:18 AI_Player.update()		1010,	1011,	1010,	110,	101,	101,	111
2017-01-03 17:18:18 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	1101,	1010,	110,	11,	1010,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took3ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-03 17:18:18 AI_Player.update()		11,	11,	1100,	1011,	1010,	1010,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:18 AI_Player.update()		1010,	1010,	1010,	110,	101,	101,	111
2017-01-03 17:18:18 AI_Player.update()		1110,	1101,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	101,	1010,	110,	11,	1010,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took39ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-03 17:18:18 AI_Player.update()		11,	11,	1100,	1011,	1010,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:18 AI_Player.update()		1010,	1010,	1010,	110,	101,	1001,	111
2017-01-03 17:18:18 AI_Player.update()		1110,	1101,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	101,	1010,	110,	11,	101,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took6ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-03 17:18:18 AI_Player.update()		11,	11,	1100,	1011,	1010,	1010,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:18 AI_Player.update()		1010,	1010,	1010,	110,	101,	101,	111
2017-01-03 17:18:18 AI_Player.update()		1110,	1101,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	101,	1010,	110,	11,	1010,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took45ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-03 17:18:18 AI_Player.update()		11,	11,	1100,	1011,	1010,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:18 AI_Player.update()		1010,	1010,	1010,	110,	101,	1001,	111
2017-01-03 17:18:18 AI_Player.update()		1110,	1101,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	101,	1010,	110,	11,	101,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took2ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-03 17:18:18 AI_Player.update()		11,	11,	1100,	1011,	1010,	1010,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-03 17:18:18 AI_Player.update()		1010,	1010,	1010,	110,	101,	101,	111
2017-01-03 17:18:18 AI_Player.update()		1110,	1101,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	101,	1010,	110,	11,	1010,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	101,	1101,	1110,	1101,	110,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took45ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-03 17:18:18 AI_Player.update()		11,	11,	1100,	1011,	1010,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:18 AI_Player.update()		1010,	1010,	1010,	110,	101,	1001,	111
2017-01-03 17:18:18 AI_Player.update()		1110,	1101,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	101,	1010,	110,	11,	101,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took4ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	1010,	111,	1110,	111,	110,	11
2017-01-03 17:18:18 AI_Player.update()		1011,	11,	11,	1100,	1011,	1010,	101
2017-01-03 17:18:18 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:18 AI_Player.update()		1010,	1010,	1010,	110,	101,	1001,	111
2017-01-03 17:18:18 AI_Player.update()		1110,	1101,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		1110,	101,	1010,	110,	11,	101,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	101,	1101,	1110,	1101,	1010,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	6 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:18:18 AI_Player.update()	Player a has won!
2017-01-03 17:18:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:18 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:18 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took1ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	11,	111,	1100,	111,	1011,	11
2017-01-03 17:18:18 AI_Player.update()		1010,	110,	1100,	1100,	1101,	1001,	1101
2017-01-03 17:18:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-03 17:18:18 AI_Player.update()		1001,	101,	1100,	1001,	1010,	101,	1010
2017-01-03 17:18:18 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-03 17:18:18 AI_Player.update()		110,	1001,	1011,	1001,	1010,	101,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took34ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	11,	111,	1100,	111,	1011,	11
2017-01-03 17:18:18 AI_Player.update()		110,	1100,	1100,	1101,	1001,	1101,	1010
2017-01-03 17:18:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-03 17:18:18 AI_Player.update()		1001,	101,	1100,	1001,	1010,	101,	1010
2017-01-03 17:18:18 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-03 17:18:18 AI_Player.update()		110,	1001,	1011,	1001,	1010,	101,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took1ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	1100,	111,	1100,	111,	1011,	11
2017-01-03 17:18:18 AI_Player.update()		110,	101,	1100,	1101,	1001,	1101,	1010
2017-01-03 17:18:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-03 17:18:18 AI_Player.update()		1001,	11,	1100,	1001,	1010,	101,	1010
2017-01-03 17:18:18 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1011,	1011
2017-01-03 17:18:18 AI_Player.update()		110,	1010,	1011,	1001,	1010,	101,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	11,	1101,	11,	1101,	1001,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took202ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	1100,	111,	1100,	111,	1001,	11
2017-01-03 17:18:18 AI_Player.update()		110,	101,	1100,	1101,	1001,	1011,	1010
2017-01-03 17:18:18 AI_Player.update()		1110,	101,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:18 AI_Player.update()		1001,	11,	1100,	1001,	1010,	1010,	1010
2017-01-03 17:18:18 AI_Player.update()		1110,	1001,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		110,	1010,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	11,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:18 AI_Player.update()	Search took1ms
2017-01-03 17:18:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-03 17:18:18 AI_Player.update()		110,	101,	1100,	1101,	1001,	1011,	1010
2017-01-03 17:18:18 AI_Player.update()		1110,	11,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:18 AI_Player.update()		1001,	1001,	1100,	1001,	1010,	1010,	1010
2017-01-03 17:18:18 AI_Player.update()		1110,	1010,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:18 AI_Player.update()		110,	11,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:18 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:18 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:18 AI_Player.update()	update
2017-01-03 17:18:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:19 AI_Player.update()	Search took542ms
2017-01-03 17:18:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-03 17:18:19 AI_Player.update()		110,	11,	1100,	1101,	1001,	1011,	1010
2017-01-03 17:18:19 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:19 AI_Player.update()		1001,	1010,	1100,	1001,	1010,	1010,	1010
2017-01-03 17:18:19 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:19 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:19 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()	update
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()	update
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:19 AI_Player.update()	Search took2ms
2017-01-03 17:18:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-03 17:18:19 AI_Player.update()		1010,	110,	11,	1100,	1101,	1001,	1011
2017-01-03 17:18:19 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:19 AI_Player.update()		1001,	1010,	1100,	1001,	1010,	1010,	1010
2017-01-03 17:18:19 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:19 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:19 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()	update
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()	update
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:19 AI_Player.update()	Search took493ms
2017-01-03 17:18:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-03 17:18:19 AI_Player.update()		1011,	1010,	110,	11,	1100,	1101,	1001
2017-01-03 17:18:19 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:19 AI_Player.update()		1001,	1010,	1100,	1001,	1010,	1010,	1010
2017-01-03 17:18:19 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:19 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:19 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()	update
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()	update
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:19 AI_Player.update()	Search took2ms
2017-01-03 17:18:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-03 17:18:19 AI_Player.update()		1011,	1010,	110,	11,	1100,	1101,	1001
2017-01-03 17:18:19 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:19 AI_Player.update()		1010,	1001,	1010,	1100,	1001,	1010,	1010
2017-01-03 17:18:19 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:19 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:19 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()	update
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:19 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:19 AI_Player.update()	update
2017-01-03 17:18:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:20 AI_Player.update()	Search took68ms
2017-01-03 17:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-03 17:18:20 AI_Player.update()		1011,	1010,	110,	11,	1100,	1101,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:20 AI_Player.update()		1001,	1010,	1100,	1001,	1010,	1010,	1010
2017-01-03 17:18:20 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:20 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:20 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:20 AI_Player.update()	Search took6ms
2017-01-03 17:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-03 17:18:20 AI_Player.update()		1011,	1010,	110,	11,	1100,	1101,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:20 AI_Player.update()		1010,	1001,	1010,	1100,	1001,	1010,	1010
2017-01-03 17:18:20 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:20 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:20 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:20 AI_Player.update()	Search took71ms
2017-01-03 17:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-03 17:18:20 AI_Player.update()		1011,	1010,	110,	11,	1100,	1101,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:20 AI_Player.update()		1001,	1010,	1100,	1001,	1010,	1010,	1010
2017-01-03 17:18:20 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:20 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:20 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:20 AI_Player.update()	Search took2ms
2017-01-03 17:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()		110,	1010,	111,	1100,	111,	1001,	11
2017-01-03 17:18:20 AI_Player.update()		1011,	1001,	110,	11,	1100,	1101,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:20 AI_Player.update()		1001,	11,	1100,	1001,	1010,	1010,	1010
2017-01-03 17:18:20 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:20 AI_Player.update()		110,	101,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:20 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:20 AI_Player.update()	Search took403ms
2017-01-03 17:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()		110,	1010,	111,	1100,	111,	1001,	11
2017-01-03 17:18:20 AI_Player.update()		1011,	1001,	110,	11,	1100,	1101,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:20 AI_Player.update()		11,	1100,	1001,	1010,	1010,	1010,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:20 AI_Player.update()		110,	101,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:20 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:20 AI_Player.update()	Search took2ms
2017-01-03 17:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()		110,	101,	111,	1100,	111,	1001,	11
2017-01-03 17:18:20 AI_Player.update()		1011,	1010,	110,	11,	1100,	1101,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:20 AI_Player.update()		11,	1010,	1001,	1010,	1010,	1010,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1100,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:20 AI_Player.update()		110,	1100,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:20 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:20 AI_Player.update()	Search took102ms
2017-01-03 17:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()		110,	101,	111,	11,	111,	1001,	11
2017-01-03 17:18:20 AI_Player.update()		1011,	1010,	110,	1100,	1100,	1101,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-03 17:18:20 AI_Player.update()		11,	1010,	1001,	1010,	1010,	1010,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-03 17:18:20 AI_Player.update()		110,	1100,	1011,	110,	1010,	1011,	11
2017-01-03 17:18:20 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:20 AI_Player.update()	Search took3ms
2017-01-03 17:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-03 17:18:20 AI_Player.update()		1011,	1001,	110,	1100,	1100,	1101,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-03 17:18:20 AI_Player.update()		11,	1100,	1001,	1010,	1010,	1010,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-03 17:18:20 AI_Player.update()		110,	101,	1011,	110,	1010,	1011,	11
2017-01-03 17:18:20 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:20 AI_Player.update()	Search took172ms
2017-01-03 17:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-03 17:18:20 AI_Player.update()		1011,	1001,	110,	1100,	1100,	1101,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-03 17:18:20 AI_Player.update()		11,	1100,	1001,	1010,	1010,	1010,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-03 17:18:20 AI_Player.update()		101,	1011,	110,	1010,	1011,	11,	110
2017-01-03 17:18:20 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:20 AI_Player.update()	Search took3ms
2017-01-03 17:18:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-03 17:18:20 AI_Player.update()		1011,	1001,	110,	1100,	1100,	1101,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-03 17:18:20 AI_Player.update()		11,	1100,	1001,	1010,	1010,	1010,	1001
2017-01-03 17:18:20 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-03 17:18:20 AI_Player.update()		110,	101,	1011,	110,	1010,	1011,	11
2017-01-03 17:18:20 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-03 17:18:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:20 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:20 AI_Player.update()	update
2017-01-03 17:18:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:21 AI_Player.update()	Search took217ms
2017-01-03 17:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-03 17:18:21 AI_Player.update()		1001,	110,	1100,	1100,	1101,	1001,	1011
2017-01-03 17:18:21 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-03 17:18:21 AI_Player.update()		11,	1100,	1001,	1010,	1010,	1010,	1001
2017-01-03 17:18:21 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-03 17:18:21 AI_Player.update()		110,	101,	1011,	110,	1010,	1011,	11
2017-01-03 17:18:21 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:21 AI_Player.update()	Search took2ms
2017-01-03 17:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-03 17:18:21 AI_Player.update()		1001,	1010,	1100,	1100,	1101,	1001,	1011
2017-01-03 17:18:21 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-03 17:18:21 AI_Player.update()		11,	1100,	1001,	1010,	1010,	1010,	1001
2017-01-03 17:18:21 AI_Player.update()		1110,	101,	1101,	1010,	1011,	101,	1011
2017-01-03 17:18:21 AI_Player.update()		110,	101,	1011,	110,	1010,	1011,	11
2017-01-03 17:18:21 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:21 AI_Player.update()	Search took223ms
2017-01-03 17:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-03 17:18:21 AI_Player.update()		1001,	1010,	1100,	11,	1101,	1001,	1011
2017-01-03 17:18:21 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-03 17:18:21 AI_Player.update()		11,	1100,	1001,	1010,	1010,	1010,	1001
2017-01-03 17:18:21 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-03 17:18:21 AI_Player.update()		110,	101,	1011,	1001,	1010,	1011,	11
2017-01-03 17:18:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:21 AI_Player.update()	Player b has won!
2017-01-03 17:18:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:21 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:21 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:21 AI_Player.update()	Search took2ms
2017-01-03 17:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()		110,	1101,	111,	1010,	111,	1101,	11
2017-01-03 17:18:21 AI_Player.update()		1010,	101,	11,	1001,	11,	101,	111
2017-01-03 17:18:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	110,	1011
2017-01-03 17:18:21 AI_Player.update()		1011,	1001,	1110,	1011,	110,	1010,	1011
2017-01-03 17:18:21 AI_Player.update()		1110,	101,	1101,	1011,	1011,	111,	1011
2017-01-03 17:18:21 AI_Player.update()		110,	11,	11,	1100,	111,	110,	1010
2017-01-03 17:18:21 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1100,	1001
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:21 AI_Player.update()	Search took74ms
2017-01-03 17:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-03 17:18:21 AI_Player.update()		1010,	101,	11,	1001,	11,	101,	111
2017-01-03 17:18:21 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-03 17:18:21 AI_Player.update()		1011,	101,	1110,	1011,	110,	1010,	1011
2017-01-03 17:18:21 AI_Player.update()		1110,	11,	1101,	1011,	1011,	111,	1011
2017-01-03 17:18:21 AI_Player.update()		110,	110,	11,	1100,	111,	110,	1010
2017-01-03 17:18:21 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1100,	1001
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:21 AI_Player.update()	Search took2ms
2017-01-03 17:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-03 17:18:21 AI_Player.update()		1010,	101,	11,	1001,	11,	101,	111
2017-01-03 17:18:21 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-03 17:18:21 AI_Player.update()		1011,	1011,	101,	1110,	1011,	110,	1010
2017-01-03 17:18:21 AI_Player.update()		1110,	11,	1101,	1011,	1011,	111,	1011
2017-01-03 17:18:21 AI_Player.update()		110,	110,	11,	1100,	111,	110,	1010
2017-01-03 17:18:21 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1100,	1001
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:21 AI_Player.update()	Search took73ms
2017-01-03 17:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-03 17:18:21 AI_Player.update()		1010,	101,	11,	1001,	11,	101,	111
2017-01-03 17:18:21 AI_Player.update()		1110,	1001,	1110,	1001,	111,	110,	1011
2017-01-03 17:18:21 AI_Player.update()		1011,	101,	1110,	1011,	110,	1010,	1011
2017-01-03 17:18:21 AI_Player.update()		1110,	11,	1101,	1011,	1011,	111,	1011
2017-01-03 17:18:21 AI_Player.update()		110,	110,	11,	1100,	111,	110,	1010
2017-01-03 17:18:21 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1100,	1001
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:21 AI_Player.update()	Search took1ms
2017-01-03 17:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-03 17:18:21 AI_Player.update()		1010,	101,	11,	1001,	11,	1101,	111
2017-01-03 17:18:21 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-03 17:18:21 AI_Player.update()		1011,	101,	1110,	1011,	110,	110,	1011
2017-01-03 17:18:21 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1010,	1011
2017-01-03 17:18:21 AI_Player.update()		110,	110,	11,	1100,	111,	111,	1010
2017-01-03 17:18:21 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	110,	1001
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:21 AI_Player.update()	Search took380ms
2017-01-03 17:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-03 17:18:21 AI_Player.update()		1010,	101,	11,	1001,	11,	1100,	111
2017-01-03 17:18:21 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1101,	1011
2017-01-03 17:18:21 AI_Player.update()		1011,	101,	1110,	1011,	110,	101,	1011
2017-01-03 17:18:21 AI_Player.update()		1110,	11,	1101,	1011,	1011,	110,	1011
2017-01-03 17:18:21 AI_Player.update()		110,	110,	11,	1100,	111,	1010,	1010
2017-01-03 17:18:21 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	111,	1001
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:21 AI_Player.update()	Search took6ms
2017-01-03 17:18:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-03 17:18:21 AI_Player.update()		1010,	1001,	11,	1001,	11,	1100,	111
2017-01-03 17:18:21 AI_Player.update()		1110,	101,	1110,	1001,	111,	1101,	1011
2017-01-03 17:18:21 AI_Player.update()		1011,	11,	1110,	1011,	110,	101,	1011
2017-01-03 17:18:21 AI_Player.update()		1110,	110,	1101,	1011,	1011,	110,	1011
2017-01-03 17:18:21 AI_Player.update()		110,	1101,	11,	1100,	111,	1010,	1010
2017-01-03 17:18:21 AI_Player.update()		1100,	101,	1101,	1001,	1101,	111,	1001
2017-01-03 17:18:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:21 AI_Player.update()	update
2017-01-03 17:18:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:23 AI_Player.update()	Search took1309ms
2017-01-03 17:18:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-03 17:18:23 AI_Player.update()		1010,	1001,	11,	1001,	11,	1100,	111
2017-01-03 17:18:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	1101,	1011
2017-01-03 17:18:23 AI_Player.update()		1011,	11,	1110,	1011,	110,	101,	1011
2017-01-03 17:18:23 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-03 17:18:23 AI_Player.update()		110,	1101,	11,	1001,	111,	1010,	1010
2017-01-03 17:18:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	111,	1001
2017-01-03 17:18:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:18:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()	update
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:18:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()	update
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:23 AI_Player.update()	Search took10ms
2017-01-03 17:18:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()		110,	1001,	111,	1001,	111,	110,	11
2017-01-03 17:18:23 AI_Player.update()		1010,	101,	11,	1001,	11,	1100,	111
2017-01-03 17:18:23 AI_Player.update()		1110,	11,	1110,	1011,	111,	1101,	1011
2017-01-03 17:18:23 AI_Player.update()		1011,	110,	1110,	1011,	110,	101,	1011
2017-01-03 17:18:23 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	110,	1011
2017-01-03 17:18:23 AI_Player.update()		110,	101,	11,	1001,	111,	1010,	1010
2017-01-03 17:18:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	111,	1001
2017-01-03 17:18:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:18:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()	update
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:18:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()	update
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:23 AI_Player.update()	Search took471ms
2017-01-03 17:18:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-03 17:18:23 AI_Player.update()		1010,	1001,	11,	1001,	11,	1100,	111
2017-01-03 17:18:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	1101,	1011
2017-01-03 17:18:23 AI_Player.update()		1011,	11,	1110,	1011,	110,	101,	1011
2017-01-03 17:18:23 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-03 17:18:23 AI_Player.update()		110,	1101,	11,	1001,	111,	1010,	1010
2017-01-03 17:18:23 AI_Player.update()		1100,	101,	1101,	1010,	1101,	111,	1001
2017-01-03 17:18:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:18:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()	update
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()	update
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:23 AI_Player.update()	Search took1ms
2017-01-03 17:18:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-03 17:18:23 AI_Player.update()		1010,	101,	11,	1001,	11,	1100,	111
2017-01-03 17:18:23 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1101,	1011
2017-01-03 17:18:23 AI_Player.update()		1011,	101,	1110,	1011,	110,	101,	1011
2017-01-03 17:18:23 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-03 17:18:23 AI_Player.update()		110,	110,	11,	1001,	111,	1010,	1010
2017-01-03 17:18:23 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	111,	1001
2017-01-03 17:18:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()	update
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:18:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:23 AI_Player.update()	update
2017-01-03 17:18:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:24 AI_Player.update()	Search took1014ms
2017-01-03 17:18:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()		110,	1101,	111,	1001,	111,	110,	11
2017-01-03 17:18:24 AI_Player.update()		1010,	101,	11,	1001,	11,	1100,	111
2017-01-03 17:18:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	1101,	1011
2017-01-03 17:18:24 AI_Player.update()		1011,	1001,	1110,	1011,	110,	101,	1011
2017-01-03 17:18:24 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-03 17:18:24 AI_Player.update()		110,	11,	11,	1001,	111,	1010,	1010
2017-01-03 17:18:24 AI_Player.update()		1100,	110,	1101,	1010,	1101,	111,	1001
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:24 AI_Player.update()	Search took4ms
2017-01-03 17:18:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()		110,	101,	111,	1001,	111,	110,	11
2017-01-03 17:18:24 AI_Player.update()		1010,	101,	11,	1001,	11,	1100,	111
2017-01-03 17:18:24 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1101,	1011
2017-01-03 17:18:24 AI_Player.update()		1011,	101,	1110,	1011,	110,	101,	1011
2017-01-03 17:18:24 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-03 17:18:24 AI_Player.update()		110,	110,	11,	1001,	111,	1010,	1010
2017-01-03 17:18:24 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	111,	1001
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:18:24 AI_Player.update()	Player a has won!
2017-01-03 17:18:24 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:24 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:24 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:24 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:24 AI_Player.update()	Search took1ms
2017-01-03 17:18:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()		110,	111,	111,	111,	111,	11,	11
2017-01-03 17:18:24 AI_Player.update()		101,	11,	1001,	1001,	11,	1010,	110
2017-01-03 17:18:24 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 17:18:24 AI_Player.update()		110,	1100,	1001,	1101,	1100,	1100,	110
2017-01-03 17:18:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-03 17:18:24 AI_Player.update()		1001,	1010,	11,	1100,	1100,	1011,	1101
2017-01-03 17:18:24 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:24 AI_Player.update()	Search took8ms
2017-01-03 17:18:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()		110,	111,	111,	111,	111,	11,	11
2017-01-03 17:18:24 AI_Player.update()		110,	101,	11,	1001,	1001,	11,	1010
2017-01-03 17:18:24 AI_Player.update()		1110,	1010,	1110,	1011,	111,	11,	1011
2017-01-03 17:18:24 AI_Player.update()		110,	1100,	1001,	1101,	1100,	1100,	110
2017-01-03 17:18:24 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-03 17:18:24 AI_Player.update()		1001,	1010,	11,	1100,	1100,	1011,	1101
2017-01-03 17:18:24 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	11,	1001
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:24 AI_Player.update()	Search took1ms
2017-01-03 17:18:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()		110,	101,	111,	111,	111,	11,	11
2017-01-03 17:18:24 AI_Player.update()		110,	1010,	11,	1001,	1001,	11,	1010
2017-01-03 17:18:24 AI_Player.update()		1110,	1100,	1110,	1011,	111,	11,	1011
2017-01-03 17:18:24 AI_Player.update()		110,	11,	1001,	1101,	1100,	1100,	110
2017-01-03 17:18:24 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-03 17:18:24 AI_Player.update()		1001,	1010,	11,	1100,	1100,	1011,	1101
2017-01-03 17:18:24 AI_Player.update()		1100,	111,	1101,	1011,	1101,	11,	1001
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:24 AI_Player.update()	Search took83ms
2017-01-03 17:18:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()		110,	101,	111,	111,	111,	11,	11
2017-01-03 17:18:24 AI_Player.update()		1010,	11,	1001,	1001,	11,	1010,	110
2017-01-03 17:18:24 AI_Player.update()		1110,	1100,	1110,	1011,	111,	11,	1011
2017-01-03 17:18:24 AI_Player.update()		110,	11,	1001,	1101,	1100,	1100,	110
2017-01-03 17:18:24 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-03 17:18:24 AI_Player.update()		1001,	1010,	11,	1100,	1100,	1011,	1101
2017-01-03 17:18:24 AI_Player.update()		1100,	111,	1101,	1011,	1101,	11,	1001
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:24 AI_Player.update()	Search took1ms
2017-01-03 17:18:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()		110,	101,	111,	111,	111,	1010,	11
2017-01-03 17:18:24 AI_Player.update()		1010,	11,	1001,	1001,	11,	11,	110
2017-01-03 17:18:24 AI_Player.update()		1110,	1100,	1110,	1011,	111,	1100,	1011
2017-01-03 17:18:24 AI_Player.update()		110,	11,	1001,	1101,	1100,	1001,	110
2017-01-03 17:18:24 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-03 17:18:24 AI_Player.update()		1001,	1010,	11,	1100,	1100,	11,	1101
2017-01-03 17:18:24 AI_Player.update()		1100,	111,	1101,	1011,	1101,	11,	1001
2017-01-03 17:18:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:24 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:24 AI_Player.update()	update
2017-01-03 17:18:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took166ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	11,	111,	111,	111,	1010,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	1100,	1001,	1001,	11,	11,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1110,	1011,	111,	1100,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	1010,	1001,	1101,	1100,	1001,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-03 17:18:25 AI_Player.update()		1001,	111,	11,	1100,	1100,	11,	1101
2017-01-03 17:18:25 AI_Player.update()		1100,	101,	1101,	1011,	1101,	11,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took2ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	1100,	1001,	1001,	11,	1100,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1110,	1011,	111,	1001,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	1010,	1001,	1101,	1100,	1011,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-03 17:18:25 AI_Player.update()		1001,	111,	11,	1100,	1100,	11,	1101
2017-01-03 17:18:25 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took92ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	1100,	1001,	1011,	11,	1100,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	1010,	1001,	101,	1100,	1011,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-03 17:18:25 AI_Player.update()		1001,	111,	11,	1011,	1100,	11,	1101
2017-01-03 17:18:25 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took2ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	11,	1001,	1011,	11,	1100,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1001,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	11,	1001,	101,	1100,	1011,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-03 17:18:25 AI_Player.update()		1001,	1010,	11,	1011,	1100,	11,	1101
2017-01-03 17:18:25 AI_Player.update()		1100,	111,	1101,	111,	1101,	1010,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took132ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	11,	1001,	1011,	11,	1100,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1100,	1110,	1101,	111,	1001,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	11,	1001,	101,	1100,	1011,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-03 17:18:25 AI_Player.update()		1010,	11,	1011,	1100,	11,	1101,	1001
2017-01-03 17:18:25 AI_Player.update()		1100,	111,	1101,	111,	1101,	1010,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took4ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	1100,	1001,	1011,	11,	1100,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1110,	1101,	111,	1001,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	1010,	1001,	101,	1100,	1011,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	11,	1011
2017-01-03 17:18:25 AI_Player.update()		1010,	111,	1011,	1100,	11,	1101,	1001
2017-01-03 17:18:25 AI_Player.update()		1100,	101,	1101,	111,	1101,	1010,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took212ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	11,	111,	1001,	111,	1100,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	1100,	1001,	1011,	11,	1001,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1110,	1101,	111,	1011,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	1010,	1001,	101,	1100,	11,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-03 17:18:25 AI_Player.update()		1010,	111,	1011,	1100,	11,	1010,	1001
2017-01-03 17:18:25 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took5ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	11,	1001,	1011,	11,	1001,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1011,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	11,	1001,	101,	1100,	11,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1101,	1011
2017-01-03 17:18:25 AI_Player.update()		1010,	101,	1011,	1100,	11,	1010,	1001
2017-01-03 17:18:25 AI_Player.update()		1100,	11,	1101,	111,	1101,	11,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took103ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	1100,	111,	111,	111,	1100,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	11,	1001,	1001,	11,	1001,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1011,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	11,	1001,	1101,	1100,	11,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:25 AI_Player.update()		1010,	101,	1011,	1100,	11,	1010,	1001
2017-01-03 17:18:25 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took3ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	1100,	111,	111,	111,	1100,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	11,	1001,	1001,	11,	1001,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1011,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	11,	1001,	1101,	1100,	11,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:25 AI_Player.update()		101,	1011,	1100,	11,	1010,	1001,	1010
2017-01-03 17:18:25 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	3 5
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took82ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	11,	111,	111,	111,	1100,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	1100,	1001,	1001,	11,	1001,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1110,	1011,	111,	1011,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	1010,	1001,	1101,	1100,	11,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:25 AI_Player.update()		101,	111,	1100,	11,	1010,	1001,	1010
2017-01-03 17:18:25 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	11,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took3ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	1100,	111,	111,	111,	1100,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	11,	1001,	1001,	11,	1001,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1011,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	11,	1001,	1101,	1100,	11,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:25 AI_Player.update()		101,	1011,	1100,	11,	1010,	1001,	1010
2017-01-03 17:18:25 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took41ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	11,	111,	111,	111,	1100,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	1010,	1001,	1001,	11,	1001,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1110,	1011,	111,	1011,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	111,	1001,	1101,	1100,	11,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:25 AI_Player.update()		101,	11,	1100,	11,	1010,	1001,	1010
2017-01-03 17:18:25 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took5ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	1010,	111,	111,	111,	1100,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	11,	1001,	1001,	11,	1001,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	111,	1110,	1011,	111,	1011,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	1011,	1001,	1101,	1100,	11,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:25 AI_Player.update()		101,	1100,	1100,	11,	1010,	1001,	1010
2017-01-03 17:18:25 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took140ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	1010,	111,	111,	111,	1100,	11
2017-01-03 17:18:25 AI_Player.update()		11,	1001,	1001,	11,	1001,	110,	1010
2017-01-03 17:18:25 AI_Player.update()		1110,	111,	1110,	1011,	111,	1011,	1011
2017-01-03 17:18:25 AI_Player.update()		110,	1011,	1001,	1101,	1100,	11,	110
2017-01-03 17:18:25 AI_Player.update()		1110,	11,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:25 AI_Player.update()		101,	1100,	1100,	11,	1010,	1001,	1010
2017-01-03 17:18:25 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:25 AI_Player.update()	Player b has won!
2017-01-03 17:18:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:25 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:25 AI_Player.update()	Search took1ms
2017-01-03 17:18:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-03 17:18:25 AI_Player.update()		1010,	1001,	1010,	101,	1010,	101,	1100
2017-01-03 17:18:25 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:18:25 AI_Player.update()		1010,	101,	1110,	110,	1010,	1100,	111
2017-01-03 17:18:25 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:25 AI_Player.update()		1001,	1100,	1001,	1010,	110,	101,	1010
2017-01-03 17:18:25 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:25 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:25 AI_Player.update()	update
2017-01-03 17:18:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:26 AI_Player.update()	Search took629ms
2017-01-03 17:18:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-03 17:18:26 AI_Player.update()		1100,	1010,	1001,	1010,	101,	1010,	101
2017-01-03 17:18:26 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:18:26 AI_Player.update()		1010,	101,	1110,	110,	1010,	1100,	111
2017-01-03 17:18:26 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:26 AI_Player.update()		1001,	1100,	1001,	1010,	110,	101,	1010
2017-01-03 17:18:26 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()	update
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()	update
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:26 AI_Player.update()	Search took1ms
2017-01-03 17:18:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:18:26 AI_Player.update()		1100,	1001,	1001,	1010,	101,	1010,	101
2017-01-03 17:18:26 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:18:26 AI_Player.update()		1010,	1010,	1110,	110,	1010,	1100,	111
2017-01-03 17:18:26 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:26 AI_Player.update()		1001,	1010,	1001,	1010,	110,	101,	1010
2017-01-03 17:18:26 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()	update
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()	update
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:26 AI_Player.update()	Search took230ms
2017-01-03 17:18:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:18:26 AI_Player.update()		101,	1100,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:26 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:18:26 AI_Player.update()		1010,	1010,	1110,	110,	1010,	1100,	111
2017-01-03 17:18:26 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:26 AI_Player.update()		1001,	1010,	1001,	1010,	110,	101,	1010
2017-01-03 17:18:26 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()	update
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()	update
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:26 AI_Player.update()	Search took4ms
2017-01-03 17:18:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:18:26 AI_Player.update()		101,	1010,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:26 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:18:26 AI_Player.update()		1010,	101,	1110,	110,	1010,	1100,	111
2017-01-03 17:18:26 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:26 AI_Player.update()		1001,	1100,	1001,	1010,	110,	101,	1010
2017-01-03 17:18:26 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()	update
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:26 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:26 AI_Player.update()	update
2017-01-03 17:18:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:27 AI_Player.update()	Search took484ms
2017-01-03 17:18:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()		110,	11,	111,	101,	111,	101,	11
2017-01-03 17:18:27 AI_Player.update()		101,	1100,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:18:27 AI_Player.update()		1010,	1010,	1110,	110,	1010,	1100,	111
2017-01-03 17:18:27 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:27 AI_Player.update()		1001,	1010,	1001,	1010,	110,	101,	1010
2017-01-03 17:18:27 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:27 AI_Player.update()	Search took3ms
2017-01-03 17:18:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:18:27 AI_Player.update()		101,	1010,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:18:27 AI_Player.update()		1010,	101,	1110,	110,	1010,	1100,	111
2017-01-03 17:18:27 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:27 AI_Player.update()		1001,	1100,	1001,	1010,	110,	101,	1010
2017-01-03 17:18:27 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:27 AI_Player.update()	Search took136ms
2017-01-03 17:18:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-03 17:18:27 AI_Player.update()		101,	1010,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:27 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:18:27 AI_Player.update()		1010,	101,	1110,	110,	1010,	1100,	111
2017-01-03 17:18:27 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:27 AI_Player.update()		1010,	1001,	1100,	1001,	1010,	110,	101
2017-01-03 17:18:27 AI_Player.update()		1100,	11,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:27 AI_Player.update()	Search took4ms
2017-01-03 17:18:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:18:27 AI_Player.update()		101,	1010,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:27 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 17:18:27 AI_Player.update()		1010,	1010,	1110,	110,	1010,	1100,	111
2017-01-03 17:18:27 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:27 AI_Player.update()		1010,	11,	1100,	1001,	1010,	110,	101
2017-01-03 17:18:27 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:27 AI_Player.update()	Search took440ms
2017-01-03 17:18:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:18:27 AI_Player.update()		101,	1010,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:27 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 17:18:27 AI_Player.update()		1010,	1010,	1110,	110,	1010,	1100,	111
2017-01-03 17:18:27 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:27 AI_Player.update()		101,	1010,	11,	1100,	1001,	1010,	110
2017-01-03 17:18:27 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:27 AI_Player.update()	Search took4ms
2017-01-03 17:18:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:18:27 AI_Player.update()		101,	1010,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:27 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-03 17:18:27 AI_Player.update()		1010,	1110,	110,	1010,	1100,	111,	1010
2017-01-03 17:18:27 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:27 AI_Player.update()		101,	1010,	11,	1100,	1001,	1010,	110
2017-01-03 17:18:27 AI_Player.update()		1100,	1100,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:27 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:27 AI_Player.update()	update
2017-01-03 17:18:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:28 AI_Player.update()	Search took153ms
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:18:28 AI_Player.update()		101,	101,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1110,	1110,	11,	111,	101,	1011
2017-01-03 17:18:28 AI_Player.update()		1010,	1001,	110,	1010,	1100,	111,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:28 AI_Player.update()		101,	1100,	11,	1100,	1001,	1010,	110
2017-01-03 17:18:28 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:28 AI_Player.update()	Search took4ms
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-03 17:18:28 AI_Player.update()		101,	1110,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:18:28 AI_Player.update()		1010,	1010,	110,	1010,	1100,	111,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:28 AI_Player.update()		101,	1010,	11,	1100,	1001,	1010,	110
2017-01-03 17:18:28 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:28 AI_Player.update()	Search took129ms
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-03 17:18:28 AI_Player.update()		101,	101,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1110,	1110,	11,	111,	101,	1011
2017-01-03 17:18:28 AI_Player.update()		1010,	1001,	110,	1010,	1100,	111,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:28 AI_Player.update()		101,	1100,	11,	1100,	1001,	1010,	110
2017-01-03 17:18:28 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:28 AI_Player.update()	Search took3ms
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-03 17:18:28 AI_Player.update()		101,	1110,	1001,	1001,	1010,	101,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-03 17:18:28 AI_Player.update()		1010,	1010,	110,	1010,	1100,	111,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	11,	1011
2017-01-03 17:18:28 AI_Player.update()		101,	1010,	11,	1100,	1001,	1010,	110
2017-01-03 17:18:28 AI_Player.update()		1100,	1010,	1101,	101,	1101,	11,	1001
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-03 17:18:28 AI_Player.update()	Player a has won!
2017-01-03 17:18:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:28 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:28 AI_Player.update()	Search took2ms
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-03 17:18:28 AI_Player.update()		11,	1100,	101,	1010,	1100,	11,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		11,	1100,	1010,	101,	1010,	11,	1011
2017-01-03 17:18:28 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	11,	11,	110,	1100,	1100,	1110
2017-01-03 17:18:28 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1010,	1001
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:28 AI_Player.update()	Search took393ms
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-03 17:18:28 AI_Player.update()		11,	1100,	101,	1010,	1100,	11,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	1010,	101,	1010,	11,	1011,	11
2017-01-03 17:18:28 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	11,	11,	110,	1100,	1100,	1110
2017-01-03 17:18:28 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1010,	1001
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:28 AI_Player.update()	Search took2ms
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-03 17:18:28 AI_Player.update()		11,	1101,	101,	1010,	1100,	11,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	1001,	101,	1010,	11,	1011,	11
2017-01-03 17:18:28 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	1110,	11,	110,	1100,	1100,	1110
2017-01-03 17:18:28 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:28 AI_Player.update()	Search took54ms
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-03 17:18:28 AI_Player.update()		11,	1101,	101,	1100,	1100,	11,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	1001,	101,	1001,	11,	1011,	11
2017-01-03 17:18:28 AI_Player.update()		1110,	11,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	1110,	11,	11,	1100,	1100,	1110
2017-01-03 17:18:28 AI_Player.update()		1100,	111,	1101,	101,	1101,	1010,	1001
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:28 AI_Player.update()	Search took2ms
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-03 17:18:28 AI_Player.update()		11,	1010,	101,	1100,	1100,	11,	1010
2017-01-03 17:18:28 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	11,	101,	1001,	11,	1011,	11
2017-01-03 17:18:28 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	111,	11,	11,	1100,	1100,	1110
2017-01-03 17:18:28 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:28 AI_Player.update()	Search took113ms
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()		110,	1101,	111,	1010,	111,	1001,	11
2017-01-03 17:18:28 AI_Player.update()		1010,	101,	1100,	1100,	11,	1010,	11
2017-01-03 17:18:28 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	11,	101,	1001,	11,	1011,	11
2017-01-03 17:18:28 AI_Player.update()		1110,	1110,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	111,	11,	11,	1100,	1100,	1110
2017-01-03 17:18:28 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:28 AI_Player.update()	Search took3ms
2017-01-03 17:18:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-03 17:18:28 AI_Player.update()		1010,	1001,	1100,	1100,	11,	1010,	11
2017-01-03 17:18:28 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	1110,	101,	1001,	11,	1011,	11
2017-01-03 17:18:28 AI_Player.update()		1110,	111,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:28 AI_Player.update()		1100,	1100,	11,	11,	1100,	1100,	1110
2017-01-03 17:18:28 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:18:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:28 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:28 AI_Player.update()	update
2017-01-03 17:18:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:29 AI_Player.update()	Search took276ms
2017-01-03 17:18:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-03 17:18:29 AI_Player.update()		1010,	11,	1100,	1100,	11,	1010,	11
2017-01-03 17:18:29 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1100,	111,	101,	1001,	11,	1011,	11
2017-01-03 17:18:29 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1100,	1101,	11,	11,	1100,	1100,	1110
2017-01-03 17:18:29 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:29 AI_Player.update()	Search took2ms
2017-01-03 17:18:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-03 17:18:29 AI_Player.update()		1010,	1110,	1100,	1100,	11,	1010,	11
2017-01-03 17:18:29 AI_Player.update()		1110,	111,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1100,	1100,	101,	1001,	11,	1011,	11
2017-01-03 17:18:29 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1100,	101,	11,	11,	1100,	1100,	1110
2017-01-03 17:18:29 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:29 AI_Player.update()	Search took164ms
2017-01-03 17:18:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-03 17:18:29 AI_Player.update()		1010,	1110,	1100,	1010,	11,	1010,	11
2017-01-03 17:18:29 AI_Player.update()		1110,	111,	1110,	1001,	111,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1100,	1100,	101,	110,	11,	1011,	11
2017-01-03 17:18:29 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1100,	101,	11,	101,	1100,	1100,	1110
2017-01-03 17:18:29 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:29 AI_Player.update()	Search took2ms
2017-01-03 17:18:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()		110,	11,	111,	1100,	111,	1001,	11
2017-01-03 17:18:29 AI_Player.update()		1010,	1110,	1100,	1010,	11,	1010,	11
2017-01-03 17:18:29 AI_Player.update()		1110,	111,	1110,	1001,	111,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		11,	1100,	1100,	101,	110,	11,	1011
2017-01-03 17:18:29 AI_Player.update()		1110,	1101,	1101,	11,	1011,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1100,	101,	11,	101,	1100,	1100,	1110
2017-01-03 17:18:29 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:29 AI_Player.update()	Search took276ms
2017-01-03 17:18:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-03 17:18:29 AI_Player.update()		1010,	1110,	1100,	1100,	11,	1010,	11
2017-01-03 17:18:29 AI_Player.update()		1110,	111,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		11,	1100,	1100,	1001,	110,	11,	1011
2017-01-03 17:18:29 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1100,	101,	11,	11,	1100,	1100,	1110
2017-01-03 17:18:29 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	2 4
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:29 AI_Player.update()	Search took4ms
2017-01-03 17:18:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()		110,	1110,	111,	1010,	111,	1001,	11
2017-01-03 17:18:29 AI_Player.update()		1010,	111,	1100,	1100,	11,	1010,	11
2017-01-03 17:18:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		11,	1101,	1100,	1001,	110,	11,	1011
2017-01-03 17:18:29 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1100,	1001,	11,	11,	1100,	1100,	1110
2017-01-03 17:18:29 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:29 AI_Player.update()	Search took138ms
2017-01-03 17:18:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-03 17:18:29 AI_Player.update()		1010,	1100,	1100,	1100,	11,	1010,	11
2017-01-03 17:18:29 AI_Player.update()		1110,	1101,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		11,	101,	1100,	1001,	110,	11,	1011
2017-01-03 17:18:29 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1100,	11,	11,	11,	1100,	1100,	1110
2017-01-03 17:18:29 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1010,	1001
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:29 AI_Player.update()	Search took5ms
2017-01-03 17:18:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()		110,	111,	111,	1010,	111,	1010,	11
2017-01-03 17:18:29 AI_Player.update()		1010,	1100,	1100,	1100,	11,	1100,	11
2017-01-03 17:18:29 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-03 17:18:29 AI_Player.update()		11,	101,	1100,	1001,	110,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-03 17:18:29 AI_Player.update()		1100,	11,	11,	11,	1100,	1010,	1110
2017-01-03 17:18:29 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-03 17:18:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:29 AI_Player.update()	update
2017-01-03 17:18:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:30 AI_Player.update()	Search took248ms
2017-01-03 17:18:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()		110,	111,	111,	1010,	111,	1010,	11
2017-01-03 17:18:30 AI_Player.update()		1010,	1100,	1100,	1100,	11,	1100,	11
2017-01-03 17:18:30 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-03 17:18:30 AI_Player.update()		1011,	11,	101,	1100,	1001,	110,	1100
2017-01-03 17:18:30 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-03 17:18:30 AI_Player.update()		1100,	11,	11,	11,	1100,	1010,	1110
2017-01-03 17:18:30 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:30 AI_Player.update()	Search took2ms
2017-01-03 17:18:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()		110,	111,	111,	1010,	111,	1010,	11
2017-01-03 17:18:30 AI_Player.update()		1010,	1100,	1100,	1100,	11,	1100,	11
2017-01-03 17:18:30 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-03 17:18:30 AI_Player.update()		11,	101,	1100,	1001,	110,	1100,	1011
2017-01-03 17:18:30 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-03 17:18:30 AI_Player.update()		1100,	11,	11,	11,	1100,	1010,	1110
2017-01-03 17:18:30 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:30 AI_Player.update()	Search took170ms
2017-01-03 17:18:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()		110,	111,	111,	1010,	111,	1010,	11
2017-01-03 17:18:30 AI_Player.update()		1100,	1100,	1100,	11,	1100,	11,	1010
2017-01-03 17:18:30 AI_Player.update()		1110,	1101,	1110,	1010,	111,	11,	1011
2017-01-03 17:18:30 AI_Player.update()		11,	101,	1100,	1001,	110,	1100,	1011
2017-01-03 17:18:30 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1100,	1011
2017-01-03 17:18:30 AI_Player.update()		1100,	11,	11,	11,	1100,	1010,	1110
2017-01-03 17:18:30 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1001,	1001
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	4 6
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:30 AI_Player.update()	Player b has won!
2017-01-03 17:18:30 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:30 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:30 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:30 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:30 AI_Player.update()	Search took1ms
2017-01-03 17:18:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()		110,	101,	111,	1101,	111,	1011,	11
2017-01-03 17:18:30 AI_Player.update()		1001,	1001,	110,	1010,	1100,	1010,	1100
2017-01-03 17:18:30 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:30 AI_Player.update()		1110,	101,	110,	1101,	1100,	1100,	1010
2017-01-03 17:18:30 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	101,	1011
2017-01-03 17:18:30 AI_Player.update()		11,	1010,	110,	1001,	1101,	101,	1010
2017-01-03 17:18:30 AI_Player.update()		1100,	110,	1101,	110,	1101,	110,	1001
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:30 AI_Player.update()	Search took89ms
2017-01-03 17:18:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()		110,	101,	111,	1101,	111,	1011,	11
2017-01-03 17:18:30 AI_Player.update()		1100,	1001,	1001,	110,	1010,	1100,	1010
2017-01-03 17:18:30 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:30 AI_Player.update()		1110,	101,	110,	1101,	1100,	1100,	1010
2017-01-03 17:18:30 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	101,	1011
2017-01-03 17:18:30 AI_Player.update()		11,	1010,	110,	1001,	1101,	101,	1010
2017-01-03 17:18:30 AI_Player.update()		1100,	110,	1101,	110,	1101,	110,	1001
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:30 AI_Player.update()	Search took4ms
2017-01-03 17:18:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-03 17:18:30 AI_Player.update()		1100,	1001,	1001,	110,	1010,	1100,	1010
2017-01-03 17:18:30 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-03 17:18:30 AI_Player.update()		1110,	101,	110,	1101,	1100,	101,	1010
2017-01-03 17:18:30 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	101,	1011
2017-01-03 17:18:30 AI_Player.update()		11,	1010,	110,	1001,	1101,	110,	1010
2017-01-03 17:18:30 AI_Player.update()		1100,	110,	1101,	110,	1101,	1011,	1001
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:30 AI_Player.update()	Search took185ms
2017-01-03 17:18:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-03 17:18:30 AI_Player.update()		1100,	1001,	1001,	110,	1010,	1100,	1010
2017-01-03 17:18:30 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-03 17:18:30 AI_Player.update()		1110,	101,	110,	1101,	1100,	101,	1010
2017-01-03 17:18:30 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	110,	1011
2017-01-03 17:18:30 AI_Player.update()		11,	1010,	110,	1001,	1101,	1011,	1010
2017-01-03 17:18:30 AI_Player.update()		1100,	110,	1101,	110,	1101,	1100,	1001
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:30 AI_Player.update()	Search took2ms
2017-01-03 17:18:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-03 17:18:30 AI_Player.update()		1100,	1001,	1001,	1010,	1010,	1100,	1010
2017-01-03 17:18:30 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:18:30 AI_Player.update()		1110,	101,	110,	1101,	1100,	101,	1010
2017-01-03 17:18:30 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	110,	1011
2017-01-03 17:18:30 AI_Player.update()		11,	1010,	110,	110,	1101,	1011,	1010
2017-01-03 17:18:30 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:18:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:30 AI_Player.update()	update
2017-01-03 17:18:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:31 AI_Player.update()	Search took948ms
2017-01-03 17:18:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:31 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-03 17:18:31 AI_Player.update()		1100,	1001,	1001,	1010,	1010,	1100,	1010
2017-01-03 17:18:31 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:18:31 AI_Player.update()		101,	110,	1101,	1100,	101,	1010,	1110
2017-01-03 17:18:31 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	110,	1011
2017-01-03 17:18:31 AI_Player.update()		11,	1010,	110,	110,	1101,	1011,	1010
2017-01-03 17:18:31 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:18:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:31 AI_Player.update()	update
2017-01-03 17:18:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:31 AI_Player.update()	update
2017-01-03 17:18:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:31 AI_Player.update()	Search took5ms
2017-01-03 17:18:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:31 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-03 17:18:31 AI_Player.update()		1100,	110,	1001,	1010,	1010,	1100,	1010
2017-01-03 17:18:31 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:18:31 AI_Player.update()		101,	1110,	1101,	1100,	101,	1010,	1110
2017-01-03 17:18:31 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	110,	1011
2017-01-03 17:18:31 AI_Player.update()		11,	110,	110,	110,	1101,	1011,	1010
2017-01-03 17:18:31 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:18:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:31 AI_Player.update()	update
2017-01-03 17:18:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:18:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:31 AI_Player.update()	update
2017-01-03 17:18:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:32 AI_Player.update()	Search took712ms
2017-01-03 17:18:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-03 17:18:32 AI_Player.update()		1100,	110,	1001,	1010,	1010,	1100,	1010
2017-01-03 17:18:32 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:18:32 AI_Player.update()		1110,	1101,	1100,	101,	1010,	1110,	101
2017-01-03 17:18:32 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	110,	1011
2017-01-03 17:18:32 AI_Player.update()		11,	110,	110,	110,	1101,	1011,	1010
2017-01-03 17:18:32 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:18:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:18:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()	update
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()	update
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:32 AI_Player.update()	Search took5ms
2017-01-03 17:18:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()		110,	1001,	111,	1101,	111,	1100,	11
2017-01-03 17:18:32 AI_Player.update()		1100,	110,	1001,	110,	1010,	1100,	1010
2017-01-03 17:18:32 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-03 17:18:32 AI_Player.update()		1110,	1101,	1100,	1101,	1010,	1110,	101
2017-01-03 17:18:32 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-03 17:18:32 AI_Player.update()		11,	110,	110,	1001,	1101,	1011,	1010
2017-01-03 17:18:32 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-03 17:18:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()	update
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()	update
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:32 AI_Player.update()	Search took179ms
2017-01-03 17:18:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()		110,	101,	111,	1101,	111,	1100,	11
2017-01-03 17:18:32 AI_Player.update()		1100,	1001,	1001,	110,	1010,	1100,	1010
2017-01-03 17:18:32 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-03 17:18:32 AI_Player.update()		1110,	110,	1100,	1101,	1010,	1110,	101
2017-01-03 17:18:32 AI_Player.update()		1110,	1101,	1101,	101,	1011,	110,	1011
2017-01-03 17:18:32 AI_Player.update()		11,	1010,	110,	1001,	1101,	1011,	1010
2017-01-03 17:18:32 AI_Player.update()		1100,	110,	1101,	110,	1101,	1100,	1001
2017-01-03 17:18:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()	update
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()	update
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:32 AI_Player.update()	Search took8ms
2017-01-03 17:18:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-03 17:18:32 AI_Player.update()		1100,	1001,	1001,	1010,	1010,	1100,	1010
2017-01-03 17:18:32 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:18:32 AI_Player.update()		1110,	110,	1100,	101,	1010,	1110,	101
2017-01-03 17:18:32 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	110,	1011
2017-01-03 17:18:32 AI_Player.update()		11,	1010,	110,	110,	1101,	1011,	1010
2017-01-03 17:18:32 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:18:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()	update
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:18:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:32 AI_Player.update()	update
2017-01-03 17:18:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:33 AI_Player.update()	Search took942ms
2017-01-03 17:18:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:33 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-03 17:18:33 AI_Player.update()		1100,	1001,	1001,	1010,	1010,	1100,	1010
2017-01-03 17:18:33 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:18:33 AI_Player.update()		110,	1100,	101,	1010,	1110,	101,	1110
2017-01-03 17:18:33 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	110,	1011
2017-01-03 17:18:33 AI_Player.update()		11,	1010,	110,	110,	1101,	1011,	1010
2017-01-03 17:18:33 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:18:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:18:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:33 AI_Player.update()	update
2017-01-03 17:18:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:18:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:33 AI_Player.update()	update
2017-01-03 17:18:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:33 AI_Player.update()	Search took2ms
2017-01-03 17:18:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:33 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-03 17:18:33 AI_Player.update()		1100,	1001,	1001,	1010,	1010,	1100,	1010
2017-01-03 17:18:33 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:18:33 AI_Player.update()		1110,	110,	1100,	101,	1010,	1110,	101
2017-01-03 17:18:33 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	110,	1011
2017-01-03 17:18:33 AI_Player.update()		11,	1010,	110,	110,	1101,	1011,	1010
2017-01-03 17:18:33 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:18:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:18:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:33 AI_Player.update()	update
2017-01-03 17:18:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:33 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:18:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:33 AI_Player.update()	update
2017-01-03 17:18:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:34 AI_Player.update()	Search took1120ms
2017-01-03 17:18:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:34 AI_Player.update()		110,	101,	111,	110,	111,	1100,	11
2017-01-03 17:18:34 AI_Player.update()		1001,	1001,	1010,	1010,	1100,	1010,	1100
2017-01-03 17:18:34 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:18:34 AI_Player.update()		1110,	110,	1100,	101,	1010,	1110,	101
2017-01-03 17:18:34 AI_Player.update()		1110,	1101,	1101,	1001,	1011,	110,	1011
2017-01-03 17:18:34 AI_Player.update()		11,	1010,	110,	110,	1101,	1011,	1010
2017-01-03 17:18:34 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:18:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	5 4
2017-01-03 17:18:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:34 AI_Player.update()	update
2017-01-03 17:18:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:34 AI_Player.update()	update
2017-01-03 17:18:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:34 AI_Player.update()	Search took3ms
2017-01-03 17:18:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:34 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-03 17:18:34 AI_Player.update()		1001,	1001,	1010,	1101,	1100,	1010,	1100
2017-01-03 17:18:34 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-03 17:18:34 AI_Player.update()		1110,	110,	1100,	1001,	1010,	1110,	101
2017-01-03 17:18:34 AI_Player.update()		1110,	1101,	1101,	110,	1011,	110,	1011
2017-01-03 17:18:34 AI_Player.update()		11,	1010,	110,	1101,	1101,	1011,	1010
2017-01-03 17:18:34 AI_Player.update()		1100,	110,	1101,	110,	1101,	1100,	1001
2017-01-03 17:18:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:34 AI_Player.update()	update
2017-01-03 17:18:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:34 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:34 AI_Player.update()	update
2017-01-03 17:18:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:35 AI_Player.update()	Search took846ms
2017-01-03 17:18:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:35 AI_Player.update()		110,	1001,	111,	1010,	111,	1100,	11
2017-01-03 17:18:35 AI_Player.update()		1001,	110,	1010,	1101,	1100,	1010,	1100
2017-01-03 17:18:35 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-03 17:18:35 AI_Player.update()		1110,	1101,	1100,	1001,	1010,	1110,	101
2017-01-03 17:18:35 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-03 17:18:35 AI_Player.update()		11,	110,	110,	1101,	1101,	1011,	1010
2017-01-03 17:18:35 AI_Player.update()		1100,	101,	1101,	110,	1101,	1100,	1001
2017-01-03 17:18:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:35 AI_Player.update()	update
2017-01-03 17:18:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:35 AI_Player.update()	update
2017-01-03 17:18:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:35 AI_Player.update()	Search took8ms
2017-01-03 17:18:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:35 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-03 17:18:35 AI_Player.update()		1001,	110,	1010,	1010,	1100,	1010,	1100
2017-01-03 17:18:35 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:18:35 AI_Player.update()		1110,	1101,	1100,	101,	1010,	1110,	101
2017-01-03 17:18:35 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	110,	1011
2017-01-03 17:18:35 AI_Player.update()		11,	110,	110,	110,	1101,	1011,	1010
2017-01-03 17:18:35 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:18:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	5 6
2017-01-03 17:18:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:35 AI_Player.update()	update
2017-01-03 17:18:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:35 AI_Player.update()	update
2017-01-03 17:18:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:36 AI_Player.update()	Search took1204ms
2017-01-03 17:18:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()		110,	1001,	111,	110,	111,	1100,	11
2017-01-03 17:18:36 AI_Player.update()		1100,	1001,	110,	1010,	1010,	1100,	1010
2017-01-03 17:18:36 AI_Player.update()		1110,	110,	1110,	1101,	111,	101,	1011
2017-01-03 17:18:36 AI_Player.update()		1110,	1101,	1100,	101,	1010,	1110,	101
2017-01-03 17:18:36 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	110,	1011
2017-01-03 17:18:36 AI_Player.update()		11,	110,	110,	110,	1101,	1011,	1010
2017-01-03 17:18:36 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1100,	1001
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:36 AI_Player.update()	Player b has won!
2017-01-03 17:18:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:36 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:36 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:36 AI_Player.update()	Search took1ms
2017-01-03 17:18:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()		110,	110,	111,	1110,	111,	1100,	11
2017-01-03 17:18:36 AI_Player.update()		1010,	1001,	110,	1110,	11,	101,	1110
2017-01-03 17:18:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-03 17:18:36 AI_Player.update()		1100,	1011,	101,	1001,	1001,	11,	101
2017-01-03 17:18:36 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:36 AI_Player.update()		110,	101,	101,	1001,	1010,	1101,	11
2017-01-03 17:18:36 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:36 AI_Player.update()	Search took70ms
2017-01-03 17:18:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()		110,	1001,	111,	1110,	111,	1100,	11
2017-01-03 17:18:36 AI_Player.update()		1010,	1010,	110,	1110,	11,	101,	1110
2017-01-03 17:18:36 AI_Player.update()		1110,	1011,	1110,	101,	111,	11,	1011
2017-01-03 17:18:36 AI_Player.update()		1100,	1100,	101,	1001,	1001,	11,	101
2017-01-03 17:18:36 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:36 AI_Player.update()		110,	101,	101,	1001,	1010,	1101,	11
2017-01-03 17:18:36 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:36 AI_Player.update()	Search took2ms
2017-01-03 17:18:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()		110,	1001,	111,	1110,	111,	1100,	11
2017-01-03 17:18:36 AI_Player.update()		1010,	1010,	110,	1110,	11,	101,	1110
2017-01-03 17:18:36 AI_Player.update()		1110,	1011,	1110,	101,	111,	11,	1011
2017-01-03 17:18:36 AI_Player.update()		1100,	101,	1001,	1001,	11,	101,	1100
2017-01-03 17:18:36 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:36 AI_Player.update()		110,	101,	101,	1001,	1010,	1101,	11
2017-01-03 17:18:36 AI_Player.update()		1100,	110,	1101,	101,	1101,	1001,	1001
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:36 AI_Player.update()	Search took149ms
2017-01-03 17:18:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()		110,	1001,	111,	1110,	111,	101,	11
2017-01-03 17:18:36 AI_Player.update()		1010,	1010,	110,	1110,	11,	11,	1110
2017-01-03 17:18:36 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-03 17:18:36 AI_Player.update()		1100,	101,	1001,	1001,	11,	1101,	1100
2017-01-03 17:18:36 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:36 AI_Player.update()		110,	101,	101,	1001,	1010,	1001,	11
2017-01-03 17:18:36 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:36 AI_Player.update()	Search took2ms
2017-01-03 17:18:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-03 17:18:36 AI_Player.update()		1010,	1011,	110,	1110,	11,	11,	1110
2017-01-03 17:18:36 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-03 17:18:36 AI_Player.update()		1100,	101,	1001,	1001,	11,	1101,	1100
2017-01-03 17:18:36 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:36 AI_Player.update()		110,	110,	101,	1001,	1010,	1001,	11
2017-01-03 17:18:36 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:36 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:36 AI_Player.update()	update
2017-01-03 17:18:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:37 AI_Player.update()	Search took378ms
2017-01-03 17:18:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()		110,	1001,	111,	1110,	111,	101,	11
2017-01-03 17:18:37 AI_Player.update()		1010,	1010,	110,	1110,	11,	11,	1110
2017-01-03 17:18:37 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-03 17:18:37 AI_Player.update()		1100,	101,	1001,	1001,	11,	1101,	1100
2017-01-03 17:18:37 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:37 AI_Player.update()		110,	101,	101,	1001,	1010,	1001,	11
2017-01-03 17:18:37 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()	update
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()	update
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:37 AI_Player.update()	Search took2ms
2017-01-03 17:18:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-03 17:18:37 AI_Player.update()		1010,	1001,	110,	1110,	11,	11,	1110
2017-01-03 17:18:37 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:18:37 AI_Player.update()		1100,	1011,	1001,	1001,	11,	1101,	1100
2017-01-03 17:18:37 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:37 AI_Player.update()		110,	101,	101,	1001,	1010,	1001,	11
2017-01-03 17:18:37 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()	update
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()	update
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:37 AI_Player.update()	Search took503ms
2017-01-03 17:18:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-03 17:18:37 AI_Player.update()		1010,	110,	110,	1110,	11,	11,	1110
2017-01-03 17:18:37 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:18:37 AI_Player.update()		1100,	1010,	1001,	1001,	11,	1101,	1100
2017-01-03 17:18:37 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:37 AI_Player.update()		110,	101,	101,	1001,	1010,	1001,	11
2017-01-03 17:18:37 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	1 2
2017-01-03 17:18:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()	update
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()	update
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:37 AI_Player.update()	Search took3ms
2017-01-03 17:18:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-03 17:18:37 AI_Player.update()		1010,	1001,	110,	1110,	11,	11,	1110
2017-01-03 17:18:37 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:18:37 AI_Player.update()		1100,	1011,	1001,	1001,	11,	1101,	1100
2017-01-03 17:18:37 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:37 AI_Player.update()		110,	101,	101,	1001,	1010,	1001,	11
2017-01-03 17:18:37 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()	update
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:37 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:37 AI_Player.update()	update
2017-01-03 17:18:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:38 AI_Player.update()	Search took472ms
2017-01-03 17:18:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-03 17:18:38 AI_Player.update()		1010,	110,	110,	1110,	11,	11,	1110
2017-01-03 17:18:38 AI_Player.update()		1110,	1001,	1110,	101,	111,	101,	1011
2017-01-03 17:18:38 AI_Player.update()		1100,	1010,	1001,	1001,	11,	1101,	1100
2017-01-03 17:18:38 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:38 AI_Player.update()		110,	101,	101,	1001,	1010,	1001,	11
2017-01-03 17:18:38 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	1 3
2017-01-03 17:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()	update
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()	update
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:38 AI_Player.update()	Search took2ms
2017-01-03 17:18:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-03 17:18:38 AI_Player.update()		1010,	1001,	110,	1110,	11,	11,	1110
2017-01-03 17:18:38 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:18:38 AI_Player.update()		1100,	1011,	1001,	1001,	11,	1101,	1100
2017-01-03 17:18:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:38 AI_Player.update()		110,	101,	101,	1001,	1010,	1001,	11
2017-01-03 17:18:38 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()	update
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()	update
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:38 AI_Player.update()	Search took489ms
2017-01-03 17:18:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-03 17:18:38 AI_Player.update()		1010,	1001,	110,	1110,	11,	11,	1110
2017-01-03 17:18:38 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-03 17:18:38 AI_Player.update()		1100,	1100,	1011,	1001,	1001,	11,	1101
2017-01-03 17:18:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	1101,	1011
2017-01-03 17:18:38 AI_Player.update()		110,	101,	101,	1001,	1010,	1001,	11
2017-01-03 17:18:38 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	1 4
2017-01-03 17:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()	update
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:18:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()	update
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:38 AI_Player.update()	Search took2ms
2017-01-03 17:18:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-03 17:18:38 AI_Player.update()		1010,	1001,	110,	1110,	11,	101,	1110
2017-01-03 17:18:38 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-03 17:18:38 AI_Player.update()		1100,	1100,	1011,	1001,	1001,	1101,	1101
2017-01-03 17:18:38 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-03 17:18:38 AI_Player.update()		110,	101,	101,	1001,	1010,	1100,	11
2017-01-03 17:18:38 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:18:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	1 5
2017-01-03 17:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()	update
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:38 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:38 AI_Player.update()	update
2017-01-03 17:18:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:39 AI_Player.update()	Search took1069ms
2017-01-03 17:18:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:39 AI_Player.update()		110,	101,	111,	1110,	111,	11,	11
2017-01-03 17:18:39 AI_Player.update()		1010,	110,	110,	1110,	11,	101,	1110
2017-01-03 17:18:39 AI_Player.update()		1110,	1001,	1110,	101,	111,	11,	1011
2017-01-03 17:18:39 AI_Player.update()		1100,	1010,	1011,	1001,	1001,	1101,	1101
2017-01-03 17:18:39 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-03 17:18:39 AI_Player.update()		110,	101,	101,	1001,	1010,	1100,	11
2017-01-03 17:18:39 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:18:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	2 5
2017-01-03 17:18:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:39 AI_Player.update()	update
2017-01-03 17:18:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:39 AI_Player.update()	update
2017-01-03 17:18:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:39 AI_Player.update()	Search took5ms
2017-01-03 17:18:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:39 AI_Player.update()		110,	110,	111,	1110,	111,	11,	11
2017-01-03 17:18:39 AI_Player.update()		1010,	1001,	110,	1110,	11,	101,	1110
2017-01-03 17:18:39 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-03 17:18:39 AI_Player.update()		1100,	1100,	1011,	1001,	1001,	1101,	1101
2017-01-03 17:18:39 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-03 17:18:39 AI_Player.update()		110,	101,	101,	1001,	1010,	1100,	11
2017-01-03 17:18:39 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-03 17:18:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	2 6
2017-01-03 17:18:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:39 AI_Player.update()	update
2017-01-03 17:18:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:18:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:39 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:39 AI_Player.update()	update
2017-01-03 17:18:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:40 AI_Player.update()	Search took1009ms
2017-01-03 17:18:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:40 AI_Player.update()		110,	1001,	111,	1110,	111,	11,	11
2017-01-03 17:18:40 AI_Player.update()		1010,	1010,	110,	1110,	11,	101,	1110
2017-01-03 17:18:40 AI_Player.update()		1110,	1100,	1110,	101,	111,	11,	1011
2017-01-03 17:18:40 AI_Player.update()		1100,	101,	1011,	1001,	1001,	1101,	1101
2017-01-03 17:18:40 AI_Player.update()		1110,	101,	1101,	101,	1011,	1001,	1011
2017-01-03 17:18:40 AI_Player.update()		110,	101,	101,	1001,	1010,	1100,	11
2017-01-03 17:18:40 AI_Player.update()		1100,	110,	1101,	101,	1101,	101,	1001
2017-01-03 17:18:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	3 6
2017-01-03 17:18:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:40 AI_Player.update()	update
2017-01-03 17:18:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:40 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:40 AI_Player.update()	Player b has won!
2017-01-03 17:18:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:40 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:40 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:40 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:40 AI_Player.update()	update
2017-01-03 17:18:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:40 AI_Player.update()	Search took1ms
2017-01-03 17:18:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:40 AI_Player.update()		110,	110,	111,	1011,	111,	1011,	11
2017-01-03 17:18:40 AI_Player.update()		1110,	1011,	110,	1100,	101,	1010,	1110
2017-01-03 17:18:40 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-03 17:18:40 AI_Player.update()		1100,	1001,	101,	1001,	1100,	11,	1010
2017-01-03 17:18:40 AI_Player.update()		1110,	111,	1101,	101,	1011,	101,	1011
2017-01-03 17:18:40 AI_Player.update()		101,	1010,	110,	1001,	111,	110,	11
2017-01-03 17:18:40 AI_Player.update()		1100,	11,	1101,	111,	1101,	1101,	1001
2017-01-03 17:18:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:40 AI_Player.update()	update
2017-01-03 17:18:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:40 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:40 AI_Player.update()	update
2017-01-03 17:18:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:41 AI_Player.update()	Search took143ms
2017-01-03 17:18:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()		110,	1011,	111,	1011,	111,	1011,	11
2017-01-03 17:18:41 AI_Player.update()		1110,	110,	110,	1100,	101,	1010,	1110
2017-01-03 17:18:41 AI_Player.update()		1110,	1001,	1110,	111,	111,	1010,	1011
2017-01-03 17:18:41 AI_Player.update()		1100,	111,	101,	1001,	1100,	11,	1010
2017-01-03 17:18:41 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-03 17:18:41 AI_Player.update()		101,	11,	110,	1001,	111,	110,	11
2017-01-03 17:18:41 AI_Player.update()		1100,	110,	1101,	111,	1101,	1101,	1001
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:41 AI_Player.update()	Search took2ms
2017-01-03 17:18:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()		110,	1011,	111,	1011,	111,	1101,	11
2017-01-03 17:18:41 AI_Player.update()		1110,	110,	110,	1100,	101,	1011,	1110
2017-01-03 17:18:41 AI_Player.update()		1110,	1001,	1110,	111,	111,	1010,	1011
2017-01-03 17:18:41 AI_Player.update()		1100,	111,	101,	1001,	1100,	1010,	1010
2017-01-03 17:18:41 AI_Player.update()		1110,	1010,	1101,	101,	1011,	11,	1011
2017-01-03 17:18:41 AI_Player.update()		101,	11,	110,	1001,	111,	101,	11
2017-01-03 17:18:41 AI_Player.update()		1100,	110,	1101,	111,	1101,	110,	1001
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:41 AI_Player.update()	Search took235ms
2017-01-03 17:18:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()		110,	1011,	111,	1100,	111,	1101,	11
2017-01-03 17:18:41 AI_Player.update()		1110,	110,	110,	111,	101,	1011,	1110
2017-01-03 17:18:41 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:41 AI_Player.update()		1100,	111,	101,	101,	1100,	1010,	1010
2017-01-03 17:18:41 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-03 17:18:41 AI_Player.update()		101,	11,	110,	111,	111,	101,	11
2017-01-03 17:18:41 AI_Player.update()		1100,	110,	1101,	1011,	1101,	110,	1001
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:41 AI_Player.update()	Search took2ms
2017-01-03 17:18:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()		110,	1011,	111,	1100,	111,	1101,	11
2017-01-03 17:18:41 AI_Player.update()		1110,	110,	110,	111,	101,	1011,	1110
2017-01-03 17:18:41 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:41 AI_Player.update()		1010,	1100,	111,	101,	101,	1100,	1010
2017-01-03 17:18:41 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	11,	1011
2017-01-03 17:18:41 AI_Player.update()		101,	11,	110,	111,	111,	101,	11
2017-01-03 17:18:41 AI_Player.update()		1100,	110,	1101,	1011,	1101,	110,	1001
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:41 AI_Player.update()	Search took289ms
2017-01-03 17:18:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()		110,	110,	111,	1100,	111,	1101,	11
2017-01-03 17:18:41 AI_Player.update()		1110,	1011,	110,	111,	101,	1011,	1110
2017-01-03 17:18:41 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:41 AI_Player.update()		1010,	1001,	111,	101,	101,	1100,	1010
2017-01-03 17:18:41 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	11,	1011
2017-01-03 17:18:41 AI_Player.update()		101,	1010,	110,	111,	111,	101,	11
2017-01-03 17:18:41 AI_Player.update()		1100,	11,	1101,	1011,	1101,	110,	1001
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:41 AI_Player.update()	Search took3ms
2017-01-03 17:18:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()		110,	110,	111,	111,	111,	1101,	11
2017-01-03 17:18:41 AI_Player.update()		1110,	1011,	110,	1001,	101,	1011,	1110
2017-01-03 17:18:41 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-03 17:18:41 AI_Player.update()		1010,	1001,	111,	1001,	101,	1100,	1010
2017-01-03 17:18:41 AI_Player.update()		1110,	1100,	1101,	111,	1011,	11,	1011
2017-01-03 17:18:41 AI_Player.update()		101,	1010,	110,	1011,	111,	101,	11
2017-01-03 17:18:41 AI_Player.update()		1100,	11,	1101,	1100,	1101,	110,	1001
2017-01-03 17:18:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:41 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:41 AI_Player.update()	update
2017-01-03 17:18:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:42 AI_Player.update()	Search took688ms
2017-01-03 17:18:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:42 AI_Player.update()		110,	11,	111,	111,	111,	1101,	11
2017-01-03 17:18:42 AI_Player.update()		1110,	110,	110,	1001,	101,	1011,	1110
2017-01-03 17:18:42 AI_Player.update()		1110,	1011,	1110,	101,	111,	1010,	1011
2017-01-03 17:18:42 AI_Player.update()		1010,	110,	111,	1001,	101,	1100,	1010
2017-01-03 17:18:42 AI_Player.update()		1110,	1001,	1101,	111,	1011,	11,	1011
2017-01-03 17:18:42 AI_Player.update()		101,	1100,	110,	1011,	111,	101,	11
2017-01-03 17:18:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-03 17:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	2 2
2017-01-03 17:18:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:42 AI_Player.update()	update
2017-01-03 17:18:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:42 AI_Player.update()	update
2017-01-03 17:18:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:42 AI_Player.update()	Search took4ms
2017-01-03 17:18:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:42 AI_Player.update()		110,	11,	111,	1001,	111,	1101,	11
2017-01-03 17:18:42 AI_Player.update()		1110,	110,	110,	101,	101,	1011,	1110
2017-01-03 17:18:42 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:42 AI_Player.update()		1010,	110,	111,	111,	101,	1100,	1010
2017-01-03 17:18:42 AI_Player.update()		1110,	1001,	1101,	1011,	1011,	11,	1011
2017-01-03 17:18:42 AI_Player.update()		101,	1100,	110,	1100,	111,	101,	11
2017-01-03 17:18:42 AI_Player.update()		1100,	1010,	1101,	111,	1101,	110,	1001
2017-01-03 17:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	2 3
2017-01-03 17:18:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:42 AI_Player.update()	update
2017-01-03 17:18:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:42 AI_Player.update()	update
2017-01-03 17:18:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:42 AI_Player.update()	Search took724ms
2017-01-03 17:18:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:42 AI_Player.update()		110,	11,	111,	111,	111,	1101,	11
2017-01-03 17:18:42 AI_Player.update()		1110,	110,	110,	1001,	101,	1011,	1110
2017-01-03 17:18:42 AI_Player.update()		1110,	1011,	1110,	101,	111,	1010,	1011
2017-01-03 17:18:42 AI_Player.update()		1010,	110,	111,	1001,	101,	1100,	1010
2017-01-03 17:18:42 AI_Player.update()		1110,	1001,	1101,	111,	1011,	11,	1011
2017-01-03 17:18:42 AI_Player.update()		101,	1100,	110,	1011,	111,	101,	11
2017-01-03 17:18:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-03 17:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	3 3
2017-01-03 17:18:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:42 AI_Player.update()	update
2017-01-03 17:18:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:42 AI_Player.update()	update
2017-01-03 17:18:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:42 AI_Player.update()	Search took5ms
2017-01-03 17:18:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:42 AI_Player.update()		110,	11,	111,	111,	111,	1101,	11
2017-01-03 17:18:42 AI_Player.update()		1110,	110,	110,	1001,	101,	1011,	1110
2017-01-03 17:18:42 AI_Player.update()		1110,	1011,	1110,	101,	111,	1010,	1011
2017-01-03 17:18:42 AI_Player.update()		1010,	1010,	110,	111,	1001,	101,	1100
2017-01-03 17:18:42 AI_Player.update()		1110,	1001,	1101,	111,	1011,	11,	1011
2017-01-03 17:18:42 AI_Player.update()		101,	1100,	110,	1011,	111,	101,	11
2017-01-03 17:18:42 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	110,	1001
2017-01-03 17:18:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	3 4
2017-01-03 17:18:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:43 AI_Player.update()	update
2017-01-03 17:18:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:43 AI_Player.update()	update
2017-01-03 17:18:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:44 AI_Player.update()	Search took1100ms
2017-01-03 17:18:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-03 17:18:44 AI_Player.update()		1110,	110,	110,	111,	101,	1011,	1110
2017-01-03 17:18:44 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:44 AI_Player.update()		1010,	1010,	110,	101,	1001,	101,	1100
2017-01-03 17:18:44 AI_Player.update()		1110,	1001,	1101,	111,	1011,	11,	1011
2017-01-03 17:18:44 AI_Player.update()		101,	1100,	110,	111,	111,	101,	11
2017-01-03 17:18:44 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	4 4
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:44 AI_Player.update()	Search took2ms
2017-01-03 17:18:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-03 17:18:44 AI_Player.update()		110,	110,	111,	101,	1011,	1110,	1110
2017-01-03 17:18:44 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:44 AI_Player.update()		1010,	1010,	110,	101,	1001,	101,	1100
2017-01-03 17:18:44 AI_Player.update()		1110,	1001,	1101,	111,	1011,	11,	1011
2017-01-03 17:18:44 AI_Player.update()		101,	1100,	110,	111,	111,	101,	11
2017-01-03 17:18:44 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	4 5
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:44 AI_Player.update()	Search took296ms
2017-01-03 17:18:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()		110,	110,	111,	1100,	111,	1101,	11
2017-01-03 17:18:44 AI_Player.update()		110,	1011,	111,	101,	1011,	1110,	1110
2017-01-03 17:18:44 AI_Player.update()		1110,	1010,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:44 AI_Player.update()		1010,	1001,	110,	101,	1001,	101,	1100
2017-01-03 17:18:44 AI_Player.update()		1110,	1100,	1101,	111,	1011,	11,	1011
2017-01-03 17:18:44 AI_Player.update()		101,	1010,	110,	111,	111,	101,	11
2017-01-03 17:18:44 AI_Player.update()		1100,	11,	1101,	1011,	1101,	110,	1001
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:44 AI_Player.update()	Search took2ms
2017-01-03 17:18:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()		110,	11,	111,	1100,	111,	1101,	11
2017-01-03 17:18:44 AI_Player.update()		110,	110,	111,	101,	1011,	1110,	1110
2017-01-03 17:18:44 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1010,	1011
2017-01-03 17:18:44 AI_Player.update()		1010,	1010,	110,	101,	1001,	101,	1100
2017-01-03 17:18:44 AI_Player.update()		1110,	1001,	1101,	111,	1011,	11,	1011
2017-01-03 17:18:44 AI_Player.update()		101,	1100,	110,	111,	111,	101,	11
2017-01-03 17:18:44 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:44 AI_Player.update()	Search took362ms
2017-01-03 17:18:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()		110,	11,	111,	1011,	111,	1101,	11
2017-01-03 17:18:44 AI_Player.update()		110,	110,	111,	1100,	1011,	1110,	1110
2017-01-03 17:18:44 AI_Player.update()		1110,	1011,	1110,	101,	111,	1010,	1011
2017-01-03 17:18:44 AI_Player.update()		1010,	1010,	110,	1001,	1001,	101,	1100
2017-01-03 17:18:44 AI_Player.update()		1110,	1001,	1101,	101,	1011,	11,	1011
2017-01-03 17:18:44 AI_Player.update()		101,	1100,	110,	111,	111,	101,	11
2017-01-03 17:18:44 AI_Player.update()		1100,	1010,	1101,	111,	1101,	110,	1001
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:44 AI_Player.update()	Search took4ms
2017-01-03 17:18:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()		110,	11,	111,	111,	111,	1101,	11
2017-01-03 17:18:44 AI_Player.update()		110,	110,	111,	1011,	1011,	1110,	1110
2017-01-03 17:18:44 AI_Player.update()		1110,	1011,	1110,	1100,	111,	1010,	1011
2017-01-03 17:18:44 AI_Player.update()		1010,	1010,	110,	101,	1001,	101,	1100
2017-01-03 17:18:44 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	11,	1011
2017-01-03 17:18:44 AI_Player.update()		101,	1100,	110,	101,	111,	101,	11
2017-01-03 17:18:44 AI_Player.update()		1100,	1010,	1101,	111,	1101,	110,	1001
2017-01-03 17:18:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	5 5
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:18:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:44 AI_Player.update()	update
2017-01-03 17:18:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:45 AI_Player.update()	Search took838ms
2017-01-03 17:18:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:45 AI_Player.update()		110,	11,	111,	111,	111,	1110,	11
2017-01-03 17:18:45 AI_Player.update()		110,	110,	111,	1011,	1011,	1010,	1110
2017-01-03 17:18:45 AI_Player.update()		1110,	1011,	1110,	1100,	111,	101,	1011
2017-01-03 17:18:45 AI_Player.update()		1010,	1010,	110,	101,	1001,	11,	1100
2017-01-03 17:18:45 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:45 AI_Player.update()		101,	1100,	110,	101,	111,	110,	11
2017-01-03 17:18:45 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1101,	1001
2017-01-03 17:18:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	6 5
2017-01-03 17:18:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:45 AI_Player.update()	update
2017-01-03 17:18:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:45 AI_Player.update()	update
2017-01-03 17:18:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:45 AI_Player.update()	Search took7ms
2017-01-03 17:18:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:45 AI_Player.update()		110,	110,	111,	111,	111,	1110,	11
2017-01-03 17:18:45 AI_Player.update()		110,	1011,	111,	1011,	1011,	1010,	1110
2017-01-03 17:18:45 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-03 17:18:45 AI_Player.update()		1010,	1001,	110,	101,	1001,	11,	1100
2017-01-03 17:18:45 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:45 AI_Player.update()		101,	1010,	110,	101,	111,	110,	11
2017-01-03 17:18:45 AI_Player.update()		1100,	11,	1101,	111,	1101,	1101,	1001
2017-01-03 17:18:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:45 AI_Player.update()	update
2017-01-03 17:18:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:45 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:45 AI_Player.update()	update
2017-01-03 17:18:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:46 AI_Player.update()	Search took1094ms
2017-01-03 17:18:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:46 AI_Player.update()		110,	1011,	111,	111,	111,	1110,	11
2017-01-03 17:18:46 AI_Player.update()		110,	1010,	111,	1011,	1011,	1010,	1110
2017-01-03 17:18:46 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-03 17:18:46 AI_Player.update()		1010,	1100,	110,	101,	1001,	11,	1100
2017-01-03 17:18:46 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	101,	1011
2017-01-03 17:18:46 AI_Player.update()		101,	11,	110,	101,	111,	110,	11
2017-01-03 17:18:46 AI_Player.update()		1100,	110,	1101,	111,	1101,	1101,	1001
2017-01-03 17:18:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:46 GameBoard.setupTreasurePanel()	6 6
2017-01-03 17:18:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:46 AI_Player.update()	update
2017-01-03 17:18:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:46 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-03 17:18:46 AI_Player.update()	Player b has won!
2017-01-03 17:18:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:55 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-03 17:18:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-03 17:18:55 QueryProlog.reset()	setup(h1/h3). suceeded
2017-01-03 17:18:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:55 AI_Player.update()	update
2017-01-03 17:18:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:55 AI_Player.update()	Search took4ms
2017-01-03 17:18:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:55 AI_Player.update()		110,	1101,	111,	1001,	111,	1100,	11
2017-01-03 17:18:55 AI_Player.update()		101,	101,	1110,	11,	1101,	1001,	11
2017-01-03 17:18:55 AI_Player.update()		1110,	1010,	1110,	1110,	111,	111,	1011
2017-01-03 17:18:55 AI_Player.update()		110,	1010,	11,	11,	101,	1110,	101
2017-01-03 17:18:55 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1100,	1011
2017-01-03 17:18:55 AI_Player.update()		110,	1011,	101,	1010,	1101,	1010,	101
2017-01-03 17:18:55 AI_Player.update()		1100,	110,	1101,	101,	1101,	110,	1001
2017-01-03 17:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	1 1
2017-01-03 17:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:55 AI_Player.update()	update
2017-01-03 17:18:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:55 AI_Player.update()	update
2017-01-03 17:18:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:55 AI_Player.update()	Search took40ms
2017-01-03 17:18:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:55 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:18:55 AI_Player.update()		101,	1010,	1110,	11,	1101,	1001,	11
2017-01-03 17:18:55 AI_Player.update()		1110,	1010,	1110,	1110,	111,	111,	1011
2017-01-03 17:18:55 AI_Player.update()		110,	1100,	11,	11,	101,	1110,	101
2017-01-03 17:18:55 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1100,	1011
2017-01-03 17:18:55 AI_Player.update()		110,	110,	101,	1010,	1101,	1010,	101
2017-01-03 17:18:55 AI_Player.update()		1100,	1101,	1101,	101,	1101,	110,	1001
2017-01-03 17:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:55 AI_Player.update()	update
2017-01-03 17:18:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:55 AI_Player.update()	update
2017-01-03 17:18:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:55 AI_Player.update()	Search took6ms
2017-01-03 17:18:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:55 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-03 17:18:55 AI_Player.update()		101,	1010,	1110,	11,	1101,	1001,	11
2017-01-03 17:18:55 AI_Player.update()		1110,	1010,	1110,	1110,	111,	111,	1011
2017-01-03 17:18:55 AI_Player.update()		101,	110,	1100,	11,	11,	101,	1110
2017-01-03 17:18:55 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1100,	1011
2017-01-03 17:18:55 AI_Player.update()		110,	110,	101,	1010,	1101,	1010,	101
2017-01-03 17:18:55 AI_Player.update()		1100,	1101,	1101,	101,	1101,	110,	1001
2017-01-03 17:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:55 AI_Player.update()	update
2017-01-03 17:18:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:55 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:55 AI_Player.update()	update
2017-01-03 17:18:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:55 AI_Player.update()	Search took77ms
2017-01-03 17:18:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:55 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-03 17:18:55 AI_Player.update()		101,	1010,	1110,	11,	1101,	111,	11
2017-01-03 17:18:55 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-03 17:18:55 AI_Player.update()		101,	110,	1100,	11,	11,	1100,	1110
2017-01-03 17:18:55 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-03 17:18:55 AI_Player.update()		110,	110,	101,	1010,	1101,	110,	101
2017-01-03 17:18:55 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:56 AI_Player.update()	Search took5ms
2017-01-03 17:18:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-03 17:18:56 AI_Player.update()		101,	1010,	1110,	1001,	1101,	111,	11
2017-01-03 17:18:56 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:18:56 AI_Player.update()		101,	110,	1100,	1110,	11,	1100,	1110
2017-01-03 17:18:56 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1010,	1011
2017-01-03 17:18:56 AI_Player.update()		110,	110,	101,	1010,	1101,	110,	101
2017-01-03 17:18:56 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:56 AI_Player.update()	Search took207ms
2017-01-03 17:18:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()		110,	101,	111,	101,	111,	1001,	11
2017-01-03 17:18:56 AI_Player.update()		101,	1010,	1110,	1001,	1101,	111,	11
2017-01-03 17:18:56 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-03 17:18:56 AI_Player.update()		101,	110,	1100,	1110,	11,	1100,	1110
2017-01-03 17:18:56 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1010,	1011
2017-01-03 17:18:56 AI_Player.update()		110,	101,	1010,	1101,	110,	101,	110
2017-01-03 17:18:56 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:56 AI_Player.update()	Search took3ms
2017-01-03 17:18:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()		110,	1010,	111,	101,	111,	1001,	11
2017-01-03 17:18:56 AI_Player.update()		101,	1010,	1110,	1001,	1101,	111,	11
2017-01-03 17:18:56 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-03 17:18:56 AI_Player.update()		101,	1011,	1100,	1110,	11,	1100,	1110
2017-01-03 17:18:56 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-03 17:18:56 AI_Player.update()		110,	1101,	1010,	1101,	110,	101,	110
2017-01-03 17:18:56 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	2 1
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:18:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:56 AI_Player.update()	Search took103ms
2017-01-03 17:18:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()		110,	1010,	111,	1001,	111,	1001,	11
2017-01-03 17:18:56 AI_Player.update()		101,	1010,	1110,	11,	1101,	111,	11
2017-01-03 17:18:56 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-03 17:18:56 AI_Player.update()		101,	1011,	1100,	11,	11,	1100,	1110
2017-01-03 17:18:56 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-03 17:18:56 AI_Player.update()		110,	1101,	1010,	1010,	110,	101,	110
2017-01-03 17:18:56 AI_Player.update()		1100,	101,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	3 1
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:56 AI_Player.update()	Search took5ms
2017-01-03 17:18:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()		110,	1010,	111,	1001,	111,	1001,	11
2017-01-03 17:18:56 AI_Player.update()		101,	110,	1110,	11,	1101,	111,	11
2017-01-03 17:18:56 AI_Player.update()		1110,	1011,	1110,	1110,	111,	101,	1011
2017-01-03 17:18:56 AI_Player.update()		101,	101,	1100,	11,	11,	1100,	1110
2017-01-03 17:18:56 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1010,	1011
2017-01-03 17:18:56 AI_Player.update()		110,	101,	1010,	1010,	110,	101,	110
2017-01-03 17:18:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	3 2
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-03 17:18:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-03 17:18:56 AI_Player.update()	Search took279ms
2017-01-03 17:18:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()		110,	1010,	111,	1001,	111,	1001,	11
2017-01-03 17:18:56 AI_Player.update()		101,	110,	1110,	11,	1101,	111,	11
2017-01-03 17:18:56 AI_Player.update()		1110,	1011,	1110,	1110,	111,	101,	1011
2017-01-03 17:18:56 AI_Player.update()		101,	101,	1100,	11,	11,	1100,	1110
2017-01-03 17:18:56 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	1010,	1011
2017-01-03 17:18:56 AI_Player.update()		110,	110,	101,	1010,	1010,	110,	101
2017-01-03 17:18:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	4 2
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-03 17:18:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-03 17:18:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-03 17:18:56 AI_Player.update()	Search took4ms
2017-01-03 17:18:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-03 17:18:56 AI_Player.update()		101,	1011,	1110,	11,	1101,	111,	11
2017-01-03 17:18:56 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-03 17:18:56 AI_Player.update()		101,	1101,	1100,	11,	11,	1100,	1110
2017-01-03 17:18:56 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1010,	1011
2017-01-03 17:18:56 AI_Player.update()		110,	1010,	101,	1010,	1010,	110,	101
2017-01-03 17:18:56 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1100,	1001
2017-01-03 17:18:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-03 17:18:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	4 3
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-03 17:18:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-03 17:18:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-03 17:18:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-03 17:18:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-03 17:18:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	5 3
2017-01-03 17:18:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-03 17:18:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding book
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding map
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-03 17:18:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-03 17:18:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-03 17:18:56 AI_Player.update()	update
2017-01-03 17:18:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
