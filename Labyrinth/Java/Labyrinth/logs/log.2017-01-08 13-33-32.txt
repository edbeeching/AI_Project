2017-01-08 13:33:32 GameBoard.<init>()	Hello World!
2017-01-08 13:33:32 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-08 13:33:32 QueryProlog.initialise()	setup(h1/h2). suceeded
2017-01-08 13:33:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:32 GameBoard.setupBoardFromString()	Board created
2017-01-08 13:33:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:32 GameBoard.initialise()	[sword, crown, candle, ring, map]
2017-01-08 13:33:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:32 GameBoard.initialise()	[gold, fairy, book, gem, helmet]
2017-01-08 13:33:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:32 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-08 13:33:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	null
2017-01-08 13:33:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:32 AI_Player.update()	update
2017-01-08 13:33:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:32 AI_Player.update()	Search took2ms
2017-01-08 13:33:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:32 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-08 13:33:32 AI_Player.update()		1001,	1101,	1110,	101,	1101,	1100,	1010
2017-01-08 13:33:32 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-08 13:33:32 AI_Player.update()		1011,	1101,	101,	101,	1001,	101,	1010
2017-01-08 13:33:32 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1010,	1011
2017-01-08 13:33:32 AI_Player.update()		110,	1100,	11,	1010,	1100,	1010,	11
2017-01-08 13:33:32 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:32 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:33 AI_Player.update()	update
2017-01-08 13:33:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:33 AI_Player.update()	update
2017-01-08 13:33:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:33 AI_Player.update()	Search took172ms
2017-01-08 13:33:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:33 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-08 13:33:33 AI_Player.update()		1001,	1101,	1110,	101,	1101,	1100,	1010
2017-01-08 13:33:33 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-08 13:33:33 AI_Player.update()		1010,	1011,	1101,	101,	101,	1001,	101
2017-01-08 13:33:33 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1010,	1011
2017-01-08 13:33:33 AI_Player.update()		110,	1100,	11,	1010,	1100,	1010,	11
2017-01-08 13:33:33 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:33 AI_Player.update()	update
2017-01-08 13:33:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:33:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:33 AI_Player.update()	update
2017-01-08 13:33:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:33 AI_Player.update()	Search took4ms
2017-01-08 13:33:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:33 AI_Player.update()		110,	1101,	111,	1100,	111,	1010,	11
2017-01-08 13:33:33 AI_Player.update()		1001,	1010,	1110,	101,	1101,	1100,	1010
2017-01-08 13:33:33 AI_Player.update()		1110,	1011,	1110,	110,	111,	1010,	1011
2017-01-08 13:33:33 AI_Player.update()		1010,	1101,	1101,	101,	101,	1001,	101
2017-01-08 13:33:33 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1010,	1011
2017-01-08 13:33:33 AI_Player.update()		110,	1110,	11,	1010,	1100,	1010,	11
2017-01-08 13:33:33 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:33:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:33 AI_Player.update()	update
2017-01-08 13:33:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	2 2
2017-01-08 13:33:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:33 AI_Player.update()	update
2017-01-08 13:33:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:34 AI_Player.update()	Search took232ms
2017-01-08 13:33:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:34 AI_Player.update()		110,	1101,	111,	1100,	111,	11,	11
2017-01-08 13:33:34 AI_Player.update()		1001,	1010,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:34 AI_Player.update()		1110,	1011,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:34 AI_Player.update()		1010,	1101,	1101,	101,	101,	1010,	101
2017-01-08 13:33:34 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:34 AI_Player.update()		110,	1110,	11,	1010,	1100,	1010,	11
2017-01-08 13:33:34 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	2 2
2017-01-08 13:33:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:34 AI_Player.update()	update
2017-01-08 13:33:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	2 3
2017-01-08 13:33:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:34 AI_Player.update()	update
2017-01-08 13:33:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:34 AI_Player.update()	Search took5ms
2017-01-08 13:33:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:34 AI_Player.update()		110,	1101,	111,	1100,	111,	11,	11
2017-01-08 13:33:34 AI_Player.update()		1001,	1010,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:34 AI_Player.update()		1110,	1011,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:34 AI_Player.update()		1010,	1101,	1101,	101,	101,	1010,	101
2017-01-08 13:33:34 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:34 AI_Player.update()		1110,	11,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:34 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	2 3
2017-01-08 13:33:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:34 AI_Player.update()	update
2017-01-08 13:33:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:34 GameBoard.setupTreasurePanel()	2 3
2017-01-08 13:33:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:34 AI_Player.update()	update
2017-01-08 13:33:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:35 AI_Player.update()	Search took776ms
2017-01-08 13:33:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:35 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-08 13:33:35 AI_Player.update()		1001,	1011,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:35 AI_Player.update()		1110,	1101,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:35 AI_Player.update()		1010,	1100,	1101,	101,	101,	1010,	101
2017-01-08 13:33:35 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:35 AI_Player.update()		1110,	1100,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:35 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	2 3
2017-01-08 13:33:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:35 AI_Player.update()	update
2017-01-08 13:33:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	2 4
2017-01-08 13:33:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:35 AI_Player.update()	update
2017-01-08 13:33:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:35 AI_Player.update()	Search took4ms
2017-01-08 13:33:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:35 AI_Player.update()		110,	1011,	111,	1100,	111,	11,	11
2017-01-08 13:33:35 AI_Player.update()		1001,	1101,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:35 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:35 AI_Player.update()		1010,	11,	1101,	101,	101,	1010,	101
2017-01-08 13:33:35 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:35 AI_Player.update()		1110,	1101,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:35 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	2 4
2017-01-08 13:33:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:35 AI_Player.update()	update
2017-01-08 13:33:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	2 4
2017-01-08 13:33:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:35 AI_Player.update()	update
2017-01-08 13:33:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:35 AI_Player.update()	Search took125ms
2017-01-08 13:33:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:35 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-08 13:33:35 AI_Player.update()		1001,	1011,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:35 AI_Player.update()		1110,	1101,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:35 AI_Player.update()		1010,	1100,	1101,	101,	101,	1010,	101
2017-01-08 13:33:35 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:35 AI_Player.update()		1110,	1100,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:35 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:35 GameBoard.setupTreasurePanel()	2 4
2017-01-08 13:33:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:36 AI_Player.update()	update
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	2 4
2017-01-08 13:33:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:36 AI_Player.update()	update
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:36 AI_Player.update()	Search took5ms
2017-01-08 13:33:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:36 AI_Player.update()		110,	1011,	111,	1100,	111,	11,	11
2017-01-08 13:33:36 AI_Player.update()		1001,	1101,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:36 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:36 AI_Player.update()		1010,	11,	1101,	101,	101,	1010,	101
2017-01-08 13:33:36 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:36 AI_Player.update()		1110,	1101,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:36 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	2 4
2017-01-08 13:33:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:36 AI_Player.update()	update
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	2 4
2017-01-08 13:33:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:36 AI_Player.update()	update
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:36 AI_Player.update()	Search took216ms
2017-01-08 13:33:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:36 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-08 13:33:36 AI_Player.update()		1001,	1101,	1110,	110,	1101,	1010,	1010
2017-01-08 13:33:36 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-08 13:33:36 AI_Player.update()		1010,	11,	1101,	1110,	101,	1010,	101
2017-01-08 13:33:36 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-08 13:33:36 AI_Player.update()		1110,	1101,	1010,	1001,	1010,	11,	110
2017-01-08 13:33:36 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-08 13:33:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	2 4
2017-01-08 13:33:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:36 AI_Player.update()	update
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:36 AI_Player.update()	update
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:36 AI_Player.update()	Search took4ms
2017-01-08 13:33:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:36 AI_Player.update()		110,	1011,	111,	1100,	111,	11,	11
2017-01-08 13:33:36 AI_Player.update()		1001,	1101,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:36 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:36 AI_Player.update()		1010,	11,	1101,	101,	101,	1010,	101
2017-01-08 13:33:36 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:36 AI_Player.update()		1110,	1101,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:36 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:36 AI_Player.update()	update
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:36 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:36 AI_Player.update()	update
2017-01-08 13:33:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:37 AI_Player.update()	Search took178ms
2017-01-08 13:33:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:37 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-08 13:33:37 AI_Player.update()		1001,	1101,	1110,	110,	1101,	1010,	1010
2017-01-08 13:33:37 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-08 13:33:37 AI_Player.update()		1010,	11,	1101,	1110,	101,	1010,	101
2017-01-08 13:33:37 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-08 13:33:37 AI_Player.update()		1110,	1101,	1010,	1001,	1010,	11,	110
2017-01-08 13:33:37 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-08 13:33:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:37 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:37 AI_Player.update()	update
2017-01-08 13:33:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:37 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:37 AI_Player.update()	update
2017-01-08 13:33:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:37 AI_Player.update()	Search took2ms
2017-01-08 13:33:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:37 AI_Player.update()		110,	1011,	111,	1100,	111,	11,	11
2017-01-08 13:33:37 AI_Player.update()		1001,	1101,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:37 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:37 AI_Player.update()		1010,	11,	1101,	101,	101,	1010,	101
2017-01-08 13:33:37 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:37 AI_Player.update()		1110,	1101,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:37 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:37 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:37 AI_Player.update()	update
2017-01-08 13:33:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:37 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:37 AI_Player.update()	update
2017-01-08 13:33:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:37 AI_Player.update()	Search took220ms
2017-01-08 13:33:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:37 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-08 13:33:37 AI_Player.update()		1001,	1011,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:37 AI_Player.update()		1110,	1101,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:37 AI_Player.update()		1010,	1100,	1101,	101,	101,	1010,	101
2017-01-08 13:33:37 AI_Player.update()		1110,	11,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:37 AI_Player.update()		1110,	1100,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:37 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:37 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:37 AI_Player.update()	update
2017-01-08 13:33:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:37 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:38 AI_Player.update()	update
2017-01-08 13:33:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:38 AI_Player.update()	Search took3ms
2017-01-08 13:33:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:38 AI_Player.update()		110,	1011,	111,	1100,	111,	11,	11
2017-01-08 13:33:38 AI_Player.update()		1001,	1101,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:38 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:38 AI_Player.update()		1010,	11,	1101,	101,	101,	1010,	101
2017-01-08 13:33:38 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:38 AI_Player.update()		1110,	1101,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:38 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:38 AI_Player.update()	update
2017-01-08 13:33:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:38 AI_Player.update()	update
2017-01-08 13:33:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:38 AI_Player.update()	Search took111ms
2017-01-08 13:33:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:38 AI_Player.update()		110,	1011,	111,	1001,	111,	11,	11
2017-01-08 13:33:38 AI_Player.update()		1001,	1101,	1110,	1100,	1101,	1010,	1010
2017-01-08 13:33:38 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-08 13:33:38 AI_Player.update()		1010,	11,	1101,	110,	101,	1010,	101
2017-01-08 13:33:38 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-08 13:33:38 AI_Player.update()		1110,	1101,	1010,	1110,	1010,	11,	110
2017-01-08 13:33:38 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-08 13:33:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:33:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:38 AI_Player.update()	update
2017-01-08 13:33:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	2 6
2017-01-08 13:33:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:38 AI_Player.update()	update
2017-01-08 13:33:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:38 AI_Player.update()	Search took8ms
2017-01-08 13:33:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:38 AI_Player.update()		110,	1101,	111,	1001,	111,	11,	11
2017-01-08 13:33:38 AI_Player.update()		1001,	1100,	1110,	1100,	1101,	1010,	1010
2017-01-08 13:33:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-08 13:33:38 AI_Player.update()		1010,	1100,	1101,	110,	101,	1010,	101
2017-01-08 13:33:38 AI_Player.update()		1110,	1101,	1101,	101,	1011,	1001,	1011
2017-01-08 13:33:38 AI_Player.update()		1110,	1010,	1010,	1110,	1010,	11,	110
2017-01-08 13:33:38 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1010,	1001
2017-01-08 13:33:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	2 6
2017-01-08 13:33:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:38 AI_Player.update()	update
2017-01-08 13:33:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:38 AI_Player.update()	update
2017-01-08 13:33:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:39 AI_Player.update()	Search took670ms
2017-01-08 13:33:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:39 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-08 13:33:39 AI_Player.update()		1001,	11,	1110,	1100,	1101,	1010,	1010
2017-01-08 13:33:39 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-08 13:33:39 AI_Player.update()		1010,	1101,	1101,	110,	101,	1010,	101
2017-01-08 13:33:39 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-08 13:33:39 AI_Player.update()		1110,	1011,	1010,	1110,	1010,	11,	110
2017-01-08 13:33:39 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	1010,	1001
2017-01-08 13:33:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:39 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:39 AI_Player.update()	update
2017-01-08 13:33:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:39 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:39 AI_Player.update()	update
2017-01-08 13:33:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:39 AI_Player.update()	Search took9ms
2017-01-08 13:33:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:39 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-08 13:33:39 AI_Player.update()		1001,	1100,	1110,	1100,	1101,	1010,	1010
2017-01-08 13:33:39 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-08 13:33:39 AI_Player.update()		1010,	1010,	1101,	110,	101,	1010,	101
2017-01-08 13:33:39 AI_Player.update()		1110,	1011,	1101,	101,	1011,	1001,	1011
2017-01-08 13:33:39 AI_Player.update()		1110,	1101,	1010,	1110,	1010,	11,	110
2017-01-08 13:33:39 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-08 13:33:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:39 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:39 AI_Player.update()	update
2017-01-08 13:33:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:39 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:39 AI_Player.update()	update
2017-01-08 13:33:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:40 AI_Player.update()	Search took129ms
2017-01-08 13:33:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-08 13:33:40 AI_Player.update()		1001,	1100,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:40 AI_Player.update()		1110,	1101,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:40 AI_Player.update()		1010,	1010,	1101,	101,	101,	1010,	101
2017-01-08 13:33:40 AI_Player.update()		1110,	1011,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:40 AI_Player.update()		1110,	1101,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:40 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:40 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()	update
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:40 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()	update
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:40 AI_Player.update()	Search took8ms
2017-01-08 13:33:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()		110,	1100,	111,	1100,	111,	11,	11
2017-01-08 13:33:40 AI_Player.update()		1001,	1101,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:40 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:40 AI_Player.update()		1010,	1011,	1101,	101,	101,	1010,	101
2017-01-08 13:33:40 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:40 AI_Player.update()		1110,	1100,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:40 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:40 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()	update
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:40 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()	update
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:40 AI_Player.update()	Search took62ms
2017-01-08 13:33:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()		110,	1100,	111,	1100,	111,	11,	11
2017-01-08 13:33:40 AI_Player.update()		1001,	1101,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:40 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:40 AI_Player.update()		101,	1010,	1011,	1101,	101,	101,	1010
2017-01-08 13:33:40 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:40 AI_Player.update()		1110,	1100,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:40 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:40 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()	update
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:40 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()	update
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:40 AI_Player.update()	Search took9ms
2017-01-08 13:33:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()		110,	1100,	111,	1100,	111,	11,	11
2017-01-08 13:33:40 AI_Player.update()		1001,	1101,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:40 AI_Player.update()		1110,	1010,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:40 AI_Player.update()		1010,	101,	1010,	1011,	1101,	101,	101
2017-01-08 13:33:40 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:40 AI_Player.update()		1110,	1100,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:40 AI_Player.update()		1100,	11,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:40 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()	update
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:40 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:40 AI_Player.update()	update
2017-01-08 13:33:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:41 AI_Player.update()	Search took176ms
2017-01-08 13:33:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:41 AI_Player.update()		110,	1101,	111,	1100,	111,	11,	11
2017-01-08 13:33:41 AI_Player.update()		1001,	1010,	1110,	101,	1101,	1010,	1010
2017-01-08 13:33:41 AI_Player.update()		1110,	101,	1110,	110,	111,	1100,	1011
2017-01-08 13:33:41 AI_Player.update()		1010,	1101,	1010,	1011,	1101,	101,	101
2017-01-08 13:33:41 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-08 13:33:41 AI_Player.update()		1110,	11,	1010,	1100,	1010,	11,	110
2017-01-08 13:33:41 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-08 13:33:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:41 GameBoard.setupTreasurePanel()	3 6
2017-01-08 13:33:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:41 AI_Player.update()	update
2017-01-08 13:33:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:41 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-08 13:33:41 AI_Player.update()	Player b has won!
2017-01-08 13:33:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-08 13:33:42 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-08 13:33:42 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-08 13:33:42 QueryProlog.reset()	setup(h1/h2). suceeded
2017-01-08 13:33:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:42 AI_Player.update()	update
2017-01-08 13:33:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:42 AI_Player.update()	Search took4ms
2017-01-08 13:33:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:42 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-08 13:33:42 AI_Player.update()		1011,	101,	111,	1100,	111,	110,	101
2017-01-08 13:33:42 AI_Player.update()		1110,	111,	1110,	110,	111,	1110,	1011
2017-01-08 13:33:42 AI_Player.update()		1010,	111,	1100,	1010,	1010,	1101,	1101
2017-01-08 13:33:42 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-08 13:33:42 AI_Player.update()		11,	1010,	1100,	1010,	11,	1001,	101
2017-01-08 13:33:42 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:42 AI_Player.update()	update
2017-01-08 13:33:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:42 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:42 AI_Player.update()	update
2017-01-08 13:33:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:43 AI_Player.update()	Search took118ms
2017-01-08 13:33:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:43 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-08 13:33:43 AI_Player.update()		1011,	11,	111,	1100,	111,	110,	101
2017-01-08 13:33:43 AI_Player.update()		1110,	101,	1110,	110,	111,	1110,	1011
2017-01-08 13:33:43 AI_Player.update()		1010,	111,	1100,	1010,	1010,	1101,	1101
2017-01-08 13:33:43 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1001,	1011
2017-01-08 13:33:43 AI_Player.update()		11,	101,	1100,	1010,	11,	1001,	101
2017-01-08 13:33:43 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:43 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:43 AI_Player.update()	update
2017-01-08 13:33:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:43 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:43 AI_Player.update()	update
2017-01-08 13:33:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:43 AI_Player.update()	Search took3ms
2017-01-08 13:33:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:43 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-08 13:33:43 AI_Player.update()		1011,	11,	111,	1100,	111,	110,	101
2017-01-08 13:33:43 AI_Player.update()		1110,	101,	1110,	1100,	111,	1110,	1011
2017-01-08 13:33:43 AI_Player.update()		1010,	111,	1100,	110,	1010,	1101,	1101
2017-01-08 13:33:43 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:43 AI_Player.update()		11,	101,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:43 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:43 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:43 AI_Player.update()	update
2017-01-08 13:33:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:43 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:43 AI_Player.update()	update
2017-01-08 13:33:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:43 AI_Player.update()	Search took84ms
2017-01-08 13:33:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:43 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-08 13:33:43 AI_Player.update()		1011,	11,	111,	1100,	111,	110,	101
2017-01-08 13:33:43 AI_Player.update()		1110,	101,	1110,	110,	111,	1110,	1011
2017-01-08 13:33:43 AI_Player.update()		1010,	111,	1100,	1010,	1010,	1101,	1101
2017-01-08 13:33:43 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1001,	1011
2017-01-08 13:33:43 AI_Player.update()		11,	101,	1100,	1010,	11,	1001,	101
2017-01-08 13:33:43 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:43 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:43 AI_Player.update()	update
2017-01-08 13:33:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:43 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:43 AI_Player.update()	update
2017-01-08 13:33:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:43 AI_Player.update()	Search took5ms
2017-01-08 13:33:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:43 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-08 13:33:43 AI_Player.update()		1011,	11,	111,	1100,	111,	110,	101
2017-01-08 13:33:43 AI_Player.update()		1110,	101,	1110,	1100,	111,	1110,	1011
2017-01-08 13:33:43 AI_Player.update()		1010,	111,	1100,	110,	1010,	1101,	1101
2017-01-08 13:33:43 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:43 AI_Player.update()		11,	101,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:43 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:43 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:43 AI_Player.update()	update
2017-01-08 13:33:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:43 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()	update
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:44 AI_Player.update()	Search took76ms
2017-01-08 13:33:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()		110,	101,	111,	1001,	111,	11,	11
2017-01-08 13:33:44 AI_Player.update()		1011,	11,	111,	1100,	111,	110,	101
2017-01-08 13:33:44 AI_Player.update()		1110,	101,	1110,	1100,	111,	1110,	1011
2017-01-08 13:33:44 AI_Player.update()		111,	1100,	110,	1010,	1101,	1101,	1010
2017-01-08 13:33:44 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:44 AI_Player.update()		11,	101,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:44 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()	update
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()	update
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:44 AI_Player.update()	Search took3ms
2017-01-08 13:33:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-08 13:33:44 AI_Player.update()		1011,	101,	111,	1100,	111,	110,	101
2017-01-08 13:33:44 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1110,	1011
2017-01-08 13:33:44 AI_Player.update()		111,	111,	110,	1010,	1101,	1101,	1010
2017-01-08 13:33:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:44 AI_Player.update()		11,	1010,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()	update
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()	update
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:44 AI_Player.update()	Search took101ms
2017-01-08 13:33:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-08 13:33:44 AI_Player.update()		101,	111,	1100,	111,	110,	101,	1011
2017-01-08 13:33:44 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1110,	1011
2017-01-08 13:33:44 AI_Player.update()		111,	111,	110,	1010,	1101,	1101,	1010
2017-01-08 13:33:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:44 AI_Player.update()		11,	1010,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	2 1
2017-01-08 13:33:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()	update
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	2 2
2017-01-08 13:33:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()	update
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:44 AI_Player.update()	Search took3ms
2017-01-08 13:33:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()		110,	11,	111,	1001,	111,	101,	11
2017-01-08 13:33:44 AI_Player.update()		101,	111,	1100,	111,	110,	1110,	1011
2017-01-08 13:33:44 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1101,	1011
2017-01-08 13:33:44 AI_Player.update()		111,	111,	110,	1010,	1101,	1001,	1010
2017-01-08 13:33:44 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:44 AI_Player.update()		11,	1010,	1100,	1001,	11,	11,	101
2017-01-08 13:33:44 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	2 2
2017-01-08 13:33:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:44 AI_Player.update()	update
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:44 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:45 AI_Player.update()	update
2017-01-08 13:33:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:45 AI_Player.update()	Search took433ms
2017-01-08 13:33:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:45 AI_Player.update()		110,	11,	111,	1001,	111,	11,	11
2017-01-08 13:33:45 AI_Player.update()		101,	111,	1100,	111,	110,	101,	1011
2017-01-08 13:33:45 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1110,	1011
2017-01-08 13:33:45 AI_Player.update()		111,	111,	110,	1010,	1101,	1101,	1010
2017-01-08 13:33:45 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:45 AI_Player.update()		11,	1010,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:45 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:45 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:45 AI_Player.update()	update
2017-01-08 13:33:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:45 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:45 AI_Player.update()	update
2017-01-08 13:33:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:45 AI_Player.update()	Search took5ms
2017-01-08 13:33:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:45 AI_Player.update()		110,	11,	111,	111,	111,	11,	11
2017-01-08 13:33:45 AI_Player.update()		101,	111,	1100,	1100,	110,	101,	1011
2017-01-08 13:33:45 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1110,	1011
2017-01-08 13:33:45 AI_Player.update()		111,	111,	110,	1010,	1101,	1101,	1010
2017-01-08 13:33:45 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-08 13:33:45 AI_Player.update()		11,	1010,	1100,	1010,	11,	1001,	101
2017-01-08 13:33:45 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:45 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:45 AI_Player.update()	update
2017-01-08 13:33:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:45 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:45 AI_Player.update()	update
2017-01-08 13:33:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:46 AI_Player.update()	Search took332ms
2017-01-08 13:33:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:46 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-08 13:33:46 AI_Player.update()		101,	111,	1100,	1010,	110,	101,	1011
2017-01-08 13:33:46 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1110,	1011
2017-01-08 13:33:46 AI_Player.update()		111,	111,	110,	1001,	1101,	1101,	1010
2017-01-08 13:33:46 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:46 AI_Player.update()		11,	1010,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:46 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-08 13:33:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:46 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:46 AI_Player.update()	update
2017-01-08 13:33:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:46 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:46 AI_Player.update()	update
2017-01-08 13:33:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:46 AI_Player.update()	Search took4ms
2017-01-08 13:33:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:46 AI_Player.update()		110,	111,	111,	1100,	111,	11,	11
2017-01-08 13:33:46 AI_Player.update()		101,	1100,	1100,	1010,	110,	101,	1011
2017-01-08 13:33:46 AI_Player.update()		1110,	111,	1110,	1010,	111,	1110,	1011
2017-01-08 13:33:46 AI_Player.update()		111,	101,	110,	1001,	1101,	1101,	1010
2017-01-08 13:33:46 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:46 AI_Player.update()		11,	101,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:46 AI_Player.update()		1100,	11,	1101,	111,	1101,	11,	1001
2017-01-08 13:33:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:46 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:46 AI_Player.update()	update
2017-01-08 13:33:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:46 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:46 AI_Player.update()	update
2017-01-08 13:33:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:46 AI_Player.update()	Search took298ms
2017-01-08 13:33:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:46 AI_Player.update()		110,	1100,	111,	1100,	111,	11,	11
2017-01-08 13:33:46 AI_Player.update()		101,	111,	1100,	1010,	110,	101,	1011
2017-01-08 13:33:46 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-08 13:33:46 AI_Player.update()		111,	1010,	110,	1001,	1101,	1101,	1010
2017-01-08 13:33:46 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:46 AI_Player.update()		11,	11,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:46 AI_Player.update()		1100,	111,	1101,	111,	1101,	11,	1001
2017-01-08 13:33:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:46 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:47 AI_Player.update()	update
2017-01-08 13:33:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:47 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:47 AI_Player.update()	update
2017-01-08 13:33:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:47 AI_Player.update()	Search took3ms
2017-01-08 13:33:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:47 AI_Player.update()		110,	111,	111,	1100,	111,	11,	11
2017-01-08 13:33:47 AI_Player.update()		101,	101,	1100,	1010,	110,	101,	1011
2017-01-08 13:33:47 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1110,	1011
2017-01-08 13:33:47 AI_Player.update()		111,	101,	110,	1001,	1101,	1101,	1010
2017-01-08 13:33:47 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:47 AI_Player.update()		11,	111,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:47 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-08 13:33:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:47 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:47 AI_Player.update()	update
2017-01-08 13:33:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:47 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:47 AI_Player.update()	update
2017-01-08 13:33:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:47 AI_Player.update()	Search took301ms
2017-01-08 13:33:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:47 AI_Player.update()		110,	101,	111,	1100,	111,	11,	11
2017-01-08 13:33:47 AI_Player.update()		101,	1010,	1100,	1010,	110,	101,	1011
2017-01-08 13:33:47 AI_Player.update()		1110,	101,	1110,	1010,	111,	1110,	1011
2017-01-08 13:33:47 AI_Player.update()		111,	11,	110,	1001,	1101,	1101,	1010
2017-01-08 13:33:47 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:47 AI_Player.update()		11,	1100,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:47 AI_Player.update()		1100,	111,	1101,	111,	1101,	11,	1001
2017-01-08 13:33:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:47 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:47 AI_Player.update()	update
2017-01-08 13:33:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:47 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:47 AI_Player.update()	update
2017-01-08 13:33:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:47 AI_Player.update()	Search took1ms
2017-01-08 13:33:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:47 AI_Player.update()		110,	1010,	111,	1100,	111,	11,	11
2017-01-08 13:33:47 AI_Player.update()		101,	101,	1100,	1010,	110,	101,	1011
2017-01-08 13:33:47 AI_Player.update()		1110,	11,	1110,	1010,	111,	1110,	1011
2017-01-08 13:33:47 AI_Player.update()		111,	111,	110,	1001,	1101,	1101,	1010
2017-01-08 13:33:47 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-08 13:33:47 AI_Player.update()		11,	111,	1100,	1001,	11,	1001,	101
2017-01-08 13:33:47 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-08 13:33:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:47 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:47 AI_Player.update()	update
2017-01-08 13:33:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:47 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:48 AI_Player.update()	update
2017-01-08 13:33:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:48 AI_Player.update()	Search took318ms
2017-01-08 13:33:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:48 AI_Player.update()		110,	1010,	111,	1010,	111,	11,	11
2017-01-08 13:33:48 AI_Player.update()		101,	101,	1100,	1010,	110,	101,	1011
2017-01-08 13:33:48 AI_Player.update()		1110,	11,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:48 AI_Player.update()		111,	111,	110,	1010,	1101,	1101,	1010
2017-01-08 13:33:48 AI_Player.update()		1110,	1100,	1101,	1001,	1011,	1001,	1011
2017-01-08 13:33:48 AI_Player.update()		11,	111,	1100,	111,	11,	1001,	101
2017-01-08 13:33:48 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-08 13:33:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:48 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:48 AI_Player.update()	update
2017-01-08 13:33:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:48 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:48 AI_Player.update()	update
2017-01-08 13:33:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:48 AI_Player.update()	Search took2ms
2017-01-08 13:33:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:48 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-08 13:33:48 AI_Player.update()		101,	11,	1100,	1010,	110,	101,	1011
2017-01-08 13:33:48 AI_Player.update()		1110,	111,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:48 AI_Player.update()		111,	1100,	110,	1010,	1101,	1101,	1010
2017-01-08 13:33:48 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1001,	1011
2017-01-08 13:33:48 AI_Player.update()		11,	101,	1100,	111,	11,	1001,	101
2017-01-08 13:33:48 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-08 13:33:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:48 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:48 AI_Player.update()	update
2017-01-08 13:33:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:48 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:48 AI_Player.update()	update
2017-01-08 13:33:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:49 AI_Player.update()	Search took291ms
2017-01-08 13:33:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:49 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-08 13:33:49 AI_Player.update()		11,	1100,	1010,	110,	101,	1011,	101
2017-01-08 13:33:49 AI_Player.update()		1110,	111,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:49 AI_Player.update()		111,	1100,	110,	1010,	1101,	1101,	1010
2017-01-08 13:33:49 AI_Player.update()		1110,	111,	1101,	1001,	1011,	1001,	1011
2017-01-08 13:33:49 AI_Player.update()		11,	101,	1100,	111,	11,	1001,	101
2017-01-08 13:33:49 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-08 13:33:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	3 2
2017-01-08 13:33:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:49 AI_Player.update()	update
2017-01-08 13:33:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:49 AI_Player.update()	update
2017-01-08 13:33:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:49 AI_Player.update()	Search took1ms
2017-01-08 13:33:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:49 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-08 13:33:49 AI_Player.update()		11,	111,	1010,	110,	101,	1011,	101
2017-01-08 13:33:49 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:49 AI_Player.update()		111,	111,	110,	1010,	1101,	1101,	1010
2017-01-08 13:33:49 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-08 13:33:49 AI_Player.update()		11,	1010,	1100,	111,	11,	1001,	101
2017-01-08 13:33:49 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-08 13:33:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:49 AI_Player.update()	update
2017-01-08 13:33:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:49 AI_Player.update()	update
2017-01-08 13:33:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:49 AI_Player.update()	Search took382ms
2017-01-08 13:33:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:49 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-08 13:33:49 AI_Player.update()		11,	111,	1010,	110,	101,	1011,	101
2017-01-08 13:33:49 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:49 AI_Player.update()		1010,	111,	111,	110,	1010,	1101,	1101
2017-01-08 13:33:49 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-08 13:33:49 AI_Player.update()		11,	1010,	1100,	111,	11,	1001,	101
2017-01-08 13:33:49 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-08 13:33:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:49 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:50 AI_Player.update()	update
2017-01-08 13:33:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:50 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:50 AI_Player.update()	update
2017-01-08 13:33:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:50 AI_Player.update()	Search took8ms
2017-01-08 13:33:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:50 AI_Player.update()		110,	111,	111,	1010,	111,	11,	11
2017-01-08 13:33:50 AI_Player.update()		11,	1100,	1010,	110,	101,	1011,	101
2017-01-08 13:33:50 AI_Player.update()		1110,	111,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:50 AI_Player.update()		1010,	101,	111,	110,	1010,	1101,	1101
2017-01-08 13:33:50 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-08 13:33:50 AI_Player.update()		11,	101,	1100,	111,	11,	1001,	101
2017-01-08 13:33:50 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	11,	1001
2017-01-08 13:33:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:50 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:50 AI_Player.update()	update
2017-01-08 13:33:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:50 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:50 AI_Player.update()	update
2017-01-08 13:33:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:50 AI_Player.update()	Search took390ms
2017-01-08 13:33:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:50 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-08 13:33:50 AI_Player.update()		11,	1100,	1010,	1001,	101,	1011,	101
2017-01-08 13:33:50 AI_Player.update()		1110,	111,	1110,	110,	111,	1110,	1011
2017-01-08 13:33:50 AI_Player.update()		1010,	101,	111,	1001,	1010,	1101,	1101
2017-01-08 13:33:50 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-08 13:33:50 AI_Player.update()		11,	101,	1100,	1100,	11,	1001,	101
2017-01-08 13:33:50 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:50 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:50 AI_Player.update()	update
2017-01-08 13:33:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:50 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:50 AI_Player.update()	update
2017-01-08 13:33:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:50 AI_Player.update()	Search took6ms
2017-01-08 13:33:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:50 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-08 13:33:50 AI_Player.update()		11,	1100,	1010,	1001,	101,	1011,	101
2017-01-08 13:33:50 AI_Player.update()		1110,	111,	1110,	110,	111,	1110,	1011
2017-01-08 13:33:50 AI_Player.update()		101,	111,	1001,	1010,	1101,	1101,	1010
2017-01-08 13:33:50 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-08 13:33:50 AI_Player.update()		11,	101,	1100,	1100,	11,	1001,	101
2017-01-08 13:33:50 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:50 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:51 AI_Player.update()	update
2017-01-08 13:33:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:51 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:51 AI_Player.update()	update
2017-01-08 13:33:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:51 AI_Player.update()	Search took463ms
2017-01-08 13:33:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:51 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-08 13:33:51 AI_Player.update()		11,	1100,	1010,	1001,	101,	1011,	101
2017-01-08 13:33:51 AI_Player.update()		1110,	111,	1110,	110,	111,	1110,	1011
2017-01-08 13:33:51 AI_Player.update()		1010,	101,	111,	1001,	1010,	1101,	1101
2017-01-08 13:33:51 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-08 13:33:51 AI_Player.update()		11,	101,	1100,	1100,	11,	1001,	101
2017-01-08 13:33:51 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:51 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:51 AI_Player.update()	update
2017-01-08 13:33:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:51 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:51 AI_Player.update()	update
2017-01-08 13:33:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:51 AI_Player.update()	Search took5ms
2017-01-08 13:33:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:51 AI_Player.update()		110,	111,	111,	1001,	111,	11,	11
2017-01-08 13:33:51 AI_Player.update()		11,	1100,	1010,	110,	101,	1011,	101
2017-01-08 13:33:51 AI_Player.update()		1110,	111,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:51 AI_Player.update()		1010,	101,	111,	111,	1010,	1101,	1101
2017-01-08 13:33:51 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-08 13:33:51 AI_Player.update()		11,	101,	1100,	1010,	11,	1001,	101
2017-01-08 13:33:51 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-08 13:33:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:51 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:51 AI_Player.update()	update
2017-01-08 13:33:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:51 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:52 AI_Player.update()	update
2017-01-08 13:33:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:52 AI_Player.update()	Search took419ms
2017-01-08 13:33:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:52 AI_Player.update()		110,	111,	111,	1001,	111,	11,	11
2017-01-08 13:33:52 AI_Player.update()		11,	1100,	1010,	110,	101,	1011,	101
2017-01-08 13:33:52 AI_Player.update()		1110,	111,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:52 AI_Player.update()		1101,	1010,	101,	111,	111,	1010,	1101
2017-01-08 13:33:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-08 13:33:52 AI_Player.update()		11,	101,	1100,	1010,	11,	1001,	101
2017-01-08 13:33:52 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-08 13:33:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	3 3
2017-01-08 13:33:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:52 AI_Player.update()	update
2017-01-08 13:33:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	3 4
2017-01-08 13:33:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:52 AI_Player.update()	update
2017-01-08 13:33:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:52 AI_Player.update()	Search took2ms
2017-01-08 13:33:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:52 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-08 13:33:52 AI_Player.update()		11,	111,	1010,	110,	101,	1011,	101
2017-01-08 13:33:52 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:52 AI_Player.update()		1101,	111,	101,	111,	111,	1010,	1101
2017-01-08 13:33:52 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-08 13:33:52 AI_Player.update()		11,	1010,	1100,	1010,	11,	1001,	101
2017-01-08 13:33:52 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-08 13:33:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	3 4
2017-01-08 13:33:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:52 AI_Player.update()	update
2017-01-08 13:33:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:52 GameBoard.setupTreasurePanel()	3 4
2017-01-08 13:33:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:52 AI_Player.update()	update
2017-01-08 13:33:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:53 AI_Player.update()	Search took273ms
2017-01-08 13:33:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:53 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-08 13:33:53 AI_Player.update()		11,	111,	1010,	110,	101,	1011,	101
2017-01-08 13:33:53 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:53 AI_Player.update()		1101,	111,	101,	111,	111,	1010,	1101
2017-01-08 13:33:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-08 13:33:53 AI_Player.update()		101,	11,	1010,	1100,	1010,	11,	1001
2017-01-08 13:33:53 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-08 13:33:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	3 4
2017-01-08 13:33:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:53 AI_Player.update()	update
2017-01-08 13:33:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	3 5
2017-01-08 13:33:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:53 AI_Player.update()	update
2017-01-08 13:33:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:53 AI_Player.update()	Search took5ms
2017-01-08 13:33:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:53 AI_Player.update()		110,	1100,	111,	110,	111,	11,	11
2017-01-08 13:33:53 AI_Player.update()		11,	111,	1010,	1001,	101,	1011,	101
2017-01-08 13:33:53 AI_Player.update()		1110,	1100,	1110,	110,	111,	1110,	1011
2017-01-08 13:33:53 AI_Player.update()		1101,	111,	101,	1001,	111,	1010,	1101
2017-01-08 13:33:53 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1001,	1011
2017-01-08 13:33:53 AI_Player.update()		101,	11,	1010,	1100,	1010,	11,	1001
2017-01-08 13:33:53 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-08 13:33:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	3 5
2017-01-08 13:33:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:53 AI_Player.update()	update
2017-01-08 13:33:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	4 5
2017-01-08 13:33:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:53 AI_Player.update()	update
2017-01-08 13:33:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:53 AI_Player.update()	Search took374ms
2017-01-08 13:33:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:53 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-08 13:33:53 AI_Player.update()		11,	111,	1010,	110,	101,	1011,	101
2017-01-08 13:33:53 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:53 AI_Player.update()		1101,	111,	101,	111,	111,	1010,	1101
2017-01-08 13:33:53 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-08 13:33:53 AI_Player.update()		101,	11,	1010,	1100,	1010,	11,	1001
2017-01-08 13:33:53 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-08 13:33:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:53 GameBoard.setupTreasurePanel()	4 5
2017-01-08 13:33:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:54 AI_Player.update()	update
2017-01-08 13:33:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:54 GameBoard.setupTreasurePanel()	4 5
2017-01-08 13:33:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:54 AI_Player.update()	update
2017-01-08 13:33:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:54 AI_Player.update()	Search took2ms
2017-01-08 13:33:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:54 AI_Player.update()		110,	1100,	111,	1001,	111,	11,	11
2017-01-08 13:33:54 AI_Player.update()		11,	111,	1010,	110,	101,	1011,	101
2017-01-08 13:33:54 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1110,	1011
2017-01-08 13:33:54 AI_Player.update()		1101,	1101,	111,	101,	111,	111,	1010
2017-01-08 13:33:54 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-08 13:33:54 AI_Player.update()		101,	11,	1010,	1100,	1010,	11,	1001
2017-01-08 13:33:54 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-08 13:33:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:54 GameBoard.setupTreasurePanel()	4 5
2017-01-08 13:33:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:54 AI_Player.update()	update
2017-01-08 13:33:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:54 GameBoard.setupTreasurePanel()	4 5
2017-01-08 13:33:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:54 AI_Player.update()	update
2017-01-08 13:33:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:54 AI_Player.update()	Search took507ms
2017-01-08 13:33:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:54 AI_Player.update()		110,	1100,	111,	110,	111,	11,	11
2017-01-08 13:33:54 AI_Player.update()		11,	111,	1010,	1001,	101,	1011,	101
2017-01-08 13:33:54 AI_Player.update()		1110,	1100,	1110,	101,	111,	1110,	1011
2017-01-08 13:33:54 AI_Player.update()		1101,	1101,	111,	1100,	111,	111,	1010
2017-01-08 13:33:54 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1001,	1011
2017-01-08 13:33:54 AI_Player.update()		101,	11,	1010,	110,	1010,	11,	1001
2017-01-08 13:33:54 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:54 GameBoard.setupTreasurePanel()	4 5
2017-01-08 13:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:55 AI_Player.update()	update
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	4 6
2017-01-08 13:33:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:55 AI_Player.update()	update
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:55 AI_Player.update()	Search took11ms
2017-01-08 13:33:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:55 AI_Player.update()		110,	1100,	111,	110,	111,	1011,	11
2017-01-08 13:33:55 AI_Player.update()		11,	111,	1010,	1001,	101,	1110,	101
2017-01-08 13:33:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	111,	1011
2017-01-08 13:33:55 AI_Player.update()		1101,	1101,	111,	1100,	111,	1001,	1010
2017-01-08 13:33:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-08 13:33:55 AI_Player.update()		101,	11,	1010,	110,	1010,	11,	1001
2017-01-08 13:33:55 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	4 6
2017-01-08 13:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:55 AI_Player.update()	update
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	5 6
2017-01-08 13:33:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:55 AI_Player.update()	update
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:55 AI_Player.update()	Search took127ms
2017-01-08 13:33:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:55 AI_Player.update()		110,	1100,	111,	110,	111,	1011,	11
2017-01-08 13:33:55 AI_Player.update()		101,	11,	111,	1010,	1001,	101,	1110
2017-01-08 13:33:55 AI_Player.update()		1110,	1100,	1110,	101,	111,	111,	1011
2017-01-08 13:33:55 AI_Player.update()		1101,	1101,	111,	1100,	111,	1001,	1010
2017-01-08 13:33:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	11,	1011
2017-01-08 13:33:55 AI_Player.update()		101,	11,	1010,	110,	1010,	11,	1001
2017-01-08 13:33:55 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	5 6
2017-01-08 13:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:55 AI_Player.update()	update
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	5 6
2017-01-08 13:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:55 AI_Player.update()	update
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:55 AI_Player.update()	Search took8ms
2017-01-08 13:33:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:55 AI_Player.update()		110,	11,	111,	110,	111,	1011,	11
2017-01-08 13:33:55 AI_Player.update()		101,	1100,	111,	1010,	1001,	101,	1110
2017-01-08 13:33:55 AI_Player.update()		1110,	1101,	1110,	101,	111,	111,	1011
2017-01-08 13:33:55 AI_Player.update()		1101,	1010,	111,	1100,	111,	1001,	1010
2017-01-08 13:33:55 AI_Player.update()		1110,	11,	1101,	1100,	1011,	11,	1011
2017-01-08 13:33:55 AI_Player.update()		101,	101,	1010,	110,	1010,	11,	1001
2017-01-08 13:33:55 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	11,	1001
2017-01-08 13:33:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	5 6
2017-01-08 13:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:55 AI_Player.update()	update
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	6 6
2017-01-08 13:33:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding map
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:55 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:55 AI_Player.update()	update
2017-01-08 13:33:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:56 AI_Player.update()	Search took240ms
2017-01-08 13:33:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:56 AI_Player.update()		110,	11,	111,	1010,	111,	1011,	11
2017-01-08 13:33:56 AI_Player.update()		101,	1100,	111,	101,	1001,	101,	1110
2017-01-08 13:33:56 AI_Player.update()		1110,	1101,	1110,	1100,	111,	111,	1011
2017-01-08 13:33:56 AI_Player.update()		1101,	1010,	111,	1100,	111,	1001,	1010
2017-01-08 13:33:56 AI_Player.update()		1110,	11,	1101,	110,	1011,	11,	1011
2017-01-08 13:33:56 AI_Player.update()		101,	101,	1010,	1001,	1010,	11,	1001
2017-01-08 13:33:56 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-08 13:33:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:56 GameBoard.setupTreasurePanel()	6 6
2017-01-08 13:33:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:56 AI_Player.update()	update
2017-01-08 13:33:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:56 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-08 13:33:56 AI_Player.update()	Player b has won!
2017-01-08 13:33:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-08 13:33:57 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-08 13:33:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-08 13:33:57 QueryProlog.reset()	setup(h1/h2). suceeded
2017-01-08 13:33:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:57 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:57 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:57 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:33:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:33:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:57 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()	update
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:58 AI_Player.update()	Search took0ms
2017-01-08 13:33:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-08 13:33:58 AI_Player.update()		110,	1110,	110,	110,	1100,	1010,	1001
2017-01-08 13:33:58 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-08 13:33:58 AI_Player.update()		11,	111,	101,	1001,	110,	1010,	1001
2017-01-08 13:33:58 AI_Player.update()		1110,	1011,	1101,	11,	1011,	11,	1011
2017-01-08 13:33:58 AI_Player.update()		101,	1001,	1001,	1010,	1101,	11,	110
2017-01-08 13:33:58 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	110,	1001
2017-01-08 13:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:58 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()	update
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:58 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()	update
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:58 AI_Player.update()	Search took57ms
2017-01-08 13:33:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-08 13:33:58 AI_Player.update()		110,	1110,	110,	110,	1100,	1010,	1001
2017-01-08 13:33:58 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-08 13:33:58 AI_Player.update()		11,	111,	101,	1001,	110,	1010,	1001
2017-01-08 13:33:58 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1010,	1011
2017-01-08 13:33:58 AI_Player.update()		101,	1001,	1001,	1010,	1101,	11,	110
2017-01-08 13:33:58 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:58 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()	update
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:58 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()	update
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:58 AI_Player.update()	Search took3ms
2017-01-08 13:33:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()		110,	1110,	111,	1100,	111,	110,	11
2017-01-08 13:33:58 AI_Player.update()		110,	1001,	110,	110,	1100,	1010,	1001
2017-01-08 13:33:58 AI_Player.update()		1110,	111,	1110,	101,	111,	1010,	1011
2017-01-08 13:33:58 AI_Player.update()		11,	1011,	101,	1001,	110,	1010,	1001
2017-01-08 13:33:58 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-08 13:33:58 AI_Player.update()		101,	1001,	1001,	1010,	1101,	11,	110
2017-01-08 13:33:58 AI_Player.update()		1100,	111,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:58 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()	update
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:58 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()	update
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:58 AI_Player.update()	Search took120ms
2017-01-08 13:33:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()		110,	1110,	111,	1100,	111,	110,	11
2017-01-08 13:33:58 AI_Player.update()		1001,	110,	110,	1100,	1010,	1001,	110
2017-01-08 13:33:58 AI_Player.update()		1110,	111,	1110,	101,	111,	1010,	1011
2017-01-08 13:33:58 AI_Player.update()		11,	1011,	101,	1001,	110,	1010,	1001
2017-01-08 13:33:58 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1010,	1011
2017-01-08 13:33:58 AI_Player.update()		101,	1001,	1001,	1010,	1101,	11,	110
2017-01-08 13:33:58 AI_Player.update()		1100,	111,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:58 GameBoard.setupTreasurePanel()	1 1
2017-01-08 13:33:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:58 AI_Player.update()	update
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:58 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:33:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:33:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:33:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:59 AI_Player.update()	update
2017-01-08 13:33:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:59 AI_Player.update()	Search took5ms
2017-01-08 13:33:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:59 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-08 13:33:59 AI_Player.update()		1001,	1110,	110,	1100,	1010,	1001,	110
2017-01-08 13:33:59 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-08 13:33:59 AI_Player.update()		11,	111,	101,	1001,	110,	1010,	1001
2017-01-08 13:33:59 AI_Player.update()		1110,	1011,	1101,	11,	1011,	1010,	1011
2017-01-08 13:33:59 AI_Player.update()		101,	1001,	1001,	1010,	1101,	11,	110
2017-01-08 13:33:59 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-08 13:33:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:33:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:59 AI_Player.update()	update
2017-01-08 13:33:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:33:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:59 AI_Player.update()	update
2017-01-08 13:33:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:59 AI_Player.update()	Search took63ms
2017-01-08 13:33:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:59 AI_Player.update()		110,	111,	111,	1100,	111,	110,	11
2017-01-08 13:33:59 AI_Player.update()		1001,	1110,	110,	101,	1010,	1001,	110
2017-01-08 13:33:59 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-08 13:33:59 AI_Player.update()		11,	111,	101,	11,	110,	1010,	1001
2017-01-08 13:33:59 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-08 13:33:59 AI_Player.update()		101,	1001,	1001,	1010,	1101,	11,	110
2017-01-08 13:33:59 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-08 13:33:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:33:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:59 AI_Player.update()	update
2017-01-08 13:33:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:33:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:33:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:33:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:59 AI_Player.update()	update
2017-01-08 13:33:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:33:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:33:59 AI_Player.update()	Search took2ms
2017-01-08 13:33:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:59 AI_Player.update()		110,	111,	111,	101,	111,	110,	11
2017-01-08 13:33:59 AI_Player.update()		1001,	1110,	110,	1001,	1010,	1001,	110
2017-01-08 13:33:59 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-08 13:33:59 AI_Player.update()		11,	111,	101,	1010,	110,	1010,	1001
2017-01-08 13:33:59 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-08 13:33:59 AI_Player.update()		101,	1001,	1001,	1100,	1101,	11,	110
2017-01-08 13:33:59 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-08 13:33:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:33:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:59 AI_Player.update()	update
2017-01-08 13:33:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:33:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:33:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:33:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:33:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:33:59 AI_Player.update()	update
2017-01-08 13:33:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:33:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:33:59 AI_Player.update()	Search took123ms
2017-01-08 13:33:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:33:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:59 AI_Player.update()		110,	111,	111,	101,	111,	11,	11
2017-01-08 13:33:59 AI_Player.update()		1001,	1110,	110,	1001,	1010,	110,	110
2017-01-08 13:33:59 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-08 13:33:59 AI_Player.update()		11,	111,	101,	1010,	110,	1010,	1001
2017-01-08 13:33:59 AI_Player.update()		1110,	1011,	1101,	1010,	1011,	1010,	1011
2017-01-08 13:33:59 AI_Player.update()		101,	1001,	1001,	1100,	1101,	1010,	110
2017-01-08 13:33:59 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-08 13:33:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:33:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:33:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:33:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:33:59 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:34:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:00 AI_Player.update()	update
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:34:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:34:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:00 AI_Player.update()	update
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:34:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:34:00 AI_Player.update()	Search took11ms
2017-01-08 13:34:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:34:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:00 AI_Player.update()		110,	1110,	111,	101,	111,	11,	11
2017-01-08 13:34:00 AI_Player.update()		1001,	110,	110,	1001,	1010,	110,	110
2017-01-08 13:34:00 AI_Player.update()		1110,	111,	1110,	11,	111,	1001,	1011
2017-01-08 13:34:00 AI_Player.update()		11,	1011,	101,	1010,	110,	1010,	1001
2017-01-08 13:34:00 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-08 13:34:00 AI_Player.update()		101,	1001,	1001,	1100,	1101,	1010,	110
2017-01-08 13:34:00 AI_Player.update()		1100,	111,	1101,	1100,	1101,	11,	1001
2017-01-08 13:34:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:34:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:00 AI_Player.update()	update
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:34:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:34:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:34:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:00 AI_Player.update()	update
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:34:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:34:00 AI_Player.update()	Search took157ms
2017-01-08 13:34:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:34:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:00 AI_Player.update()		110,	1110,	111,	1100,	111,	11,	11
2017-01-08 13:34:00 AI_Player.update()		1001,	110,	110,	101,	1010,	110,	110
2017-01-08 13:34:00 AI_Player.update()		1110,	111,	1110,	1001,	111,	1001,	1011
2017-01-08 13:34:00 AI_Player.update()		11,	1011,	101,	11,	110,	1010,	1001
2017-01-08 13:34:00 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-08 13:34:00 AI_Player.update()		101,	1001,	1001,	1010,	1101,	1010,	110
2017-01-08 13:34:00 AI_Player.update()		1100,	111,	1101,	1100,	1101,	11,	1001
2017-01-08 13:34:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	1 2
2017-01-08 13:34:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:00 AI_Player.update()	update
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:34:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:34:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:34:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:00 AI_Player.update()	update
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:34:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:34:00 AI_Player.update()	Search took2ms
2017-01-08 13:34:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:34:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:00 AI_Player.update()		110,	110,	111,	1100,	111,	11,	11
2017-01-08 13:34:00 AI_Player.update()		1001,	111,	110,	101,	1010,	110,	110
2017-01-08 13:34:00 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1001,	1011
2017-01-08 13:34:00 AI_Player.update()		11,	1001,	101,	11,	110,	1010,	1001
2017-01-08 13:34:00 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-08 13:34:00 AI_Player.update()		101,	111,	1001,	1010,	1101,	1010,	110
2017-01-08 13:34:00 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	11,	1001
2017-01-08 13:34:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:00 AI_Player.update()	update
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:34:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:34:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:00 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:00 AI_Player.update()	update
2017-01-08 13:34:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:34:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:34:01 AI_Player.update()	Search took101ms
2017-01-08 13:34:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:01 AI_Player.update()		110,	110,	111,	101,	111,	11,	11
2017-01-08 13:34:01 AI_Player.update()		1001,	111,	110,	1001,	1010,	110,	110
2017-01-08 13:34:01 AI_Player.update()		1110,	1011,	1110,	11,	111,	1001,	1011
2017-01-08 13:34:01 AI_Player.update()		11,	1001,	101,	1010,	110,	1010,	1001
2017-01-08 13:34:01 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1010,	1011
2017-01-08 13:34:01 AI_Player.update()		101,	111,	1001,	1100,	1101,	1010,	110
2017-01-08 13:34:01 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	11,	1001
2017-01-08 13:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:01 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:01 AI_Player.update()	update
2017-01-08 13:34:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:34:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:34:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:01 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:01 AI_Player.update()	update
2017-01-08 13:34:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:34:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:34:01 AI_Player.update()	Search took9ms
2017-01-08 13:34:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:01 AI_Player.update()		110,	111,	111,	101,	111,	11,	11
2017-01-08 13:34:01 AI_Player.update()		1001,	1011,	110,	1001,	1010,	110,	110
2017-01-08 13:34:01 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-08 13:34:01 AI_Player.update()		11,	1001,	101,	1010,	110,	1010,	1001
2017-01-08 13:34:01 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1010,	1011
2017-01-08 13:34:01 AI_Player.update()		101,	1110,	1001,	1100,	1101,	1010,	110
2017-01-08 13:34:01 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-08 13:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:01 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:01 AI_Player.update()	update
2017-01-08 13:34:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:34:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:34:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:34:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:01 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:01 AI_Player.update()	update
2017-01-08 13:34:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:34:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:34:01 AI_Player.update()	Search took318ms
2017-01-08 13:34:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:01 AI_Player.update()		110,	111,	111,	1100,	111,	11,	11
2017-01-08 13:34:01 AI_Player.update()		1001,	1011,	110,	101,	1010,	110,	110
2017-01-08 13:34:01 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-08 13:34:01 AI_Player.update()		11,	1001,	101,	11,	110,	1010,	1001
2017-01-08 13:34:01 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1010,	1011
2017-01-08 13:34:01 AI_Player.update()		101,	1110,	1001,	1010,	1101,	1010,	110
2017-01-08 13:34:01 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-08 13:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:01 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:01 AI_Player.update()	update
2017-01-08 13:34:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:34:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:34:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:01 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:01 AI_Player.update()	update
2017-01-08 13:34:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:34:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:34:01 AI_Player.update()	Search took5ms
2017-01-08 13:34:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:01 AI_Player.update()		110,	1011,	111,	1100,	111,	11,	11
2017-01-08 13:34:01 AI_Player.update()		1001,	1001,	110,	101,	1010,	110,	110
2017-01-08 13:34:01 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-08 13:34:01 AI_Player.update()		11,	111,	101,	11,	110,	1010,	1001
2017-01-08 13:34:01 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-08 13:34:01 AI_Player.update()		101,	110,	1001,	1010,	1101,	1010,	110
2017-01-08 13:34:01 AI_Player.update()		1100,	111,	1101,	1100,	1101,	11,	1001
2017-01-08 13:34:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:01 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:02 AI_Player.update()	update
2017-01-08 13:34:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:34:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:34:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:34:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:34:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:02 AI_Player.update()	update
2017-01-08 13:34:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:34:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:34:02 AI_Player.update()	Search took198ms
2017-01-08 13:34:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:34:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:02 AI_Player.update()		110,	1011,	111,	1100,	111,	11,	11
2017-01-08 13:34:02 AI_Player.update()		1001,	1001,	110,	101,	1010,	110,	110
2017-01-08 13:34:02 AI_Player.update()		1110,	1001,	1110,	1001,	111,	1001,	1011
2017-01-08 13:34:02 AI_Player.update()		11,	111,	101,	11,	110,	1010,	1001
2017-01-08 13:34:02 AI_Player.update()		1110,	1110,	1101,	1010,	1011,	1010,	1011
2017-01-08 13:34:02 AI_Player.update()		110,	1001,	1010,	1101,	1010,	110,	101
2017-01-08 13:34:02 AI_Player.update()		1100,	111,	1101,	1100,	1101,	11,	1001
2017-01-08 13:34:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:34:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:34:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	1 3
2017-01-08 13:34:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:02 AI_Player.update()	update
2017-01-08 13:34:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:34:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:34:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:34:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:34:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	1 4
2017-01-08 13:34:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:34:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:34:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:02 AI_Player.update()	update
2017-01-08 13:34:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:34:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:34:02 AI_Player.update()	Search took7ms
2017-01-08 13:34:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:34:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:02 AI_Player.update()		110,	1011,	111,	101,	111,	11,	11
2017-01-08 13:34:02 AI_Player.update()		1001,	1001,	110,	1001,	1010,	110,	110
2017-01-08 13:34:02 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-08 13:34:02 AI_Player.update()		11,	111,	101,	1010,	110,	1010,	1001
2017-01-08 13:34:02 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	1010,	1011
2017-01-08 13:34:02 AI_Player.update()		110,	1001,	1010,	1100,	1010,	110,	101
2017-01-08 13:34:02 AI_Player.update()		1100,	111,	1101,	1100,	1101,	11,	1001
2017-01-08 13:34:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:34:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	1 4
2017-01-08 13:34:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:02 AI_Player.update()	update
2017-01-08 13:34:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:34:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:34:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:34:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:34:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	2 4
2017-01-08 13:34:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:34:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:34:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:34:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:02 AI_Player.update()	update
2017-01-08 13:34:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-08 13:34:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h2). suceeded
2017-01-08 13:34:03 AI_Player.update()	Search took601ms
2017-01-08 13:34:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:34:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:03 AI_Player.update()		110,	1011,	111,	1001,	111,	11,	11
2017-01-08 13:34:03 AI_Player.update()		1001,	1001,	110,	11,	1010,	110,	110
2017-01-08 13:34:03 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-08 13:34:03 AI_Player.update()		11,	111,	101,	1101,	110,	1010,	1001
2017-01-08 13:34:03 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1010,	1011
2017-01-08 13:34:03 AI_Player.update()		110,	1001,	1010,	1100,	1010,	110,	101
2017-01-08 13:34:03 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-08 13:34:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:34:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:34:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	2 4
2017-01-08 13:34:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:03 AI_Player.update()	update
2017-01-08 13:34:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-08 13:34:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-08 13:34:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h2). suceeded
2017-01-08 13:34:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-08 13:34:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:34:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:34:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:34:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:03 AI_Player.update()	update
2017-01-08 13:34:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-08 13:34:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h1). suceeded
2017-01-08 13:34:03 AI_Player.update()	Search took7ms
2017-01-08 13:34:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-08 13:34:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:03 AI_Player.update()		110,	1011,	111,	1001,	111,	11,	11
2017-01-08 13:34:03 AI_Player.update()		1001,	1001,	110,	11,	1010,	110,	110
2017-01-08 13:34:03 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-08 13:34:03 AI_Player.update()		111,	101,	1101,	110,	1010,	1001,	11
2017-01-08 13:34:03 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1010,	1011
2017-01-08 13:34:03 AI_Player.update()		110,	1001,	1010,	1100,	1010,	110,	101
2017-01-08 13:34:03 AI_Player.update()		1100,	111,	1101,	101,	1101,	11,	1001
2017-01-08 13:34:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-08 13:34:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-08 13:34:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	2 5
2017-01-08 13:34:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:03 AI_Player.update()	update
2017-01-08 13:34:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-08 13:34:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-08 13:34:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h1). suceeded
2017-01-08 13:34:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-08 13:34:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-08 13:34:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-08 13:34:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-08 13:34:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-08 13:34:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	3 5
2017-01-08 13:34:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-08 13:34:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding book
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-08 13:34:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-08 13:34:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-08 13:34:03 AI_Player.update()	update
2017-01-08 13:34:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
