2017-01-04 14:11:04 GameBoard.<init>()	Hello World!
2017-01-04 14:11:05 QueryProlog.initialise()	consult('prolog/labyrinth.pl') suceeded
2017-01-04 14:11:05 QueryProlog.initialise()	setup(h2/h3). suceeded
2017-01-04 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:05 GameBoard.setupBoardFromString()	Board created
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:05 GameBoard.initialise()	[crown, helmet, gold, chest, sword]
2017-01-04 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:05 GameBoard.initialise()	[ring, keys, book, gem, fairy]
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.<init>()	 player a: 1.0player b:1.0
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	null
2017-01-04 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()	update
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:05 AI_Player.update()	Search took139ms
2017-01-04 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 14:11:05 AI_Player.update()		1010,	101,	101,	1100,	110,	101,	1001
2017-01-04 14:11:05 AI_Player.update()		1110,	1110,	1110,	11,	111,	1010,	1011
2017-01-04 14:11:05 AI_Player.update()		1100,	1011,	1100,	11,	110,	101,	1010
2017-01-04 14:11:05 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 14:11:05 AI_Player.update()		1100,	111,	101,	1100,	101,	1001,	101
2017-01-04 14:11:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-04 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()	update
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()	update
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:05 AI_Player.update()	Search took55ms
2017-01-04 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 14:11:05 AI_Player.update()		1010,	101,	101,	1100,	110,	1010,	1001
2017-01-04 14:11:05 AI_Player.update()		1110,	1110,	1110,	11,	111,	101,	1011
2017-01-04 14:11:05 AI_Player.update()		1100,	1011,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:05 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:05 AI_Player.update()		1100,	111,	101,	1100,	101,	11,	101
2017-01-04 14:11:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()	update
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()	update
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:05 AI_Player.update()	Search took269ms
2017-01-04 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 14:11:05 AI_Player.update()		1010,	101,	101,	1100,	110,	1010,	1001
2017-01-04 14:11:05 AI_Player.update()		1110,	1110,	1110,	11,	111,	101,	1011
2017-01-04 14:11:05 AI_Player.update()		1100,	1011,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:05 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:05 AI_Player.update()		111,	101,	1100,	101,	11,	101,	1100
2017-01-04 14:11:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()	update
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()	update
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:05 AI_Player.update()	Search took100ms
2017-01-04 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 14:11:05 AI_Player.update()		1010,	1110,	101,	1100,	110,	1010,	1001
2017-01-04 14:11:05 AI_Player.update()		1110,	1011,	1110,	11,	111,	101,	1011
2017-01-04 14:11:05 AI_Player.update()		1100,	1100,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:05 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:05 AI_Player.update()		111,	1010,	1100,	101,	11,	101,	1100
2017-01-04 14:11:05 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()	update
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()	update
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:05 AI_Player.update()	Search took110ms
2017-01-04 14:11:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()		110,	1110,	111,	1100,	111,	101,	11
2017-01-04 14:11:05 AI_Player.update()		1010,	1011,	101,	1100,	110,	1010,	1001
2017-01-04 14:11:05 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-04 14:11:05 AI_Player.update()		1100,	101,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:05 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:05 AI_Player.update()		111,	1010,	1100,	101,	11,	101,	1100
2017-01-04 14:11:05 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:11:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()	update
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:05 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:05 AI_Player.update()	update
2017-01-04 14:11:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:06 AI_Player.update()	Search took67ms
2017-01-04 14:11:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 14:11:06 AI_Player.update()		1010,	1110,	101,	1100,	110,	1010,	1001
2017-01-04 14:11:06 AI_Player.update()		1110,	1011,	1110,	11,	111,	101,	1011
2017-01-04 14:11:06 AI_Player.update()		1100,	1100,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:06 AI_Player.update()		111,	1010,	1100,	101,	11,	101,	1100
2017-01-04 14:11:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:06 AI_Player.update()	Search took181ms
2017-01-04 14:11:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()		110,	1110,	111,	1100,	111,	101,	11
2017-01-04 14:11:06 AI_Player.update()		1010,	1011,	101,	1100,	110,	1010,	1001
2017-01-04 14:11:06 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-04 14:11:06 AI_Player.update()		1100,	101,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:06 AI_Player.update()		111,	1010,	1100,	101,	11,	101,	1100
2017-01-04 14:11:06 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:06 AI_Player.update()	Search took53ms
2017-01-04 14:11:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()		110,	1110,	111,	1100,	111,	101,	11
2017-01-04 14:11:06 AI_Player.update()		1001,	1010,	1011,	101,	1100,	110,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-04 14:11:06 AI_Player.update()		1100,	101,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:06 AI_Player.update()		111,	1010,	1100,	101,	11,	101,	1100
2017-01-04 14:11:06 AI_Player.update()		1100,	101,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:06 AI_Player.update()	Search took119ms
2017-01-04 14:11:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()		110,	1010,	111,	1100,	111,	101,	11
2017-01-04 14:11:06 AI_Player.update()		1001,	1100,	1011,	101,	1100,	110,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 14:11:06 AI_Player.update()		1100,	1010,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:06 AI_Player.update()		111,	101,	1100,	101,	11,	101,	1100
2017-01-04 14:11:06 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:06 AI_Player.update()	Search took22ms
2017-01-04 14:11:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-04 14:11:06 AI_Player.update()		1001,	101,	1011,	101,	1100,	110,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 14:11:06 AI_Player.update()		1100,	1010,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:06 AI_Player.update()		111,	1110,	1100,	101,	11,	101,	1100
2017-01-04 14:11:06 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:06 AI_Player.update()	Search took146ms
2017-01-04 14:11:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-04 14:11:06 AI_Player.update()		1001,	101,	1011,	1100,	1100,	110,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:06 AI_Player.update()		1100,	1010,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:06 AI_Player.update()		111,	1110,	1100,	11,	11,	101,	1100
2017-01-04 14:11:06 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:06 AI_Player.update()	Search took76ms
2017-01-04 14:11:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 14:11:06 AI_Player.update()		1001,	1010,	1011,	1100,	1100,	110,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:06 AI_Player.update()		1100,	101,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:06 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:06 AI_Player.update()		111,	1010,	1100,	11,	11,	101,	1100
2017-01-04 14:11:06 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 14:11:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:11:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:06 AI_Player.update()	update
2017-01-04 14:11:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:07 AI_Player.update()	Search took500ms
2017-01-04 14:11:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:07 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 14:11:07 AI_Player.update()		1010,	1011,	1100,	1100,	110,	1010,	1001
2017-01-04 14:11:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:07 AI_Player.update()		1100,	101,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:07 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:07 AI_Player.update()		111,	1010,	1100,	11,	11,	101,	1100
2017-01-04 14:11:07 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 14:11:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:11:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:07 AI_Player.update()	update
2017-01-04 14:11:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:07 AI_Player.update()	update
2017-01-04 14:11:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:07 AI_Player.update()	Search took217ms
2017-01-04 14:11:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:07 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 14:11:07 AI_Player.update()		1001,	1010,	1011,	1100,	1100,	110,	1010
2017-01-04 14:11:07 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:07 AI_Player.update()		1100,	101,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:07 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:07 AI_Player.update()		111,	1010,	1100,	11,	11,	101,	1100
2017-01-04 14:11:07 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 14:11:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:07 AI_Player.update()	update
2017-01-04 14:11:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:07 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:07 AI_Player.update()	update
2017-01-04 14:11:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:08 AI_Player.update()	Search took503ms
2017-01-04 14:11:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:08 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-04 14:11:08 AI_Player.update()		1001,	101,	1011,	1100,	1100,	110,	1010
2017-01-04 14:11:08 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:08 AI_Player.update()		1100,	1010,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:08 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:08 AI_Player.update()		111,	1110,	1100,	11,	11,	101,	1100
2017-01-04 14:11:08 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1010,	1001
2017-01-04 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:08 AI_Player.update()	update
2017-01-04 14:11:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:08 AI_Player.update()	update
2017-01-04 14:11:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:08 AI_Player.update()	Search took392ms
2017-01-04 14:11:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:08 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 14:11:08 AI_Player.update()		1001,	1010,	1011,	1100,	1100,	110,	1010
2017-01-04 14:11:08 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:08 AI_Player.update()		1100,	101,	1100,	11,	110,	1010,	1010
2017-01-04 14:11:08 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:11:08 AI_Player.update()		111,	1010,	1100,	11,	11,	101,	1100
2017-01-04 14:11:08 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1010,	1001
2017-01-04 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:08 AI_Player.update()	update
2017-01-04 14:11:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:08 AI_Player.update()	update
2017-01-04 14:11:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:08 AI_Player.update()	Search took470ms
2017-01-04 14:11:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:08 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 14:11:08 AI_Player.update()		1001,	1010,	1011,	1100,	1100,	101,	1010
2017-01-04 14:11:08 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 14:11:08 AI_Player.update()		1100,	101,	1100,	11,	110,	101,	1010
2017-01-04 14:11:08 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1010,	1011
2017-01-04 14:11:08 AI_Player.update()		111,	1010,	1100,	11,	11,	1001,	1100
2017-01-04 14:11:08 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:08 AI_Player.update()	update
2017-01-04 14:11:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:08 AI_Player.update()	update
2017-01-04 14:11:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:09 AI_Player.update()	Search took278ms
2017-01-04 14:11:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 14:11:09 AI_Player.update()		1001,	1010,	1011,	1100,	1100,	101,	1010
2017-01-04 14:11:09 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-04 14:11:09 AI_Player.update()		1100,	1110,	1100,	11,	110,	101,	1010
2017-01-04 14:11:09 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 14:11:09 AI_Player.update()		111,	1100,	1100,	11,	11,	1001,	1100
2017-01-04 14:11:09 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()	update
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()	update
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:09 AI_Player.update()	Search took91ms
2017-01-04 14:11:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 14:11:09 AI_Player.update()		1001,	1010,	1011,	1100,	1100,	101,	1010
2017-01-04 14:11:09 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-04 14:11:09 AI_Player.update()		1010,	1100,	1110,	1100,	11,	110,	101
2017-01-04 14:11:09 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 14:11:09 AI_Player.update()		111,	1100,	1100,	11,	11,	1001,	1100
2017-01-04 14:11:09 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()	update
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()	update
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:09 AI_Player.update()	Search took237ms
2017-01-04 14:11:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 14:11:09 AI_Player.update()		1001,	1010,	1011,	1100,	1100,	101,	1010
2017-01-04 14:11:09 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-04 14:11:09 AI_Player.update()		1010,	1100,	1110,	1100,	11,	110,	101
2017-01-04 14:11:09 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 14:11:09 AI_Player.update()		1100,	111,	1100,	1100,	11,	11,	1001
2017-01-04 14:11:09 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()	update
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()	update
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:09 AI_Player.update()	Search took127ms
2017-01-04 14:11:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 14:11:09 AI_Player.update()		1001,	1010,	1011,	1100,	1100,	101,	1010
2017-01-04 14:11:09 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-04 14:11:09 AI_Player.update()		101,	1010,	1100,	1110,	1100,	11,	110
2017-01-04 14:11:09 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 14:11:09 AI_Player.update()		1100,	111,	1100,	1100,	11,	11,	1001
2017-01-04 14:11:09 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()	update
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()	update
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:09 AI_Player.update()	Search took265ms
2017-01-04 14:11:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()		110,	1010,	111,	1100,	111,	1010,	11
2017-01-04 14:11:09 AI_Player.update()		1001,	101,	1011,	1100,	1100,	101,	1010
2017-01-04 14:11:09 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 14:11:09 AI_Player.update()		101,	1010,	1100,	1110,	1100,	11,	110
2017-01-04 14:11:09 AI_Player.update()		1110,	111,	1101,	11,	1011,	1010,	1011
2017-01-04 14:11:09 AI_Player.update()		1100,	101,	1100,	1100,	11,	11,	1001
2017-01-04 14:11:09 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()	update
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:09 AI_Player.update()	update
2017-01-04 14:11:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:10 AI_Player.update()	Search took359ms
2017-01-04 14:11:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()		110,	101,	111,	1100,	111,	1010,	11
2017-01-04 14:11:10 AI_Player.update()		1001,	1010,	1011,	1100,	1100,	101,	1010
2017-01-04 14:11:10 AI_Player.update()		1110,	1010,	1110,	101,	111,	110,	1011
2017-01-04 14:11:10 AI_Player.update()		101,	111,	1100,	1110,	1100,	11,	110
2017-01-04 14:11:10 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 14:11:10 AI_Player.update()		1100,	1010,	1100,	1100,	11,	11,	1001
2017-01-04 14:11:10 AI_Player.update()		1100,	1010,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()	update
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:10 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:11:10 AI_Player.update()	Player a has won!
2017-01-04 14:11:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:10 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:11:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:10 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:11:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()	update
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:10 AI_Player.update()	Search took79ms
2017-01-04 14:11:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 14:11:10 AI_Player.update()		1001,	110,	110,	101,	1100,	1011,	1100
2017-01-04 14:11:10 AI_Player.update()		1110,	1101,	1110,	1110,	111,	1001,	1011
2017-01-04 14:11:10 AI_Player.update()		1010,	11,	11,	1011,	110,	1001,	1010
2017-01-04 14:11:10 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:10 AI_Player.update()		101,	110,	1001,	1100,	1100,	1011,	110
2017-01-04 14:11:10 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()	update
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()	update
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:10 AI_Player.update()	Search took78ms
2017-01-04 14:11:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 14:11:10 AI_Player.update()		1100,	1001,	110,	110,	101,	1100,	1011
2017-01-04 14:11:10 AI_Player.update()		1110,	1101,	1110,	1110,	111,	1001,	1011
2017-01-04 14:11:10 AI_Player.update()		1010,	11,	11,	1011,	110,	1001,	1010
2017-01-04 14:11:10 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:10 AI_Player.update()		101,	110,	1001,	1100,	1100,	1011,	110
2017-01-04 14:11:10 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()	update
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()	update
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:10 AI_Player.update()	Search took146ms
2017-01-04 14:11:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 14:11:10 AI_Player.update()		1001,	110,	110,	101,	1100,	1011,	1100
2017-01-04 14:11:10 AI_Player.update()		1110,	1101,	1110,	1110,	111,	1001,	1011
2017-01-04 14:11:10 AI_Player.update()		1010,	11,	11,	1011,	110,	1001,	1010
2017-01-04 14:11:10 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:10 AI_Player.update()		101,	110,	1001,	1100,	1100,	1011,	110
2017-01-04 14:11:10 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()	update
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()	update
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:10 AI_Player.update()	Search took275ms
2017-01-04 14:11:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()		110,	110,	111,	101,	111,	1010,	11
2017-01-04 14:11:10 AI_Player.update()		1001,	1101,	110,	101,	1100,	1011,	1100
2017-01-04 14:11:10 AI_Player.update()		1110,	11,	1110,	1110,	111,	1001,	1011
2017-01-04 14:11:10 AI_Player.update()		1010,	1001,	11,	1011,	110,	1001,	1010
2017-01-04 14:11:10 AI_Player.update()		1110,	110,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:10 AI_Player.update()		101,	1010,	1001,	1100,	1100,	1011,	110
2017-01-04 14:11:10 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()	update
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:10 AI_Player.update()	update
2017-01-04 14:11:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:11 AI_Player.update()	Search took243ms
2017-01-04 14:11:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 14:11:11 AI_Player.update()		1001,	11,	110,	101,	1100,	1011,	1100
2017-01-04 14:11:11 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1001,	1011
2017-01-04 14:11:11 AI_Player.update()		1010,	110,	11,	1011,	110,	1001,	1010
2017-01-04 14:11:11 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:11 AI_Player.update()		101,	1101,	1001,	1100,	1100,	1011,	110
2017-01-04 14:11:11 AI_Player.update()		1100,	110,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()	update
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()	update
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:11 AI_Player.update()	Search took212ms
2017-01-04 14:11:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 14:11:11 AI_Player.update()		1100,	1001,	11,	110,	101,	1100,	1011
2017-01-04 14:11:11 AI_Player.update()		1110,	1001,	1110,	1110,	111,	1001,	1011
2017-01-04 14:11:11 AI_Player.update()		1010,	110,	11,	1011,	110,	1001,	1010
2017-01-04 14:11:11 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:11 AI_Player.update()		101,	1101,	1001,	1100,	1100,	1011,	110
2017-01-04 14:11:11 AI_Player.update()		1100,	110,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()	update
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()	update
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:11 AI_Player.update()	Search took138ms
2017-01-04 14:11:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-04 14:11:11 AI_Player.update()		1100,	1001,	11,	110,	101,	1100,	1011
2017-01-04 14:11:11 AI_Player.update()		1110,	110,	1110,	1110,	111,	1001,	1011
2017-01-04 14:11:11 AI_Player.update()		1010,	1010,	11,	1011,	110,	1001,	1010
2017-01-04 14:11:11 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:11 AI_Player.update()		101,	110,	1001,	1100,	1100,	1011,	110
2017-01-04 14:11:11 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()	update
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:11:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()	update
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:11 AI_Player.update()	Search took55ms
2017-01-04 14:11:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-04 14:11:11 AI_Player.update()		1011,	1100,	1001,	11,	110,	101,	1100
2017-01-04 14:11:11 AI_Player.update()		1110,	110,	1110,	1110,	111,	1001,	1011
2017-01-04 14:11:11 AI_Player.update()		1010,	1010,	11,	1011,	110,	1001,	1010
2017-01-04 14:11:11 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:11 AI_Player.update()		101,	110,	1001,	1100,	1100,	1011,	110
2017-01-04 14:11:11 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()	update
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:11:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()	update
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:11 AI_Player.update()	Search took153ms
2017-01-04 14:11:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-04 14:11:11 AI_Player.update()		1011,	1100,	1001,	11,	110,	101,	1100
2017-01-04 14:11:11 AI_Player.update()		1110,	110,	1110,	1110,	111,	1001,	1011
2017-01-04 14:11:11 AI_Player.update()		1010,	1010,	11,	1011,	110,	1001,	1010
2017-01-04 14:11:11 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:11 AI_Player.update()		110,	101,	110,	1001,	1100,	1100,	1011
2017-01-04 14:11:11 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()	update
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:11:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:11 AI_Player.update()	update
2017-01-04 14:11:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:12 AI_Player.update()	Search took346ms
2017-01-04 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-04 14:11:12 AI_Player.update()		1011,	1100,	1001,	101,	110,	101,	1100
2017-01-04 14:11:12 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-04 14:11:12 AI_Player.update()		1010,	1010,	11,	1110,	110,	1001,	1010
2017-01-04 14:11:12 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	1100,	1011
2017-01-04 14:11:12 AI_Player.update()		110,	101,	110,	110,	1100,	1100,	1011
2017-01-04 14:11:12 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()	update
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()	update
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:12 AI_Player.update()	Search took147ms
2017-01-04 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-04 14:11:12 AI_Player.update()		1011,	1100,	1001,	11,	110,	101,	1100
2017-01-04 14:11:12 AI_Player.update()		1110,	110,	1110,	1110,	111,	1001,	1011
2017-01-04 14:11:12 AI_Player.update()		1010,	1010,	11,	1011,	110,	1001,	1010
2017-01-04 14:11:12 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:12 AI_Player.update()		110,	101,	110,	1001,	1100,	1100,	1011
2017-01-04 14:11:12 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()	update
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()	update
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:12 AI_Player.update()	Search took109ms
2017-01-04 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-04 14:11:12 AI_Player.update()		1011,	1100,	1001,	101,	110,	101,	1100
2017-01-04 14:11:12 AI_Player.update()		1110,	110,	1110,	11,	111,	1001,	1011
2017-01-04 14:11:12 AI_Player.update()		1010,	1010,	11,	1110,	110,	1001,	1010
2017-01-04 14:11:12 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	1100,	1011
2017-01-04 14:11:12 AI_Player.update()		110,	101,	110,	110,	1100,	1100,	1011
2017-01-04 14:11:12 AI_Player.update()		1100,	1101,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()	update
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()	update
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:12 AI_Player.update()	Search took351ms
2017-01-04 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-04 14:11:12 AI_Player.update()		1011,	1001,	1001,	101,	110,	101,	1100
2017-01-04 14:11:12 AI_Player.update()		1110,	1100,	1110,	11,	111,	1001,	1011
2017-01-04 14:11:12 AI_Player.update()		1010,	110,	11,	1110,	110,	1001,	1010
2017-01-04 14:11:12 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1100,	1011
2017-01-04 14:11:12 AI_Player.update()		110,	1101,	110,	110,	1100,	1100,	1011
2017-01-04 14:11:12 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()	update
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()	update
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:12 AI_Player.update()	Search took220ms
2017-01-04 14:11:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-04 14:11:12 AI_Player.update()		1011,	1001,	1001,	1001,	110,	101,	1100
2017-01-04 14:11:12 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-04 14:11:12 AI_Player.update()		1010,	110,	11,	11,	110,	1001,	1010
2017-01-04 14:11:12 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:11:12 AI_Player.update()		110,	1101,	110,	1011,	1100,	1100,	1011
2017-01-04 14:11:12 AI_Player.update()		1100,	101,	1101,	110,	1101,	110,	1001
2017-01-04 14:11:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()	update
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:12 AI_Player.update()	update
2017-01-04 14:11:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:13 AI_Player.update()	Search took418ms
2017-01-04 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-04 14:11:13 AI_Player.update()		1011,	1100,	1001,	1001,	110,	101,	1100
2017-01-04 14:11:13 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 14:11:13 AI_Player.update()		1010,	1010,	11,	11,	110,	1001,	1010
2017-01-04 14:11:13 AI_Player.update()		1110,	1101,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:11:13 AI_Player.update()		110,	101,	110,	1011,	1100,	1100,	1011
2017-01-04 14:11:13 AI_Player.update()		1100,	1101,	1101,	110,	1101,	110,	1001
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:11:13 AI_Player.update()	Player a has won!
2017-01-04 14:11:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:13 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:11:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:13 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:13 AI_Player.update()	Search took16ms
2017-01-04 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-04 14:11:13 AI_Player.update()		11,	1011,	101,	1010,	101,	101,	101
2017-01-04 14:11:13 AI_Player.update()		1110,	101,	1110,	1110,	111,	1100,	1011
2017-01-04 14:11:13 AI_Player.update()		110,	1010,	101,	1010,	111,	1100,	1101
2017-01-04 14:11:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 14:11:13 AI_Player.update()		1110,	11,	101,	11,	11,	1010,	11
2017-01-04 14:11:13 AI_Player.update()		1100,	1100,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:13 AI_Player.update()	Search took24ms
2017-01-04 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 14:11:13 AI_Player.update()		11,	1011,	101,	1010,	101,	1100,	101
2017-01-04 14:11:13 AI_Player.update()		1110,	101,	1110,	1110,	111,	1100,	1011
2017-01-04 14:11:13 AI_Player.update()		110,	1010,	101,	1010,	111,	101,	1101
2017-01-04 14:11:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:11:13 AI_Player.update()		1110,	11,	101,	11,	11,	101,	11
2017-01-04 14:11:13 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:13 AI_Player.update()	Search took56ms
2017-01-04 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()		110,	1011,	111,	1010,	111,	101,	11
2017-01-04 14:11:13 AI_Player.update()		11,	101,	101,	1010,	101,	1100,	101
2017-01-04 14:11:13 AI_Player.update()		1110,	1010,	1110,	1110,	111,	1100,	1011
2017-01-04 14:11:13 AI_Player.update()		110,	11,	101,	1010,	111,	101,	1101
2017-01-04 14:11:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:11:13 AI_Player.update()		1110,	1100,	101,	11,	11,	101,	11
2017-01-04 14:11:13 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:13 AI_Player.update()	Search took95ms
2017-01-04 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()		110,	1011,	111,	1010,	111,	1100,	11
2017-01-04 14:11:13 AI_Player.update()		11,	101,	101,	1010,	101,	1100,	101
2017-01-04 14:11:13 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-04 14:11:13 AI_Player.update()		110,	11,	101,	1010,	111,	1010,	1101
2017-01-04 14:11:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 14:11:13 AI_Player.update()		1110,	1100,	101,	11,	11,	1001,	11
2017-01-04 14:11:13 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:13 AI_Player.update()	Search took274ms
2017-01-04 14:11:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()		110,	1011,	111,	1010,	111,	1100,	11
2017-01-04 14:11:13 AI_Player.update()		11,	101,	101,	1010,	101,	1100,	101
2017-01-04 14:11:13 AI_Player.update()		1110,	1010,	1110,	1110,	111,	101,	1011
2017-01-04 14:11:13 AI_Player.update()		110,	11,	101,	1010,	111,	1010,	1101
2017-01-04 14:11:13 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 14:11:13 AI_Player.update()		11,	1110,	1100,	101,	11,	11,	1001
2017-01-04 14:11:13 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:13 AI_Player.update()	update
2017-01-04 14:11:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:14 AI_Player.update()	Search took173ms
2017-01-04 14:11:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:14 AI_Player.update()		110,	1001,	111,	1010,	111,	1100,	11
2017-01-04 14:11:14 AI_Player.update()		11,	1011,	101,	1010,	101,	1100,	101
2017-01-04 14:11:14 AI_Player.update()		1110,	101,	1110,	1110,	111,	101,	1011
2017-01-04 14:11:14 AI_Player.update()		110,	1010,	101,	1010,	111,	1010,	1101
2017-01-04 14:11:14 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 14:11:14 AI_Player.update()		11,	11,	1100,	101,	11,	11,	1001
2017-01-04 14:11:14 AI_Player.update()		1100,	1110,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:14 AI_Player.update()	update
2017-01-04 14:11:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:14 AI_Player.update()	update
2017-01-04 14:11:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:14 AI_Player.update()	Search took248ms
2017-01-04 14:11:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:14 AI_Player.update()		110,	1001,	111,	101,	111,	1100,	11
2017-01-04 14:11:14 AI_Player.update()		11,	1011,	101,	1010,	101,	1100,	101
2017-01-04 14:11:14 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 14:11:14 AI_Player.update()		110,	1010,	101,	1110,	111,	1010,	1101
2017-01-04 14:11:14 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 14:11:14 AI_Player.update()		11,	11,	1100,	1100,	11,	11,	1001
2017-01-04 14:11:14 AI_Player.update()		1100,	1110,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:14 AI_Player.update()	update
2017-01-04 14:11:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:14 AI_Player.update()	update
2017-01-04 14:11:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:14 AI_Player.update()	Search took297ms
2017-01-04 14:11:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:14 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 14:11:14 AI_Player.update()		11,	101,	101,	1010,	101,	1100,	101
2017-01-04 14:11:14 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 14:11:14 AI_Player.update()		110,	11,	101,	1110,	111,	1010,	1101
2017-01-04 14:11:14 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 14:11:14 AI_Player.update()		11,	1110,	1100,	1100,	11,	11,	1001
2017-01-04 14:11:14 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:14 AI_Player.update()	update
2017-01-04 14:11:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:14 AI_Player.update()	update
2017-01-04 14:11:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:15 AI_Player.update()	Search took354ms
2017-01-04 14:11:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 14:11:15 AI_Player.update()		11,	101,	101,	1010,	101,	1100,	101
2017-01-04 14:11:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 14:11:15 AI_Player.update()		1101,	110,	11,	101,	1110,	111,	1010
2017-01-04 14:11:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 14:11:15 AI_Player.update()		11,	1110,	1100,	1100,	11,	11,	1001
2017-01-04 14:11:15 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()	update
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()	update
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:15 AI_Player.update()	Search took81ms
2017-01-04 14:11:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 14:11:15 AI_Player.update()		11,	101,	101,	1010,	101,	1100,	101
2017-01-04 14:11:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 14:11:15 AI_Player.update()		1010,	1101,	110,	11,	101,	1110,	111
2017-01-04 14:11:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 14:11:15 AI_Player.update()		11,	1110,	1100,	1100,	11,	11,	1001
2017-01-04 14:11:15 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()	update
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()	update
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:15 AI_Player.update()	Search took137ms
2017-01-04 14:11:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 14:11:15 AI_Player.update()		11,	101,	101,	1010,	101,	1100,	101
2017-01-04 14:11:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 14:11:15 AI_Player.update()		111,	1010,	1101,	110,	11,	101,	1110
2017-01-04 14:11:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 14:11:15 AI_Player.update()		11,	1110,	1100,	1100,	11,	11,	1001
2017-01-04 14:11:15 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()	update
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()	update
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:15 AI_Player.update()	Search took112ms
2017-01-04 14:11:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 14:11:15 AI_Player.update()		101,	101,	1010,	101,	1100,	101,	11
2017-01-04 14:11:15 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 14:11:15 AI_Player.update()		111,	1010,	1101,	110,	11,	101,	1110
2017-01-04 14:11:15 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 14:11:15 AI_Player.update()		11,	1110,	1100,	1100,	11,	11,	1001
2017-01-04 14:11:15 AI_Player.update()		1100,	1001,	1101,	101,	1101,	101,	1001
2017-01-04 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()	update
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()	update
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:15 AI_Player.update()	Search took453ms
2017-01-04 14:11:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()		110,	1011,	111,	101,	111,	1100,	11
2017-01-04 14:11:15 AI_Player.update()		101,	101,	1010,	101,	1100,	101,	11
2017-01-04 14:11:15 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:15 AI_Player.update()		111,	1010,	1101,	1010,	11,	101,	1110
2017-01-04 14:11:15 AI_Player.update()		1110,	11,	1101,	110,	1011,	101,	1011
2017-01-04 14:11:15 AI_Player.update()		11,	1110,	1100,	1010,	11,	11,	1001
2017-01-04 14:11:15 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-04 14:11:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()	update
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:15 AI_Player.update()	update
2017-01-04 14:11:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:16 AI_Player.update()	Search took575ms
2017-01-04 14:11:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:16 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 14:11:16 AI_Player.update()		101,	1010,	1010,	101,	1100,	101,	11
2017-01-04 14:11:16 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:16 AI_Player.update()		111,	11,	1101,	1010,	11,	101,	1110
2017-01-04 14:11:16 AI_Player.update()		1110,	1110,	1101,	110,	1011,	101,	1011
2017-01-04 14:11:16 AI_Player.update()		11,	1001,	1100,	1010,	11,	11,	1001
2017-01-04 14:11:16 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 14:11:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:16 AI_Player.update()	update
2017-01-04 14:11:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:11:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:16 AI_Player.update()	update
2017-01-04 14:11:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:17 AI_Player.update()	Search took716ms
2017-01-04 14:11:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:17 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 14:11:17 AI_Player.update()		101,	1010,	1010,	101,	1100,	101,	11
2017-01-04 14:11:17 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:17 AI_Player.update()		1110,	111,	11,	1101,	1010,	11,	101
2017-01-04 14:11:17 AI_Player.update()		1110,	1110,	1101,	110,	1011,	101,	1011
2017-01-04 14:11:17 AI_Player.update()		11,	1001,	1100,	1010,	11,	11,	1001
2017-01-04 14:11:17 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 14:11:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:11:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:17 AI_Player.update()	update
2017-01-04 14:11:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:17 AI_Player.update()	update
2017-01-04 14:11:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:17 AI_Player.update()	Search took752ms
2017-01-04 14:11:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:17 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 14:11:17 AI_Player.update()		101,	1010,	1010,	101,	1100,	101,	11
2017-01-04 14:11:17 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:17 AI_Player.update()		101,	1110,	111,	11,	1101,	1010,	11
2017-01-04 14:11:17 AI_Player.update()		1110,	1110,	1101,	110,	1011,	101,	1011
2017-01-04 14:11:17 AI_Player.update()		11,	1001,	1100,	1010,	11,	11,	1001
2017-01-04 14:11:17 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 14:11:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:17 AI_Player.update()	update
2017-01-04 14:11:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:11:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:17 AI_Player.update()	update
2017-01-04 14:11:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:18 AI_Player.update()	Search took485ms
2017-01-04 14:11:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:18 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 14:11:18 AI_Player.update()		101,	1010,	1010,	101,	1100,	101,	11
2017-01-04 14:11:18 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:18 AI_Player.update()		11,	101,	1110,	111,	11,	1101,	1010
2017-01-04 14:11:18 AI_Player.update()		1110,	1110,	1101,	110,	1011,	101,	1011
2017-01-04 14:11:18 AI_Player.update()		11,	1001,	1100,	1010,	11,	11,	1001
2017-01-04 14:11:18 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 14:11:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:18 AI_Player.update()	update
2017-01-04 14:11:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:18 AI_Player.update()	update
2017-01-04 14:11:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:19 AI_Player.update()	Search took1255ms
2017-01-04 14:11:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:19 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 14:11:19 AI_Player.update()		101,	1010,	1010,	101,	1100,	101,	11
2017-01-04 14:11:19 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:19 AI_Player.update()		101,	1110,	111,	11,	1101,	1010,	11
2017-01-04 14:11:19 AI_Player.update()		1110,	1110,	1101,	110,	1011,	101,	1011
2017-01-04 14:11:19 AI_Player.update()		11,	1001,	1100,	1010,	11,	11,	1001
2017-01-04 14:11:19 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 14:11:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:19 AI_Player.update()	update
2017-01-04 14:11:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:11:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:19 AI_Player.update()	update
2017-01-04 14:11:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:20 AI_Player.update()	Search took427ms
2017-01-04 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()		110,	101,	111,	1100,	111,	1100,	11
2017-01-04 14:11:20 AI_Player.update()		101,	1010,	1010,	101,	1100,	101,	11
2017-01-04 14:11:20 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:20 AI_Player.update()		101,	1110,	111,	101,	1101,	1010,	11
2017-01-04 14:11:20 AI_Player.update()		1110,	1110,	1101,	11,	1011,	101,	1011
2017-01-04 14:11:20 AI_Player.update()		11,	1001,	1100,	110,	11,	11,	1001
2017-01-04 14:11:20 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	101,	1001
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:11:20 AI_Player.update()	Player a has won!
2017-01-04 14:11:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:20 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:11:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:20 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:20 AI_Player.update()	Search took20ms
2017-01-04 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()		110,	1110,	111,	11,	111,	1010,	11
2017-01-04 14:11:20 AI_Player.update()		110,	101,	1001,	1001,	101,	11,	1100
2017-01-04 14:11:20 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:11:20 AI_Player.update()		1110,	11,	11,	111,	101,	1001,	110
2017-01-04 14:11:20 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1010,	1011
2017-01-04 14:11:20 AI_Player.update()		1011,	111,	1110,	1100,	1110,	110,	1010
2017-01-04 14:11:20 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	101,	1001
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:20 AI_Player.update()	Search took17ms
2017-01-04 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()		110,	101,	111,	11,	111,	1010,	11
2017-01-04 14:11:20 AI_Player.update()		110,	1010,	1001,	1001,	101,	11,	1100
2017-01-04 14:11:20 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-04 14:11:20 AI_Player.update()		1110,	1101,	11,	111,	101,	1001,	110
2017-01-04 14:11:20 AI_Player.update()		1110,	111,	1101,	110,	1011,	1010,	1011
2017-01-04 14:11:20 AI_Player.update()		1011,	1010,	1110,	1100,	1110,	110,	1010
2017-01-04 14:11:20 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	101,	1001
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:20 AI_Player.update()	Search took148ms
2017-01-04 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 14:11:20 AI_Player.update()		110,	1010,	1001,	1001,	101,	11,	1100
2017-01-04 14:11:20 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 14:11:20 AI_Player.update()		1110,	1101,	11,	110,	101,	1001,	110
2017-01-04 14:11:20 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:11:20 AI_Player.update()		1011,	1010,	1110,	1100,	1110,	110,	1010
2017-01-04 14:11:20 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:20 AI_Player.update()	Search took50ms
2017-01-04 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 14:11:20 AI_Player.update()		110,	1010,	1001,	1001,	101,	11,	1100
2017-01-04 14:11:20 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 14:11:20 AI_Player.update()		110,	1110,	1101,	11,	110,	101,	1001
2017-01-04 14:11:20 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:11:20 AI_Player.update()		1011,	1010,	1110,	1100,	1110,	110,	1010
2017-01-04 14:11:20 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:20 AI_Player.update()	Search took287ms
2017-01-04 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()		110,	1110,	111,	1001,	111,	1010,	11
2017-01-04 14:11:20 AI_Player.update()		110,	101,	1001,	1001,	101,	11,	1100
2017-01-04 14:11:20 AI_Player.update()		1110,	1010,	1110,	111,	111,	101,	1011
2017-01-04 14:11:20 AI_Player.update()		110,	11,	1101,	11,	110,	101,	1001
2017-01-04 14:11:20 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:11:20 AI_Player.update()		1011,	111,	1110,	1100,	1110,	110,	1010
2017-01-04 14:11:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:20 AI_Player.update()	Search took21ms
2017-01-04 14:11:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 14:11:20 AI_Player.update()		110,	1010,	1001,	1001,	101,	11,	1100
2017-01-04 14:11:20 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 14:11:20 AI_Player.update()		110,	1110,	1101,	11,	110,	101,	1001
2017-01-04 14:11:20 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:11:20 AI_Player.update()		1011,	1010,	1110,	1100,	1110,	110,	1010
2017-01-04 14:11:20 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-04 14:11:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:20 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:20 AI_Player.update()	update
2017-01-04 14:11:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:21 AI_Player.update()	Search took524ms
2017-01-04 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 14:11:21 AI_Player.update()		110,	1010,	1001,	1001,	101,	11,	1100
2017-01-04 14:11:21 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 14:11:21 AI_Player.update()		1110,	1101,	11,	110,	101,	1001,	110
2017-01-04 14:11:21 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:11:21 AI_Player.update()		1011,	1010,	1110,	1100,	1110,	110,	1010
2017-01-04 14:11:21 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-04 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()	update
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()	update
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:21 AI_Player.update()	Search took56ms
2017-01-04 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 14:11:21 AI_Player.update()		110,	1010,	1001,	1001,	101,	11,	1100
2017-01-04 14:11:21 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 14:11:21 AI_Player.update()		110,	1110,	1101,	11,	110,	101,	1001
2017-01-04 14:11:21 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:11:21 AI_Player.update()		1011,	1010,	1110,	1100,	1110,	110,	1010
2017-01-04 14:11:21 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-04 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()	update
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()	update
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:21 AI_Player.update()	Search took398ms
2017-01-04 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 14:11:21 AI_Player.update()		110,	1010,	1001,	1001,	101,	11,	1100
2017-01-04 14:11:21 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 14:11:21 AI_Player.update()		1001,	110,	1110,	1101,	11,	110,	101
2017-01-04 14:11:21 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:11:21 AI_Player.update()		1011,	1010,	1110,	1100,	1110,	110,	1010
2017-01-04 14:11:21 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-04 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()	update
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()	update
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:21 AI_Player.update()	Search took164ms
2017-01-04 14:11:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 14:11:21 AI_Player.update()		1100,	110,	1010,	1001,	1001,	101,	11
2017-01-04 14:11:21 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 14:11:21 AI_Player.update()		1001,	110,	1110,	1101,	11,	110,	101
2017-01-04 14:11:21 AI_Player.update()		1110,	111,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:11:21 AI_Player.update()		1011,	1010,	1110,	1100,	1110,	110,	1010
2017-01-04 14:11:21 AI_Player.update()		1100,	1110,	1101,	11,	1101,	101,	1001
2017-01-04 14:11:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()	update
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:21 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:21 AI_Player.update()	update
2017-01-04 14:11:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:22 AI_Player.update()	Search took923ms
2017-01-04 14:11:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:22 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 14:11:22 AI_Player.update()		1100,	110,	1010,	1001,	1001,	1010,	11
2017-01-04 14:11:22 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 14:11:22 AI_Player.update()		1001,	110,	1110,	1101,	11,	101,	101
2017-01-04 14:11:22 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-04 14:11:22 AI_Player.update()		1011,	1010,	1110,	1100,	1110,	1010,	1010
2017-01-04 14:11:22 AI_Player.update()		1100,	1110,	1101,	11,	1101,	110,	1001
2017-01-04 14:11:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:22 AI_Player.update()	update
2017-01-04 14:11:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:11:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:22 AI_Player.update()	update
2017-01-04 14:11:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:23 AI_Player.update()	Search took783ms
2017-01-04 14:11:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:23 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 14:11:23 AI_Player.update()		1100,	110,	1010,	1001,	1001,	1010,	11
2017-01-04 14:11:23 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 14:11:23 AI_Player.update()		110,	1110,	1101,	11,	101,	101,	1001
2017-01-04 14:11:23 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-04 14:11:23 AI_Player.update()		1011,	1010,	1110,	1100,	1110,	1010,	1010
2017-01-04 14:11:23 AI_Player.update()		1100,	1110,	1101,	11,	1101,	110,	1001
2017-01-04 14:11:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:11:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:23 AI_Player.update()	update
2017-01-04 14:11:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:11:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:23 AI_Player.update()	update
2017-01-04 14:11:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:23 AI_Player.update()	Search took156ms
2017-01-04 14:11:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:23 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 14:11:23 AI_Player.update()		11,	1100,	110,	1010,	1001,	1001,	1010
2017-01-04 14:11:23 AI_Player.update()		1110,	11,	1110,	111,	111,	101,	1011
2017-01-04 14:11:23 AI_Player.update()		110,	1110,	1101,	11,	101,	101,	1001
2017-01-04 14:11:23 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-04 14:11:23 AI_Player.update()		1011,	1010,	1110,	1100,	1110,	1010,	1010
2017-01-04 14:11:23 AI_Player.update()		1100,	1110,	1101,	11,	1101,	110,	1001
2017-01-04 14:11:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:11:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:23 AI_Player.update()	update
2017-01-04 14:11:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:11:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:23 AI_Player.update()	update
2017-01-04 14:11:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:24 AI_Player.update()	Search took634ms
2017-01-04 14:11:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:24 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 14:11:24 AI_Player.update()		11,	1100,	110,	111,	1001,	1001,	1010
2017-01-04 14:11:24 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-04 14:11:24 AI_Player.update()		110,	1110,	1101,	1100,	101,	101,	1001
2017-01-04 14:11:24 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-04 14:11:24 AI_Player.update()		1011,	1010,	1110,	11,	1110,	1010,	1010
2017-01-04 14:11:24 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:11:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:24 AI_Player.update()	update
2017-01-04 14:11:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:24 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:24 AI_Player.update()	update
2017-01-04 14:11:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:25 AI_Player.update()	Search took834ms
2017-01-04 14:11:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:25 AI_Player.update()		110,	1110,	111,	1010,	111,	101,	11
2017-01-04 14:11:25 AI_Player.update()		11,	101,	110,	111,	1001,	1001,	1010
2017-01-04 14:11:25 AI_Player.update()		1110,	1100,	1110,	11,	111,	101,	1011
2017-01-04 14:11:25 AI_Player.update()		110,	11,	1101,	1100,	101,	101,	1001
2017-01-04 14:11:25 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	110,	1011
2017-01-04 14:11:25 AI_Player.update()		1011,	111,	1110,	11,	1110,	1010,	1010
2017-01-04 14:11:25 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:25 AI_Player.update()	update
2017-01-04 14:11:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:25 AI_Player.update()	update
2017-01-04 14:11:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:25 AI_Player.update()	Search took496ms
2017-01-04 14:11:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:25 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 14:11:25 AI_Player.update()		11,	1100,	110,	111,	1001,	1001,	1010
2017-01-04 14:11:25 AI_Player.update()		1110,	11,	1110,	11,	111,	101,	1011
2017-01-04 14:11:25 AI_Player.update()		110,	1110,	1101,	1100,	101,	101,	1001
2017-01-04 14:11:25 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-04 14:11:25 AI_Player.update()		1011,	1010,	1110,	11,	1110,	1010,	1010
2017-01-04 14:11:25 AI_Player.update()		1100,	1110,	1101,	1001,	1101,	110,	1001
2017-01-04 14:11:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:25 AI_Player.update()	update
2017-01-04 14:11:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:25 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:25 AI_Player.update()	update
2017-01-04 14:11:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:26 AI_Player.update()	Search took815ms
2017-01-04 14:11:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 14:11:26 AI_Player.update()		11,	1100,	110,	11,	1001,	1001,	1010
2017-01-04 14:11:26 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 14:11:26 AI_Player.update()		110,	1110,	1101,	1100,	101,	101,	1001
2017-01-04 14:11:26 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-04 14:11:26 AI_Player.update()		1011,	1010,	1110,	1001,	1110,	1010,	1010
2017-01-04 14:11:26 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	110,	1001
2017-01-04 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()	update
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:26 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:11:26 AI_Player.update()	Player a has won!
2017-01-04 14:11:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:26 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:11:26 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:26 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:11:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()	update
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:26 AI_Player.update()	Search took22ms
2017-01-04 14:11:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 14:11:26 AI_Player.update()		101,	1010,	11,	111,	111,	101,	110
2017-01-04 14:11:26 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-04 14:11:26 AI_Player.update()		110,	1010,	101,	110,	1010,	1110,	1011
2017-01-04 14:11:26 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:26 AI_Player.update()		1101,	101,	101,	101,	1010,	1110,	101
2017-01-04 14:11:26 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	1100,	1001
2017-01-04 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()	update
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()	update
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:26 AI_Player.update()	Search took50ms
2017-01-04 14:11:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 14:11:26 AI_Player.update()		101,	1010,	11,	1001,	111,	101,	110
2017-01-04 14:11:26 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-04 14:11:26 AI_Player.update()		110,	1010,	101,	1101,	1010,	1110,	1011
2017-01-04 14:11:26 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 14:11:26 AI_Player.update()		1101,	101,	101,	1101,	1010,	1110,	101
2017-01-04 14:11:26 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()	update
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()	update
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:26 AI_Player.update()	Search took147ms
2017-01-04 14:11:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()		110,	1110,	111,	111,	111,	101,	11
2017-01-04 14:11:26 AI_Player.update()		101,	101,	11,	1001,	111,	101,	110
2017-01-04 14:11:26 AI_Player.update()		1110,	1010,	1110,	110,	111,	1010,	1011
2017-01-04 14:11:26 AI_Player.update()		110,	11,	101,	1101,	1010,	1110,	1011
2017-01-04 14:11:26 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 14:11:26 AI_Player.update()		1101,	101,	101,	1101,	1010,	1110,	101
2017-01-04 14:11:26 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()	update
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()	update
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:26 AI_Player.update()	Search took26ms
2017-01-04 14:11:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 14:11:26 AI_Player.update()		101,	1010,	11,	1001,	111,	101,	110
2017-01-04 14:11:26 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-04 14:11:26 AI_Player.update()		110,	1010,	101,	1101,	1010,	1110,	1011
2017-01-04 14:11:26 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 14:11:26 AI_Player.update()		1101,	101,	101,	1101,	1010,	1110,	101
2017-01-04 14:11:26 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:11:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()	update
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:26 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:26 AI_Player.update()	update
2017-01-04 14:11:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:27 AI_Player.update()	Search took214ms
2017-01-04 14:11:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:27 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 14:11:27 AI_Player.update()		101,	1010,	11,	110,	111,	101,	110
2017-01-04 14:11:27 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-04 14:11:27 AI_Player.update()		110,	1010,	101,	101,	1010,	1110,	1011
2017-01-04 14:11:27 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:27 AI_Player.update()		1101,	101,	101,	1010,	1010,	1110,	101
2017-01-04 14:11:27 AI_Player.update()		1100,	1110,	1101,	111,	1101,	1100,	1001
2017-01-04 14:11:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:27 AI_Player.update()	update
2017-01-04 14:11:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:27 AI_Player.update()	update
2017-01-04 14:11:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:27 AI_Player.update()	Search took53ms
2017-01-04 14:11:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:27 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 14:11:27 AI_Player.update()		101,	1010,	11,	1001,	111,	101,	110
2017-01-04 14:11:27 AI_Player.update()		1110,	11,	1110,	110,	111,	1010,	1011
2017-01-04 14:11:27 AI_Player.update()		110,	1010,	101,	1101,	1010,	1110,	1011
2017-01-04 14:11:27 AI_Player.update()		1110,	101,	1101,	101,	1011,	1100,	1011
2017-01-04 14:11:27 AI_Player.update()		1101,	101,	101,	1101,	1010,	1110,	101
2017-01-04 14:11:27 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:11:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:27 AI_Player.update()	update
2017-01-04 14:11:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:27 AI_Player.update()	update
2017-01-04 14:11:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:27 AI_Player.update()	Search took829ms
2017-01-04 14:11:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:27 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 14:11:27 AI_Player.update()		101,	1010,	11,	110,	111,	101,	110
2017-01-04 14:11:27 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-04 14:11:27 AI_Player.update()		110,	1010,	101,	101,	1010,	1110,	1011
2017-01-04 14:11:27 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:27 AI_Player.update()		1101,	101,	101,	1010,	1010,	1110,	101
2017-01-04 14:11:27 AI_Player.update()		1100,	1110,	1101,	111,	1101,	1100,	1001
2017-01-04 14:11:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:27 AI_Player.update()	update
2017-01-04 14:11:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:27 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:27 AI_Player.update()	update
2017-01-04 14:11:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:28 AI_Player.update()	Search took164ms
2017-01-04 14:11:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:28 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 14:11:28 AI_Player.update()		1010,	11,	110,	111,	101,	110,	101
2017-01-04 14:11:28 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-04 14:11:28 AI_Player.update()		110,	1010,	101,	101,	1010,	1110,	1011
2017-01-04 14:11:28 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:28 AI_Player.update()		1101,	101,	101,	1010,	1010,	1110,	101
2017-01-04 14:11:28 AI_Player.update()		1100,	1110,	1101,	111,	1101,	1100,	1001
2017-01-04 14:11:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:28 AI_Player.update()	update
2017-01-04 14:11:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:28 AI_Player.update()	update
2017-01-04 14:11:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:29 AI_Player.update()	Search took943ms
2017-01-04 14:11:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()		110,	1110,	111,	1001,	111,	101,	11
2017-01-04 14:11:29 AI_Player.update()		1010,	101,	110,	111,	101,	110,	101
2017-01-04 14:11:29 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-04 14:11:29 AI_Player.update()		110,	11,	101,	101,	1010,	1110,	1011
2017-01-04 14:11:29 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:29 AI_Player.update()		1101,	101,	101,	1010,	1010,	1110,	101
2017-01-04 14:11:29 AI_Player.update()		1100,	101,	1101,	111,	1101,	1100,	1001
2017-01-04 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()	update
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()	update
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:29 AI_Player.update()	Search took85ms
2017-01-04 14:11:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()		110,	1110,	111,	1001,	111,	101,	11
2017-01-04 14:11:29 AI_Player.update()		1010,	101,	110,	111,	101,	110,	101
2017-01-04 14:11:29 AI_Player.update()		1110,	11,	1110,	1101,	111,	1010,	1011
2017-01-04 14:11:29 AI_Player.update()		1011,	110,	11,	101,	101,	1010,	1110
2017-01-04 14:11:29 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:29 AI_Player.update()		1101,	101,	101,	1010,	1010,	1110,	101
2017-01-04 14:11:29 AI_Player.update()		1100,	101,	1101,	111,	1101,	1100,	1001
2017-01-04 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()	update
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()	update
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:29 AI_Player.update()	Search took214ms
2017-01-04 14:11:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 14:11:29 AI_Player.update()		1010,	1110,	110,	111,	101,	110,	101
2017-01-04 14:11:29 AI_Player.update()		1110,	101,	1110,	1101,	111,	1010,	1011
2017-01-04 14:11:29 AI_Player.update()		1011,	11,	11,	101,	101,	1010,	1110
2017-01-04 14:11:29 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:29 AI_Player.update()		1101,	1010,	101,	1010,	1010,	1110,	101
2017-01-04 14:11:29 AI_Player.update()		1100,	101,	1101,	111,	1101,	1100,	1001
2017-01-04 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()	update
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()	update
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:29 AI_Player.update()	Search took41ms
2017-01-04 14:11:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 14:11:29 AI_Player.update()		1010,	1110,	110,	1001,	101,	110,	101
2017-01-04 14:11:29 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 14:11:29 AI_Player.update()		1011,	11,	11,	1101,	101,	1010,	1110
2017-01-04 14:11:29 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-04 14:11:29 AI_Player.update()		1101,	1010,	101,	1101,	1010,	1110,	101
2017-01-04 14:11:29 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:11:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()	update
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:29 AI_Player.update()	update
2017-01-04 14:11:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:30 AI_Player.update()	Search took607ms
2017-01-04 14:11:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:30 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 14:11:30 AI_Player.update()		1110,	110,	1001,	101,	110,	101,	1010
2017-01-04 14:11:30 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 14:11:30 AI_Player.update()		1011,	11,	11,	1101,	101,	1010,	1110
2017-01-04 14:11:30 AI_Player.update()		1110,	110,	1101,	101,	1011,	1100,	1011
2017-01-04 14:11:30 AI_Player.update()		1101,	1010,	101,	1101,	1010,	1110,	101
2017-01-04 14:11:30 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:30 AI_Player.update()	update
2017-01-04 14:11:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:11:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:30 AI_Player.update()	update
2017-01-04 14:11:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:30 AI_Player.update()	Search took200ms
2017-01-04 14:11:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:30 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 14:11:30 AI_Player.update()		1110,	110,	1001,	111,	110,	101,	1010
2017-01-04 14:11:30 AI_Player.update()		1110,	101,	1110,	1101,	111,	1010,	1011
2017-01-04 14:11:30 AI_Player.update()		1011,	11,	11,	101,	101,	1010,	1110
2017-01-04 14:11:30 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:30 AI_Player.update()		1101,	1010,	101,	1010,	1010,	1110,	101
2017-01-04 14:11:30 AI_Player.update()		1100,	101,	1101,	111,	1101,	1100,	1001
2017-01-04 14:11:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:30 AI_Player.update()	update
2017-01-04 14:11:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:30 AI_Player.update()	update
2017-01-04 14:11:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:31 AI_Player.update()	Search took971ms
2017-01-04 14:11:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:31 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 14:11:31 AI_Player.update()		1110,	110,	1001,	111,	110,	101,	1010
2017-01-04 14:11:31 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 14:11:31 AI_Player.update()		1011,	11,	11,	101,	101,	1010,	1110
2017-01-04 14:11:31 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1010,	1011
2017-01-04 14:11:31 AI_Player.update()		1101,	1010,	101,	1010,	1010,	1100,	101
2017-01-04 14:11:31 AI_Player.update()		1100,	101,	1101,	111,	1101,	1110,	1001
2017-01-04 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:31 AI_Player.update()	update
2017-01-04 14:11:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:31 AI_Player.update()	update
2017-01-04 14:11:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:31 AI_Player.update()	Search took460ms
2017-01-04 14:11:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:31 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 14:11:31 AI_Player.update()		1110,	110,	1001,	111,	110,	101,	1010
2017-01-04 14:11:31 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 14:11:31 AI_Player.update()		1011,	11,	11,	101,	101,	1010,	1110
2017-01-04 14:11:31 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1010,	1011
2017-01-04 14:11:31 AI_Player.update()		1010,	101,	1010,	1010,	1100,	101,	1101
2017-01-04 14:11:31 AI_Player.update()		1100,	101,	1101,	111,	1101,	1110,	1001
2017-01-04 14:11:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:31 AI_Player.update()	update
2017-01-04 14:11:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:31 AI_Player.update()	update
2017-01-04 14:11:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:32 AI_Player.update()	Search took828ms
2017-01-04 14:11:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:32 AI_Player.update()		110,	101,	111,	101,	111,	1100,	11
2017-01-04 14:11:32 AI_Player.update()		1110,	110,	1001,	111,	110,	101,	1010
2017-01-04 14:11:32 AI_Player.update()		1110,	101,	1110,	1101,	111,	101,	1011
2017-01-04 14:11:32 AI_Player.update()		1011,	11,	11,	101,	101,	1010,	1110
2017-01-04 14:11:32 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1010,	1011
2017-01-04 14:11:32 AI_Player.update()		1101,	1010,	101,	1010,	1010,	1100,	101
2017-01-04 14:11:32 AI_Player.update()		1100,	101,	1101,	111,	1101,	1110,	1001
2017-01-04 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:32 AI_Player.update()	update
2017-01-04 14:11:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:32 AI_Player.update()	update
2017-01-04 14:11:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:32 AI_Player.update()	Search took390ms
2017-01-04 14:11:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:32 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-04 14:11:32 AI_Player.update()		1110,	110,	1001,	1101,	110,	101,	1010
2017-01-04 14:11:32 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 14:11:32 AI_Player.update()		1011,	11,	11,	1101,	101,	1010,	1110
2017-01-04 14:11:32 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:11:32 AI_Player.update()		1101,	1010,	101,	111,	1010,	1100,	101
2017-01-04 14:11:32 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-04 14:11:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:32 AI_Player.update()	update
2017-01-04 14:11:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:32 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:32 AI_Player.update()	update
2017-01-04 14:11:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:33 AI_Player.update()	Search took497ms
2017-01-04 14:11:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:33 AI_Player.update()		110,	101,	111,	111,	111,	1100,	11
2017-01-04 14:11:33 AI_Player.update()		1010,	1110,	110,	1001,	1101,	110,	101
2017-01-04 14:11:33 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 14:11:33 AI_Player.update()		1011,	11,	11,	1101,	101,	1010,	1110
2017-01-04 14:11:33 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:11:33 AI_Player.update()		1101,	1010,	101,	111,	1010,	1100,	101
2017-01-04 14:11:33 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-04 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:33 AI_Player.update()	update
2017-01-04 14:11:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:33 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:11:33 AI_Player.update()	Player a has won!
2017-01-04 14:11:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:33 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:11:33 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:33 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:11:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:33 AI_Player.update()	update
2017-01-04 14:11:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:33 AI_Player.update()	Search took240ms
2017-01-04 14:11:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:33 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 14:11:33 AI_Player.update()		1110,	111,	110,	11,	1101,	11,	110
2017-01-04 14:11:33 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-04 14:11:33 AI_Player.update()		110,	1001,	1010,	1010,	110,	1110,	1100
2017-01-04 14:11:33 AI_Player.update()		1110,	101,	1101,	1110,	1011,	11,	1011
2017-01-04 14:11:33 AI_Player.update()		111,	1100,	111,	101,	111,	1001,	101
2017-01-04 14:11:33 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	101,	1001
2017-01-04 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:33 AI_Player.update()	update
2017-01-04 14:11:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:33 AI_Player.update()	update
2017-01-04 14:11:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:33 AI_Player.update()	Search took46ms
2017-01-04 14:11:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:33 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 14:11:33 AI_Player.update()		111,	110,	11,	1101,	11,	110,	1110
2017-01-04 14:11:33 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-04 14:11:33 AI_Player.update()		110,	1001,	1010,	1010,	110,	1110,	1100
2017-01-04 14:11:33 AI_Player.update()		1110,	101,	1101,	1110,	1011,	11,	1011
2017-01-04 14:11:33 AI_Player.update()		111,	1100,	111,	101,	111,	1001,	101
2017-01-04 14:11:33 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	101,	1001
2017-01-04 14:11:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:33 AI_Player.update()	update
2017-01-04 14:11:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:33 AI_Player.update()	update
2017-01-04 14:11:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:34 AI_Player.update()	Search took385ms
2017-01-04 14:11:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 14:11:34 AI_Player.update()		111,	110,	11,	1101,	11,	110,	1110
2017-01-04 14:11:34 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-04 14:11:34 AI_Player.update()		1001,	1010,	1010,	110,	1110,	1100,	110
2017-01-04 14:11:34 AI_Player.update()		1110,	101,	1101,	1110,	1011,	11,	1011
2017-01-04 14:11:34 AI_Player.update()		111,	1100,	111,	101,	111,	1001,	101
2017-01-04 14:11:34 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	101,	1001
2017-01-04 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()	update
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()	update
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:34 AI_Player.update()	Search took156ms
2017-01-04 14:11:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()		110,	1010,	111,	110,	111,	110,	11
2017-01-04 14:11:34 AI_Player.update()		1110,	111,	110,	11,	1101,	11,	110
2017-01-04 14:11:34 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-04 14:11:34 AI_Player.update()		1001,	1010,	1010,	110,	1110,	1100,	110
2017-01-04 14:11:34 AI_Player.update()		1110,	101,	1101,	1110,	1011,	11,	1011
2017-01-04 14:11:34 AI_Player.update()		111,	1100,	111,	101,	111,	1001,	101
2017-01-04 14:11:34 AI_Player.update()		1100,	1001,	1101,	1101,	1101,	101,	1001
2017-01-04 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()	update
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()	update
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:34 AI_Player.update()	Search took543ms
2017-01-04 14:11:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 14:11:34 AI_Player.update()		1110,	1010,	110,	11,	1101,	11,	110
2017-01-04 14:11:34 AI_Player.update()		1110,	111,	1110,	101,	111,	1110,	1011
2017-01-04 14:11:34 AI_Player.update()		1001,	1010,	1010,	110,	1110,	1100,	110
2017-01-04 14:11:34 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	11,	1011
2017-01-04 14:11:34 AI_Player.update()		111,	101,	111,	101,	111,	1001,	101
2017-01-04 14:11:34 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-04 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()	update
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()	update
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:34 AI_Player.update()	Search took110ms
2017-01-04 14:11:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 14:11:34 AI_Player.update()		1010,	110,	11,	1101,	11,	110,	1110
2017-01-04 14:11:34 AI_Player.update()		1110,	111,	1110,	101,	111,	1110,	1011
2017-01-04 14:11:34 AI_Player.update()		1001,	1010,	1010,	110,	1110,	1100,	110
2017-01-04 14:11:34 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	11,	1011
2017-01-04 14:11:34 AI_Player.update()		111,	101,	111,	101,	111,	1001,	101
2017-01-04 14:11:34 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-04 14:11:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()	update
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:34 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:34 AI_Player.update()	update
2017-01-04 14:11:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:35 AI_Player.update()	Search took459ms
2017-01-04 14:11:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:35 AI_Player.update()		110,	1001,	111,	110,	111,	110,	11
2017-01-04 14:11:35 AI_Player.update()		1110,	1010,	110,	11,	1101,	11,	110
2017-01-04 14:11:35 AI_Player.update()		1110,	111,	1110,	101,	111,	1110,	1011
2017-01-04 14:11:35 AI_Player.update()		1001,	1010,	1010,	110,	1110,	1100,	110
2017-01-04 14:11:35 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	11,	1011
2017-01-04 14:11:35 AI_Player.update()		111,	101,	111,	101,	111,	1001,	101
2017-01-04 14:11:35 AI_Player.update()		1100,	1100,	1101,	1101,	1101,	101,	1001
2017-01-04 14:11:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:35 AI_Player.update()	update
2017-01-04 14:11:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:35 AI_Player.update()	update
2017-01-04 14:11:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:35 AI_Player.update()	Search took95ms
2017-01-04 14:11:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:35 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-04 14:11:35 AI_Player.update()		1110,	1001,	110,	11,	1101,	11,	110
2017-01-04 14:11:35 AI_Player.update()		1110,	1010,	1110,	101,	111,	1110,	1011
2017-01-04 14:11:35 AI_Player.update()		1001,	111,	1010,	110,	1110,	1100,	110
2017-01-04 14:11:35 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	11,	1011
2017-01-04 14:11:35 AI_Player.update()		111,	1010,	111,	101,	111,	1001,	101
2017-01-04 14:11:35 AI_Player.update()		1100,	101,	1101,	1101,	1101,	101,	1001
2017-01-04 14:11:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:35 AI_Player.update()	update
2017-01-04 14:11:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:35 AI_Player.update()	update
2017-01-04 14:11:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:35 AI_Player.update()	Search took404ms
2017-01-04 14:11:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:35 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 14:11:35 AI_Player.update()		1110,	1001,	110,	11,	1101,	110,	110
2017-01-04 14:11:35 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 14:11:35 AI_Player.update()		1001,	111,	1010,	110,	1110,	1110,	110
2017-01-04 14:11:35 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:11:35 AI_Player.update()		111,	1010,	111,	101,	111,	11,	101
2017-01-04 14:11:35 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-04 14:11:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:35 AI_Player.update()	update
2017-01-04 14:11:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:11:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:35 AI_Player.update()	update
2017-01-04 14:11:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:36 AI_Player.update()	Search took101ms
2017-01-04 14:11:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 14:11:36 AI_Player.update()		1110,	1001,	110,	11,	1101,	110,	110
2017-01-04 14:11:36 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 14:11:36 AI_Player.update()		110,	1001,	111,	1010,	110,	1110,	1110
2017-01-04 14:11:36 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:11:36 AI_Player.update()		111,	1010,	111,	101,	111,	11,	101
2017-01-04 14:11:36 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1001,	1001
2017-01-04 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()	update
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()	update
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:36 AI_Player.update()	Search took339ms
2017-01-04 14:11:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-04 14:11:36 AI_Player.update()		1110,	1001,	110,	101,	1101,	110,	110
2017-01-04 14:11:36 AI_Player.update()		1110,	1010,	1110,	1010,	111,	11,	1011
2017-01-04 14:11:36 AI_Player.update()		110,	1001,	111,	1110,	110,	1110,	1110
2017-01-04 14:11:36 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 14:11:36 AI_Player.update()		111,	1010,	111,	1101,	111,	11,	101
2017-01-04 14:11:36 AI_Player.update()		1100,	101,	1101,	110,	1101,	1001,	1001
2017-01-04 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()	update
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()	update
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:36 AI_Player.update()	Search took197ms
2017-01-04 14:11:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-04 14:11:36 AI_Player.update()		1110,	1010,	110,	101,	1101,	110,	110
2017-01-04 14:11:36 AI_Player.update()		1110,	1001,	1110,	1010,	111,	11,	1011
2017-01-04 14:11:36 AI_Player.update()		110,	1010,	111,	1110,	110,	1110,	1110
2017-01-04 14:11:36 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 14:11:36 AI_Player.update()		111,	101,	111,	1101,	111,	11,	101
2017-01-04 14:11:36 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1001,	1001
2017-01-04 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()	update
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()	update
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:36 AI_Player.update()	Search took279ms
2017-01-04 14:11:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 14:11:36 AI_Player.update()		1110,	1010,	110,	1010,	1101,	110,	110
2017-01-04 14:11:36 AI_Player.update()		1110,	1001,	1110,	1110,	111,	11,	1011
2017-01-04 14:11:36 AI_Player.update()		110,	1010,	111,	101,	110,	1110,	1110
2017-01-04 14:11:36 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:36 AI_Player.update()		111,	101,	111,	110,	111,	11,	101
2017-01-04 14:11:36 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 14:11:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()	update
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:36 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:36 AI_Player.update()	update
2017-01-04 14:11:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:37 AI_Player.update()	Search took181ms
2017-01-04 14:11:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 14:11:37 AI_Player.update()		1110,	1010,	110,	1010,	1101,	110,	110
2017-01-04 14:11:37 AI_Player.update()		1110,	1001,	1110,	1110,	111,	11,	1011
2017-01-04 14:11:37 AI_Player.update()		1110,	110,	1010,	111,	101,	110,	1110
2017-01-04 14:11:37 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:37 AI_Player.update()		111,	101,	111,	110,	111,	11,	101
2017-01-04 14:11:37 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()	update
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()	update
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:37 AI_Player.update()	Search took206ms
2017-01-04 14:11:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 14:11:37 AI_Player.update()		1110,	1010,	110,	1110,	1101,	110,	110
2017-01-04 14:11:37 AI_Player.update()		1110,	1001,	1110,	111,	111,	11,	1011
2017-01-04 14:11:37 AI_Player.update()		1110,	110,	1010,	1101,	101,	110,	1110
2017-01-04 14:11:37 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:37 AI_Player.update()		111,	101,	111,	11,	111,	11,	101
2017-01-04 14:11:37 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()	update
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()	update
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:37 AI_Player.update()	Search took238ms
2017-01-04 14:11:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 14:11:37 AI_Player.update()		1110,	1001,	110,	1110,	1101,	110,	110
2017-01-04 14:11:37 AI_Player.update()		1110,	1010,	1110,	111,	111,	11,	1011
2017-01-04 14:11:37 AI_Player.update()		1110,	1001,	1010,	1101,	101,	110,	1110
2017-01-04 14:11:37 AI_Player.update()		1110,	110,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:37 AI_Player.update()		111,	1010,	111,	11,	111,	11,	101
2017-01-04 14:11:37 AI_Player.update()		1100,	101,	1101,	101,	1101,	1001,	1001
2017-01-04 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()	update
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()	update
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:37 AI_Player.update()	Search took187ms
2017-01-04 14:11:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 14:11:37 AI_Player.update()		1110,	1100,	110,	1110,	1101,	110,	110
2017-01-04 14:11:37 AI_Player.update()		1110,	1001,	1110,	111,	111,	11,	1011
2017-01-04 14:11:37 AI_Player.update()		1110,	1010,	1010,	1101,	101,	110,	1110
2017-01-04 14:11:37 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:37 AI_Player.update()		111,	110,	111,	11,	111,	11,	101
2017-01-04 14:11:37 AI_Player.update()		1100,	1010,	1101,	101,	1101,	1001,	1001
2017-01-04 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()	update
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()	update
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:37 AI_Player.update()	Search took225ms
2017-01-04 14:11:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 14:11:37 AI_Player.update()		1110,	1100,	110,	1010,	1101,	110,	110
2017-01-04 14:11:37 AI_Player.update()		1110,	1001,	1110,	1110,	111,	11,	1011
2017-01-04 14:11:37 AI_Player.update()		1110,	1010,	1010,	111,	101,	110,	1110
2017-01-04 14:11:37 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:37 AI_Player.update()		111,	110,	111,	110,	111,	11,	101
2017-01-04 14:11:37 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 14:11:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()	update
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:37 AI_Player.update()	update
2017-01-04 14:11:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:38 AI_Player.update()	Search took332ms
2017-01-04 14:11:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:38 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 14:11:38 AI_Player.update()		110,	1110,	1100,	110,	1010,	1101,	110
2017-01-04 14:11:38 AI_Player.update()		1110,	1001,	1110,	1110,	111,	11,	1011
2017-01-04 14:11:38 AI_Player.update()		1110,	1010,	1010,	111,	101,	110,	1110
2017-01-04 14:11:38 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:11:38 AI_Player.update()		111,	110,	111,	110,	111,	11,	101
2017-01-04 14:11:38 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:38 AI_Player.update()	update
2017-01-04 14:11:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:38 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:11:38 AI_Player.update()	Player a has won!
2017-01-04 14:11:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:38 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:11:38 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:38 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:11:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:38 AI_Player.update()	update
2017-01-04 14:11:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:38 AI_Player.update()	Search took183ms
2017-01-04 14:11:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:38 AI_Player.update()		110,	1101,	111,	101,	111,	1001,	11
2017-01-04 14:11:38 AI_Player.update()		1100,	101,	1001,	1010,	11,	1100,	101
2017-01-04 14:11:38 AI_Player.update()		1110,	1100,	1110,	110,	111,	111,	1011
2017-01-04 14:11:38 AI_Player.update()		101,	1001,	1010,	1010,	110,	101,	11
2017-01-04 14:11:38 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-04 14:11:38 AI_Player.update()		1100,	1100,	1010,	101,	1101,	1001,	1001
2017-01-04 14:11:38 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1011,	1001
2017-01-04 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:38 AI_Player.update()	update
2017-01-04 14:11:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:38 AI_Player.update()	update
2017-01-04 14:11:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:38 AI_Player.update()	Search took17ms
2017-01-04 14:11:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:38 AI_Player.update()		110,	1101,	111,	101,	111,	1001,	11
2017-01-04 14:11:38 AI_Player.update()		101,	1001,	1010,	11,	1100,	101,	1100
2017-01-04 14:11:38 AI_Player.update()		1110,	1100,	1110,	110,	111,	111,	1011
2017-01-04 14:11:38 AI_Player.update()		101,	1001,	1010,	1010,	110,	101,	11
2017-01-04 14:11:38 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-04 14:11:38 AI_Player.update()		1100,	1100,	1010,	101,	1101,	1001,	1001
2017-01-04 14:11:38 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1011,	1001
2017-01-04 14:11:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:38 AI_Player.update()	update
2017-01-04 14:11:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:38 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:38 AI_Player.update()	update
2017-01-04 14:11:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:39 AI_Player.update()	Search took584ms
2017-01-04 14:11:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()		110,	1001,	111,	101,	111,	1001,	11
2017-01-04 14:11:39 AI_Player.update()		101,	1100,	1010,	11,	1100,	101,	1100
2017-01-04 14:11:39 AI_Player.update()		1110,	1001,	1110,	110,	111,	111,	1011
2017-01-04 14:11:39 AI_Player.update()		101,	101,	1010,	1010,	110,	101,	11
2017-01-04 14:11:39 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-04 14:11:39 AI_Player.update()		1100,	111,	1010,	101,	1101,	1001,	1001
2017-01-04 14:11:39 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1011,	1001
2017-01-04 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()	update
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()	update
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:39 AI_Player.update()	Search took76ms
2017-01-04 14:11:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 14:11:39 AI_Player.update()		101,	1100,	1010,	11,	1100,	111,	1100
2017-01-04 14:11:39 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 14:11:39 AI_Player.update()		101,	101,	1010,	1010,	110,	101,	11
2017-01-04 14:11:39 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	1001,	1011
2017-01-04 14:11:39 AI_Player.update()		1100,	111,	1010,	101,	1101,	1011,	1001
2017-01-04 14:11:39 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()	update
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()	update
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:39 AI_Player.update()	Search took289ms
2017-01-04 14:11:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 14:11:39 AI_Player.update()		101,	1100,	1010,	101,	1100,	111,	1100
2017-01-04 14:11:39 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-04 14:11:39 AI_Player.update()		101,	101,	1010,	110,	110,	101,	11
2017-01-04 14:11:39 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:11:39 AI_Player.update()		1100,	111,	1010,	1011,	1101,	1011,	1001
2017-01-04 14:11:39 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1001,	1001
2017-01-04 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()	update
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()	update
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:39 AI_Player.update()	Search took135ms
2017-01-04 14:11:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 14:11:39 AI_Player.update()		101,	1001,	1010,	101,	1100,	111,	1100
2017-01-04 14:11:39 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 14:11:39 AI_Player.update()		101,	1100,	1010,	110,	110,	101,	11
2017-01-04 14:11:39 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:11:39 AI_Player.update()		1100,	1101,	1010,	1011,	1101,	1011,	1001
2017-01-04 14:11:39 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 14:11:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()	update
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:39 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:39 AI_Player.update()	update
2017-01-04 14:11:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:40 AI_Player.update()	Search took416ms
2017-01-04 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:40 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 14:11:40 AI_Player.update()		101,	1001,	1010,	101,	1100,	111,	1100
2017-01-04 14:11:40 AI_Player.update()		1110,	101,	1110,	11,	111,	101,	1011
2017-01-04 14:11:40 AI_Player.update()		1100,	1010,	110,	110,	101,	11,	101
2017-01-04 14:11:40 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:11:40 AI_Player.update()		1100,	1101,	1010,	1011,	1101,	1011,	1001
2017-01-04 14:11:40 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:40 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:40 AI_Player.update()	update
2017-01-04 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:40 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:40 AI_Player.update()	update
2017-01-04 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:40 AI_Player.update()	Search took119ms
2017-01-04 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:40 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 14:11:40 AI_Player.update()		101,	1001,	1010,	11,	1100,	111,	1100
2017-01-04 14:11:40 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 14:11:40 AI_Player.update()		1100,	1010,	110,	1010,	101,	11,	101
2017-01-04 14:11:40 AI_Player.update()		1110,	111,	1101,	1011,	1011,	1001,	1011
2017-01-04 14:11:40 AI_Player.update()		1100,	1101,	1010,	101,	1101,	1011,	1001
2017-01-04 14:11:40 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:40 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:40 AI_Player.update()	update
2017-01-04 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:40 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:40 AI_Player.update()	update
2017-01-04 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:40 AI_Player.update()	Search took297ms
2017-01-04 14:11:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:40 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-04 14:11:40 AI_Player.update()		101,	1001,	1010,	110,	1100,	111,	1100
2017-01-04 14:11:40 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 14:11:40 AI_Player.update()		1100,	1010,	110,	1011,	101,	11,	101
2017-01-04 14:11:40 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-04 14:11:40 AI_Player.update()		1100,	1101,	1010,	1010,	1101,	1011,	1001
2017-01-04 14:11:40 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 14:11:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:40 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:40 AI_Player.update()	update
2017-01-04 14:11:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:40 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:40 AI_Player.update()	update
2017-01-04 14:11:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:41 AI_Player.update()	Search took630ms
2017-01-04 14:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:41 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-04 14:11:41 AI_Player.update()		101,	1001,	1010,	110,	1100,	111,	1100
2017-01-04 14:11:41 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 14:11:41 AI_Player.update()		1100,	1010,	110,	1011,	101,	11,	101
2017-01-04 14:11:41 AI_Player.update()		1110,	111,	1101,	101,	1011,	1001,	1011
2017-01-04 14:11:41 AI_Player.update()		1101,	1010,	1010,	1101,	1011,	1001,	1100
2017-01-04 14:11:41 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1001,	1001
2017-01-04 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:41 AI_Player.update()	update
2017-01-04 14:11:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:41 AI_Player.update()	update
2017-01-04 14:11:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:41 AI_Player.update()	Search took401ms
2017-01-04 14:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:41 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 14:11:41 AI_Player.update()		101,	1001,	1010,	1010,	1100,	111,	1100
2017-01-04 14:11:41 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 14:11:41 AI_Player.update()		1100,	1010,	110,	101,	101,	11,	101
2017-01-04 14:11:41 AI_Player.update()		1110,	111,	1101,	1101,	1011,	1001,	1011
2017-01-04 14:11:41 AI_Player.update()		1101,	1010,	1010,	101,	1011,	1001,	1100
2017-01-04 14:11:41 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-04 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:41 AI_Player.update()	update
2017-01-04 14:11:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:41 AI_Player.update()	update
2017-01-04 14:11:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:41 AI_Player.update()	Search took167ms
2017-01-04 14:11:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:41 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 14:11:41 AI_Player.update()		101,	1001,	1010,	1010,	1100,	111,	1100
2017-01-04 14:11:41 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 14:11:41 AI_Player.update()		101,	1100,	1010,	110,	101,	101,	11
2017-01-04 14:11:41 AI_Player.update()		1110,	111,	1101,	1101,	1011,	1001,	1011
2017-01-04 14:11:41 AI_Player.update()		1101,	1010,	1010,	101,	1011,	1001,	1100
2017-01-04 14:11:41 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-04 14:11:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:41 AI_Player.update()	update
2017-01-04 14:11:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:41 AI_Player.update()	update
2017-01-04 14:11:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:42 AI_Player.update()	Search took1061ms
2017-01-04 14:11:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:42 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 14:11:42 AI_Player.update()		101,	1001,	1010,	1010,	1100,	111,	1100
2017-01-04 14:11:42 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 14:11:42 AI_Player.update()		11,	101,	1100,	1010,	110,	101,	101
2017-01-04 14:11:42 AI_Player.update()		1110,	111,	1101,	1101,	1011,	1001,	1011
2017-01-04 14:11:42 AI_Player.update()		1101,	1010,	1010,	101,	1011,	1001,	1100
2017-01-04 14:11:42 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-04 14:11:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:42 AI_Player.update()	update
2017-01-04 14:11:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:42 AI_Player.update()	update
2017-01-04 14:11:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:43 AI_Player.update()	Search took1038ms
2017-01-04 14:11:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:43 AI_Player.update()		110,	1100,	111,	110,	111,	101,	11
2017-01-04 14:11:43 AI_Player.update()		1001,	1010,	1010,	1100,	111,	1100,	101
2017-01-04 14:11:43 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 14:11:43 AI_Player.update()		11,	101,	1100,	1010,	110,	101,	101
2017-01-04 14:11:43 AI_Player.update()		1110,	111,	1101,	1101,	1011,	1001,	1011
2017-01-04 14:11:43 AI_Player.update()		1101,	1010,	1010,	101,	1011,	1001,	1100
2017-01-04 14:11:43 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-04 14:11:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:43 AI_Player.update()	update
2017-01-04 14:11:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:11:43 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:43 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:43 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:43 AI_Player.update()	update
2017-01-04 14:11:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:44 AI_Player.update()	Search took273ms
2017-01-04 14:11:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 14:11:44 AI_Player.update()		1001,	101,	1010,	1100,	111,	1100,	101
2017-01-04 14:11:44 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 14:11:44 AI_Player.update()		11,	111,	1100,	1010,	110,	101,	101
2017-01-04 14:11:44 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1001,	1011
2017-01-04 14:11:44 AI_Player.update()		1101,	1001,	1010,	101,	1011,	1001,	1100
2017-01-04 14:11:44 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()	update
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()	update
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:44 AI_Player.update()	Search took544ms
2017-01-04 14:11:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 14:11:44 AI_Player.update()		1001,	101,	1010,	1100,	111,	1100,	101
2017-01-04 14:11:44 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 14:11:44 AI_Player.update()		11,	111,	1100,	1010,	110,	101,	101
2017-01-04 14:11:44 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1001,	1011
2017-01-04 14:11:44 AI_Player.update()		1100,	1101,	1001,	1010,	101,	1011,	1001
2017-01-04 14:11:44 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()	update
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()	update
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:44 AI_Player.update()	Search took191ms
2017-01-04 14:11:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 14:11:44 AI_Player.update()		1001,	101,	1010,	110,	111,	1100,	101
2017-01-04 14:11:44 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 14:11:44 AI_Player.update()		11,	111,	1100,	1011,	110,	101,	101
2017-01-04 14:11:44 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:11:44 AI_Player.update()		1100,	1101,	1001,	1101,	101,	1011,	1001
2017-01-04 14:11:44 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()	update
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()	update
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:44 AI_Player.update()	Search took170ms
2017-01-04 14:11:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 14:11:44 AI_Player.update()		1001,	101,	1010,	110,	111,	1100,	101
2017-01-04 14:11:44 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 14:11:44 AI_Player.update()		101,	11,	111,	1100,	1011,	110,	101
2017-01-04 14:11:44 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:11:44 AI_Player.update()		1100,	1101,	1001,	1101,	101,	1011,	1001
2017-01-04 14:11:44 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:11:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()	update
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:44 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:44 AI_Player.update()	update
2017-01-04 14:11:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:45 AI_Player.update()	Search took301ms
2017-01-04 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 14:11:45 AI_Player.update()		101,	1001,	101,	1010,	110,	111,	1100
2017-01-04 14:11:45 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 14:11:45 AI_Player.update()		101,	11,	111,	1100,	1011,	110,	101
2017-01-04 14:11:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:11:45 AI_Player.update()		1100,	1101,	1001,	1101,	101,	1011,	1001
2017-01-04 14:11:45 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()	update
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()	update
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:45 AI_Player.update()	Search took108ms
2017-01-04 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()		110,	1001,	111,	11,	111,	101,	11
2017-01-04 14:11:45 AI_Player.update()		101,	101,	101,	1010,	110,	111,	1100
2017-01-04 14:11:45 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 14:11:45 AI_Player.update()		101,	1010,	111,	1100,	1011,	110,	101
2017-01-04 14:11:45 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:11:45 AI_Player.update()		1100,	1100,	1001,	1101,	101,	1011,	1001
2017-01-04 14:11:45 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()	update
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()	update
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:45 AI_Player.update()	Search took224ms
2017-01-04 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 14:11:45 AI_Player.update()		101,	11,	101,	1010,	110,	111,	1100
2017-01-04 14:11:45 AI_Player.update()		1110,	1010,	1110,	1100,	111,	101,	1011
2017-01-04 14:11:45 AI_Player.update()		101,	1101,	111,	1100,	1011,	110,	101
2017-01-04 14:11:45 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:11:45 AI_Player.update()		1100,	1010,	1001,	1101,	101,	1011,	1001
2017-01-04 14:11:45 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()	update
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:45 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:11:45 AI_Player.update()	Player a has won!
2017-01-04 14:11:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:45 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:11:45 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:45 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()	update
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:45 AI_Player.update()	Search took284ms
2017-01-04 14:11:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 14:11:45 AI_Player.update()		1011,	11,	1011,	1101,	1100,	1010,	11
2017-01-04 14:11:45 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 14:11:45 AI_Player.update()		1010,	1011,	101,	101,	1010,	101,	1100
2017-01-04 14:11:45 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 14:11:45 AI_Player.update()		101,	1110,	11,	1001,	1010,	1100,	110
2017-01-04 14:11:45 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:11:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()	update
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:45 AI_Player.update()	update
2017-01-04 14:11:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:46 AI_Player.update()	Search took182ms
2017-01-04 14:11:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:46 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 14:11:46 AI_Player.update()		1011,	11,	1011,	1101,	1100,	1101,	11
2017-01-04 14:11:46 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:46 AI_Player.update()		1010,	1011,	101,	101,	1010,	1100,	1100
2017-01-04 14:11:46 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 14:11:46 AI_Player.update()		101,	1110,	11,	1001,	1010,	1100,	110
2017-01-04 14:11:46 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:11:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:46 AI_Player.update()	update
2017-01-04 14:11:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:46 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:46 AI_Player.update()	update
2017-01-04 14:11:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:47 AI_Player.update()	Search took1134ms
2017-01-04 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:47 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 14:11:47 AI_Player.update()		1011,	11,	1011,	1101,	1100,	1010,	11
2017-01-04 14:11:47 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 14:11:47 AI_Player.update()		1010,	1011,	101,	101,	1010,	101,	1100
2017-01-04 14:11:47 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 14:11:47 AI_Player.update()		101,	1110,	11,	1001,	1010,	1100,	110
2017-01-04 14:11:47 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:47 AI_Player.update()	update
2017-01-04 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:47 AI_Player.update()	update
2017-01-04 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:47 AI_Player.update()	Search took177ms
2017-01-04 14:11:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:47 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 14:11:47 AI_Player.update()		1011,	11,	1011,	1101,	1100,	1101,	11
2017-01-04 14:11:47 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:47 AI_Player.update()		1010,	1011,	101,	101,	1010,	1100,	1100
2017-01-04 14:11:47 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 14:11:47 AI_Player.update()		101,	1110,	11,	1001,	1010,	1100,	110
2017-01-04 14:11:47 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:11:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:47 AI_Player.update()	update
2017-01-04 14:11:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:47 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:47 AI_Player.update()	update
2017-01-04 14:11:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:48 AI_Player.update()	Search took1194ms
2017-01-04 14:11:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:48 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 14:11:48 AI_Player.update()		1011,	11,	1011,	1101,	1100,	1010,	11
2017-01-04 14:11:48 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 14:11:48 AI_Player.update()		1010,	1011,	101,	101,	1010,	101,	1100
2017-01-04 14:11:48 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 14:11:48 AI_Player.update()		101,	1110,	11,	1001,	1010,	1100,	110
2017-01-04 14:11:48 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:48 AI_Player.update()	update
2017-01-04 14:11:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:11:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:48 AI_Player.update()	update
2017-01-04 14:11:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:48 AI_Player.update()	Search took179ms
2017-01-04 14:11:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:48 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 14:11:48 AI_Player.update()		1011,	11,	1011,	1101,	1100,	1101,	11
2017-01-04 14:11:48 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:48 AI_Player.update()		1010,	1011,	101,	101,	1010,	1100,	1100
2017-01-04 14:11:48 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 14:11:48 AI_Player.update()		101,	1110,	11,	1001,	1010,	1100,	110
2017-01-04 14:11:48 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:11:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:48 AI_Player.update()	update
2017-01-04 14:11:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:48 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:11:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:48 AI_Player.update()	update
2017-01-04 14:11:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:49 AI_Player.update()	Search took1140ms
2017-01-04 14:11:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:49 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 14:11:49 AI_Player.update()		1011,	11,	1011,	1101,	1100,	1010,	11
2017-01-04 14:11:49 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 14:11:49 AI_Player.update()		1010,	1011,	101,	101,	1010,	101,	1100
2017-01-04 14:11:49 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 14:11:49 AI_Player.update()		101,	1110,	11,	1001,	1010,	1100,	110
2017-01-04 14:11:49 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:11:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:11:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:49 AI_Player.update()	update
2017-01-04 14:11:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:11:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:49 AI_Player.update()	update
2017-01-04 14:11:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:50 AI_Player.update()	Search took180ms
2017-01-04 14:11:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:50 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 14:11:50 AI_Player.update()		1011,	11,	1011,	1101,	1100,	1101,	11
2017-01-04 14:11:50 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:50 AI_Player.update()		1010,	1011,	101,	101,	1010,	1100,	1100
2017-01-04 14:11:50 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 14:11:50 AI_Player.update()		101,	1110,	11,	1001,	1010,	1100,	110
2017-01-04 14:11:50 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:11:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:50 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:50 AI_Player.update()	update
2017-01-04 14:11:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:50 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:11:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:50 AI_Player.update()	update
2017-01-04 14:11:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:51 AI_Player.update()	Search took1182ms
2017-01-04 14:11:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:51 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 14:11:51 AI_Player.update()		1011,	11,	1011,	1101,	1100,	1010,	11
2017-01-04 14:11:51 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 14:11:51 AI_Player.update()		1010,	1011,	101,	101,	1010,	101,	1100
2017-01-04 14:11:51 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 14:11:51 AI_Player.update()		101,	1110,	11,	1001,	1010,	1100,	110
2017-01-04 14:11:51 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:51 AI_Player.update()	update
2017-01-04 14:11:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-04 14:11:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:51 AI_Player.update()	update
2017-01-04 14:11:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:51 AI_Player.update()	Search took178ms
2017-01-04 14:11:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:51 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 14:11:51 AI_Player.update()		1011,	11,	1011,	1101,	1100,	1101,	11
2017-01-04 14:11:51 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:11:51 AI_Player.update()		1010,	1011,	101,	101,	1010,	1100,	1100
2017-01-04 14:11:51 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 14:11:51 AI_Player.update()		101,	1110,	11,	1001,	1010,	1100,	110
2017-01-04 14:11:51 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:11:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-04 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:51 AI_Player.update()	update
2017-01-04 14:11:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:51 GameBoard.setupTreasurePanel()	6 1
2017-01-04 14:11:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:51 AI_Player.update()	update
2017-01-04 14:11:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:52 AI_Player.update()	Search took1076ms
2017-01-04 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:52 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 14:11:52 AI_Player.update()		1011,	11,	1011,	1101,	1100,	1010,	11
2017-01-04 14:11:52 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 14:11:52 AI_Player.update()		1010,	1011,	101,	101,	1010,	101,	1100
2017-01-04 14:11:52 AI_Player.update()		1110,	101,	1101,	111,	1011,	1100,	1011
2017-01-04 14:11:52 AI_Player.update()		101,	1110,	11,	1001,	1010,	1100,	110
2017-01-04 14:11:52 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	6 1
2017-01-04 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:52 AI_Player.update()	update
2017-01-04 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:52 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:11:52 AI_Player.update()	Player a has won!
2017-01-04 14:11:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:52 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:11:52 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:52 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:52 AI_Player.update()	update
2017-01-04 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:52 AI_Player.update()	Search took187ms
2017-01-04 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:52 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-04 14:11:52 AI_Player.update()		1010,	1100,	1001,	11,	101,	110,	1110
2017-01-04 14:11:52 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-04 14:11:52 AI_Player.update()		1010,	1010,	1010,	1100,	111,	1101,	101
2017-01-04 14:11:52 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:52 AI_Player.update()		101,	1001,	1101,	101,	1010,	110,	1010
2017-01-04 14:11:52 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:52 AI_Player.update()	update
2017-01-04 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:52 AI_Player.update()	update
2017-01-04 14:11:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:52 AI_Player.update()	Search took163ms
2017-01-04 14:11:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:52 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-04 14:11:52 AI_Player.update()		1110,	1010,	1100,	1001,	11,	101,	110
2017-01-04 14:11:52 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-04 14:11:52 AI_Player.update()		1010,	1010,	1010,	1100,	111,	1101,	101
2017-01-04 14:11:52 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:52 AI_Player.update()		101,	1001,	1101,	101,	1010,	110,	1010
2017-01-04 14:11:52 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 14:11:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:52 AI_Player.update()	update
2017-01-04 14:11:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:52 AI_Player.update()	update
2017-01-04 14:11:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:53 AI_Player.update()	Search took230ms
2017-01-04 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:53 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-04 14:11:53 AI_Player.update()		110,	1110,	1010,	1100,	1001,	11,	101
2017-01-04 14:11:53 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-04 14:11:53 AI_Player.update()		1010,	1010,	1010,	1100,	111,	1101,	101
2017-01-04 14:11:53 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:53 AI_Player.update()		101,	1001,	1101,	101,	1010,	110,	1010
2017-01-04 14:11:53 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:53 AI_Player.update()	update
2017-01-04 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:53 AI_Player.update()	update
2017-01-04 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:53 AI_Player.update()	Search took8ms
2017-01-04 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:53 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 14:11:53 AI_Player.update()		110,	1110,	1010,	1100,	1001,	101,	101
2017-01-04 14:11:53 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 14:11:53 AI_Player.update()		1010,	1010,	1010,	1100,	111,	1100,	101
2017-01-04 14:11:53 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-04 14:11:53 AI_Player.update()		101,	1001,	1101,	101,	1010,	1011,	1010
2017-01-04 14:11:53 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:53 AI_Player.update()	update
2017-01-04 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:53 AI_Player.update()	update
2017-01-04 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:53 AI_Player.update()	Search took785ms
2017-01-04 14:11:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:53 AI_Player.update()		110,	11,	111,	101,	111,	1011,	11
2017-01-04 14:11:53 AI_Player.update()		110,	1110,	1010,	1100,	1001,	11,	101
2017-01-04 14:11:53 AI_Player.update()		1110,	1001,	1110,	11,	111,	101,	1011
2017-01-04 14:11:53 AI_Player.update()		1010,	1010,	1010,	1100,	111,	1101,	101
2017-01-04 14:11:53 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1100,	1011
2017-01-04 14:11:53 AI_Player.update()		101,	1001,	1101,	101,	1010,	110,	1010
2017-01-04 14:11:53 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 14:11:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:53 AI_Player.update()	update
2017-01-04 14:11:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:53 AI_Player.update()	update
2017-01-04 14:11:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:54 AI_Player.update()	Search took7ms
2017-01-04 14:11:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()		110,	11,	111,	101,	111,	11,	11
2017-01-04 14:11:54 AI_Player.update()		110,	1110,	1010,	1100,	1001,	101,	101
2017-01-04 14:11:54 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 14:11:54 AI_Player.update()		1010,	1010,	1010,	1100,	111,	1100,	101
2017-01-04 14:11:54 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-04 14:11:54 AI_Player.update()		101,	1001,	1101,	101,	1010,	1011,	1010
2017-01-04 14:11:54 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()	update
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()	update
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:54 AI_Player.update()	Search took712ms
2017-01-04 14:11:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-04 14:11:54 AI_Player.update()		110,	1110,	1010,	11,	1001,	101,	101
2017-01-04 14:11:54 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-04 14:11:54 AI_Player.update()		1010,	1010,	1010,	110,	111,	1100,	101
2017-01-04 14:11:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-04 14:11:54 AI_Player.update()		101,	1001,	1101,	1100,	1010,	1011,	1010
2017-01-04 14:11:54 AI_Player.update()		1100,	110,	1101,	101,	1101,	1011,	1001
2017-01-04 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()	update
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()	update
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:54 AI_Player.update()	Search took13ms
2017-01-04 14:11:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()		110,	11,	111,	1100,	111,	101,	11
2017-01-04 14:11:54 AI_Player.update()		110,	1110,	1010,	11,	1001,	1101,	101
2017-01-04 14:11:54 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-04 14:11:54 AI_Player.update()		1010,	1010,	1010,	110,	111,	110,	101
2017-01-04 14:11:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-04 14:11:54 AI_Player.update()		101,	1001,	1101,	1100,	1010,	1011,	1010
2017-01-04 14:11:54 AI_Player.update()		1100,	110,	1101,	101,	1101,	11,	1001
2017-01-04 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()	update
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()	update
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:54 AI_Player.update()	Search took60ms
2017-01-04 14:11:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()		110,	11,	111,	1100,	111,	11,	11
2017-01-04 14:11:54 AI_Player.update()		110,	1110,	1010,	11,	1001,	101,	101
2017-01-04 14:11:54 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1101,	1011
2017-01-04 14:11:54 AI_Player.update()		1010,	1010,	1010,	110,	111,	1100,	101
2017-01-04 14:11:54 AI_Player.update()		1110,	1010,	1101,	101,	1011,	110,	1011
2017-01-04 14:11:54 AI_Player.update()		101,	1001,	1101,	1100,	1010,	1011,	1010
2017-01-04 14:11:54 AI_Player.update()		1100,	110,	1101,	101,	1101,	1011,	1001
2017-01-04 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()	update
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:11:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()	update
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:54 AI_Player.update()	Search took156ms
2017-01-04 14:11:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-04 14:11:54 AI_Player.update()		110,	1110,	1010,	1100,	1001,	101,	101
2017-01-04 14:11:54 AI_Player.update()		1110,	1001,	1110,	110,	111,	1101,	1011
2017-01-04 14:11:54 AI_Player.update()		1010,	1010,	1010,	101,	111,	1100,	101
2017-01-04 14:11:54 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-04 14:11:54 AI_Player.update()		101,	1001,	1101,	101,	1010,	1011,	1010
2017-01-04 14:11:54 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 14:11:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()	update
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:54 AI_Player.update()	update
2017-01-04 14:11:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:55 AI_Player.update()	Search took281ms
2017-01-04 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:55 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-04 14:11:55 AI_Player.update()		110,	1110,	1010,	1100,	1001,	101,	101
2017-01-04 14:11:55 AI_Player.update()		1110,	1001,	1110,	110,	111,	1101,	1011
2017-01-04 14:11:55 AI_Player.update()		1010,	1010,	101,	111,	1100,	101,	1010
2017-01-04 14:11:55 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-04 14:11:55 AI_Player.update()		101,	1001,	1101,	101,	1010,	1011,	1010
2017-01-04 14:11:55 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1011,	1001
2017-01-04 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:55 AI_Player.update()	update
2017-01-04 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:55 AI_Player.update()	update
2017-01-04 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:55 AI_Player.update()	Search took229ms
2017-01-04 14:11:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:55 AI_Player.update()		110,	1110,	111,	11,	111,	11,	11
2017-01-04 14:11:55 AI_Player.update()		110,	1001,	1010,	1100,	1001,	101,	101
2017-01-04 14:11:55 AI_Player.update()		1110,	1010,	1110,	110,	111,	1101,	1011
2017-01-04 14:11:55 AI_Player.update()		1010,	1010,	101,	111,	1100,	101,	1010
2017-01-04 14:11:55 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 14:11:55 AI_Player.update()		101,	110,	1101,	101,	1010,	1011,	1010
2017-01-04 14:11:55 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1011,	1001
2017-01-04 14:11:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:55 AI_Player.update()	update
2017-01-04 14:11:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:55 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:55 AI_Player.update()	update
2017-01-04 14:11:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:56 AI_Player.update()	Search took734ms
2017-01-04 14:11:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:56 AI_Player.update()		110,	1110,	111,	1100,	111,	11,	11
2017-01-04 14:11:56 AI_Player.update()		110,	1001,	1010,	110,	1001,	101,	101
2017-01-04 14:11:56 AI_Player.update()		1110,	1010,	1110,	111,	111,	1101,	1011
2017-01-04 14:11:56 AI_Player.update()		1010,	1010,	101,	1100,	1100,	101,	1010
2017-01-04 14:11:56 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-04 14:11:56 AI_Player.update()		101,	110,	1101,	1100,	1010,	1011,	1010
2017-01-04 14:11:56 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:56 AI_Player.update()	update
2017-01-04 14:11:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:56 AI_Player.update()	update
2017-01-04 14:11:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:56 AI_Player.update()	Search took714ms
2017-01-04 14:11:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:56 AI_Player.update()		110,	1001,	111,	1100,	111,	11,	11
2017-01-04 14:11:56 AI_Player.update()		110,	1010,	1010,	110,	1001,	101,	101
2017-01-04 14:11:56 AI_Player.update()		1110,	1010,	1110,	111,	111,	1101,	1011
2017-01-04 14:11:56 AI_Player.update()		1010,	1001,	101,	1100,	1100,	101,	1010
2017-01-04 14:11:56 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 14:11:56 AI_Player.update()		101,	11,	1101,	1100,	1010,	1011,	1010
2017-01-04 14:11:56 AI_Player.update()		1100,	1110,	1101,	11,	1101,	1011,	1001
2017-01-04 14:11:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:56 AI_Player.update()	update
2017-01-04 14:11:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:11:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:56 AI_Player.update()	update
2017-01-04 14:11:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:57 AI_Player.update()	Search took654ms
2017-01-04 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:57 AI_Player.update()		110,	1110,	111,	1100,	111,	11,	11
2017-01-04 14:11:57 AI_Player.update()		110,	1001,	1010,	110,	1001,	101,	101
2017-01-04 14:11:57 AI_Player.update()		1110,	1010,	1110,	111,	111,	1101,	1011
2017-01-04 14:11:57 AI_Player.update()		1010,	1010,	101,	1100,	1100,	101,	1010
2017-01-04 14:11:57 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-04 14:11:57 AI_Player.update()		101,	110,	1101,	1100,	1010,	1011,	1010
2017-01-04 14:11:57 AI_Player.update()		1100,	11,	1101,	11,	1101,	1011,	1001
2017-01-04 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:57 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:57 AI_Player.update()	update
2017-01-04 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:57 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:57 AI_Player.update()	update
2017-01-04 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:57 AI_Player.update()	Search took32ms
2017-01-04 14:11:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:57 AI_Player.update()		110,	1110,	111,	11,	111,	11,	11
2017-01-04 14:11:57 AI_Player.update()		110,	1001,	1010,	1100,	1001,	101,	101
2017-01-04 14:11:57 AI_Player.update()		1110,	1010,	1110,	110,	111,	1101,	1011
2017-01-04 14:11:57 AI_Player.update()		1010,	1010,	101,	111,	1100,	101,	1010
2017-01-04 14:11:57 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 14:11:57 AI_Player.update()		101,	110,	1101,	101,	1010,	1011,	1010
2017-01-04 14:11:57 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1011,	1001
2017-01-04 14:11:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:57 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:57 AI_Player.update()	update
2017-01-04 14:11:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:57 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:57 AI_Player.update()	update
2017-01-04 14:11:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:58 AI_Player.update()	Search took458ms
2017-01-04 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-04 14:11:58 AI_Player.update()		110,	1010,	1010,	1100,	1001,	101,	101
2017-01-04 14:11:58 AI_Player.update()		1110,	1010,	1110,	110,	111,	1101,	1011
2017-01-04 14:11:58 AI_Player.update()		1010,	1001,	101,	111,	1100,	101,	1010
2017-01-04 14:11:58 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-04 14:11:58 AI_Player.update()		101,	11,	1101,	101,	1010,	1011,	1010
2017-01-04 14:11:58 AI_Player.update()		1100,	1110,	1101,	1100,	1101,	1011,	1001
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:11:58 AI_Player.update()	Player a has won!
2017-01-04 14:11:58 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:58 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:11:58 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:11:58 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:58 AI_Player.update()	Search took89ms
2017-01-04 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()		110,	111,	111,	11,	111,	11,	11
2017-01-04 14:11:58 AI_Player.update()		111,	1010,	111,	110,	11,	101,	11
2017-01-04 14:11:58 AI_Player.update()		1110,	101,	1110,	1001,	111,	1101,	1011
2017-01-04 14:11:58 AI_Player.update()		11,	1100,	110,	111,	1101,	1001,	1010
2017-01-04 14:11:58 AI_Player.update()		1110,	110,	1101,	1010,	1011,	101,	1011
2017-01-04 14:11:58 AI_Player.update()		101,	111,	110,	101,	101,	1101,	101
2017-01-04 14:11:58 AI_Player.update()		1100,	111,	1101,	1110,	1101,	1010,	1001
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:58 AI_Player.update()	Search took13ms
2017-01-04 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()		110,	111,	111,	11,	111,	101,	11
2017-01-04 14:11:58 AI_Player.update()		111,	1010,	111,	110,	11,	1101,	11
2017-01-04 14:11:58 AI_Player.update()		1110,	101,	1110,	1001,	111,	1001,	1011
2017-01-04 14:11:58 AI_Player.update()		11,	1100,	110,	111,	1101,	101,	1010
2017-01-04 14:11:58 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:11:58 AI_Player.update()		101,	111,	110,	101,	101,	1010,	101
2017-01-04 14:11:58 AI_Player.update()		1100,	111,	1101,	1110,	1101,	11,	1001
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:58 AI_Player.update()	Search took91ms
2017-01-04 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()		110,	1010,	111,	11,	111,	101,	11
2017-01-04 14:11:58 AI_Player.update()		111,	101,	111,	110,	11,	1101,	11
2017-01-04 14:11:58 AI_Player.update()		1110,	1100,	1110,	1001,	111,	1001,	1011
2017-01-04 14:11:58 AI_Player.update()		11,	110,	110,	111,	1101,	101,	1010
2017-01-04 14:11:58 AI_Player.update()		1110,	111,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:11:58 AI_Player.update()		101,	111,	110,	101,	101,	1010,	101
2017-01-04 14:11:58 AI_Player.update()		1100,	111,	1101,	1110,	1101,	11,	1001
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:58 AI_Player.update()	Search took123ms
2017-01-04 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 14:11:58 AI_Player.update()		111,	101,	111,	1001,	11,	1101,	11
2017-01-04 14:11:58 AI_Player.update()		1110,	1100,	1110,	111,	111,	1001,	1011
2017-01-04 14:11:58 AI_Player.update()		11,	110,	110,	1010,	1101,	101,	1010
2017-01-04 14:11:58 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-04 14:11:58 AI_Player.update()		101,	111,	110,	1110,	101,	1010,	101
2017-01-04 14:11:58 AI_Player.update()		1100,	111,	1101,	11,	1101,	11,	1001
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:58 AI_Player.update()	Search took325ms
2017-01-04 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 14:11:58 AI_Player.update()		111,	101,	111,	1001,	11,	1101,	11
2017-01-04 14:11:58 AI_Player.update()		1110,	1100,	1110,	111,	111,	1001,	1011
2017-01-04 14:11:58 AI_Player.update()		1010,	11,	110,	110,	1010,	1101,	101
2017-01-04 14:11:58 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-04 14:11:58 AI_Player.update()		101,	111,	110,	1110,	101,	1010,	101
2017-01-04 14:11:58 AI_Player.update()		1100,	111,	1101,	11,	1101,	11,	1001
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:58 AI_Player.update()	Search took58ms
2017-01-04 14:11:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 14:11:58 AI_Player.update()		111,	1100,	111,	1001,	11,	1101,	11
2017-01-04 14:11:58 AI_Player.update()		1110,	11,	1110,	111,	111,	1001,	1011
2017-01-04 14:11:58 AI_Player.update()		1010,	111,	110,	110,	1010,	1101,	101
2017-01-04 14:11:58 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-04 14:11:58 AI_Player.update()		101,	111,	110,	1110,	101,	1010,	101
2017-01-04 14:11:58 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-04 14:11:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:58 AI_Player.update()	update
2017-01-04 14:11:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:11:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:11:59 AI_Player.update()	Search took611ms
2017-01-04 14:11:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:59 AI_Player.update()		110,	101,	111,	110,	111,	101,	11
2017-01-04 14:11:59 AI_Player.update()		11,	111,	1100,	111,	1001,	11,	1101
2017-01-04 14:11:59 AI_Player.update()		1110,	11,	1110,	111,	111,	1001,	1011
2017-01-04 14:11:59 AI_Player.update()		1010,	111,	110,	110,	1010,	1101,	101
2017-01-04 14:11:59 AI_Player.update()		1110,	111,	1101,	101,	1011,	1101,	1011
2017-01-04 14:11:59 AI_Player.update()		101,	111,	110,	1110,	101,	1010,	101
2017-01-04 14:11:59 AI_Player.update()		1100,	1010,	1101,	11,	1101,	11,	1001
2017-01-04 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:59 AI_Player.update()	update
2017-01-04 14:11:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:11:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:11:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:11:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:59 AI_Player.update()	update
2017-01-04 14:11:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:11:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:11:59 AI_Player.update()	Search took80ms
2017-01-04 14:11:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:59 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-04 14:11:59 AI_Player.update()		11,	111,	1100,	111,	1001,	1001,	1101
2017-01-04 14:11:59 AI_Player.update()		1110,	11,	1110,	111,	111,	1101,	1011
2017-01-04 14:11:59 AI_Player.update()		1010,	111,	110,	110,	1010,	1101,	101
2017-01-04 14:11:59 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-04 14:11:59 AI_Player.update()		101,	111,	110,	1110,	101,	11,	101
2017-01-04 14:11:59 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 14:11:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:11:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:59 AI_Player.update()	update
2017-01-04 14:11:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:11:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:11:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:11:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:11:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:11:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:11:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:11:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:11:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:11:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:11:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:11:59 AI_Player.update()	update
2017-01-04 14:11:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:00 AI_Player.update()	Search took490ms
2017-01-04 14:12:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:00 AI_Player.update()		110,	101,	111,	110,	111,	11,	11
2017-01-04 14:12:00 AI_Player.update()		11,	111,	1100,	111,	1001,	1001,	1101
2017-01-04 14:12:00 AI_Player.update()		1110,	11,	1110,	111,	111,	1101,	1011
2017-01-04 14:12:00 AI_Player.update()		1010,	111,	110,	110,	1010,	1101,	101
2017-01-04 14:12:00 AI_Player.update()		1110,	111,	1101,	101,	1011,	1010,	1011
2017-01-04 14:12:00 AI_Player.update()		101,	101,	111,	110,	1110,	101,	11
2017-01-04 14:12:00 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:00 AI_Player.update()	update
2017-01-04 14:12:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:00 AI_Player.update()	update
2017-01-04 14:12:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:00 AI_Player.update()	Search took705ms
2017-01-04 14:12:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:00 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-04 14:12:00 AI_Player.update()		11,	11,	1100,	111,	1001,	1001,	1101
2017-01-04 14:12:00 AI_Player.update()		1110,	111,	1110,	111,	111,	1101,	1011
2017-01-04 14:12:00 AI_Player.update()		1010,	111,	110,	110,	1010,	1101,	101
2017-01-04 14:12:00 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 14:12:00 AI_Player.update()		101,	1010,	111,	110,	1110,	101,	11
2017-01-04 14:12:00 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:00 AI_Player.update()	update
2017-01-04 14:12:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:00 AI_Player.update()	update
2017-01-04 14:12:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:01 AI_Player.update()	Search took670ms
2017-01-04 14:12:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:01 AI_Player.update()		110,	111,	111,	110,	111,	11,	11
2017-01-04 14:12:01 AI_Player.update()		11,	1100,	111,	1001,	1001,	1101,	11
2017-01-04 14:12:01 AI_Player.update()		1110,	111,	1110,	111,	111,	1101,	1011
2017-01-04 14:12:01 AI_Player.update()		1010,	111,	110,	110,	1010,	1101,	101
2017-01-04 14:12:01 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 14:12:01 AI_Player.update()		101,	1010,	111,	110,	1110,	101,	11
2017-01-04 14:12:01 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:01 AI_Player.update()	update
2017-01-04 14:12:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:12:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:01 AI_Player.update()	update
2017-01-04 14:12:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:02 AI_Player.update()	Search took829ms
2017-01-04 14:12:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:02 AI_Player.update()		110,	111,	111,	110,	111,	1101,	11
2017-01-04 14:12:02 AI_Player.update()		11,	1100,	111,	1001,	1001,	1101,	11
2017-01-04 14:12:02 AI_Player.update()		1110,	111,	1110,	111,	111,	1101,	1011
2017-01-04 14:12:02 AI_Player.update()		1010,	111,	110,	110,	1010,	1010,	101
2017-01-04 14:12:02 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:02 AI_Player.update()		101,	1010,	111,	110,	1110,	101,	11
2017-01-04 14:12:02 AI_Player.update()		1100,	101,	1101,	11,	1101,	11,	1001
2017-01-04 14:12:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:02 AI_Player.update()	update
2017-01-04 14:12:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:02 AI_Player.update()	update
2017-01-04 14:12:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:03 AI_Player.update()	Search took872ms
2017-01-04 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()		110,	111,	111,	110,	111,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		11,	1100,	111,	1001,	1001,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		1110,	111,	1110,	111,	111,	1010,	1011
2017-01-04 14:12:03 AI_Player.update()		1010,	111,	110,	110,	1010,	101,	101
2017-01-04 14:12:03 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:03 AI_Player.update()		101,	1010,	111,	110,	1110,	11,	11
2017-01-04 14:12:03 AI_Player.update()		1100,	101,	1101,	11,	1101,	1101,	1001
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:03 AI_Player.update()	Search took35ms
2017-01-04 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()		110,	111,	111,	110,	111,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		11,	1100,	111,	1001,	1001,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		1110,	111,	1110,	111,	111,	1010,	1011
2017-01-04 14:12:03 AI_Player.update()		111,	110,	110,	1010,	101,	101,	1010
2017-01-04 14:12:03 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:03 AI_Player.update()		101,	1010,	111,	110,	1110,	11,	11
2017-01-04 14:12:03 AI_Player.update()		1100,	101,	1101,	11,	1101,	1101,	1001
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:03 AI_Player.update()	Search took199ms
2017-01-04 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()		110,	111,	111,	110,	111,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		11,	11,	1100,	111,	1001,	1001,	1101
2017-01-04 14:12:03 AI_Player.update()		1110,	111,	1110,	111,	111,	1010,	1011
2017-01-04 14:12:03 AI_Player.update()		111,	110,	110,	1010,	101,	101,	1010
2017-01-04 14:12:03 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:03 AI_Player.update()		101,	1010,	111,	110,	1110,	11,	11
2017-01-04 14:12:03 AI_Player.update()		1100,	101,	1101,	11,	1101,	1101,	1001
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:03 AI_Player.update()	Search took177ms
2017-01-04 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()		110,	111,	111,	111,	111,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		11,	11,	1100,	111,	1001,	1001,	1101
2017-01-04 14:12:03 AI_Player.update()		1110,	111,	1110,	1010,	111,	1010,	1011
2017-01-04 14:12:03 AI_Player.update()		111,	110,	110,	101,	101,	101,	1010
2017-01-04 14:12:03 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 14:12:03 AI_Player.update()		101,	1010,	111,	11,	1110,	11,	11
2017-01-04 14:12:03 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:03 AI_Player.update()	Search took79ms
2017-01-04 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()		110,	111,	111,	111,	111,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		11,	1100,	111,	1001,	1001,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		1110,	111,	1110,	1010,	111,	1010,	1011
2017-01-04 14:12:03 AI_Player.update()		111,	110,	110,	101,	101,	101,	1010
2017-01-04 14:12:03 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 14:12:03 AI_Player.update()		101,	1010,	111,	11,	1110,	11,	11
2017-01-04 14:12:03 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:03 AI_Player.update()	Search took30ms
2017-01-04 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()		110,	111,	111,	111,	111,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		11,	1100,	111,	1001,	1001,	1010,	11
2017-01-04 14:12:03 AI_Player.update()		1110,	111,	1110,	1010,	111,	101,	1011
2017-01-04 14:12:03 AI_Player.update()		111,	110,	110,	101,	101,	101,	1010
2017-01-04 14:12:03 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 14:12:03 AI_Player.update()		101,	1010,	111,	11,	1110,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		1100,	101,	1101,	110,	1101,	1101,	1001
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:03 AI_Player.update()	Search took253ms
2017-01-04 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()		110,	111,	111,	1001,	111,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		11,	1100,	111,	1010,	1001,	1010,	11
2017-01-04 14:12:03 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-04 14:12:03 AI_Player.update()		111,	110,	110,	110,	101,	101,	1010
2017-01-04 14:12:03 AI_Player.update()		1110,	101,	1101,	11,	1011,	11,	1011
2017-01-04 14:12:03 AI_Player.update()		101,	1010,	111,	110,	1110,	1101,	11
2017-01-04 14:12:03 AI_Player.update()		1100,	101,	1101,	111,	1101,	1101,	1001
2017-01-04 14:12:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:03 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:12:03 AI_Player.update()	Player a has won!
2017-01-04 14:12:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:03 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:12:03 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:03 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:12:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:03 AI_Player.update()	update
2017-01-04 14:12:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:04 AI_Player.update()	Search took82ms
2017-01-04 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-04 14:12:04 AI_Player.update()		1100,	111,	1011,	1010,	1011,	101,	1010
2017-01-04 14:12:04 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:04 AI_Player.update()		11,	1100,	1110,	110,	1010,	101,	110
2017-01-04 14:12:04 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 14:12:04 AI_Player.update()		110,	1001,	1010,	1001,	110,	111,	1100
2017-01-04 14:12:04 AI_Player.update()		1100,	11,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()	update
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()	update
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:04 AI_Player.update()	Search took191ms
2017-01-04 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()		110,	111,	111,	101,	111,	1011,	11
2017-01-04 14:12:04 AI_Player.update()		1100,	11,	1011,	1010,	1011,	101,	1010
2017-01-04 14:12:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:04 AI_Player.update()		11,	11,	1110,	110,	1010,	101,	110
2017-01-04 14:12:04 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:12:04 AI_Player.update()		110,	11,	1010,	1001,	110,	111,	1100
2017-01-04 14:12:04 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()	update
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()	update
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:04 AI_Player.update()	Search took198ms
2017-01-04 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()		110,	111,	111,	101,	111,	1011,	11
2017-01-04 14:12:04 AI_Player.update()		1100,	11,	1011,	1010,	1011,	101,	1010
2017-01-04 14:12:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:04 AI_Player.update()		11,	11,	1110,	110,	1010,	101,	110
2017-01-04 14:12:04 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:12:04 AI_Player.update()		11,	1010,	1001,	110,	111,	1100,	110
2017-01-04 14:12:04 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()	update
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()	update
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:04 AI_Player.update()	Search took171ms
2017-01-04 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 14:12:04 AI_Player.update()		1100,	11,	1011,	1010,	1011,	1001,	1010
2017-01-04 14:12:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-04 14:12:04 AI_Player.update()		11,	11,	1110,	110,	1010,	110,	110
2017-01-04 14:12:04 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 14:12:04 AI_Player.update()		11,	1010,	1001,	110,	111,	101,	110
2017-01-04 14:12:04 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1011,	1001
2017-01-04 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()	update
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()	update
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:04 AI_Player.update()	Search took105ms
2017-01-04 14:12:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-04 14:12:04 AI_Player.update()		1100,	11,	1011,	1010,	1011,	101,	1010
2017-01-04 14:12:04 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-04 14:12:04 AI_Player.update()		11,	11,	1110,	110,	1010,	1100,	110
2017-01-04 14:12:04 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 14:12:04 AI_Player.update()		11,	1010,	1001,	110,	111,	1011,	110
2017-01-04 14:12:04 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()	update
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:04 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:04 AI_Player.update()	update
2017-01-04 14:12:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:05 AI_Player.update()	Search took532ms
2017-01-04 14:12:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:05 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-04 14:12:05 AI_Player.update()		1100,	11,	1011,	1010,	1011,	101,	1010
2017-01-04 14:12:05 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-04 14:12:05 AI_Player.update()		11,	11,	1110,	110,	1010,	1100,	110
2017-01-04 14:12:05 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 14:12:05 AI_Player.update()		1010,	1001,	110,	111,	1011,	110,	11
2017-01-04 14:12:05 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:05 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:05 AI_Player.update()	update
2017-01-04 14:12:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:05 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:05 AI_Player.update()	update
2017-01-04 14:12:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:06 AI_Player.update()	Search took1013ms
2017-01-04 14:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:06 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-04 14:12:06 AI_Player.update()		1010,	1100,	11,	1011,	1010,	1011,	101
2017-01-04 14:12:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	110,	1011
2017-01-04 14:12:06 AI_Player.update()		11,	11,	1110,	110,	1010,	1100,	110
2017-01-04 14:12:06 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 14:12:06 AI_Player.update()		1010,	1001,	110,	111,	1011,	110,	11
2017-01-04 14:12:06 AI_Player.update()		1100,	1100,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:06 AI_Player.update()	update
2017-01-04 14:12:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:06 AI_Player.update()	update
2017-01-04 14:12:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:06 AI_Player.update()	Search took624ms
2017-01-04 14:12:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:06 AI_Player.update()		110,	111,	111,	101,	111,	1011,	11
2017-01-04 14:12:06 AI_Player.update()		1010,	1100,	11,	1011,	1010,	110,	101
2017-01-04 14:12:06 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:06 AI_Player.update()		11,	11,	1110,	110,	1010,	101,	110
2017-01-04 14:12:06 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:12:06 AI_Player.update()		1010,	1001,	110,	111,	1011,	101,	11
2017-01-04 14:12:06 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 14:12:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:06 AI_Player.update()	update
2017-01-04 14:12:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:06 AI_Player.update()	update
2017-01-04 14:12:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:07 AI_Player.update()	Search took763ms
2017-01-04 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:07 AI_Player.update()		110,	111,	111,	1011,	111,	1011,	11
2017-01-04 14:12:07 AI_Player.update()		1010,	1100,	11,	101,	1010,	110,	101
2017-01-04 14:12:07 AI_Player.update()		1110,	1100,	1110,	110,	111,	1100,	1011
2017-01-04 14:12:07 AI_Player.update()		11,	11,	1110,	11,	1010,	101,	110
2017-01-04 14:12:07 AI_Player.update()		1110,	1001,	1101,	111,	1011,	110,	1011
2017-01-04 14:12:07 AI_Player.update()		1010,	1001,	110,	11,	1011,	101,	11
2017-01-04 14:12:07 AI_Player.update()		1100,	1100,	1101,	101,	1101,	1001,	1001
2017-01-04 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:07 AI_Player.update()	update
2017-01-04 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:07 AI_Player.update()	update
2017-01-04 14:12:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:07 AI_Player.update()	Search took70ms
2017-01-04 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:07 AI_Player.update()		110,	1100,	111,	1011,	111,	1011,	11
2017-01-04 14:12:07 AI_Player.update()		1010,	1100,	11,	101,	1010,	110,	101
2017-01-04 14:12:07 AI_Player.update()		1110,	11,	1110,	110,	111,	1100,	1011
2017-01-04 14:12:07 AI_Player.update()		11,	1001,	1110,	11,	1010,	101,	110
2017-01-04 14:12:07 AI_Player.update()		1110,	1001,	1101,	111,	1011,	110,	1011
2017-01-04 14:12:07 AI_Player.update()		1010,	1100,	110,	11,	1011,	101,	11
2017-01-04 14:12:07 AI_Player.update()		1100,	111,	1101,	101,	1101,	1001,	1001
2017-01-04 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:07 AI_Player.update()	update
2017-01-04 14:12:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:07 AI_Player.update()	update
2017-01-04 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:07 AI_Player.update()	Search took151ms
2017-01-04 14:12:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:07 AI_Player.update()		110,	1100,	111,	101,	111,	1011,	11
2017-01-04 14:12:07 AI_Player.update()		1010,	1100,	11,	110,	1010,	110,	101
2017-01-04 14:12:07 AI_Player.update()		1110,	11,	1110,	11,	111,	1100,	1011
2017-01-04 14:12:07 AI_Player.update()		11,	1001,	1110,	111,	1010,	101,	110
2017-01-04 14:12:07 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:12:07 AI_Player.update()		1010,	1100,	110,	101,	1011,	101,	11
2017-01-04 14:12:07 AI_Player.update()		1100,	111,	1101,	1011,	1101,	1001,	1001
2017-01-04 14:12:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:07 AI_Player.update()	update
2017-01-04 14:12:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:07 AI_Player.update()	update
2017-01-04 14:12:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:08 AI_Player.update()	Search took141ms
2017-01-04 14:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()		110,	1100,	111,	101,	111,	1001,	11
2017-01-04 14:12:08 AI_Player.update()		1010,	1100,	11,	110,	1010,	1011,	101
2017-01-04 14:12:08 AI_Player.update()		1110,	11,	1110,	11,	111,	110,	1011
2017-01-04 14:12:08 AI_Player.update()		11,	1001,	1110,	111,	1010,	1100,	110
2017-01-04 14:12:08 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 14:12:08 AI_Player.update()		1010,	1100,	110,	101,	1011,	110,	11
2017-01-04 14:12:08 AI_Player.update()		1100,	111,	1101,	1011,	1101,	101,	1001
2017-01-04 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()	update
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()	update
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:08 AI_Player.update()	Search took167ms
2017-01-04 14:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-04 14:12:08 AI_Player.update()		1010,	1100,	11,	110,	1010,	1011,	101
2017-01-04 14:12:08 AI_Player.update()		1110,	1100,	1110,	11,	111,	110,	1011
2017-01-04 14:12:08 AI_Player.update()		11,	11,	1110,	111,	1010,	1100,	110
2017-01-04 14:12:08 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 14:12:08 AI_Player.update()		1010,	1001,	110,	101,	1011,	110,	11
2017-01-04 14:12:08 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-04 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()	update
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()	update
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:08 AI_Player.update()	Search took163ms
2017-01-04 14:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-04 14:12:08 AI_Player.update()		1010,	1100,	11,	110,	1010,	1011,	101
2017-01-04 14:12:08 AI_Player.update()		1110,	1100,	1110,	11,	111,	110,	1011
2017-01-04 14:12:08 AI_Player.update()		11,	1110,	111,	1010,	1100,	110,	11
2017-01-04 14:12:08 AI_Player.update()		1110,	1001,	1101,	11,	1011,	101,	1011
2017-01-04 14:12:08 AI_Player.update()		1010,	1001,	110,	101,	1011,	110,	11
2017-01-04 14:12:08 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-04 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()	update
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()	update
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:08 AI_Player.update()	Search took361ms
2017-01-04 14:12:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 14:12:08 AI_Player.update()		1010,	1100,	11,	110,	1010,	1001,	101
2017-01-04 14:12:08 AI_Player.update()		1110,	1100,	1110,	11,	111,	1011,	1011
2017-01-04 14:12:08 AI_Player.update()		11,	1110,	111,	1010,	1100,	110,	11
2017-01-04 14:12:08 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:12:08 AI_Player.update()		1010,	1001,	110,	101,	1011,	101,	11
2017-01-04 14:12:08 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	110,	1001
2017-01-04 14:12:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()	update
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:08 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:08 AI_Player.update()	update
2017-01-04 14:12:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:09 AI_Player.update()	Search took315ms
2017-01-04 14:12:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:09 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 14:12:09 AI_Player.update()		1010,	1100,	11,	110,	1010,	1001,	101
2017-01-04 14:12:09 AI_Player.update()		1110,	1100,	1110,	11,	111,	1011,	1011
2017-01-04 14:12:09 AI_Player.update()		11,	11,	1110,	111,	1010,	1100,	110
2017-01-04 14:12:09 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:12:09 AI_Player.update()		1010,	1001,	110,	101,	1011,	101,	11
2017-01-04 14:12:09 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	110,	1001
2017-01-04 14:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:09 AI_Player.update()	update
2017-01-04 14:12:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:09 AI_Player.update()	update
2017-01-04 14:12:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:09 AI_Player.update()	Search took381ms
2017-01-04 14:12:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:09 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 14:12:09 AI_Player.update()		101,	1010,	1100,	11,	110,	1010,	1001
2017-01-04 14:12:09 AI_Player.update()		1110,	1100,	1110,	11,	111,	1011,	1011
2017-01-04 14:12:09 AI_Player.update()		11,	11,	1110,	111,	1010,	1100,	110
2017-01-04 14:12:09 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:12:09 AI_Player.update()		1010,	1001,	110,	101,	1011,	101,	11
2017-01-04 14:12:09 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	110,	1001
2017-01-04 14:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:09 AI_Player.update()	update
2017-01-04 14:12:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:09 AI_Player.update()	update
2017-01-04 14:12:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:09 AI_Player.update()	Search took344ms
2017-01-04 14:12:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:09 AI_Player.update()		110,	111,	111,	101,	111,	101,	11
2017-01-04 14:12:09 AI_Player.update()		1010,	1100,	11,	110,	1010,	1001,	101
2017-01-04 14:12:09 AI_Player.update()		1110,	1100,	1110,	11,	111,	1011,	1011
2017-01-04 14:12:09 AI_Player.update()		11,	11,	1110,	111,	1010,	1100,	110
2017-01-04 14:12:09 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:12:09 AI_Player.update()		1010,	1001,	110,	101,	1011,	101,	11
2017-01-04 14:12:09 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	110,	1001
2017-01-04 14:12:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:09 AI_Player.update()	update
2017-01-04 14:12:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:12:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:09 AI_Player.update()	update
2017-01-04 14:12:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:10 AI_Player.update()	Search took463ms
2017-01-04 14:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()		110,	111,	111,	110,	111,	101,	11
2017-01-04 14:12:10 AI_Player.update()		1010,	1100,	11,	11,	1010,	1001,	101
2017-01-04 14:12:10 AI_Player.update()		1110,	1100,	1110,	111,	111,	1011,	1011
2017-01-04 14:12:10 AI_Player.update()		11,	11,	1110,	11,	1010,	1100,	110
2017-01-04 14:12:10 AI_Player.update()		1110,	1001,	1101,	101,	1011,	110,	1011
2017-01-04 14:12:10 AI_Player.update()		1010,	1001,	110,	1011,	1011,	101,	11
2017-01-04 14:12:10 AI_Player.update()		1100,	1100,	1101,	101,	1101,	110,	1001
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:12:10 AI_Player.update()	Player a has won!
2017-01-04 14:12:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:10 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:12:10 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:10 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:10 AI_Player.update()	Search took22ms
2017-01-04 14:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()		110,	1001,	111,	1010,	111,	111,	11
2017-01-04 14:12:10 AI_Player.update()		110,	11,	110,	1100,	1010,	101,	11
2017-01-04 14:12:10 AI_Player.update()		1110,	110,	1110,	110,	111,	1100,	1011
2017-01-04 14:12:10 AI_Player.update()		1001,	101,	1001,	1100,	1011,	11,	101
2017-01-04 14:12:10 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-04 14:12:10 AI_Player.update()		1010,	1100,	1001,	1010,	111,	1110,	110
2017-01-04 14:12:10 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:10 AI_Player.update()	Search took52ms
2017-01-04 14:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()		110,	1001,	111,	1100,	111,	111,	11
2017-01-04 14:12:10 AI_Player.update()		110,	11,	110,	110,	1010,	101,	11
2017-01-04 14:12:10 AI_Player.update()		1110,	110,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:10 AI_Player.update()		1001,	101,	1001,	1001,	1011,	11,	101
2017-01-04 14:12:10 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:10 AI_Player.update()		1010,	1100,	1001,	1100,	111,	1110,	110
2017-01-04 14:12:10 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:10 AI_Player.update()	Search took36ms
2017-01-04 14:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 14:12:10 AI_Player.update()		110,	1001,	110,	110,	1010,	101,	11
2017-01-04 14:12:10 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:10 AI_Player.update()		1001,	110,	1001,	1001,	1011,	11,	101
2017-01-04 14:12:10 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:10 AI_Player.update()		1010,	1010,	1001,	1100,	111,	1110,	110
2017-01-04 14:12:10 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:10 AI_Player.update()	Search took58ms
2017-01-04 14:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()		110,	110,	111,	110,	111,	111,	11
2017-01-04 14:12:10 AI_Player.update()		110,	1001,	110,	1100,	1010,	101,	11
2017-01-04 14:12:10 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-04 14:12:10 AI_Player.update()		1001,	110,	1001,	1010,	1011,	11,	101
2017-01-04 14:12:10 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:10 AI_Player.update()		1010,	1010,	1001,	1010,	111,	1110,	110
2017-01-04 14:12:10 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:10 AI_Player.update()	Search took131ms
2017-01-04 14:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 14:12:10 AI_Player.update()		110,	1001,	110,	1001,	1010,	101,	11
2017-01-04 14:12:10 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-04 14:12:10 AI_Player.update()		1001,	110,	1001,	1100,	1011,	11,	101
2017-01-04 14:12:10 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:10 AI_Player.update()		1010,	1010,	1001,	1100,	111,	1110,	110
2017-01-04 14:12:10 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:10 AI_Player.update()	Search took104ms
2017-01-04 14:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()		110,	110,	111,	110,	111,	111,	11
2017-01-04 14:12:10 AI_Player.update()		110,	1001,	110,	1100,	1010,	101,	11
2017-01-04 14:12:10 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-04 14:12:10 AI_Player.update()		1001,	110,	1001,	1010,	1011,	11,	101
2017-01-04 14:12:10 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:10 AI_Player.update()		1010,	1010,	1001,	1010,	111,	1110,	110
2017-01-04 14:12:10 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:10 AI_Player.update()	Search took121ms
2017-01-04 14:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 14:12:10 AI_Player.update()		110,	1001,	110,	1001,	1010,	101,	11
2017-01-04 14:12:10 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-04 14:12:10 AI_Player.update()		1001,	110,	1001,	1100,	1011,	11,	101
2017-01-04 14:12:10 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:10 AI_Player.update()		1010,	1010,	1001,	1100,	111,	1110,	110
2017-01-04 14:12:10 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:10 AI_Player.update()	Search took103ms
2017-01-04 14:12:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()		110,	110,	111,	110,	111,	111,	11
2017-01-04 14:12:10 AI_Player.update()		110,	1001,	110,	1100,	1010,	101,	11
2017-01-04 14:12:10 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-04 14:12:10 AI_Player.update()		1001,	110,	1001,	1010,	1011,	11,	101
2017-01-04 14:12:10 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:10 AI_Player.update()		1010,	1010,	1001,	1010,	111,	1110,	110
2017-01-04 14:12:10 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:10 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:10 AI_Player.update()	update
2017-01-04 14:12:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:11 AI_Player.update()	Search took130ms
2017-01-04 14:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 14:12:11 AI_Player.update()		110,	1001,	110,	1001,	1010,	101,	11
2017-01-04 14:12:11 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-04 14:12:11 AI_Player.update()		1001,	110,	1001,	1100,	1011,	11,	101
2017-01-04 14:12:11 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:11 AI_Player.update()		1010,	1010,	1001,	1100,	111,	1110,	110
2017-01-04 14:12:11 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:11 AI_Player.update()	Search took94ms
2017-01-04 14:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 14:12:11 AI_Player.update()		110,	1001,	110,	1001,	1010,	101,	11
2017-01-04 14:12:11 AI_Player.update()		1110,	11,	1110,	1010,	111,	1100,	1011
2017-01-04 14:12:11 AI_Player.update()		1001,	110,	1001,	1100,	1011,	11,	101
2017-01-04 14:12:11 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:11 AI_Player.update()		110,	1010,	1010,	1001,	1100,	111,	1110
2017-01-04 14:12:11 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:11 AI_Player.update()	Search took100ms
2017-01-04 14:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 14:12:11 AI_Player.update()		110,	1001,	110,	1010,	1010,	101,	11
2017-01-04 14:12:11 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:11 AI_Player.update()		1001,	110,	1001,	1010,	1011,	11,	101
2017-01-04 14:12:11 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-04 14:12:11 AI_Player.update()		110,	1010,	1010,	110,	1100,	111,	1110
2017-01-04 14:12:11 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:11 AI_Player.update()	Search took94ms
2017-01-04 14:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 14:12:11 AI_Player.update()		110,	1001,	110,	1010,	1010,	101,	11
2017-01-04 14:12:11 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:11 AI_Player.update()		110,	1001,	1010,	1011,	11,	101,	1001
2017-01-04 14:12:11 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-04 14:12:11 AI_Player.update()		110,	1010,	1010,	110,	1100,	111,	1110
2017-01-04 14:12:11 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:11 AI_Player.update()	Search took290ms
2017-01-04 14:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 14:12:11 AI_Player.update()		1001,	110,	1010,	1010,	101,	11,	110
2017-01-04 14:12:11 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:11 AI_Player.update()		110,	1001,	1010,	1011,	11,	101,	1001
2017-01-04 14:12:11 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1010,	1011
2017-01-04 14:12:11 AI_Player.update()		110,	1010,	1010,	110,	1100,	111,	1110
2017-01-04 14:12:11 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:12:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:11 AI_Player.update()	Search took303ms
2017-01-04 14:12:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 14:12:11 AI_Player.update()		1001,	11,	1010,	1010,	101,	11,	110
2017-01-04 14:12:11 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:11 AI_Player.update()		110,	101,	1010,	1011,	11,	101,	1001
2017-01-04 14:12:11 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-04 14:12:11 AI_Player.update()		110,	1100,	1010,	110,	1100,	111,	1110
2017-01-04 14:12:11 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:11 AI_Player.update()	update
2017-01-04 14:12:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:12 AI_Player.update()	Search took129ms
2017-01-04 14:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()		110,	110,	111,	1010,	111,	111,	11
2017-01-04 14:12:12 AI_Player.update()		1001,	11,	1010,	1100,	101,	11,	110
2017-01-04 14:12:12 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1100,	1011
2017-01-04 14:12:12 AI_Player.update()		110,	101,	1010,	1001,	11,	101,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 14:12:12 AI_Player.update()		110,	1100,	1010,	1100,	1100,	111,	1110
2017-01-04 14:12:12 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:12 AI_Player.update()	Search took56ms
2017-01-04 14:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 14:12:12 AI_Player.update()		1001,	11,	1010,	1010,	101,	11,	110
2017-01-04 14:12:12 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:12 AI_Player.update()		110,	101,	1010,	1011,	11,	101,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-04 14:12:12 AI_Player.update()		110,	1100,	1010,	110,	1100,	111,	1110
2017-01-04 14:12:12 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:12 AI_Player.update()	Search took125ms
2017-01-04 14:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 14:12:12 AI_Player.update()		11,	1010,	1010,	101,	11,	110,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:12 AI_Player.update()		110,	101,	1010,	1011,	11,	101,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-04 14:12:12 AI_Player.update()		110,	1100,	1010,	110,	1100,	111,	1110
2017-01-04 14:12:12 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:12:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:12 AI_Player.update()	Search took37ms
2017-01-04 14:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 14:12:12 AI_Player.update()		11,	1010,	1010,	101,	11,	110,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:12 AI_Player.update()		110,	101,	1010,	1011,	11,	101,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-04 14:12:12 AI_Player.update()		1110,	110,	1100,	1010,	110,	1100,	111
2017-01-04 14:12:12 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:12 AI_Player.update()	Search took307ms
2017-01-04 14:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()		110,	110,	111,	101,	111,	111,	11
2017-01-04 14:12:12 AI_Player.update()		11,	1010,	1010,	1100,	11,	110,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1001,	1110,	1011,	111,	1100,	1011
2017-01-04 14:12:12 AI_Player.update()		110,	101,	1010,	1001,	11,	101,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:12 AI_Player.update()		1110,	110,	1100,	1100,	110,	1100,	111
2017-01-04 14:12:12 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1010,	1001
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:12 AI_Player.update()	Search took33ms
2017-01-04 14:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 14:12:12 AI_Player.update()		11,	1010,	1010,	101,	11,	110,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:12 AI_Player.update()		110,	101,	1010,	1011,	11,	101,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-04 14:12:12 AI_Player.update()		1110,	110,	1100,	1010,	110,	1100,	111
2017-01-04 14:12:12 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:12 AI_Player.update()	Search took179ms
2017-01-04 14:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()		110,	110,	111,	1100,	111,	111,	11
2017-01-04 14:12:12 AI_Player.update()		11,	1010,	1010,	1001,	11,	110,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:12 AI_Player.update()		110,	101,	1010,	1100,	11,	101,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1010,	1101,	1011,	1011,	1010,	1011
2017-01-04 14:12:12 AI_Player.update()		1110,	110,	1100,	1001,	110,	1100,	111
2017-01-04 14:12:12 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:12 AI_Player.update()	Search took17ms
2017-01-04 14:12:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 14:12:12 AI_Player.update()		11,	1010,	1010,	101,	11,	110,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:12 AI_Player.update()		110,	101,	1010,	1011,	11,	101,	1001
2017-01-04 14:12:12 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-04 14:12:12 AI_Player.update()		1110,	110,	1100,	1010,	110,	1100,	111
2017-01-04 14:12:12 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:12 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:12 AI_Player.update()	update
2017-01-04 14:12:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:13 AI_Player.update()	Search took185ms
2017-01-04 14:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()		110,	110,	111,	1001,	111,	111,	11
2017-01-04 14:12:13 AI_Player.update()		1001,	11,	1010,	1010,	101,	11,	110
2017-01-04 14:12:13 AI_Player.update()		1110,	1001,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:13 AI_Player.update()		110,	101,	1010,	1011,	11,	101,	1001
2017-01-04 14:12:13 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1010,	1011
2017-01-04 14:12:13 AI_Player.update()		1110,	110,	1100,	1010,	110,	1100,	111
2017-01-04 14:12:13 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:12:13 AI_Player.update()	Player a has won!
2017-01-04 14:12:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:13 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:12:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:13 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:13 AI_Player.update()	Search took24ms
2017-01-04 14:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()		110,	110,	111,	1011,	111,	101,	11
2017-01-04 14:12:13 AI_Player.update()		1010,	101,	11,	1010,	11,	11,	1001
2017-01-04 14:12:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:13 AI_Player.update()		11,	110,	1010,	101,	101,	1100,	111
2017-01-04 14:12:13 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-04 14:12:13 AI_Player.update()		1110,	1010,	1001,	101,	1001,	1100,	1100
2017-01-04 14:12:13 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:13 AI_Player.update()	Search took46ms
2017-01-04 14:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()		110,	110,	111,	1011,	111,	101,	11
2017-01-04 14:12:13 AI_Player.update()		1010,	101,	11,	1010,	11,	11,	1001
2017-01-04 14:12:13 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:13 AI_Player.update()		11,	110,	1010,	101,	101,	1100,	111
2017-01-04 14:12:13 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-04 14:12:13 AI_Player.update()		1010,	1001,	101,	1001,	1100,	1100,	1110
2017-01-04 14:12:13 AI_Player.update()		1100,	11,	1101,	1100,	1101,	101,	1001
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:13 AI_Player.update()	Search took46ms
2017-01-04 14:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-04 14:12:13 AI_Player.update()		1010,	1010,	11,	1010,	11,	11,	1001
2017-01-04 14:12:13 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:13 AI_Player.update()		11,	1001,	1010,	101,	101,	1100,	111
2017-01-04 14:12:13 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-04 14:12:13 AI_Player.update()		1010,	11,	101,	1001,	1100,	1100,	1110
2017-01-04 14:12:13 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:13 AI_Player.update()	Search took64ms
2017-01-04 14:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()		110,	101,	111,	1011,	111,	11,	11
2017-01-04 14:12:13 AI_Player.update()		1010,	1010,	11,	1010,	11,	1001,	1001
2017-01-04 14:12:13 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:13 AI_Player.update()		11,	1001,	1010,	101,	101,	1100,	111
2017-01-04 14:12:13 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1100,	1011
2017-01-04 14:12:13 AI_Player.update()		1010,	11,	101,	1001,	1100,	101,	1110
2017-01-04 14:12:13 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:13 AI_Player.update()	Search took155ms
2017-01-04 14:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()		110,	1010,	111,	1011,	111,	11,	11
2017-01-04 14:12:13 AI_Player.update()		1010,	110,	11,	1010,	11,	1001,	1001
2017-01-04 14:12:13 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:13 AI_Player.update()		11,	1001,	1010,	101,	101,	1100,	111
2017-01-04 14:12:13 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1100,	1011
2017-01-04 14:12:13 AI_Player.update()		1010,	110,	101,	1001,	1100,	101,	1110
2017-01-04 14:12:13 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:13 AI_Player.update()	Search took210ms
2017-01-04 14:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()		110,	1010,	111,	1011,	111,	1001,	11
2017-01-04 14:12:13 AI_Player.update()		1010,	110,	11,	1010,	11,	1100,	1001
2017-01-04 14:12:13 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:13 AI_Player.update()		11,	1001,	1010,	101,	101,	1100,	111
2017-01-04 14:12:13 AI_Player.update()		1110,	11,	1101,	1010,	1011,	101,	1011
2017-01-04 14:12:13 AI_Player.update()		1010,	110,	101,	1001,	1100,	101,	1110
2017-01-04 14:12:13 AI_Player.update()		1100,	101,	1101,	1100,	1101,	11,	1001
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:13 AI_Player.update()	Search took143ms
2017-01-04 14:12:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()		110,	1010,	111,	1100,	111,	1001,	11
2017-01-04 14:12:13 AI_Player.update()		1010,	110,	11,	1011,	11,	1100,	1001
2017-01-04 14:12:13 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-04 14:12:13 AI_Player.update()		11,	1001,	1010,	101,	101,	1100,	111
2017-01-04 14:12:13 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:13 AI_Player.update()		1010,	110,	101,	1010,	1100,	101,	1110
2017-01-04 14:12:13 AI_Player.update()		1100,	101,	1101,	1001,	1101,	11,	1001
2017-01-04 14:12:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:13 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:13 AI_Player.update()	update
2017-01-04 14:12:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:14 AI_Player.update()	Search took218ms
2017-01-04 14:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-04 14:12:14 AI_Player.update()		1010,	1001,	11,	1011,	11,	1100,	1001
2017-01-04 14:12:14 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-04 14:12:14 AI_Player.update()		11,	11,	1010,	101,	101,	1100,	111
2017-01-04 14:12:14 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:14 AI_Player.update()		1010,	101,	101,	1010,	1100,	101,	1110
2017-01-04 14:12:14 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 14:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()	update
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()	update
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:14 AI_Player.update()	Search took89ms
2017-01-04 14:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-04 14:12:14 AI_Player.update()		1010,	1001,	11,	1011,	11,	1100,	1001
2017-01-04 14:12:14 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-04 14:12:14 AI_Player.update()		11,	11,	1010,	101,	101,	1100,	111
2017-01-04 14:12:14 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:14 AI_Player.update()		1110,	1010,	101,	101,	1010,	1100,	101
2017-01-04 14:12:14 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 14:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()	update
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()	update
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:14 AI_Player.update()	Search took263ms
2017-01-04 14:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()		110,	110,	111,	1100,	111,	1001,	11
2017-01-04 14:12:14 AI_Player.update()		1001,	11,	1011,	11,	1100,	1001,	1010
2017-01-04 14:12:14 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-04 14:12:14 AI_Player.update()		11,	11,	1010,	101,	101,	1100,	111
2017-01-04 14:12:14 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:14 AI_Player.update()		1110,	1010,	101,	101,	1010,	1100,	101
2017-01-04 14:12:14 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	11,	1001
2017-01-04 14:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()	update
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:12:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()	update
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:14 AI_Player.update()	Search took356ms
2017-01-04 14:12:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-04 14:12:14 AI_Player.update()		1001,	11,	1011,	1010,	1100,	1001,	1010
2017-01-04 14:12:14 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:14 AI_Player.update()		11,	11,	1010,	101,	101,	1100,	111
2017-01-04 14:12:14 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:14 AI_Player.update()		1110,	1010,	101,	1001,	1010,	1100,	101
2017-01-04 14:12:14 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-04 14:12:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()	update
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:14 AI_Player.update()	update
2017-01-04 14:12:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:15 AI_Player.update()	Search took479ms
2017-01-04 14:12:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:15 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-04 14:12:15 AI_Player.update()		1001,	11,	1011,	1010,	1100,	1001,	1010
2017-01-04 14:12:15 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:15 AI_Player.update()		11,	1010,	101,	101,	1100,	111,	11
2017-01-04 14:12:15 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:15 AI_Player.update()		1110,	1010,	101,	1001,	1010,	1100,	101
2017-01-04 14:12:15 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-04 14:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:15 AI_Player.update()	update
2017-01-04 14:12:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:15 AI_Player.update()	update
2017-01-04 14:12:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:15 AI_Player.update()	Search took418ms
2017-01-04 14:12:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:15 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-04 14:12:15 AI_Player.update()		1001,	11,	1011,	1010,	1100,	1001,	1010
2017-01-04 14:12:15 AI_Player.update()		1110,	1001,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:15 AI_Player.update()		11,	11,	1010,	101,	101,	1100,	111
2017-01-04 14:12:15 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:15 AI_Player.update()		1110,	1010,	101,	1001,	1010,	1100,	101
2017-01-04 14:12:15 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	11,	1001
2017-01-04 14:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:15 AI_Player.update()	update
2017-01-04 14:12:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:15 AI_Player.update()	update
2017-01-04 14:12:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:15 AI_Player.update()	Search took94ms
2017-01-04 14:12:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:15 AI_Player.update()		110,	11,	111,	11,	111,	1001,	11
2017-01-04 14:12:15 AI_Player.update()		1001,	1001,	1011,	1010,	1100,	1001,	1010
2017-01-04 14:12:15 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:15 AI_Player.update()		11,	110,	1010,	101,	101,	1100,	111
2017-01-04 14:12:15 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:15 AI_Player.update()		1110,	1010,	101,	1001,	1010,	1100,	101
2017-01-04 14:12:15 AI_Player.update()		1100,	110,	1101,	1100,	1101,	11,	1001
2017-01-04 14:12:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:15 AI_Player.update()	update
2017-01-04 14:12:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:15 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:15 AI_Player.update()	update
2017-01-04 14:12:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:16 AI_Player.update()	Search took363ms
2017-01-04 14:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()		110,	11,	111,	11,	111,	11,	11
2017-01-04 14:12:16 AI_Player.update()		1001,	1001,	1011,	1010,	1100,	1001,	1010
2017-01-04 14:12:16 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:16 AI_Player.update()		11,	110,	1010,	101,	101,	1100,	111
2017-01-04 14:12:16 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 14:12:16 AI_Player.update()		1110,	1010,	101,	1001,	1010,	101,	101
2017-01-04 14:12:16 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:16 AI_Player.update()	Search took86ms
2017-01-04 14:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-04 14:12:16 AI_Player.update()		1001,	11,	1011,	1010,	1100,	1001,	1010
2017-01-04 14:12:16 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:16 AI_Player.update()		11,	1010,	1010,	101,	101,	1100,	111
2017-01-04 14:12:16 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 14:12:16 AI_Player.update()		1110,	110,	101,	1001,	1010,	101,	101
2017-01-04 14:12:16 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:16 AI_Player.update()	Search took374ms
2017-01-04 14:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()		110,	1001,	111,	11,	111,	11,	11
2017-01-04 14:12:16 AI_Player.update()		11,	1011,	1010,	1100,	1001,	1010,	1001
2017-01-04 14:12:16 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:16 AI_Player.update()		11,	1010,	1010,	101,	101,	1100,	111
2017-01-04 14:12:16 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1100,	1011
2017-01-04 14:12:16 AI_Player.update()		1110,	110,	101,	1001,	1010,	101,	101
2017-01-04 14:12:16 AI_Player.update()		1100,	11,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:16 AI_Player.update()	Search took99ms
2017-01-04 14:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-04 14:12:16 AI_Player.update()		11,	1011,	1010,	1100,	1001,	1001,	1001
2017-01-04 14:12:16 AI_Player.update()		1110,	110,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:16 AI_Player.update()		11,	1010,	1010,	101,	101,	1100,	111
2017-01-04 14:12:16 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:16 AI_Player.update()		1110,	110,	101,	1001,	1010,	1100,	101
2017-01-04 14:12:16 AI_Player.update()		1100,	11,	1101,	1100,	1101,	11,	1001
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:12:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:16 AI_Player.update()	Search took57ms
2017-01-04 14:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()		110,	1011,	111,	11,	111,	1010,	11
2017-01-04 14:12:16 AI_Player.update()		11,	110,	1010,	1100,	1001,	1001,	1001
2017-01-04 14:12:16 AI_Player.update()		1110,	1010,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:16 AI_Player.update()		11,	1010,	1010,	101,	101,	1100,	111
2017-01-04 14:12:16 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:16 AI_Player.update()		1110,	11,	101,	1001,	1010,	1100,	101
2017-01-04 14:12:16 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	11,	1001
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:12:16 AI_Player.update()	Player a has won!
2017-01-04 14:12:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:16 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:12:16 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:16 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:16 AI_Player.update()	Search took45ms
2017-01-04 14:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-04 14:12:16 AI_Player.update()		1010,	1010,	101,	101,	11,	1110,	101
2017-01-04 14:12:16 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 14:12:16 AI_Player.update()		101,	101,	1010,	1001,	11,	11,	110
2017-01-04 14:12:16 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-04 14:12:16 AI_Player.update()		1100,	1011,	110,	1010,	1001,	101,	1010
2017-01-04 14:12:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:16 AI_Player.update()	Search took23ms
2017-01-04 14:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()		110,	11,	111,	101,	111,	110,	11
2017-01-04 14:12:16 AI_Player.update()		1010,	1010,	101,	101,	11,	1010,	101
2017-01-04 14:12:16 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1110,	1011
2017-01-04 14:12:16 AI_Player.update()		101,	101,	1010,	1001,	11,	110,	110
2017-01-04 14:12:16 AI_Player.update()		1110,	1100,	1101,	101,	1011,	11,	1011
2017-01-04 14:12:16 AI_Player.update()		1100,	1011,	110,	1010,	1001,	110,	1010
2017-01-04 14:12:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:16 AI_Player.update()	Search took89ms
2017-01-04 14:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-04 14:12:16 AI_Player.update()		1010,	1010,	101,	101,	11,	1110,	101
2017-01-04 14:12:16 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 14:12:16 AI_Player.update()		101,	101,	1010,	1001,	11,	11,	110
2017-01-04 14:12:16 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-04 14:12:16 AI_Player.update()		1100,	1011,	110,	1010,	1001,	101,	1010
2017-01-04 14:12:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:16 AI_Player.update()	Search took15ms
2017-01-04 14:12:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()		110,	11,	111,	101,	111,	1010,	11
2017-01-04 14:12:16 AI_Player.update()		1010,	101,	101,	11,	1110,	101,	1010
2017-01-04 14:12:16 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 14:12:16 AI_Player.update()		101,	101,	1010,	1001,	11,	11,	110
2017-01-04 14:12:16 AI_Player.update()		1110,	1100,	1101,	101,	1011,	110,	1011
2017-01-04 14:12:16 AI_Player.update()		1100,	1011,	110,	1010,	1001,	101,	1010
2017-01-04 14:12:16 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-04 14:12:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:16 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:16 AI_Player.update()	update
2017-01-04 14:12:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:17 AI_Player.update()	Search took49ms
2017-01-04 14:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 14:12:17 AI_Player.update()		1010,	1010,	101,	11,	1110,	101,	1010
2017-01-04 14:12:17 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 14:12:17 AI_Player.update()		101,	1100,	1010,	1001,	11,	11,	110
2017-01-04 14:12:17 AI_Player.update()		1110,	1011,	1101,	101,	1011,	110,	1011
2017-01-04 14:12:17 AI_Player.update()		1100,	1010,	110,	1010,	1001,	101,	1010
2017-01-04 14:12:17 AI_Player.update()		1100,	11,	1101,	11,	1101,	110,	1001
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:17 AI_Player.update()	Search took80ms
2017-01-04 14:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 14:12:17 AI_Player.update()		1010,	1010,	101,	11,	1110,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1110,	101,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:17 AI_Player.update()		101,	1100,	1010,	1001,	11,	110,	110
2017-01-04 14:12:17 AI_Player.update()		1110,	1011,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:17 AI_Player.update()		1100,	1010,	110,	1010,	1001,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1100,	11,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:12:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:17 AI_Player.update()	Search took52ms
2017-01-04 14:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:12:17 AI_Player.update()		1010,	101,	101,	11,	1110,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1110,	1100,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:17 AI_Player.update()		101,	1011,	1010,	1001,	11,	110,	110
2017-01-04 14:12:17 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:17 AI_Player.update()		1100,	11,	110,	1010,	1001,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:17 AI_Player.update()	Search took130ms
2017-01-04 14:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 14:12:17 AI_Player.update()		1010,	1100,	101,	11,	1110,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1110,	1011,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:17 AI_Player.update()		101,	1010,	1010,	1001,	11,	110,	110
2017-01-04 14:12:17 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:17 AI_Player.update()		1100,	101,	110,	1010,	1001,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:12:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:17 AI_Player.update()	Search took88ms
2017-01-04 14:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 14:12:17 AI_Player.update()		1010,	1011,	101,	11,	1110,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:17 AI_Player.update()		101,	11,	1010,	1001,	11,	110,	110
2017-01-04 14:12:17 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:17 AI_Player.update()		1100,	1010,	110,	1010,	1001,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:17 AI_Player.update()	Search took54ms
2017-01-04 14:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 14:12:17 AI_Player.update()		1010,	1100,	101,	11,	1110,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1110,	1011,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:17 AI_Player.update()		101,	1010,	1010,	1001,	11,	110,	110
2017-01-04 14:12:17 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:17 AI_Player.update()		1100,	101,	110,	1010,	1001,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:17 AI_Player.update()	Search took283ms
2017-01-04 14:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 14:12:17 AI_Player.update()		1010,	1100,	101,	101,	1110,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1110,	1011,	1110,	11,	111,	11,	1011
2017-01-04 14:12:17 AI_Player.update()		101,	1010,	1010,	1100,	11,	110,	110
2017-01-04 14:12:17 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-04 14:12:17 AI_Player.update()		1100,	101,	110,	101,	1001,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:17 AI_Player.update()	Search took181ms
2017-01-04 14:12:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-04 14:12:17 AI_Player.update()		1010,	1011,	101,	101,	1110,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-04 14:12:17 AI_Player.update()		101,	11,	1010,	1100,	11,	110,	110
2017-01-04 14:12:17 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-04 14:12:17 AI_Player.update()		1100,	1010,	110,	101,	1001,	110,	1010
2017-01-04 14:12:17 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:17 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:17 AI_Player.update()	update
2017-01-04 14:12:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:18 AI_Player.update()	Search took143ms
2017-01-04 14:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 14:12:18 AI_Player.update()		1010,	1011,	101,	11,	1110,	110,	1010
2017-01-04 14:12:18 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:18 AI_Player.update()		101,	11,	1010,	1001,	11,	110,	110
2017-01-04 14:12:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:18 AI_Player.update()		1100,	1010,	110,	1010,	1001,	110,	1010
2017-01-04 14:12:18 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:18 AI_Player.update()	Search took140ms
2017-01-04 14:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()		110,	1100,	111,	101,	111,	110,	11
2017-01-04 14:12:18 AI_Player.update()		1010,	1011,	101,	11,	1110,	11,	1010
2017-01-04 14:12:18 AI_Player.update()		1110,	1010,	1110,	1100,	111,	110,	1011
2017-01-04 14:12:18 AI_Player.update()		101,	11,	1010,	1001,	11,	101,	110
2017-01-04 14:12:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 14:12:18 AI_Player.update()		1100,	1010,	110,	1010,	1001,	1010,	1010
2017-01-04 14:12:18 AI_Player.update()		1100,	101,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:12:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:18 AI_Player.update()	Search took118ms
2017-01-04 14:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 14:12:18 AI_Player.update()		1010,	1011,	101,	11,	1110,	110,	1010
2017-01-04 14:12:18 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:18 AI_Player.update()		101,	11,	1010,	1001,	11,	110,	110
2017-01-04 14:12:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:18 AI_Player.update()		1100,	1010,	110,	1010,	1001,	110,	1010
2017-01-04 14:12:18 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:18 AI_Player.update()	Search took63ms
2017-01-04 14:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 14:12:18 AI_Player.update()		1010,	1011,	101,	11,	1110,	110,	1010
2017-01-04 14:12:18 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:18 AI_Player.update()		101,	11,	1010,	1001,	11,	110,	110
2017-01-04 14:12:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:18 AI_Player.update()		1010,	1100,	1010,	110,	1010,	1001,	110
2017-01-04 14:12:18 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:18 AI_Player.update()	Search took210ms
2017-01-04 14:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 14:12:18 AI_Player.update()		1010,	1010,	1011,	101,	11,	1110,	110
2017-01-04 14:12:18 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:18 AI_Player.update()		101,	11,	1010,	1001,	11,	110,	110
2017-01-04 14:12:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:18 AI_Player.update()		1010,	1100,	1010,	110,	1010,	1001,	110
2017-01-04 14:12:18 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:18 AI_Player.update()	Search took37ms
2017-01-04 14:12:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()		110,	1100,	111,	101,	111,	101,	11
2017-01-04 14:12:18 AI_Player.update()		110,	1010,	1010,	1011,	101,	11,	1110
2017-01-04 14:12:18 AI_Player.update()		1110,	1010,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:18 AI_Player.update()		101,	11,	1010,	1001,	11,	110,	110
2017-01-04 14:12:18 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:18 AI_Player.update()		1010,	1100,	1010,	110,	1010,	1001,	110
2017-01-04 14:12:18 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:18 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:18 AI_Player.update()	update
2017-01-04 14:12:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:19 AI_Player.update()	Search took984ms
2017-01-04 14:12:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:19 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:12:19 AI_Player.update()		110,	1010,	1010,	1011,	101,	11,	1110
2017-01-04 14:12:19 AI_Player.update()		1110,	11,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:19 AI_Player.update()		101,	101,	1010,	1001,	11,	110,	110
2017-01-04 14:12:19 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:19 AI_Player.update()		1010,	101,	1010,	110,	1010,	1001,	110
2017-01-04 14:12:19 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:19 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:19 AI_Player.update()	update
2017-01-04 14:12:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:19 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:19 AI_Player.update()	update
2017-01-04 14:12:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:19 AI_Player.update()	Search took48ms
2017-01-04 14:12:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:19 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:12:19 AI_Player.update()		110,	11,	1010,	1011,	101,	11,	1110
2017-01-04 14:12:19 AI_Player.update()		1110,	101,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:19 AI_Player.update()		101,	1100,	1010,	1001,	11,	110,	110
2017-01-04 14:12:19 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:19 AI_Player.update()		1010,	1100,	1010,	110,	1010,	1001,	110
2017-01-04 14:12:19 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:19 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:19 AI_Player.update()	update
2017-01-04 14:12:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:19 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:19 AI_Player.update()	update
2017-01-04 14:12:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:20 AI_Player.update()	Search took447ms
2017-01-04 14:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:12:20 AI_Player.update()		110,	11,	1010,	1011,	101,	11,	1110
2017-01-04 14:12:20 AI_Player.update()		1110,	101,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:20 AI_Player.update()		101,	1100,	1010,	1001,	11,	110,	110
2017-01-04 14:12:20 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:20 AI_Player.update()		1100,	1010,	110,	1010,	1001,	110,	1010
2017-01-04 14:12:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()	update
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()	update
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:20 AI_Player.update()	Search took100ms
2017-01-04 14:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 14:12:20 AI_Player.update()		110,	11,	1010,	1011,	101,	11,	1110
2017-01-04 14:12:20 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 14:12:20 AI_Player.update()		101,	1100,	1010,	1001,	11,	101,	110
2017-01-04 14:12:20 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 14:12:20 AI_Player.update()		1100,	1010,	110,	1010,	1001,	1010,	1010
2017-01-04 14:12:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()	update
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()	update
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:20 AI_Player.update()	Search took299ms
2017-01-04 14:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()		110,	1010,	111,	11,	111,	11,	11
2017-01-04 14:12:20 AI_Player.update()		110,	11,	1010,	101,	101,	11,	1110
2017-01-04 14:12:20 AI_Player.update()		1110,	101,	1110,	1011,	111,	110,	1011
2017-01-04 14:12:20 AI_Player.update()		101,	1100,	1010,	1100,	11,	101,	110
2017-01-04 14:12:20 AI_Player.update()		1110,	101,	1101,	1001,	1011,	110,	1011
2017-01-04 14:12:20 AI_Player.update()		1100,	1010,	110,	101,	1001,	1010,	1010
2017-01-04 14:12:20 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 14:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()	update
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()	update
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:20 AI_Player.update()	Search took89ms
2017-01-04 14:12:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()		110,	1010,	111,	101,	111,	11,	11
2017-01-04 14:12:20 AI_Player.update()		110,	11,	1010,	1011,	101,	11,	1110
2017-01-04 14:12:20 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 14:12:20 AI_Player.update()		101,	1100,	1010,	1001,	11,	101,	110
2017-01-04 14:12:20 AI_Player.update()		1110,	101,	1101,	101,	1011,	110,	1011
2017-01-04 14:12:20 AI_Player.update()		1100,	1010,	110,	1010,	1001,	1010,	1010
2017-01-04 14:12:20 AI_Player.update()		1100,	1010,	1101,	11,	1101,	101,	1001
2017-01-04 14:12:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()	update
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:20 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:20 AI_Player.update()	update
2017-01-04 14:12:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:21 AI_Player.update()	Search took389ms
2017-01-04 14:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:12:21 AI_Player.update()		110,	11,	1010,	1011,	101,	11,	1110
2017-01-04 14:12:21 AI_Player.update()		1110,	101,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:21 AI_Player.update()		101,	1100,	1010,	1001,	11,	110,	110
2017-01-04 14:12:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:21 AI_Player.update()		1100,	1010,	110,	1010,	1001,	110,	1010
2017-01-04 14:12:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()	update
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()	update
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:21 AI_Player.update()	Search took311ms
2017-01-04 14:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:12:21 AI_Player.update()		110,	11,	1010,	1011,	101,	11,	1110
2017-01-04 14:12:21 AI_Player.update()		1110,	101,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:21 AI_Player.update()		101,	1100,	1010,	1001,	11,	110,	110
2017-01-04 14:12:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:21 AI_Player.update()		1010,	1100,	1010,	110,	1010,	1001,	110
2017-01-04 14:12:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()	update
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()	update
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:21 AI_Player.update()	Search took248ms
2017-01-04 14:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:12:21 AI_Player.update()		1110,	110,	11,	1010,	1011,	101,	11
2017-01-04 14:12:21 AI_Player.update()		1110,	101,	1110,	1100,	111,	11,	1011
2017-01-04 14:12:21 AI_Player.update()		101,	1100,	1010,	1001,	11,	110,	110
2017-01-04 14:12:21 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:21 AI_Player.update()		1010,	1100,	1010,	110,	1010,	1001,	110
2017-01-04 14:12:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()	update
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:21 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:12:21 AI_Player.update()	Player a has won!
2017-01-04 14:12:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:21 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:12:21 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:21 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()	update
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:21 AI_Player.update()	Search took24ms
2017-01-04 14:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()		110,	1100,	111,	1010,	111,	1100,	11
2017-01-04 14:12:21 AI_Player.update()		11,	101,	1110,	1010,	1001,	1110,	1011
2017-01-04 14:12:21 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 14:12:21 AI_Player.update()		1011,	1010,	111,	11,	1010,	1011,	1100
2017-01-04 14:12:21 AI_Player.update()		1110,	110,	1101,	111,	1011,	1010,	1011
2017-01-04 14:12:21 AI_Player.update()		11,	110,	1101,	1010,	1010,	110,	11
2017-01-04 14:12:21 AI_Player.update()		1100,	110,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()	update
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()	update
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:21 AI_Player.update()	Search took203ms
2017-01-04 14:12:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 14:12:21 AI_Player.update()		11,	11,	1110,	1010,	1001,	1110,	1011
2017-01-04 14:12:21 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 14:12:21 AI_Player.update()		1011,	110,	111,	11,	1010,	1011,	1100
2017-01-04 14:12:21 AI_Player.update()		1110,	110,	1101,	111,	1011,	1010,	1011
2017-01-04 14:12:21 AI_Player.update()		11,	110,	1101,	1010,	1010,	110,	11
2017-01-04 14:12:21 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()	update
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:21 AI_Player.update()	update
2017-01-04 14:12:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:22 AI_Player.update()	Search took611ms
2017-01-04 14:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 14:12:22 AI_Player.update()		11,	11,	1110,	101,	1001,	1110,	1011
2017-01-04 14:12:22 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-04 14:12:22 AI_Player.update()		1011,	110,	111,	111,	1010,	1011,	1100
2017-01-04 14:12:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:22 AI_Player.update()		11,	110,	1101,	110,	1010,	110,	11
2017-01-04 14:12:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()	update
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()	update
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:22 AI_Player.update()	Search took136ms
2017-01-04 14:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 14:12:22 AI_Player.update()		1011,	11,	11,	1110,	101,	1001,	1110
2017-01-04 14:12:22 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-04 14:12:22 AI_Player.update()		1011,	110,	111,	111,	1010,	1011,	1100
2017-01-04 14:12:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:22 AI_Player.update()		11,	110,	1101,	110,	1010,	110,	11
2017-01-04 14:12:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()	update
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()	update
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:22 AI_Player.update()	Search took45ms
2017-01-04 14:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()		110,	101,	111,	1110,	111,	1100,	11
2017-01-04 14:12:22 AI_Player.update()		1011,	11,	11,	11,	101,	1001,	1110
2017-01-04 14:12:22 AI_Player.update()		1110,	1010,	1110,	111,	111,	11,	1011
2017-01-04 14:12:22 AI_Player.update()		1011,	110,	111,	1010,	1010,	1011,	1100
2017-01-04 14:12:22 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 14:12:22 AI_Player.update()		11,	110,	1101,	1010,	1010,	110,	11
2017-01-04 14:12:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()	update
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()	update
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:22 AI_Player.update()	Search took106ms
2017-01-04 14:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1100,	11
2017-01-04 14:12:22 AI_Player.update()		1011,	11,	11,	1110,	101,	1001,	1110
2017-01-04 14:12:22 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-04 14:12:22 AI_Player.update()		1011,	110,	111,	111,	1010,	1011,	1100
2017-01-04 14:12:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:22 AI_Player.update()		11,	110,	1101,	110,	1010,	110,	11
2017-01-04 14:12:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()	update
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:12:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()	update
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:22 AI_Player.update()	Search took159ms
2017-01-04 14:12:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-04 14:12:22 AI_Player.update()		1011,	11,	11,	1110,	101,	11,	1110
2017-01-04 14:12:22 AI_Player.update()		1110,	1010,	1110,	11,	111,	1011,	1011
2017-01-04 14:12:22 AI_Player.update()		1011,	110,	111,	111,	1010,	1010,	1100
2017-01-04 14:12:22 AI_Player.update()		1110,	110,	1101,	1010,	1011,	110,	1011
2017-01-04 14:12:22 AI_Player.update()		11,	110,	1101,	110,	1010,	1010,	11
2017-01-04 14:12:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()	update
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:22 AI_Player.update()	update
2017-01-04 14:12:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:23 AI_Player.update()	Search took148ms
2017-01-04 14:12:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:23 AI_Player.update()		110,	101,	111,	1110,	111,	1001,	11
2017-01-04 14:12:23 AI_Player.update()		1011,	11,	11,	11,	101,	11,	1110
2017-01-04 14:12:23 AI_Player.update()		1110,	1010,	1110,	111,	111,	1011,	1011
2017-01-04 14:12:23 AI_Player.update()		1011,	110,	111,	1010,	1010,	1010,	1100
2017-01-04 14:12:23 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-04 14:12:23 AI_Player.update()		11,	110,	1101,	1010,	1010,	1010,	11
2017-01-04 14:12:23 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:23 AI_Player.update()	update
2017-01-04 14:12:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:23 AI_Player.update()	update
2017-01-04 14:12:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:23 AI_Player.update()	Search took836ms
2017-01-04 14:12:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:23 AI_Player.update()		110,	101,	111,	1110,	111,	1001,	11
2017-01-04 14:12:23 AI_Player.update()		1110,	1011,	11,	11,	11,	101,	11
2017-01-04 14:12:23 AI_Player.update()		1110,	1010,	1110,	111,	111,	1011,	1011
2017-01-04 14:12:23 AI_Player.update()		1011,	110,	111,	1010,	1010,	1010,	1100
2017-01-04 14:12:23 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-04 14:12:23 AI_Player.update()		11,	110,	1101,	1010,	1010,	1010,	11
2017-01-04 14:12:23 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:23 AI_Player.update()	update
2017-01-04 14:12:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:23 AI_Player.update()	update
2017-01-04 14:12:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:24 AI_Player.update()	Search took326ms
2017-01-04 14:12:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:24 AI_Player.update()		110,	1011,	111,	1110,	111,	1001,	11
2017-01-04 14:12:24 AI_Player.update()		1110,	1010,	11,	11,	11,	101,	11
2017-01-04 14:12:24 AI_Player.update()		1110,	110,	1110,	111,	111,	1011,	1011
2017-01-04 14:12:24 AI_Player.update()		1011,	110,	111,	1010,	1010,	1010,	1100
2017-01-04 14:12:24 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-04 14:12:24 AI_Player.update()		11,	1100,	1101,	1010,	1010,	1010,	11
2017-01-04 14:12:24 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:24 AI_Player.update()	update
2017-01-04 14:12:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:24 AI_Player.update()	update
2017-01-04 14:12:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:24 AI_Player.update()	Search took569ms
2017-01-04 14:12:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:24 AI_Player.update()		110,	1011,	111,	1110,	111,	1001,	11
2017-01-04 14:12:24 AI_Player.update()		11,	1110,	1010,	11,	11,	11,	101
2017-01-04 14:12:24 AI_Player.update()		1110,	110,	1110,	111,	111,	1011,	1011
2017-01-04 14:12:24 AI_Player.update()		1011,	110,	111,	1010,	1010,	1010,	1100
2017-01-04 14:12:24 AI_Player.update()		1110,	110,	1101,	110,	1011,	110,	1011
2017-01-04 14:12:24 AI_Player.update()		11,	1100,	1101,	1010,	1010,	1010,	11
2017-01-04 14:12:24 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:24 AI_Player.update()	update
2017-01-04 14:12:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:24 AI_Player.update()	update
2017-01-04 14:12:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:25 AI_Player.update()	Search took137ms
2017-01-04 14:12:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:25 AI_Player.update()		110,	1110,	111,	1110,	111,	1001,	11
2017-01-04 14:12:25 AI_Player.update()		11,	110,	1010,	11,	11,	11,	101
2017-01-04 14:12:25 AI_Player.update()		1110,	110,	1110,	111,	111,	1011,	1011
2017-01-04 14:12:25 AI_Player.update()		1011,	110,	111,	1010,	1010,	1010,	1100
2017-01-04 14:12:25 AI_Player.update()		1110,	1100,	1101,	110,	1011,	110,	1011
2017-01-04 14:12:25 AI_Player.update()		11,	101,	1101,	1010,	1010,	1010,	11
2017-01-04 14:12:25 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:25 AI_Player.update()	update
2017-01-04 14:12:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:25 AI_Player.update()	update
2017-01-04 14:12:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:25 AI_Player.update()	Search took560ms
2017-01-04 14:12:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:25 AI_Player.update()		110,	1110,	111,	1110,	111,	1001,	11
2017-01-04 14:12:25 AI_Player.update()		11,	110,	1010,	11,	11,	11,	101
2017-01-04 14:12:25 AI_Player.update()		1110,	110,	1110,	111,	111,	1011,	1011
2017-01-04 14:12:25 AI_Player.update()		1011,	110,	111,	1010,	1010,	1010,	1100
2017-01-04 14:12:25 AI_Player.update()		1110,	1100,	1101,	110,	1011,	110,	1011
2017-01-04 14:12:25 AI_Player.update()		101,	1101,	1010,	1010,	1010,	11,	11
2017-01-04 14:12:25 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:25 AI_Player.update()	update
2017-01-04 14:12:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:25 AI_Player.update()	update
2017-01-04 14:12:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:26 AI_Player.update()	Search took441ms
2017-01-04 14:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()		110,	1110,	111,	1110,	111,	1001,	11
2017-01-04 14:12:26 AI_Player.update()		101,	11,	110,	1010,	11,	11,	11
2017-01-04 14:12:26 AI_Player.update()		1110,	110,	1110,	111,	111,	1011,	1011
2017-01-04 14:12:26 AI_Player.update()		1011,	110,	111,	1010,	1010,	1010,	1100
2017-01-04 14:12:26 AI_Player.update()		1110,	1100,	1101,	110,	1011,	110,	1011
2017-01-04 14:12:26 AI_Player.update()		101,	1101,	1010,	1010,	1010,	11,	11
2017-01-04 14:12:26 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()	update
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()	update
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:26 AI_Player.update()	Search took43ms
2017-01-04 14:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()		110,	11,	111,	1110,	111,	1001,	11
2017-01-04 14:12:26 AI_Player.update()		101,	110,	110,	1010,	11,	11,	11
2017-01-04 14:12:26 AI_Player.update()		1110,	110,	1110,	111,	111,	1011,	1011
2017-01-04 14:12:26 AI_Player.update()		1011,	1100,	111,	1010,	1010,	1010,	1100
2017-01-04 14:12:26 AI_Player.update()		1110,	1101,	1101,	110,	1011,	110,	1011
2017-01-04 14:12:26 AI_Player.update()		101,	1011,	1010,	1010,	1010,	11,	11
2017-01-04 14:12:26 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()	update
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()	update
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:26 AI_Player.update()	Search took170ms
2017-01-04 14:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()		110,	11,	111,	1110,	111,	1001,	11
2017-01-04 14:12:26 AI_Player.update()		101,	110,	110,	1010,	11,	11,	11
2017-01-04 14:12:26 AI_Player.update()		1110,	110,	1110,	111,	111,	1011,	1011
2017-01-04 14:12:26 AI_Player.update()		1100,	1011,	1100,	111,	1010,	1010,	1010
2017-01-04 14:12:26 AI_Player.update()		1110,	1101,	1101,	110,	1011,	110,	1011
2017-01-04 14:12:26 AI_Player.update()		101,	1011,	1010,	1010,	1010,	11,	11
2017-01-04 14:12:26 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()	update
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()	update
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:26 AI_Player.update()	Search took118ms
2017-01-04 14:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()		110,	11,	111,	1110,	111,	1001,	11
2017-01-04 14:12:26 AI_Player.update()		101,	110,	110,	1010,	11,	11,	11
2017-01-04 14:12:26 AI_Player.update()		1110,	110,	1110,	111,	111,	1011,	1011
2017-01-04 14:12:26 AI_Player.update()		1100,	1011,	1100,	111,	1010,	1010,	1010
2017-01-04 14:12:26 AI_Player.update()		1110,	1101,	1101,	110,	1011,	110,	1011
2017-01-04 14:12:26 AI_Player.update()		11,	101,	1011,	1010,	1010,	1010,	11
2017-01-04 14:12:26 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()	update
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()	update
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:26 AI_Player.update()	Search took187ms
2017-01-04 14:12:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 14:12:26 AI_Player.update()		101,	110,	110,	1010,	11,	1011,	11
2017-01-04 14:12:26 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 14:12:26 AI_Player.update()		1100,	1011,	1100,	111,	1010,	110,	1010
2017-01-04 14:12:26 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1010,	1011
2017-01-04 14:12:26 AI_Player.update()		11,	101,	1011,	1010,	1010,	1100,	11
2017-01-04 14:12:26 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:12:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()	update
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:26 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:26 AI_Player.update()	update
2017-01-04 14:12:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:27 AI_Player.update()	Search took583ms
2017-01-04 14:12:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:27 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 14:12:27 AI_Player.update()		110,	110,	1010,	11,	1011,	11,	101
2017-01-04 14:12:27 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 14:12:27 AI_Player.update()		1100,	1011,	1100,	111,	1010,	110,	1010
2017-01-04 14:12:27 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1010,	1011
2017-01-04 14:12:27 AI_Player.update()		11,	101,	1011,	1010,	1010,	1100,	11
2017-01-04 14:12:27 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:27 AI_Player.update()	update
2017-01-04 14:12:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:27 AI_Player.update()	update
2017-01-04 14:12:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:27 AI_Player.update()	Search took266ms
2017-01-04 14:12:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:27 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 14:12:27 AI_Player.update()		110,	110,	1010,	11,	1011,	11,	101
2017-01-04 14:12:27 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 14:12:27 AI_Player.update()		1010,	1100,	1011,	1100,	111,	1010,	110
2017-01-04 14:12:27 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1010,	1011
2017-01-04 14:12:27 AI_Player.update()		11,	101,	1011,	1010,	1010,	1100,	11
2017-01-04 14:12:27 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:12:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:27 AI_Player.update()	update
2017-01-04 14:12:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:12:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:27 AI_Player.update()	update
2017-01-04 14:12:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:28 AI_Player.update()	Search took759ms
2017-01-04 14:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()		110,	11,	111,	1110,	111,	11,	11
2017-01-04 14:12:28 AI_Player.update()		110,	1010,	11,	1011,	11,	101,	110
2017-01-04 14:12:28 AI_Player.update()		1110,	110,	1110,	111,	111,	1010,	1011
2017-01-04 14:12:28 AI_Player.update()		1010,	1100,	1011,	1100,	111,	1010,	110
2017-01-04 14:12:28 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1010,	1011
2017-01-04 14:12:28 AI_Player.update()		11,	101,	1011,	1010,	1010,	1100,	11
2017-01-04 14:12:28 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()	update
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:28 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:12:28 AI_Player.update()	Player a has won!
2017-01-04 14:12:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:28 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:12:28 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:28 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()	update
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:28 AI_Player.update()	Search took370ms
2017-01-04 14:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()		110,	1011,	111,	1010,	111,	1001,	11
2017-01-04 14:12:28 AI_Player.update()		1010,	1101,	1010,	1110,	1101,	1101,	110
2017-01-04 14:12:28 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-04 14:12:28 AI_Player.update()		1100,	1011,	1100,	1100,	1101,	110,	101
2017-01-04 14:12:28 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:28 AI_Player.update()		101,	101,	1001,	1100,	101,	1001,	1010
2017-01-04 14:12:28 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()	update
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()	update
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:28 AI_Player.update()	Search took43ms
2017-01-04 14:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()		110,	1011,	111,	1010,	111,	1001,	11
2017-01-04 14:12:28 AI_Player.update()		1101,	1010,	1110,	1101,	1101,	110,	1010
2017-01-04 14:12:28 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-04 14:12:28 AI_Player.update()		1100,	1011,	1100,	1100,	1101,	110,	101
2017-01-04 14:12:28 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:28 AI_Player.update()		101,	101,	1001,	1100,	101,	1001,	1010
2017-01-04 14:12:28 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()	update
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()	update
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:28 AI_Player.update()	Search took274ms
2017-01-04 14:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()		110,	1011,	111,	1010,	111,	1001,	11
2017-01-04 14:12:28 AI_Player.update()		1010,	1110,	1101,	1101,	110,	1010,	1101
2017-01-04 14:12:28 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-04 14:12:28 AI_Player.update()		1100,	1011,	1100,	1100,	1101,	110,	101
2017-01-04 14:12:28 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:28 AI_Player.update()		101,	101,	1001,	1100,	101,	1001,	1010
2017-01-04 14:12:28 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()	update
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()	update
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:28 AI_Player.update()	Search took15ms
2017-01-04 14:12:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()		110,	1011,	111,	1010,	111,	1001,	11
2017-01-04 14:12:28 AI_Player.update()		1101,	1010,	1110,	1101,	1101,	110,	1010
2017-01-04 14:12:28 AI_Player.update()		1110,	11,	1110,	1010,	111,	110,	1011
2017-01-04 14:12:28 AI_Player.update()		1100,	1011,	1100,	1100,	1101,	110,	101
2017-01-04 14:12:28 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-04 14:12:28 AI_Player.update()		101,	101,	1001,	1100,	101,	1001,	1010
2017-01-04 14:12:28 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:12:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()	update
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:28 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:28 AI_Player.update()	update
2017-01-04 14:12:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:29 AI_Player.update()	Search took289ms
2017-01-04 14:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:29 AI_Player.update()		110,	1011,	111,	1101,	111,	1001,	11
2017-01-04 14:12:29 AI_Player.update()		1101,	1010,	1110,	1010,	1101,	110,	1010
2017-01-04 14:12:29 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-04 14:12:29 AI_Player.update()		1100,	1011,	1100,	101,	1101,	110,	101
2017-01-04 14:12:29 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	101,	1011
2017-01-04 14:12:29 AI_Player.update()		101,	101,	1001,	1100,	101,	1001,	1010
2017-01-04 14:12:29 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:29 AI_Player.update()	update
2017-01-04 14:12:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:29 AI_Player.update()	update
2017-01-04 14:12:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:29 AI_Player.update()	Search took73ms
2017-01-04 14:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:29 AI_Player.update()		110,	1011,	111,	1101,	111,	1001,	11
2017-01-04 14:12:29 AI_Player.update()		1010,	1101,	1010,	1110,	1010,	1101,	110
2017-01-04 14:12:29 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-04 14:12:29 AI_Player.update()		1100,	1011,	1100,	101,	1101,	110,	101
2017-01-04 14:12:29 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	101,	1011
2017-01-04 14:12:29 AI_Player.update()		101,	101,	1001,	1100,	101,	1001,	1010
2017-01-04 14:12:29 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:29 AI_Player.update()	update
2017-01-04 14:12:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:29 AI_Player.update()	update
2017-01-04 14:12:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:29 AI_Player.update()	Search took380ms
2017-01-04 14:12:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:29 AI_Player.update()		110,	1011,	111,	1101,	111,	1101,	11
2017-01-04 14:12:29 AI_Player.update()		1010,	1101,	1010,	1110,	1010,	110,	110
2017-01-04 14:12:29 AI_Player.update()		1110,	11,	1110,	1100,	111,	110,	1011
2017-01-04 14:12:29 AI_Player.update()		1100,	1011,	1100,	101,	1101,	101,	101
2017-01-04 14:12:29 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:29 AI_Player.update()		101,	101,	1001,	1100,	101,	1010,	1010
2017-01-04 14:12:29 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:12:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:29 AI_Player.update()	update
2017-01-04 14:12:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:29 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:29 AI_Player.update()	update
2017-01-04 14:12:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:30 AI_Player.update()	Search took516ms
2017-01-04 14:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()		110,	1011,	111,	1110,	111,	1101,	11
2017-01-04 14:12:30 AI_Player.update()		1010,	1101,	1010,	1100,	1010,	110,	110
2017-01-04 14:12:30 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-04 14:12:30 AI_Player.update()		1100,	1011,	1100,	1100,	1101,	101,	101
2017-01-04 14:12:30 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:30 AI_Player.update()		101,	101,	1001,	1010,	101,	1010,	1010
2017-01-04 14:12:30 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1001,	1001
2017-01-04 14:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()	update
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()	update
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:30 AI_Player.update()	Search took151ms
2017-01-04 14:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()		110,	1011,	111,	1110,	111,	110,	11
2017-01-04 14:12:30 AI_Player.update()		1010,	1101,	1010,	1100,	1010,	110,	110
2017-01-04 14:12:30 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 14:12:30 AI_Player.update()		1100,	1011,	1100,	1100,	1101,	1001,	101
2017-01-04 14:12:30 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:30 AI_Player.update()		101,	101,	1001,	1010,	101,	1001,	1010
2017-01-04 14:12:30 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1101,	1001
2017-01-04 14:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()	update
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()	update
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:30 AI_Player.update()	Search took278ms
2017-01-04 14:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()		110,	1101,	111,	1110,	111,	110,	11
2017-01-04 14:12:30 AI_Player.update()		1010,	11,	1010,	1100,	1010,	110,	110
2017-01-04 14:12:30 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-04 14:12:30 AI_Player.update()		1100,	1101,	1100,	1100,	1101,	1001,	101
2017-01-04 14:12:30 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:30 AI_Player.update()		101,	110,	1001,	1010,	101,	1001,	1010
2017-01-04 14:12:30 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1101,	1001
2017-01-04 14:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()	update
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()	update
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:30 AI_Player.update()	Search took150ms
2017-01-04 14:12:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()		110,	1011,	111,	1110,	111,	110,	11
2017-01-04 14:12:30 AI_Player.update()		1010,	1101,	1010,	1100,	1010,	110,	110
2017-01-04 14:12:30 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 14:12:30 AI_Player.update()		1100,	1011,	1100,	1100,	1101,	1001,	101
2017-01-04 14:12:30 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:30 AI_Player.update()		101,	101,	1001,	1010,	101,	1001,	1010
2017-01-04 14:12:30 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1101,	1001
2017-01-04 14:12:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()	update
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:30 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:30 AI_Player.update()	update
2017-01-04 14:12:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:31 AI_Player.update()	Search took269ms
2017-01-04 14:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()		110,	1101,	111,	1110,	111,	110,	11
2017-01-04 14:12:31 AI_Player.update()		1010,	11,	1010,	1100,	1010,	110,	110
2017-01-04 14:12:31 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-04 14:12:31 AI_Player.update()		1100,	1101,	1100,	1100,	1101,	1001,	101
2017-01-04 14:12:31 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:31 AI_Player.update()		101,	110,	1001,	1010,	101,	1001,	1010
2017-01-04 14:12:31 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	1101,	1001
2017-01-04 14:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()	update
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()	update
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:31 AI_Player.update()	Search took146ms
2017-01-04 14:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()		110,	1011,	111,	1110,	111,	110,	11
2017-01-04 14:12:31 AI_Player.update()		1010,	1101,	1010,	1100,	1010,	110,	110
2017-01-04 14:12:31 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 14:12:31 AI_Player.update()		1100,	1011,	1100,	1100,	1101,	1001,	101
2017-01-04 14:12:31 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:31 AI_Player.update()		101,	101,	1001,	1010,	101,	1001,	1010
2017-01-04 14:12:31 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1101,	1001
2017-01-04 14:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()	update
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()	update
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:31 AI_Player.update()	Search took267ms
2017-01-04 14:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()		110,	1011,	111,	1110,	111,	110,	11
2017-01-04 14:12:31 AI_Player.update()		1010,	1101,	1010,	1100,	1010,	110,	110
2017-01-04 14:12:31 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 14:12:31 AI_Player.update()		1011,	1100,	1100,	1101,	1001,	101,	1100
2017-01-04 14:12:31 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:31 AI_Player.update()		101,	101,	1001,	1010,	101,	1001,	1010
2017-01-04 14:12:31 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1101,	1001
2017-01-04 14:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()	update
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()	update
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:31 AI_Player.update()	Search took317ms
2017-01-04 14:12:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-04 14:12:31 AI_Player.update()		1010,	1011,	1010,	1100,	1010,	110,	110
2017-01-04 14:12:31 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-04 14:12:31 AI_Player.update()		1011,	11,	1100,	1101,	1001,	101,	1100
2017-01-04 14:12:31 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:31 AI_Player.update()		101,	1101,	1001,	1010,	101,	1001,	1010
2017-01-04 14:12:31 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1101,	1001
2017-01-04 14:12:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()	update
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:31 AI_Player.update()	update
2017-01-04 14:12:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:32 AI_Player.update()	Search took802ms
2017-01-04 14:12:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:32 AI_Player.update()		110,	110,	111,	1110,	111,	110,	11
2017-01-04 14:12:32 AI_Player.update()		1010,	1011,	1010,	1100,	1010,	110,	110
2017-01-04 14:12:32 AI_Player.update()		1110,	1101,	1110,	101,	111,	101,	1011
2017-01-04 14:12:32 AI_Player.update()		11,	1100,	1101,	1001,	101,	1100,	1011
2017-01-04 14:12:32 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:32 AI_Player.update()		101,	1101,	1001,	1010,	101,	1001,	1010
2017-01-04 14:12:32 AI_Player.update()		1100,	101,	1101,	1101,	1101,	1101,	1001
2017-01-04 14:12:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:32 AI_Player.update()	update
2017-01-04 14:12:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:32 AI_Player.update()	update
2017-01-04 14:12:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:33 AI_Player.update()	Search took746ms
2017-01-04 14:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:33 AI_Player.update()		110,	1011,	111,	1110,	111,	110,	11
2017-01-04 14:12:33 AI_Player.update()		1010,	1101,	1010,	1100,	1010,	110,	110
2017-01-04 14:12:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	101,	1011
2017-01-04 14:12:33 AI_Player.update()		11,	1100,	1101,	1001,	101,	1100,	1011
2017-01-04 14:12:33 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:33 AI_Player.update()		101,	101,	1001,	1010,	101,	1001,	1010
2017-01-04 14:12:33 AI_Player.update()		1100,	110,	1101,	1101,	1101,	1101,	1001
2017-01-04 14:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:33 AI_Player.update()	update
2017-01-04 14:12:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:33 AI_Player.update()	update
2017-01-04 14:12:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:33 AI_Player.update()	Search took415ms
2017-01-04 14:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:33 AI_Player.update()		110,	1011,	111,	1110,	111,	110,	11
2017-01-04 14:12:33 AI_Player.update()		1010,	1101,	1010,	1100,	1010,	101,	110
2017-01-04 14:12:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:33 AI_Player.update()		11,	1100,	1101,	1001,	101,	1010,	1011
2017-01-04 14:12:33 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:33 AI_Player.update()		101,	101,	1001,	1010,	101,	1101,	1010
2017-01-04 14:12:33 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-04 14:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:33 AI_Player.update()	update
2017-01-04 14:12:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:33 AI_Player.update()	update
2017-01-04 14:12:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:33 AI_Player.update()	Search took187ms
2017-01-04 14:12:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:33 AI_Player.update()		110,	1011,	111,	1110,	111,	110,	11
2017-01-04 14:12:33 AI_Player.update()		1010,	1101,	1010,	1100,	1010,	101,	110
2017-01-04 14:12:33 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:33 AI_Player.update()		11,	1100,	1101,	1001,	101,	1010,	1011
2017-01-04 14:12:33 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:33 AI_Player.update()		101,	1001,	1010,	101,	1101,	1010,	101
2017-01-04 14:12:33 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-04 14:12:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:33 AI_Player.update()	update
2017-01-04 14:12:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:33 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:33 AI_Player.update()	update
2017-01-04 14:12:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:34 AI_Player.update()	Search took77ms
2017-01-04 14:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()		110,	1011,	111,	1110,	111,	110,	11
2017-01-04 14:12:34 AI_Player.update()		1010,	1101,	1010,	1100,	1010,	101,	110
2017-01-04 14:12:34 AI_Player.update()		1110,	1100,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:34 AI_Player.update()		1011,	11,	1100,	1101,	1001,	101,	1010
2017-01-04 14:12:34 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:34 AI_Player.update()		101,	1001,	1010,	101,	1101,	1010,	101
2017-01-04 14:12:34 AI_Player.update()		1100,	110,	1101,	1101,	1101,	110,	1001
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:34 AI_Player.update()	Search took151ms
2017-01-04 14:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()		110,	1101,	111,	1110,	111,	110,	11
2017-01-04 14:12:34 AI_Player.update()		1010,	1100,	1010,	1100,	1010,	101,	110
2017-01-04 14:12:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:34 AI_Player.update()		1011,	1101,	1100,	1101,	1001,	101,	1010
2017-01-04 14:12:34 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:34 AI_Player.update()		101,	110,	1010,	101,	1101,	1010,	101
2017-01-04 14:12:34 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	110,	1001
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:34 AI_Player.update()	Search took64ms
2017-01-04 14:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()		110,	1100,	111,	1110,	111,	110,	11
2017-01-04 14:12:34 AI_Player.update()		1010,	11,	1010,	1100,	1010,	101,	110
2017-01-04 14:12:34 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:34 AI_Player.update()		1011,	1001,	1100,	1101,	1001,	101,	1010
2017-01-04 14:12:34 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:34 AI_Player.update()		101,	1011,	1010,	101,	1101,	1010,	101
2017-01-04 14:12:34 AI_Player.update()		1100,	1101,	1101,	1101,	1101,	110,	1001
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:34 AI_Player.update()	Search took306ms
2017-01-04 14:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()		110,	1101,	111,	1110,	111,	110,	11
2017-01-04 14:12:34 AI_Player.update()		1010,	1100,	1010,	1100,	1010,	101,	110
2017-01-04 14:12:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:34 AI_Player.update()		1011,	1101,	1100,	1101,	1001,	101,	1010
2017-01-04 14:12:34 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:34 AI_Player.update()		101,	110,	1010,	101,	1101,	1010,	101
2017-01-04 14:12:34 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	110,	1001
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:34 AI_Player.update()	Search took35ms
2017-01-04 14:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()		110,	1101,	111,	1110,	111,	110,	11
2017-01-04 14:12:34 AI_Player.update()		1010,	1100,	1010,	1100,	1010,	101,	110
2017-01-04 14:12:34 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:34 AI_Player.update()		1010,	1011,	1101,	1100,	1101,	1001,	101
2017-01-04 14:12:34 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:34 AI_Player.update()		101,	110,	1010,	101,	1101,	1010,	101
2017-01-04 14:12:34 AI_Player.update()		1100,	1011,	1101,	1101,	1101,	110,	1001
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:34 AI_Player.update()	Search took164ms
2017-01-04 14:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()		110,	1101,	111,	1101,	111,	110,	11
2017-01-04 14:12:34 AI_Player.update()		1010,	1100,	1010,	1110,	1010,	101,	110
2017-01-04 14:12:34 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:34 AI_Player.update()		1010,	1011,	1101,	101,	1101,	1001,	101
2017-01-04 14:12:34 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:34 AI_Player.update()		101,	110,	1010,	1100,	1101,	1010,	101
2017-01-04 14:12:34 AI_Player.update()		1100,	1011,	1101,	101,	1101,	110,	1001
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:34 AI_Player.update()	Search took50ms
2017-01-04 14:12:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()		110,	1011,	111,	1101,	111,	110,	11
2017-01-04 14:12:34 AI_Player.update()		1010,	1101,	1010,	1110,	1010,	101,	110
2017-01-04 14:12:34 AI_Player.update()		1110,	1100,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:34 AI_Player.update()		1010,	11,	1101,	101,	1101,	1001,	101
2017-01-04 14:12:34 AI_Player.update()		1110,	1011,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:34 AI_Player.update()		101,	1001,	1010,	1100,	1101,	1010,	101
2017-01-04 14:12:34 AI_Player.update()		1100,	110,	1101,	101,	1101,	110,	1001
2017-01-04 14:12:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:12:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:34 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:34 AI_Player.update()	update
2017-01-04 14:12:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:35 AI_Player.update()	Search took391ms
2017-01-04 14:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()		110,	110,	111,	1101,	111,	110,	11
2017-01-04 14:12:35 AI_Player.update()		1010,	1011,	1010,	1110,	1010,	101,	110
2017-01-04 14:12:35 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1100,	1011
2017-01-04 14:12:35 AI_Player.update()		1010,	1100,	1101,	101,	1101,	1001,	101
2017-01-04 14:12:35 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:35 AI_Player.update()		101,	1011,	1010,	1100,	1101,	1010,	101
2017-01-04 14:12:35 AI_Player.update()		1100,	1001,	1101,	101,	1101,	110,	1001
2017-01-04 14:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()	update
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:35 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:12:35 AI_Player.update()	Player a has won!
2017-01-04 14:12:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:35 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:12:35 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:35 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()	update
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:35 AI_Player.update()	Search took231ms
2017-01-04 14:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()		110,	110,	111,	1010,	111,	1011,	11
2017-01-04 14:12:35 AI_Player.update()		1010,	101,	1010,	11,	1010,	1010,	1100
2017-01-04 14:12:35 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:35 AI_Player.update()		1110,	110,	1010,	11,	1100,	1101,	1101
2017-01-04 14:12:35 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-04 14:12:35 AI_Player.update()		1001,	1100,	11,	1100,	101,	1010,	101
2017-01-04 14:12:35 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 14:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()	update
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()	update
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:35 AI_Player.update()	Search took131ms
2017-01-04 14:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()		110,	110,	111,	1010,	111,	1011,	11
2017-01-04 14:12:35 AI_Player.update()		101,	1010,	11,	1010,	1010,	1100,	1010
2017-01-04 14:12:35 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:35 AI_Player.update()		1110,	110,	1010,	11,	1100,	1101,	1101
2017-01-04 14:12:35 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-04 14:12:35 AI_Player.update()		1001,	1100,	11,	1100,	101,	1010,	101
2017-01-04 14:12:35 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 14:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()	update
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()	update
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:35 AI_Player.update()	Search took143ms
2017-01-04 14:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()		110,	110,	111,	1010,	111,	1011,	11
2017-01-04 14:12:35 AI_Player.update()		101,	1010,	11,	1010,	1010,	1100,	1010
2017-01-04 14:12:35 AI_Player.update()		1110,	110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:35 AI_Player.update()		1101,	1110,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:35 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-04 14:12:35 AI_Player.update()		1001,	1100,	11,	1100,	101,	1010,	101
2017-01-04 14:12:35 AI_Player.update()		1100,	11,	1101,	1010,	1101,	101,	1001
2017-01-04 14:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()	update
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()	update
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:35 AI_Player.update()	Search took133ms
2017-01-04 14:12:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-04 14:12:35 AI_Player.update()		101,	110,	11,	1010,	1010,	1100,	1010
2017-01-04 14:12:35 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:35 AI_Player.update()		1101,	11,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:35 AI_Player.update()		1110,	1100,	1101,	111,	1011,	11,	1011
2017-01-04 14:12:35 AI_Player.update()		1001,	11,	11,	1100,	101,	1010,	101
2017-01-04 14:12:35 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 14:12:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()	update
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:35 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:35 AI_Player.update()	update
2017-01-04 14:12:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:36 AI_Player.update()	Search took317ms
2017-01-04 14:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()		110,	1010,	111,	1010,	111,	1100,	11
2017-01-04 14:12:36 AI_Player.update()		101,	110,	11,	1010,	1010,	1001,	1010
2017-01-04 14:12:36 AI_Player.update()		1110,	1110,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:36 AI_Player.update()		1101,	11,	110,	1010,	11,	11,	1101
2017-01-04 14:12:36 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1010,	1011
2017-01-04 14:12:36 AI_Player.update()		1001,	11,	11,	1100,	101,	101,	101
2017-01-04 14:12:36 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1011,	1001
2017-01-04 14:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()	update
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()	update
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:36 AI_Player.update()	Search took86ms
2017-01-04 14:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-04 14:12:36 AI_Player.update()		101,	110,	11,	1010,	1010,	1100,	1010
2017-01-04 14:12:36 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:36 AI_Player.update()		1101,	11,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:36 AI_Player.update()		1110,	1100,	1101,	111,	1011,	11,	1011
2017-01-04 14:12:36 AI_Player.update()		1001,	11,	11,	1100,	101,	1010,	101
2017-01-04 14:12:36 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 14:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()	update
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()	update
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:36 AI_Player.update()	Search took391ms
2017-01-04 14:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-04 14:12:36 AI_Player.update()		101,	110,	11,	1010,	1010,	1100,	1010
2017-01-04 14:12:36 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:36 AI_Player.update()		1101,	1101,	11,	110,	1010,	11,	1100
2017-01-04 14:12:36 AI_Player.update()		1110,	1100,	1101,	111,	1011,	11,	1011
2017-01-04 14:12:36 AI_Player.update()		1001,	11,	11,	1100,	101,	1010,	101
2017-01-04 14:12:36 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 14:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()	update
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()	update
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:36 AI_Player.update()	Search took91ms
2017-01-04 14:12:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-04 14:12:36 AI_Player.update()		101,	110,	11,	1010,	1010,	1100,	1010
2017-01-04 14:12:36 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:36 AI_Player.update()		1101,	11,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:36 AI_Player.update()		1110,	1100,	1101,	111,	1011,	11,	1011
2017-01-04 14:12:36 AI_Player.update()		1001,	11,	11,	1100,	101,	1010,	101
2017-01-04 14:12:36 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 14:12:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()	update
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:36 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:36 AI_Player.update()	update
2017-01-04 14:12:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:37 AI_Player.update()	Search took306ms
2017-01-04 14:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-04 14:12:37 AI_Player.update()		101,	110,	11,	1010,	1010,	1100,	1010
2017-01-04 14:12:37 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:37 AI_Player.update()		1101,	1101,	11,	110,	1010,	11,	1100
2017-01-04 14:12:37 AI_Player.update()		1110,	1100,	1101,	111,	1011,	11,	1011
2017-01-04 14:12:37 AI_Player.update()		1001,	11,	11,	1100,	101,	1010,	101
2017-01-04 14:12:37 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:37 AI_Player.update()	Search took91ms
2017-01-04 14:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()		110,	1010,	111,	1010,	111,	1011,	11
2017-01-04 14:12:37 AI_Player.update()		101,	110,	11,	1010,	1010,	1100,	1010
2017-01-04 14:12:37 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:37 AI_Player.update()		1101,	11,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:37 AI_Player.update()		1110,	1100,	1101,	111,	1011,	11,	1011
2017-01-04 14:12:37 AI_Player.update()		1001,	11,	11,	1100,	101,	1010,	101
2017-01-04 14:12:37 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:37 AI_Player.update()	Search took230ms
2017-01-04 14:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()		110,	110,	111,	1010,	111,	1011,	11
2017-01-04 14:12:37 AI_Player.update()		101,	1110,	11,	1010,	1010,	1100,	1010
2017-01-04 14:12:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:37 AI_Player.update()		1101,	1100,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:37 AI_Player.update()		1110,	11,	1101,	111,	1011,	11,	1011
2017-01-04 14:12:37 AI_Player.update()		1001,	110,	11,	1100,	101,	1010,	101
2017-01-04 14:12:37 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:37 AI_Player.update()	Search took121ms
2017-01-04 14:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 14:12:37 AI_Player.update()		101,	1110,	11,	1010,	1010,	1011,	1010
2017-01-04 14:12:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:37 AI_Player.update()		1101,	1100,	110,	1010,	11,	1001,	1101
2017-01-04 14:12:37 AI_Player.update()		1110,	11,	1101,	111,	1011,	1100,	1011
2017-01-04 14:12:37 AI_Player.update()		1001,	110,	11,	1100,	101,	11,	101
2017-01-04 14:12:37 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:37 AI_Player.update()	Search took179ms
2017-01-04 14:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 14:12:37 AI_Player.update()		101,	1110,	11,	1010,	1010,	101,	1010
2017-01-04 14:12:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 14:12:37 AI_Player.update()		1101,	1100,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:37 AI_Player.update()		1110,	11,	1101,	111,	1011,	1001,	1011
2017-01-04 14:12:37 AI_Player.update()		1001,	110,	11,	1100,	101,	1100,	101
2017-01-04 14:12:37 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:37 AI_Player.update()	Search took43ms
2017-01-04 14:12:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 14:12:37 AI_Player.update()		101,	1110,	11,	1010,	1010,	101,	1010
2017-01-04 14:12:37 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 14:12:37 AI_Player.update()		1101,	1100,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:37 AI_Player.update()		1110,	11,	1101,	111,	1011,	1001,	1011
2017-01-04 14:12:37 AI_Player.update()		110,	11,	1100,	101,	1100,	101,	1001
2017-01-04 14:12:37 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:37 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:37 AI_Player.update()	update
2017-01-04 14:12:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:38 AI_Player.update()	Search took285ms
2017-01-04 14:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 14:12:38 AI_Player.update()		101,	1110,	11,	1010,	1010,	1011,	1010
2017-01-04 14:12:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:38 AI_Player.update()		1101,	1100,	110,	1010,	11,	1001,	1101
2017-01-04 14:12:38 AI_Player.update()		1110,	11,	1101,	111,	1011,	101,	1011
2017-01-04 14:12:38 AI_Player.update()		110,	11,	1100,	101,	1100,	11,	1001
2017-01-04 14:12:38 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:38 AI_Player.update()	Search took57ms
2017-01-04 14:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 14:12:38 AI_Player.update()		101,	1110,	11,	1010,	1010,	1011,	1010
2017-01-04 14:12:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:12:38 AI_Player.update()		1101,	1100,	110,	1010,	11,	1001,	1101
2017-01-04 14:12:38 AI_Player.update()		1110,	11,	1101,	111,	1011,	101,	1011
2017-01-04 14:12:38 AI_Player.update()		1001,	110,	11,	1100,	101,	1100,	11
2017-01-04 14:12:38 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:38 AI_Player.update()	Search took175ms
2017-01-04 14:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 14:12:38 AI_Player.update()		101,	1110,	11,	1010,	1010,	101,	1010
2017-01-04 14:12:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 14:12:38 AI_Player.update()		1101,	1100,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:38 AI_Player.update()		1110,	11,	1101,	111,	1011,	1001,	1011
2017-01-04 14:12:38 AI_Player.update()		1001,	110,	11,	1100,	101,	101,	11
2017-01-04 14:12:38 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:38 AI_Player.update()	Search took28ms
2017-01-04 14:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 14:12:38 AI_Player.update()		1010,	101,	1110,	11,	1010,	1010,	101
2017-01-04 14:12:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 14:12:38 AI_Player.update()		1101,	1100,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:38 AI_Player.update()		1110,	11,	1101,	111,	1011,	1001,	1011
2017-01-04 14:12:38 AI_Player.update()		1001,	110,	11,	1100,	101,	101,	11
2017-01-04 14:12:38 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:38 AI_Player.update()	Search took335ms
2017-01-04 14:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 14:12:38 AI_Player.update()		1010,	110,	1110,	11,	1010,	1010,	101
2017-01-04 14:12:38 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 14:12:38 AI_Player.update()		1101,	11,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:38 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1001,	1011
2017-01-04 14:12:38 AI_Player.update()		1001,	11,	11,	1100,	101,	101,	11
2017-01-04 14:12:38 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:38 AI_Player.update()	Search took17ms
2017-01-04 14:12:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 14:12:38 AI_Player.update()		1010,	101,	1110,	11,	1010,	1010,	101
2017-01-04 14:12:38 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 14:12:38 AI_Player.update()		1101,	1100,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:38 AI_Player.update()		1110,	11,	1101,	111,	1011,	1001,	1011
2017-01-04 14:12:38 AI_Player.update()		1001,	110,	11,	1100,	101,	101,	11
2017-01-04 14:12:38 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:38 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:38 AI_Player.update()	update
2017-01-04 14:12:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:39 AI_Player.update()	Search took372ms
2017-01-04 14:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 14:12:39 AI_Player.update()		1010,	110,	1110,	11,	1010,	1010,	101
2017-01-04 14:12:39 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 14:12:39 AI_Player.update()		1101,	11,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:39 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1001,	1011
2017-01-04 14:12:39 AI_Player.update()		1001,	11,	11,	1100,	101,	101,	11
2017-01-04 14:12:39 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:39 AI_Player.update()	Search took14ms
2017-01-04 14:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 14:12:39 AI_Player.update()		1010,	101,	1110,	11,	1010,	1010,	101
2017-01-04 14:12:39 AI_Player.update()		1110,	11,	1110,	101,	111,	1011,	1011
2017-01-04 14:12:39 AI_Player.update()		1101,	1100,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:39 AI_Player.update()		1110,	11,	1101,	111,	1011,	1001,	1011
2017-01-04 14:12:39 AI_Player.update()		1001,	110,	11,	1100,	101,	101,	11
2017-01-04 14:12:39 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:39 AI_Player.update()	Search took376ms
2017-01-04 14:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 14:12:39 AI_Player.update()		1010,	110,	1110,	11,	1010,	1010,	101
2017-01-04 14:12:39 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 14:12:39 AI_Player.update()		1101,	11,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:39 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1001,	1011
2017-01-04 14:12:39 AI_Player.update()		1001,	11,	11,	1100,	101,	101,	11
2017-01-04 14:12:39 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:39 AI_Player.update()	Search took13ms
2017-01-04 14:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 14:12:39 AI_Player.update()		1010,	110,	1110,	11,	1010,	1010,	101
2017-01-04 14:12:39 AI_Player.update()		1110,	101,	1110,	101,	111,	1011,	1011
2017-01-04 14:12:39 AI_Player.update()		1101,	11,	110,	1010,	11,	1100,	1101
2017-01-04 14:12:39 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1001,	1011
2017-01-04 14:12:39 AI_Player.update()		11,	1001,	11,	11,	1100,	101,	101
2017-01-04 14:12:39 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:39 AI_Player.update()	Search took375ms
2017-01-04 14:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 14:12:39 AI_Player.update()		1010,	110,	1110,	1010,	1010,	1010,	101
2017-01-04 14:12:39 AI_Player.update()		1110,	101,	1110,	11,	111,	1011,	1011
2017-01-04 14:12:39 AI_Player.update()		1101,	11,	110,	101,	11,	1100,	1101
2017-01-04 14:12:39 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:12:39 AI_Player.update()		11,	1001,	11,	111,	1100,	101,	101
2017-01-04 14:12:39 AI_Player.update()		1100,	110,	1101,	11,	1101,	1100,	1001
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:12:39 AI_Player.update()	Player a has won!
2017-01-04 14:12:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:39 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:12:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:39 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:39 AI_Player.update()	Search took26ms
2017-01-04 14:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()		110,	101,	111,	1100,	111,	1100,	11
2017-01-04 14:12:39 AI_Player.update()		1001,	1010,	101,	101,	1011,	11,	101
2017-01-04 14:12:39 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-04 14:12:39 AI_Player.update()		1001,	1100,	101,	1100,	101,	1010,	101
2017-01-04 14:12:39 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 14:12:39 AI_Player.update()		1010,	1010,	1001,	101,	110,	1010,	11
2017-01-04 14:12:39 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:39 AI_Player.update()	Search took21ms
2017-01-04 14:12:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 14:12:39 AI_Player.update()		1001,	1010,	101,	101,	1011,	1100,	101
2017-01-04 14:12:39 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-04 14:12:39 AI_Player.update()		1001,	1100,	101,	1100,	101,	1101,	101
2017-01-04 14:12:39 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 14:12:39 AI_Player.update()		1010,	1010,	1001,	101,	110,	110,	11
2017-01-04 14:12:39 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:39 AI_Player.update()	update
2017-01-04 14:12:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:40 AI_Player.update()	Search took81ms
2017-01-04 14:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()		110,	101,	111,	1100,	111,	1110,	11
2017-01-04 14:12:40 AI_Player.update()		101,	1001,	1010,	101,	101,	1011,	1100
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1110,	11,	111,	11,	1011
2017-01-04 14:12:40 AI_Player.update()		1001,	1100,	101,	1100,	101,	1101,	101
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 14:12:40 AI_Player.update()		1010,	1010,	1001,	101,	110,	110,	11
2017-01-04 14:12:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:40 AI_Player.update()	Search took91ms
2017-01-04 14:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 14:12:40 AI_Player.update()		101,	1001,	1010,	101,	101,	11,	1100
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-04 14:12:40 AI_Player.update()		1001,	1100,	101,	1100,	101,	1010,	101
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 14:12:40 AI_Player.update()		1010,	1010,	1001,	101,	110,	1010,	11
2017-01-04 14:12:40 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1110,	1001
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:40 AI_Player.update()	Search took159ms
2017-01-04 14:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 14:12:40 AI_Player.update()		101,	1001,	1010,	1100,	101,	11,	1100
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 14:12:40 AI_Player.update()		1001,	1100,	101,	11,	101,	1010,	101
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-04 14:12:40 AI_Player.update()		1010,	1010,	1001,	11,	110,	1010,	11
2017-01-04 14:12:40 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:40 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:40 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:40 AI_Player.update()	Search took189ms
2017-01-04 14:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:40 AI_Player.update()		101,	1001,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:40 AI_Player.update()		1001,	1100,	101,	11,	101,	110,	101
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:40 AI_Player.update()		1010,	1010,	1001,	11,	110,	1110,	11
2017-01-04 14:12:40 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:40 AI_Player.update()	Search took106ms
2017-01-04 14:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 14:12:40 AI_Player.update()		101,	1001,	1010,	1100,	101,	11,	1100
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 14:12:40 AI_Player.update()		1001,	1100,	101,	11,	101,	1010,	101
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	110,	1011
2017-01-04 14:12:40 AI_Player.update()		1010,	1010,	1001,	11,	110,	1010,	11
2017-01-04 14:12:40 AI_Player.update()		1100,	101,	1101,	101,	1101,	1110,	1001
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:40 AI_Player.update()	Search took198ms
2017-01-04 14:12:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:40 AI_Player.update()		101,	1001,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:40 AI_Player.update()		1001,	1100,	101,	11,	101,	110,	101
2017-01-04 14:12:40 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:40 AI_Player.update()		1010,	1010,	1001,	11,	110,	1110,	11
2017-01-04 14:12:40 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:40 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:40 AI_Player.update()	update
2017-01-04 14:12:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:41 AI_Player.update()	Search took209ms
2017-01-04 14:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()		110,	101,	111,	101,	111,	11,	11
2017-01-04 14:12:41 AI_Player.update()		101,	1001,	1010,	1010,	101,	1101,	1100
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		1001,	1100,	101,	101,	101,	110,	101
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		1010,	1010,	1001,	1100,	110,	1110,	11
2017-01-04 14:12:41 AI_Player.update()		1100,	101,	1101,	11,	1101,	1011,	1001
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:41 AI_Player.update()	Search took45ms
2017-01-04 14:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:41 AI_Player.update()		101,	1001,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		1001,	1100,	101,	11,	101,	110,	101
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		1010,	1010,	1001,	11,	110,	1110,	11
2017-01-04 14:12:41 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:41 AI_Player.update()	Search took357ms
2017-01-04 14:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:41 AI_Player.update()		101,	1001,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		1001,	1100,	101,	11,	101,	110,	101
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		11,	1010,	1010,	1001,	11,	110,	1110
2017-01-04 14:12:41 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:12:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:41 AI_Player.update()	Search took64ms
2017-01-04 14:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:41 AI_Player.update()		101,	1001,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		1001,	1100,	101,	11,	101,	110,	101
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		1010,	1010,	1001,	11,	110,	1110,	11
2017-01-04 14:12:41 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:41 AI_Player.update()	Search took379ms
2017-01-04 14:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:41 AI_Player.update()		101,	1001,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		1001,	1100,	101,	11,	101,	110,	101
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		1010,	1001,	11,	110,	1110,	11,	1010
2017-01-04 14:12:41 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:41 AI_Player.update()	Search took49ms
2017-01-04 14:12:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:41 AI_Player.update()		101,	1001,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		1001,	1100,	101,	11,	101,	110,	101
2017-01-04 14:12:41 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:41 AI_Player.update()		1010,	1010,	1001,	11,	110,	1110,	11
2017-01-04 14:12:41 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:41 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:41 AI_Player.update()	update
2017-01-04 14:12:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:42 AI_Player.update()	Search took152ms
2017-01-04 14:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:42 AI_Player.update()		101,	1001,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:42 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1001,	1100,	101,	11,	101,	110,	101
2017-01-04 14:12:42 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1010,	1001,	11,	110,	1110,	11,	1010
2017-01-04 14:12:42 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:42 AI_Player.update()	Search took53ms
2017-01-04 14:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:42 AI_Player.update()		101,	1001,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:42 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1001,	1100,	101,	11,	101,	110,	101
2017-01-04 14:12:42 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1010,	1010,	1001,	11,	110,	1110,	11
2017-01-04 14:12:42 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:42 AI_Player.update()	Search took101ms
2017-01-04 14:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:42 AI_Player.update()		101,	1001,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:42 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1001,	1100,	101,	11,	101,	110,	101
2017-01-04 14:12:42 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1010,	1001,	11,	110,	1110,	11,	1010
2017-01-04 14:12:42 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:42 AI_Player.update()	Search took54ms
2017-01-04 14:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:42 AI_Player.update()		101,	101,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:42 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1001,	1010,	101,	11,	101,	110,	101
2017-01-04 14:12:42 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1010,	1010,	11,	110,	1110,	11,	1010
2017-01-04 14:12:42 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:42 AI_Player.update()	Search took144ms
2017-01-04 14:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:42 AI_Player.update()		101,	101,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:42 AI_Player.update()		1110,	1001,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1001,	1010,	101,	11,	101,	110,	101
2017-01-04 14:12:42 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1010,	11,	110,	1110,	11,	1010,	1010
2017-01-04 14:12:42 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	5 1
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	6 1
2017-01-04 14:12:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:42 AI_Player.update()	Search took282ms
2017-01-04 14:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	11,	11
2017-01-04 14:12:42 AI_Player.update()		101,	1001,	1010,	1100,	101,	1101,	1100
2017-01-04 14:12:42 AI_Player.update()		1110,	1010,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1001,	1100,	101,	11,	101,	110,	101
2017-01-04 14:12:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:42 AI_Player.update()		1010,	1001,	110,	1110,	11,	1010,	1010
2017-01-04 14:12:42 AI_Player.update()		1100,	101,	1101,	101,	1101,	1011,	1001
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	6 1
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:42 AI_Player.update()	Search took79ms
2017-01-04 14:12:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 14:12:42 AI_Player.update()		101,	1001,	1010,	1100,	101,	11,	1100
2017-01-04 14:12:42 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 14:12:42 AI_Player.update()		1001,	1100,	101,	11,	101,	1010,	101
2017-01-04 14:12:42 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-04 14:12:42 AI_Player.update()		1010,	1001,	110,	1110,	11,	1010,	1010
2017-01-04 14:12:42 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 14:12:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:42 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:42 AI_Player.update()	update
2017-01-04 14:12:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:43 AI_Player.update()	Search took335ms
2017-01-04 14:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()		110,	101,	111,	1100,	111,	1011,	11
2017-01-04 14:12:43 AI_Player.update()		101,	1001,	1010,	101,	101,	11,	1100
2017-01-04 14:12:43 AI_Player.update()		1110,	1010,	1110,	11,	111,	1101,	1011
2017-01-04 14:12:43 AI_Player.update()		1001,	1100,	101,	1100,	101,	1010,	101
2017-01-04 14:12:43 AI_Player.update()		1110,	11,	1101,	1110,	1011,	110,	1011
2017-01-04 14:12:43 AI_Player.update()		1010,	1001,	110,	101,	11,	1010,	1010
2017-01-04 14:12:43 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:43 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()	update
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:43 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()	update
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:43 AI_Player.update()	Search took198ms
2017-01-04 14:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 14:12:43 AI_Player.update()		101,	1001,	1010,	1100,	101,	11,	1100
2017-01-04 14:12:43 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 14:12:43 AI_Player.update()		1001,	1100,	101,	11,	101,	1010,	101
2017-01-04 14:12:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-04 14:12:43 AI_Player.update()		1010,	1001,	110,	1110,	11,	1010,	1010
2017-01-04 14:12:43 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 14:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:43 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()	update
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:43 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()	update
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:43 AI_Player.update()	Search took362ms
2017-01-04 14:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()		110,	1001,	111,	1010,	111,	1011,	11
2017-01-04 14:12:43 AI_Player.update()		101,	1010,	1010,	1100,	101,	11,	1100
2017-01-04 14:12:43 AI_Player.update()		1110,	1100,	1110,	101,	111,	1101,	1011
2017-01-04 14:12:43 AI_Player.update()		1001,	11,	101,	11,	101,	1010,	101
2017-01-04 14:12:43 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 14:12:43 AI_Player.update()		1010,	101,	110,	1110,	11,	1010,	1010
2017-01-04 14:12:43 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 14:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:43 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()	update
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:43 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()	update
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:43 AI_Player.update()	Search took179ms
2017-01-04 14:12:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()		110,	101,	111,	1010,	111,	1011,	11
2017-01-04 14:12:43 AI_Player.update()		101,	1001,	1010,	1100,	101,	11,	1100
2017-01-04 14:12:43 AI_Player.update()		1110,	1010,	1110,	101,	111,	1101,	1011
2017-01-04 14:12:43 AI_Player.update()		1001,	1100,	101,	11,	101,	1010,	101
2017-01-04 14:12:43 AI_Player.update()		1110,	11,	1101,	1100,	1011,	110,	1011
2017-01-04 14:12:43 AI_Player.update()		1010,	1001,	110,	1110,	11,	1010,	1010
2017-01-04 14:12:43 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 14:12:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:43 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()	update
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:43 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:43 AI_Player.update()	update
2017-01-04 14:12:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:44 AI_Player.update()	Search took324ms
2017-01-04 14:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 14:12:44 AI_Player.update()		101,	1001,	1010,	1100,	101,	1011,	1100
2017-01-04 14:12:44 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 14:12:44 AI_Player.update()		1001,	1100,	101,	11,	101,	1101,	101
2017-01-04 14:12:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:44 AI_Player.update()		1010,	1001,	110,	1110,	11,	110,	1010
2017-01-04 14:12:44 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 14:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()	update
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()	update
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:44 AI_Player.update()	Search took97ms
2017-01-04 14:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()		110,	101,	111,	1010,	111,	1010,	11
2017-01-04 14:12:44 AI_Player.update()		101,	1001,	1010,	1100,	101,	1010,	1100
2017-01-04 14:12:44 AI_Player.update()		1110,	1010,	1110,	101,	111,	1011,	1011
2017-01-04 14:12:44 AI_Player.update()		1001,	1100,	101,	11,	101,	11,	101
2017-01-04 14:12:44 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1101,	1011
2017-01-04 14:12:44 AI_Player.update()		1010,	1001,	110,	1110,	11,	1010,	1010
2017-01-04 14:12:44 AI_Player.update()		1100,	101,	1101,	101,	1101,	110,	1001
2017-01-04 14:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()	update
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:44 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:12:44 AI_Player.update()	Player a has won!
2017-01-04 14:12:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:44 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:12:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:44 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()	update
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:44 AI_Player.update()	Search took78ms
2017-01-04 14:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()		110,	1001,	111,	1010,	111,	1010,	11
2017-01-04 14:12:44 AI_Player.update()		1110,	110,	1100,	1100,	1010,	101,	101
2017-01-04 14:12:44 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-04 14:12:44 AI_Player.update()		1010,	1001,	1010,	1010,	1001,	11,	110
2017-01-04 14:12:44 AI_Player.update()		1110,	11,	1101,	111,	1011,	1010,	1011
2017-01-04 14:12:44 AI_Player.update()		1101,	1010,	1011,	1110,	1100,	1100,	1011
2017-01-04 14:12:44 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()	update
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()	update
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:44 AI_Player.update()	Search took25ms
2017-01-04 14:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()		110,	1001,	111,	1010,	111,	1010,	11
2017-01-04 14:12:44 AI_Player.update()		110,	1100,	1100,	1010,	101,	101,	1110
2017-01-04 14:12:44 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-04 14:12:44 AI_Player.update()		1010,	1001,	1010,	1010,	1001,	11,	110
2017-01-04 14:12:44 AI_Player.update()		1110,	11,	1101,	111,	1011,	1010,	1011
2017-01-04 14:12:44 AI_Player.update()		1101,	1010,	1011,	1110,	1100,	1100,	1011
2017-01-04 14:12:44 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()	update
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()	update
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:44 AI_Player.update()	Search took264ms
2017-01-04 14:12:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-04 14:12:44 AI_Player.update()		110,	1011,	1100,	1010,	101,	101,	1110
2017-01-04 14:12:44 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 14:12:44 AI_Player.update()		1010,	11,	1010,	1010,	1001,	11,	110
2017-01-04 14:12:44 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1010,	1011
2017-01-04 14:12:44 AI_Player.update()		1101,	1101,	1011,	1110,	1100,	1100,	1011
2017-01-04 14:12:44 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()	update
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:44 AI_Player.update()	update
2017-01-04 14:12:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:45 AI_Player.update()	Search took288ms
2017-01-04 14:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:45 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-04 14:12:45 AI_Player.update()		1110,	110,	1011,	1100,	1010,	101,	101
2017-01-04 14:12:45 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 14:12:45 AI_Player.update()		1010,	11,	1010,	1010,	1001,	11,	110
2017-01-04 14:12:45 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1010,	1011
2017-01-04 14:12:45 AI_Player.update()		1101,	1101,	1011,	1110,	1100,	1100,	1011
2017-01-04 14:12:45 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:45 AI_Player.update()	update
2017-01-04 14:12:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:45 AI_Player.update()	update
2017-01-04 14:12:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:45 AI_Player.update()	Search took246ms
2017-01-04 14:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:45 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-04 14:12:45 AI_Player.update()		1110,	110,	1011,	1010,	1010,	101,	101
2017-01-04 14:12:45 AI_Player.update()		1110,	1001,	1110,	1100,	111,	101,	1011
2017-01-04 14:12:45 AI_Player.update()		1010,	11,	1010,	110,	1001,	11,	110
2017-01-04 14:12:45 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:45 AI_Player.update()		1101,	1101,	1011,	111,	1100,	1100,	1011
2017-01-04 14:12:45 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	11,	1001
2017-01-04 14:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:45 AI_Player.update()	update
2017-01-04 14:12:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:45 AI_Player.update()	update
2017-01-04 14:12:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:45 AI_Player.update()	Search took442ms
2017-01-04 14:12:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:45 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 14:12:45 AI_Player.update()		1110,	1001,	1011,	1010,	1010,	101,	101
2017-01-04 14:12:45 AI_Player.update()		1110,	11,	1110,	1100,	111,	101,	1011
2017-01-04 14:12:45 AI_Player.update()		1010,	1010,	1010,	110,	1001,	11,	110
2017-01-04 14:12:45 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:45 AI_Player.update()		1101,	1001,	1011,	111,	1100,	1100,	1011
2017-01-04 14:12:45 AI_Player.update()		1100,	1100,	1101,	1110,	1101,	11,	1001
2017-01-04 14:12:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:45 AI_Player.update()	update
2017-01-04 14:12:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:12:45 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:45 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:45 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:45 AI_Player.update()	update
2017-01-04 14:12:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:46 AI_Player.update()	Search took347ms
2017-01-04 14:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:46 AI_Player.update()		110,	110,	111,	1110,	111,	1010,	11
2017-01-04 14:12:46 AI_Player.update()		1110,	1001,	1011,	1010,	1010,	101,	101
2017-01-04 14:12:46 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 14:12:46 AI_Player.update()		1010,	1010,	1010,	1100,	1001,	11,	110
2017-01-04 14:12:46 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1010,	1011
2017-01-04 14:12:46 AI_Player.update()		1101,	1001,	1011,	1010,	1100,	1100,	1011
2017-01-04 14:12:46 AI_Player.update()		1100,	1100,	1101,	111,	1101,	11,	1001
2017-01-04 14:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:46 AI_Player.update()	update
2017-01-04 14:12:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:46 AI_Player.update()	update
2017-01-04 14:12:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:46 AI_Player.update()	Search took648ms
2017-01-04 14:12:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:46 AI_Player.update()		110,	1100,	111,	1110,	111,	1010,	11
2017-01-04 14:12:46 AI_Player.update()		1110,	110,	1011,	1010,	1010,	101,	101
2017-01-04 14:12:46 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 14:12:46 AI_Player.update()		1010,	11,	1010,	1100,	1001,	11,	110
2017-01-04 14:12:46 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 14:12:46 AI_Player.update()		1101,	1101,	1011,	1010,	1100,	1100,	1011
2017-01-04 14:12:46 AI_Player.update()		1100,	1001,	1101,	111,	1101,	11,	1001
2017-01-04 14:12:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:46 AI_Player.update()	update
2017-01-04 14:12:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:12:46 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:46 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:46 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:46 AI_Player.update()	update
2017-01-04 14:12:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:47 AI_Player.update()	Search took454ms
2017-01-04 14:12:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:47 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-04 14:12:47 AI_Player.update()		1110,	110,	1011,	1110,	1010,	101,	101
2017-01-04 14:12:47 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 14:12:47 AI_Player.update()		1010,	11,	1010,	1010,	1001,	11,	110
2017-01-04 14:12:47 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:47 AI_Player.update()		1101,	1101,	1011,	110,	1100,	1100,	1011
2017-01-04 14:12:47 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:47 AI_Player.update()	update
2017-01-04 14:12:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:12:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:47 AI_Player.update()	update
2017-01-04 14:12:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:48 AI_Player.update()	Search took762ms
2017-01-04 14:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:48 AI_Player.update()		110,	1100,	111,	1110,	111,	1010,	11
2017-01-04 14:12:48 AI_Player.update()		1110,	110,	1011,	1010,	1010,	101,	101
2017-01-04 14:12:48 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 14:12:48 AI_Player.update()		1010,	11,	1010,	1100,	1001,	11,	110
2017-01-04 14:12:48 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 14:12:48 AI_Player.update()		1101,	1101,	1011,	1010,	1100,	1100,	1011
2017-01-04 14:12:48 AI_Player.update()		1100,	1001,	1101,	111,	1101,	11,	1001
2017-01-04 14:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:48 AI_Player.update()	update
2017-01-04 14:12:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:12:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:48 AI_Player.update()	update
2017-01-04 14:12:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:48 AI_Player.update()	Search took490ms
2017-01-04 14:12:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:48 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-04 14:12:48 AI_Player.update()		1110,	110,	1011,	1110,	1010,	101,	101
2017-01-04 14:12:48 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 14:12:48 AI_Player.update()		1010,	11,	1010,	1010,	1001,	11,	110
2017-01-04 14:12:48 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:48 AI_Player.update()		1101,	1101,	1011,	110,	1100,	1100,	1011
2017-01-04 14:12:48 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:48 AI_Player.update()	update
2017-01-04 14:12:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:48 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:48 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:48 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:48 AI_Player.update()	update
2017-01-04 14:12:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:49 AI_Player.update()	Search took943ms
2017-01-04 14:12:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:49 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:12:49 AI_Player.update()		1110,	1001,	1011,	1110,	1010,	101,	101
2017-01-04 14:12:49 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 14:12:49 AI_Player.update()		1010,	1010,	1010,	1010,	1001,	11,	110
2017-01-04 14:12:49 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:49 AI_Player.update()		1101,	1001,	1011,	110,	1100,	1100,	1011
2017-01-04 14:12:49 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:49 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:49 AI_Player.update()	update
2017-01-04 14:12:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:49 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:49 AI_Player.update()	update
2017-01-04 14:12:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:50 AI_Player.update()	Search took827ms
2017-01-04 14:12:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:50 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:12:50 AI_Player.update()		1110,	1001,	1011,	1110,	1010,	101,	101
2017-01-04 14:12:50 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 14:12:50 AI_Player.update()		110,	1010,	1010,	1010,	1010,	1001,	11
2017-01-04 14:12:50 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:50 AI_Player.update()		1101,	1001,	1011,	110,	1100,	1100,	1011
2017-01-04 14:12:50 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:50 AI_Player.update()	update
2017-01-04 14:12:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:50 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:50 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:50 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:50 AI_Player.update()	update
2017-01-04 14:12:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:51 AI_Player.update()	Search took1005ms
2017-01-04 14:12:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:51 AI_Player.update()		110,	1001,	111,	111,	111,	1010,	11
2017-01-04 14:12:51 AI_Player.update()		1110,	11,	1011,	1110,	1010,	101,	101
2017-01-04 14:12:51 AI_Player.update()		1110,	1010,	1110,	1010,	111,	101,	1011
2017-01-04 14:12:51 AI_Player.update()		110,	1101,	1010,	1010,	1010,	1001,	11
2017-01-04 14:12:51 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:51 AI_Player.update()		1101,	1100,	1011,	110,	1100,	1100,	1011
2017-01-04 14:12:51 AI_Player.update()		1100,	110,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:51 AI_Player.update()	update
2017-01-04 14:12:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:51 AI_Player.update()	update
2017-01-04 14:12:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:51 AI_Player.update()	Search took597ms
2017-01-04 14:12:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:51 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:12:51 AI_Player.update()		1110,	1001,	1011,	1110,	1010,	101,	101
2017-01-04 14:12:51 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 14:12:51 AI_Player.update()		110,	1010,	1010,	1010,	1010,	1001,	11
2017-01-04 14:12:51 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:51 AI_Player.update()		1101,	1001,	1011,	110,	1100,	1100,	1011
2017-01-04 14:12:51 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:51 AI_Player.update()	update
2017-01-04 14:12:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:51 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:12:51 AI_Player.update()	Player a has won!
2017-01-04 14:12:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:51 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:12:51 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:51 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:12:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:51 AI_Player.update()	update
2017-01-04 14:12:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:52 AI_Player.update()	Search took138ms
2017-01-04 14:12:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:52 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 14:12:52 AI_Player.update()		1010,	1001,	1101,	1001,	101,	110,	1001
2017-01-04 14:12:52 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:52 AI_Player.update()		110,	11,	1110,	1100,	111,	1001,	101
2017-01-04 14:12:52 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:12:52 AI_Player.update()		11,	1010,	101,	11,	11,	1100,	101
2017-01-04 14:12:52 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:52 AI_Player.update()	update
2017-01-04 14:12:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:52 AI_Player.update()	update
2017-01-04 14:12:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:52 AI_Player.update()	Search took197ms
2017-01-04 14:12:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:52 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-04 14:12:52 AI_Player.update()		1010,	1001,	1101,	110,	101,	110,	1001
2017-01-04 14:12:52 AI_Player.update()		1110,	1110,	1110,	1001,	111,	1010,	1011
2017-01-04 14:12:52 AI_Player.update()		110,	11,	1110,	101,	111,	1001,	101
2017-01-04 14:12:52 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:52 AI_Player.update()		11,	1010,	101,	1010,	11,	1100,	101
2017-01-04 14:12:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:52 AI_Player.update()	update
2017-01-04 14:12:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:52 AI_Player.update()	update
2017-01-04 14:12:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:52 AI_Player.update()	Search took441ms
2017-01-04 14:12:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:52 AI_Player.update()		110,	101,	111,	1010,	111,	110,	11
2017-01-04 14:12:52 AI_Player.update()		1010,	1001,	1101,	110,	101,	110,	1001
2017-01-04 14:12:52 AI_Player.update()		1110,	1110,	1110,	1001,	111,	1010,	1011
2017-01-04 14:12:52 AI_Player.update()		110,	11,	1110,	101,	111,	1001,	101
2017-01-04 14:12:52 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:52 AI_Player.update()		101,	11,	1010,	101,	1010,	11,	1100
2017-01-04 14:12:52 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:52 AI_Player.update()	update
2017-01-04 14:12:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:52 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:52 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:52 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:52 AI_Player.update()	update
2017-01-04 14:12:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:53 AI_Player.update()	Search took517ms
2017-01-04 14:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()		110,	101,	111,	110,	111,	110,	11
2017-01-04 14:12:53 AI_Player.update()		1010,	1001,	1101,	1001,	101,	110,	1001
2017-01-04 14:12:53 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:53 AI_Player.update()		110,	11,	1110,	1100,	111,	1001,	101
2017-01-04 14:12:53 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1010,	1011
2017-01-04 14:12:53 AI_Player.update()		101,	11,	1010,	11,	1010,	11,	1100
2017-01-04 14:12:53 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()	update
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()	update
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:53 AI_Player.update()	Search took452ms
2017-01-04 14:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 14:12:53 AI_Player.update()		1010,	1001,	1101,	1001,	101,	110,	1001
2017-01-04 14:12:53 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-04 14:12:53 AI_Player.update()		110,	11,	1110,	1100,	111,	1010,	101
2017-01-04 14:12:53 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-04 14:12:53 AI_Player.update()		101,	11,	1010,	11,	1010,	1010,	1100
2017-01-04 14:12:53 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()	update
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()	update
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:53 AI_Player.update()	Search took93ms
2017-01-04 14:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 14:12:53 AI_Player.update()		1010,	1001,	1101,	1001,	101,	110,	1001
2017-01-04 14:12:53 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-04 14:12:53 AI_Player.update()		101,	110,	11,	1110,	1100,	111,	1010
2017-01-04 14:12:53 AI_Player.update()		1110,	1100,	1101,	101,	1011,	1001,	1011
2017-01-04 14:12:53 AI_Player.update()		101,	11,	1010,	11,	1010,	1010,	1100
2017-01-04 14:12:53 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()	update
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()	update
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:53 AI_Player.update()	Search took191ms
2017-01-04 14:12:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()		110,	101,	111,	1001,	111,	1010,	11
2017-01-04 14:12:53 AI_Player.update()		1010,	1001,	1101,	101,	101,	110,	1001
2017-01-04 14:12:53 AI_Player.update()		1110,	1110,	1110,	1110,	111,	110,	1011
2017-01-04 14:12:53 AI_Player.update()		101,	110,	11,	101,	1100,	111,	1010
2017-01-04 14:12:53 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-04 14:12:53 AI_Player.update()		101,	11,	1010,	1010,	1010,	1010,	1100
2017-01-04 14:12:53 AI_Player.update()		1100,	1100,	1101,	110,	1101,	11,	1001
2017-01-04 14:12:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()	update
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:53 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:53 AI_Player.update()	update
2017-01-04 14:12:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:54 AI_Player.update()	Search took123ms
2017-01-04 14:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-04 14:12:54 AI_Player.update()		1010,	1110,	1101,	101,	101,	110,	1001
2017-01-04 14:12:54 AI_Player.update()		1110,	110,	1110,	1110,	111,	110,	1011
2017-01-04 14:12:54 AI_Player.update()		101,	1100,	11,	101,	1100,	111,	1010
2017-01-04 14:12:54 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 14:12:54 AI_Player.update()		101,	1100,	1010,	1010,	1010,	1010,	1100
2017-01-04 14:12:54 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:54 AI_Player.update()	Search took117ms
2017-01-04 14:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()		110,	1001,	111,	1001,	111,	1010,	11
2017-01-04 14:12:54 AI_Player.update()		1010,	1110,	1101,	101,	101,	110,	1001
2017-01-04 14:12:54 AI_Player.update()		1110,	110,	1110,	1110,	111,	110,	1011
2017-01-04 14:12:54 AI_Player.update()		1100,	11,	101,	1100,	111,	1010,	101
2017-01-04 14:12:54 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 14:12:54 AI_Player.update()		101,	1100,	1010,	1010,	1010,	1010,	1100
2017-01-04 14:12:54 AI_Player.update()		1100,	101,	1101,	110,	1101,	11,	1001
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:54 AI_Player.update()	Search took92ms
2017-01-04 14:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-04 14:12:54 AI_Player.update()		1010,	1110,	1101,	1001,	101,	110,	1001
2017-01-04 14:12:54 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-04 14:12:54 AI_Player.update()		1100,	11,	101,	1110,	111,	1010,	101
2017-01-04 14:12:54 AI_Player.update()		1110,	11,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:54 AI_Player.update()		101,	1100,	1010,	11,	1010,	1010,	1100
2017-01-04 14:12:54 AI_Player.update()		1100,	101,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:54 AI_Player.update()	Search took89ms
2017-01-04 14:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()		110,	1110,	111,	110,	111,	1010,	11
2017-01-04 14:12:54 AI_Player.update()		1010,	110,	1101,	1001,	101,	110,	1001
2017-01-04 14:12:54 AI_Player.update()		1110,	11,	1110,	101,	111,	110,	1011
2017-01-04 14:12:54 AI_Player.update()		1100,	11,	101,	1110,	111,	1010,	101
2017-01-04 14:12:54 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:12:54 AI_Player.update()		101,	101,	1010,	11,	1010,	1010,	1100
2017-01-04 14:12:54 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	11,	1001
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:54 AI_Player.update()	Search took112ms
2017-01-04 14:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-04 14:12:54 AI_Player.update()		1010,	110,	1101,	110,	101,	110,	1001
2017-01-04 14:12:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-04 14:12:54 AI_Player.update()		1100,	11,	101,	101,	111,	1010,	101
2017-01-04 14:12:54 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-04 14:12:54 AI_Player.update()		101,	101,	1010,	1100,	1010,	1010,	1100
2017-01-04 14:12:54 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:54 AI_Player.update()	Search took108ms
2017-01-04 14:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-04 14:12:54 AI_Player.update()		1001,	1010,	110,	1101,	110,	101,	110
2017-01-04 14:12:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-04 14:12:54 AI_Player.update()		1100,	11,	101,	101,	111,	1010,	101
2017-01-04 14:12:54 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-04 14:12:54 AI_Player.update()		101,	101,	1010,	1100,	1010,	1010,	1100
2017-01-04 14:12:54 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:54 AI_Player.update()	Search took23ms
2017-01-04 14:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-04 14:12:54 AI_Player.update()		1010,	110,	1101,	110,	101,	110,	1001
2017-01-04 14:12:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	110,	1011
2017-01-04 14:12:54 AI_Player.update()		1100,	11,	101,	101,	111,	1010,	101
2017-01-04 14:12:54 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1001,	1011
2017-01-04 14:12:54 AI_Player.update()		101,	101,	1010,	1100,	1010,	1010,	1100
2017-01-04 14:12:54 AI_Player.update()		1100,	1001,	1101,	11,	1101,	11,	1001
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:54 AI_Player.update()	Search took106ms
2017-01-04 14:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()		110,	1110,	111,	1010,	111,	110,	11
2017-01-04 14:12:54 AI_Player.update()		1010,	110,	1101,	110,	101,	110,	1001
2017-01-04 14:12:54 AI_Player.update()		1110,	11,	1110,	1001,	111,	1010,	1011
2017-01-04 14:12:54 AI_Player.update()		1100,	11,	101,	101,	111,	1001,	101
2017-01-04 14:12:54 AI_Player.update()		1110,	1100,	1101,	1110,	1011,	1010,	1011
2017-01-04 14:12:54 AI_Player.update()		101,	101,	1010,	1100,	1010,	11,	1100
2017-01-04 14:12:54 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:54 AI_Player.update()	Search took52ms
2017-01-04 14:12:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()		110,	1110,	111,	110,	111,	110,	11
2017-01-04 14:12:54 AI_Player.update()		1010,	110,	1101,	1001,	101,	110,	1001
2017-01-04 14:12:54 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:54 AI_Player.update()		1100,	11,	101,	1110,	111,	1001,	101
2017-01-04 14:12:54 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:54 AI_Player.update()		101,	101,	1010,	11,	1010,	11,	1100
2017-01-04 14:12:54 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:54 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:54 AI_Player.update()	update
2017-01-04 14:12:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:55 AI_Player.update()	Search took295ms
2017-01-04 14:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()		110,	1110,	111,	1001,	111,	110,	11
2017-01-04 14:12:55 AI_Player.update()		1010,	110,	1101,	101,	101,	110,	1001
2017-01-04 14:12:55 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		1100,	11,	101,	1100,	111,	1001,	101
2017-01-04 14:12:55 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		101,	101,	1010,	1010,	1010,	11,	1100
2017-01-04 14:12:55 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:55 AI_Player.update()	Search took107ms
2017-01-04 14:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-04 14:12:55 AI_Player.update()		1010,	11,	1101,	101,	101,	110,	1001
2017-01-04 14:12:55 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		1100,	1100,	101,	1100,	111,	1001,	101
2017-01-04 14:12:55 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		101,	1001,	1010,	1010,	1010,	11,	1100
2017-01-04 14:12:55 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:55 AI_Player.update()	Search took209ms
2017-01-04 14:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()		110,	110,	111,	110,	111,	110,	11
2017-01-04 14:12:55 AI_Player.update()		1010,	11,	1101,	1001,	101,	110,	1001
2017-01-04 14:12:55 AI_Player.update()		1110,	11,	1110,	101,	111,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		1100,	1100,	101,	1110,	111,	1001,	101
2017-01-04 14:12:55 AI_Player.update()		1110,	101,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		101,	1001,	1010,	11,	1010,	11,	1100
2017-01-04 14:12:55 AI_Player.update()		1100,	1110,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:55 AI_Player.update()	Search took42ms
2017-01-04 14:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-04 14:12:55 AI_Player.update()		1010,	11,	1101,	101,	101,	110,	1001
2017-01-04 14:12:55 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		1100,	1100,	101,	1100,	111,	1001,	101
2017-01-04 14:12:55 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		101,	1001,	1010,	1010,	1010,	11,	1100
2017-01-04 14:12:55 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:55 AI_Player.update()	Search took93ms
2017-01-04 14:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-04 14:12:55 AI_Player.update()		11,	1101,	101,	101,	110,	1001,	1010
2017-01-04 14:12:55 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		1100,	1100,	101,	1100,	111,	1001,	101
2017-01-04 14:12:55 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		101,	1001,	1010,	1010,	1010,	11,	1100
2017-01-04 14:12:55 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:55 AI_Player.update()	Search took51ms
2017-01-04 14:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()		110,	110,	111,	1001,	111,	110,	11
2017-01-04 14:12:55 AI_Player.update()		11,	1101,	101,	101,	110,	1001,	1010
2017-01-04 14:12:55 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		1100,	1100,	101,	1100,	111,	1001,	101
2017-01-04 14:12:55 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		1100,	101,	1001,	1010,	1010,	1010,	11
2017-01-04 14:12:55 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:55 AI_Player.update()	Search took108ms
2017-01-04 14:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()		110,	1101,	111,	1001,	111,	110,	11
2017-01-04 14:12:55 AI_Player.update()		11,	11,	101,	101,	110,	1001,	1010
2017-01-04 14:12:55 AI_Player.update()		1110,	1100,	1110,	1110,	111,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		1100,	101,	101,	1100,	111,	1001,	101
2017-01-04 14:12:55 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 14:12:55 AI_Player.update()		1100,	1110,	1001,	1010,	1010,	1010,	11
2017-01-04 14:12:55 AI_Player.update()		1100,	110,	1101,	110,	1101,	1010,	1001
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:12:55 AI_Player.update()	Player a has won!
2017-01-04 14:12:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:55 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:12:55 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:12:55 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:55 AI_Player.update()	Search took38ms
2017-01-04 14:12:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 14:12:55 AI_Player.update()		110,	101,	1010,	1011,	1100,	11,	110
2017-01-04 14:12:55 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:55 AI_Player.update()		1010,	1010,	110,	111,	1100,	1100,	1010
2017-01-04 14:12:55 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1110,	1011
2017-01-04 14:12:55 AI_Player.update()		11,	1100,	101,	1001,	110,	111,	11
2017-01-04 14:12:55 AI_Player.update()		1100,	1100,	1101,	101,	1101,	111,	1001
2017-01-04 14:12:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:55 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:55 AI_Player.update()	update
2017-01-04 14:12:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:56 AI_Player.update()	Search took308ms
2017-01-04 14:12:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:56 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 14:12:56 AI_Player.update()		110,	101,	1010,	1011,	1100,	11,	110
2017-01-04 14:12:56 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:56 AI_Player.update()		1010,	1010,	110,	111,	1100,	1100,	1010
2017-01-04 14:12:56 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 14:12:56 AI_Player.update()		11,	1100,	101,	1001,	110,	111,	11
2017-01-04 14:12:56 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-04 14:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:56 AI_Player.update()	update
2017-01-04 14:12:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:56 AI_Player.update()	update
2017-01-04 14:12:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:56 AI_Player.update()	Search took425ms
2017-01-04 14:12:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:56 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 14:12:56 AI_Player.update()		110,	1010,	1010,	1011,	1100,	11,	110
2017-01-04 14:12:56 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:56 AI_Player.update()		1010,	1100,	110,	111,	1100,	1100,	1010
2017-01-04 14:12:56 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 14:12:56 AI_Player.update()		11,	11,	101,	1001,	110,	111,	11
2017-01-04 14:12:56 AI_Player.update()		1100,	101,	1101,	101,	1101,	111,	1001
2017-01-04 14:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:56 AI_Player.update()	update
2017-01-04 14:12:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:56 AI_Player.update()	update
2017-01-04 14:12:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:56 AI_Player.update()	Search took298ms
2017-01-04 14:12:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:56 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 14:12:56 AI_Player.update()		110,	101,	1010,	1011,	1100,	11,	110
2017-01-04 14:12:56 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:56 AI_Player.update()		1010,	1010,	110,	111,	1100,	1100,	1010
2017-01-04 14:12:56 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 14:12:56 AI_Player.update()		11,	1100,	101,	1001,	110,	111,	11
2017-01-04 14:12:56 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-04 14:12:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:56 AI_Player.update()	update
2017-01-04 14:12:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:56 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:56 AI_Player.update()	update
2017-01-04 14:12:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:57 AI_Player.update()	Search took462ms
2017-01-04 14:12:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:57 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 14:12:57 AI_Player.update()		110,	1010,	1010,	1011,	1100,	11,	110
2017-01-04 14:12:57 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:57 AI_Player.update()		1010,	1100,	110,	111,	1100,	1100,	1010
2017-01-04 14:12:57 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 14:12:57 AI_Player.update()		11,	11,	101,	1001,	110,	111,	11
2017-01-04 14:12:57 AI_Player.update()		1100,	101,	1101,	101,	1101,	111,	1001
2017-01-04 14:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:57 AI_Player.update()	update
2017-01-04 14:12:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:57 AI_Player.update()	update
2017-01-04 14:12:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:57 AI_Player.update()	Search took296ms
2017-01-04 14:12:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:57 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 14:12:57 AI_Player.update()		110,	101,	1010,	1011,	1100,	11,	110
2017-01-04 14:12:57 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 14:12:57 AI_Player.update()		1010,	1010,	110,	111,	1100,	1100,	1010
2017-01-04 14:12:57 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 14:12:57 AI_Player.update()		11,	1100,	101,	1001,	110,	111,	11
2017-01-04 14:12:57 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-04 14:12:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:57 AI_Player.update()	update
2017-01-04 14:12:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:57 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:57 AI_Player.update()	update
2017-01-04 14:12:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:58 AI_Player.update()	Search took374ms
2017-01-04 14:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 14:12:58 AI_Player.update()		110,	101,	1010,	101,	1100,	11,	110
2017-01-04 14:12:58 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 14:12:58 AI_Player.update()		1010,	1010,	110,	101,	1100,	1100,	1010
2017-01-04 14:12:58 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1110,	1011
2017-01-04 14:12:58 AI_Player.update()		11,	1100,	101,	110,	110,	111,	11
2017-01-04 14:12:58 AI_Player.update()		1100,	11,	1101,	1001,	1101,	111,	1001
2017-01-04 14:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()	update
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()	update
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:58 AI_Player.update()	Search took349ms
2017-01-04 14:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 14:12:58 AI_Player.update()		110,	101,	1010,	101,	1100,	11,	110
2017-01-04 14:12:58 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-04 14:12:58 AI_Player.update()		1010,	1010,	110,	101,	1100,	1100,	1010
2017-01-04 14:12:58 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1110,	1011
2017-01-04 14:12:58 AI_Player.update()		11,	1100,	101,	110,	110,	111,	11
2017-01-04 14:12:58 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-04 14:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()	update
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()	update
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:58 AI_Player.update()	Search took118ms
2017-01-04 14:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 14:12:58 AI_Player.update()		110,	101,	1010,	101,	1100,	11,	110
2017-01-04 14:12:58 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-04 14:12:58 AI_Player.update()		1010,	1010,	1010,	110,	101,	1100,	1100
2017-01-04 14:12:58 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1110,	1011
2017-01-04 14:12:58 AI_Player.update()		11,	1100,	101,	110,	110,	111,	11
2017-01-04 14:12:58 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-04 14:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()	update
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()	update
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:58 AI_Player.update()	Search took74ms
2017-01-04 14:12:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 14:12:58 AI_Player.update()		110,	101,	1010,	101,	1100,	11,	110
2017-01-04 14:12:58 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 14:12:58 AI_Player.update()		1010,	1010,	1010,	110,	101,	1100,	1100
2017-01-04 14:12:58 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1110,	1011
2017-01-04 14:12:58 AI_Player.update()		11,	1100,	101,	110,	110,	111,	11
2017-01-04 14:12:58 AI_Player.update()		1100,	11,	1101,	1001,	1101,	111,	1001
2017-01-04 14:12:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()	update
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:58 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:58 AI_Player.update()	update
2017-01-04 14:12:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:59 AI_Player.update()	Search took560ms
2017-01-04 14:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 14:12:59 AI_Player.update()		110,	101,	1010,	101,	1100,	11,	110
2017-01-04 14:12:59 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-04 14:12:59 AI_Player.update()		1010,	1010,	1010,	110,	101,	1100,	1100
2017-01-04 14:12:59 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1110,	1011
2017-01-04 14:12:59 AI_Player.update()		11,	1100,	101,	110,	110,	111,	11
2017-01-04 14:12:59 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-04 14:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()	update
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:12:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:12:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()	update
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:59 AI_Player.update()	Search took73ms
2017-01-04 14:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 14:12:59 AI_Player.update()		110,	101,	1010,	101,	1100,	11,	110
2017-01-04 14:12:59 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 14:12:59 AI_Player.update()		1010,	1010,	1010,	110,	101,	1100,	1100
2017-01-04 14:12:59 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1110,	1011
2017-01-04 14:12:59 AI_Player.update()		11,	1100,	101,	110,	110,	111,	11
2017-01-04 14:12:59 AI_Player.update()		1100,	11,	1101,	1001,	1101,	111,	1001
2017-01-04 14:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()	update
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()	update
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:12:59 AI_Player.update()	Search took594ms
2017-01-04 14:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()		110,	11,	111,	101,	111,	111,	11
2017-01-04 14:12:59 AI_Player.update()		110,	101,	1010,	101,	1100,	11,	110
2017-01-04 14:12:59 AI_Player.update()		1110,	101,	1110,	1011,	111,	1001,	1011
2017-01-04 14:12:59 AI_Player.update()		1010,	1010,	1010,	110,	101,	1100,	1100
2017-01-04 14:12:59 AI_Player.update()		1110,	1010,	1101,	111,	1011,	1110,	1011
2017-01-04 14:12:59 AI_Player.update()		11,	1100,	101,	110,	110,	111,	11
2017-01-04 14:12:59 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	111,	1001
2017-01-04 14:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()	update
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:12:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:12:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()	update
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:12:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:12:59 AI_Player.update()	Search took64ms
2017-01-04 14:12:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 14:12:59 AI_Player.update()		110,	101,	1010,	101,	1100,	11,	110
2017-01-04 14:12:59 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 14:12:59 AI_Player.update()		1010,	1010,	1010,	110,	101,	1100,	1100
2017-01-04 14:12:59 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1110,	1011
2017-01-04 14:12:59 AI_Player.update()		11,	1100,	101,	110,	110,	111,	11
2017-01-04 14:12:59 AI_Player.update()		1100,	11,	1101,	1001,	1101,	111,	1001
2017-01-04 14:12:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:12:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()	update
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:12:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:12:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:12:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:12:59 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:12:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:12:59 AI_Player.update()	update
2017-01-04 14:12:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:00 AI_Player.update()	Search took509ms
2017-01-04 14:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 14:13:00 AI_Player.update()		110,	110,	101,	1010,	101,	1100,	11
2017-01-04 14:13:00 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 14:13:00 AI_Player.update()		1010,	1010,	1010,	110,	101,	1100,	1100
2017-01-04 14:13:00 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1110,	1011
2017-01-04 14:13:00 AI_Player.update()		11,	1100,	101,	110,	110,	111,	11
2017-01-04 14:13:00 AI_Player.update()		1100,	11,	1101,	1001,	1101,	111,	1001
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:00 AI_Player.update()	Search took224ms
2017-01-04 14:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()		110,	101,	111,	1010,	111,	111,	11
2017-01-04 14:13:00 AI_Player.update()		110,	110,	101,	1011,	101,	1100,	11
2017-01-04 14:13:00 AI_Player.update()		1110,	1010,	1110,	110,	111,	1001,	1011
2017-01-04 14:13:00 AI_Player.update()		1010,	1010,	1010,	111,	101,	1100,	1100
2017-01-04 14:13:00 AI_Player.update()		1110,	1100,	1101,	110,	1011,	1110,	1011
2017-01-04 14:13:00 AI_Player.update()		11,	1100,	101,	1001,	110,	111,	11
2017-01-04 14:13:00 AI_Player.update()		1100,	11,	1101,	101,	1101,	111,	1001
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:00 AI_Player.update()	Search took141ms
2017-01-04 14:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()		110,	101,	111,	101,	111,	111,	11
2017-01-04 14:13:00 AI_Player.update()		110,	110,	101,	1010,	101,	1100,	11
2017-01-04 14:13:00 AI_Player.update()		1110,	1010,	1110,	1011,	111,	1001,	1011
2017-01-04 14:13:00 AI_Player.update()		1010,	1010,	1010,	110,	101,	1100,	1100
2017-01-04 14:13:00 AI_Player.update()		1110,	1100,	1101,	111,	1011,	1110,	1011
2017-01-04 14:13:00 AI_Player.update()		11,	1100,	101,	110,	110,	111,	11
2017-01-04 14:13:00 AI_Player.update()		1100,	11,	1101,	1001,	1101,	111,	1001
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:13:00 AI_Player.update()	Player a has won!
2017-01-04 14:13:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:00 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:13:00 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:00 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:00 AI_Player.update()	Search took39ms
2017-01-04 14:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-04 14:13:00 AI_Player.update()		1010,	1001,	1101,	1010,	1001,	1010,	1100
2017-01-04 14:13:00 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-04 14:13:00 AI_Player.update()		110,	101,	1101,	1010,	1010,	101,	101
2017-01-04 14:13:00 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1011,	1011
2017-01-04 14:13:00 AI_Player.update()		1101,	1100,	11,	1001,	110,	11,	11
2017-01-04 14:13:00 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:00 AI_Player.update()	Search took49ms
2017-01-04 14:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()		110,	1100,	111,	110,	111,	110,	11
2017-01-04 14:13:00 AI_Player.update()		1100,	1010,	1001,	1101,	1010,	1001,	1010
2017-01-04 14:13:00 AI_Player.update()		1110,	1001,	1110,	11,	111,	110,	1011
2017-01-04 14:13:00 AI_Player.update()		110,	101,	1101,	1010,	1010,	101,	101
2017-01-04 14:13:00 AI_Player.update()		1110,	1001,	1101,	101,	1011,	1011,	1011
2017-01-04 14:13:00 AI_Player.update()		1101,	1100,	11,	1001,	110,	11,	11
2017-01-04 14:13:00 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:00 AI_Player.update()	Search took50ms
2017-01-04 14:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-04 14:13:00 AI_Player.update()		1100,	1010,	1001,	1101,	1010,	110,	1010
2017-01-04 14:13:00 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:00 AI_Player.update()		110,	101,	1101,	1010,	1010,	110,	101
2017-01-04 14:13:00 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:00 AI_Player.update()		1101,	1100,	11,	1001,	110,	1011,	11
2017-01-04 14:13:00 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()	update
2017-01-04 14:13:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:00 AI_Player.update()	Search took60ms
2017-01-04 14:13:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 14:13:00 AI_Player.update()		1100,	1100,	1001,	1101,	1010,	110,	1010
2017-01-04 14:13:00 AI_Player.update()		1110,	1010,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:00 AI_Player.update()		110,	1001,	1101,	1010,	1010,	110,	101
2017-01-04 14:13:00 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:00 AI_Player.update()		1101,	1001,	11,	1001,	110,	1011,	11
2017-01-04 14:13:00 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:00 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:01 AI_Player.update()	Search took334ms
2017-01-04 14:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-04 14:13:01 AI_Player.update()		1100,	1010,	1001,	1101,	1010,	110,	1010
2017-01-04 14:13:01 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:01 AI_Player.update()		110,	101,	1101,	1010,	1010,	110,	101
2017-01-04 14:13:01 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:01 AI_Player.update()		1101,	1100,	11,	1001,	110,	1011,	11
2017-01-04 14:13:01 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:01 AI_Player.update()	Search took64ms
2017-01-04 14:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-04 14:13:01 AI_Player.update()		1010,	1001,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:01 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:01 AI_Player.update()		110,	101,	1101,	1010,	1010,	110,	101
2017-01-04 14:13:01 AI_Player.update()		1110,	1001,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:01 AI_Player.update()		1101,	1100,	11,	1001,	110,	1011,	11
2017-01-04 14:13:01 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:01 AI_Player.update()	Search took70ms
2017-01-04 14:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-04 14:13:01 AI_Player.update()		1010,	1001,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:01 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:01 AI_Player.update()		110,	1001,	1101,	1010,	1010,	110,	101
2017-01-04 14:13:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:01 AI_Player.update()		1101,	1010,	11,	1001,	110,	1011,	11
2017-01-04 14:13:01 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:01 AI_Player.update()	Search took198ms
2017-01-04 14:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-04 14:13:01 AI_Player.update()		1010,	1001,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:01 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:01 AI_Player.update()		1001,	1101,	1010,	1010,	110,	101,	110
2017-01-04 14:13:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:01 AI_Player.update()		1101,	1010,	11,	1001,	110,	1011,	11
2017-01-04 14:13:01 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:01 AI_Player.update()	Search took66ms
2017-01-04 14:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-04 14:13:01 AI_Player.update()		1010,	1001,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:01 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:01 AI_Player.update()		110,	1001,	1101,	1010,	1010,	110,	101
2017-01-04 14:13:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:01 AI_Player.update()		1101,	1010,	11,	1001,	110,	1011,	11
2017-01-04 14:13:01 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:01 AI_Player.update()	Search took36ms
2017-01-04 14:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()		110,	1001,	111,	110,	111,	1010,	11
2017-01-04 14:13:01 AI_Player.update()		1010,	1001,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:01 AI_Player.update()		1110,	101,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:01 AI_Player.update()		101,	110,	1001,	1101,	1010,	1010,	110
2017-01-04 14:13:01 AI_Player.update()		1110,	1100,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:01 AI_Player.update()		1101,	1010,	11,	1001,	110,	1011,	11
2017-01-04 14:13:01 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:01 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:01 AI_Player.update()	Search took83ms
2017-01-04 14:13:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-04 14:13:01 AI_Player.update()		1010,	1001,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:01 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:01 AI_Player.update()		101,	101,	1001,	1101,	1010,	1010,	110
2017-01-04 14:13:01 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:01 AI_Player.update()		1101,	1100,	11,	1001,	110,	1011,	11
2017-01-04 14:13:01 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:01 AI_Player.update()	update
2017-01-04 14:13:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:02 AI_Player.update()	Search took200ms
2017-01-04 14:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-04 14:13:02 AI_Player.update()		1010,	1001,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:02 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:02 AI_Player.update()		110,	101,	101,	1001,	1101,	1010,	1010
2017-01-04 14:13:02 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:02 AI_Player.update()		1101,	1100,	11,	1001,	110,	1011,	11
2017-01-04 14:13:02 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:02 AI_Player.update()	Search took158ms
2017-01-04 14:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-04 14:13:02 AI_Player.update()		1010,	1001,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:02 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:02 AI_Player.update()		1010,	110,	101,	101,	1001,	1101,	1010
2017-01-04 14:13:02 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:02 AI_Player.update()		1101,	1100,	11,	1001,	110,	1011,	11
2017-01-04 14:13:02 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:02 AI_Player.update()	Search took98ms
2017-01-04 14:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-04 14:13:02 AI_Player.update()		1010,	1001,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:02 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:02 AI_Player.update()		110,	101,	101,	1001,	1101,	1010,	1010
2017-01-04 14:13:02 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:02 AI_Player.update()		1101,	1100,	11,	1001,	110,	1011,	11
2017-01-04 14:13:02 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:02 AI_Player.update()	Search took146ms
2017-01-04 14:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()		110,	1100,	111,	110,	111,	1010,	11
2017-01-04 14:13:02 AI_Player.update()		1010,	1001,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:02 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:02 AI_Player.update()		110,	101,	101,	1001,	1101,	1010,	1010
2017-01-04 14:13:02 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:02 AI_Player.update()		1100,	11,	1001,	110,	1011,	11,	1101
2017-01-04 14:13:02 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:02 AI_Player.update()	Search took131ms
2017-01-04 14:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 14:13:02 AI_Player.update()		1010,	1100,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:02 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:02 AI_Player.update()		110,	1001,	101,	1001,	1101,	1010,	1010
2017-01-04 14:13:02 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:02 AI_Player.update()		1100,	110,	1001,	110,	1011,	11,	1101
2017-01-04 14:13:02 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:02 AI_Player.update()	Search took270ms
2017-01-04 14:13:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 14:13:02 AI_Player.update()		1010,	1100,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:02 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:02 AI_Player.update()		110,	1001,	101,	1001,	1101,	1010,	1010
2017-01-04 14:13:02 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:02 AI_Player.update()		110,	1001,	110,	1011,	11,	1101,	1100
2017-01-04 14:13:02 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:02 AI_Player.update()	update
2017-01-04 14:13:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:03 AI_Player.update()	Search took80ms
2017-01-04 14:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 14:13:03 AI_Player.update()		1010,	1100,	1101,	110,	110,	1010,	1100
2017-01-04 14:13:03 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:03 AI_Player.update()		110,	1001,	101,	11,	1101,	1010,	1010
2017-01-04 14:13:03 AI_Player.update()		1110,	101,	1101,	1001,	1011,	101,	1011
2017-01-04 14:13:03 AI_Player.update()		110,	1001,	110,	101,	11,	1101,	1100
2017-01-04 14:13:03 AI_Player.update()		1100,	11,	1101,	1011,	1101,	11,	1001
2017-01-04 14:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()	update
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()	update
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:03 AI_Player.update()	Search took103ms
2017-01-04 14:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 14:13:03 AI_Player.update()		1010,	1100,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:03 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:03 AI_Player.update()		110,	1001,	101,	1001,	1101,	1010,	1010
2017-01-04 14:13:03 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:03 AI_Player.update()		110,	1001,	110,	1011,	11,	1101,	1100
2017-01-04 14:13:03 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()	update
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()	update
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:03 AI_Player.update()	Search took156ms
2017-01-04 14:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 14:13:03 AI_Player.update()		1010,	1100,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:03 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:03 AI_Player.update()		1001,	101,	1001,	1101,	1010,	1010,	110
2017-01-04 14:13:03 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:03 AI_Player.update()		110,	1001,	110,	1011,	11,	1101,	1100
2017-01-04 14:13:03 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()	update
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()	update
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:03 AI_Player.update()	Search took115ms
2017-01-04 14:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()		110,	1010,	111,	110,	111,	1010,	11
2017-01-04 14:13:03 AI_Player.update()		1010,	1100,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:03 AI_Player.update()		1110,	1001,	1110,	11,	111,	1001,	1011
2017-01-04 14:13:03 AI_Player.update()		1001,	101,	1001,	1101,	1010,	1010,	110
2017-01-04 14:13:03 AI_Player.update()		1110,	101,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:03 AI_Player.update()		1100,	110,	1001,	110,	1011,	11,	1101
2017-01-04 14:13:03 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()	update
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:03 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:03 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:03 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()	update
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:03 AI_Player.update()	Search took317ms
2017-01-04 14:13:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()		110,	1010,	111,	110,	111,	11,	11
2017-01-04 14:13:03 AI_Player.update()		1010,	1100,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:03 AI_Player.update()		1110,	1001,	1110,	11,	111,	1010,	1011
2017-01-04 14:13:03 AI_Player.update()		1001,	101,	1001,	1101,	1010,	1001,	110
2017-01-04 14:13:03 AI_Player.update()		1110,	101,	1101,	101,	1011,	1010,	1011
2017-01-04 14:13:03 AI_Player.update()		1100,	110,	1001,	110,	1011,	101,	1101
2017-01-04 14:13:03 AI_Player.update()		1100,	11,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()	update
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:03 AI_Player.update()	update
2017-01-04 14:13:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:04 AI_Player.update()	Search took482ms
2017-01-04 14:13:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:04 AI_Player.update()		110,	1100,	111,	110,	111,	11,	11
2017-01-04 14:13:04 AI_Player.update()		1010,	1001,	1101,	1010,	110,	1010,	1100
2017-01-04 14:13:04 AI_Player.update()		1110,	101,	1110,	11,	111,	1010,	1011
2017-01-04 14:13:04 AI_Player.update()		1001,	101,	1001,	1101,	1010,	1001,	110
2017-01-04 14:13:04 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 14:13:04 AI_Player.update()		1100,	11,	1001,	110,	1011,	101,	1101
2017-01-04 14:13:04 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	11,	1001
2017-01-04 14:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:04 AI_Player.update()	update
2017-01-04 14:13:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:04 AI_Player.update()	update
2017-01-04 14:13:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:04 AI_Player.update()	Search took122ms
2017-01-04 14:13:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:04 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-04 14:13:04 AI_Player.update()		1010,	1001,	1101,	11,	110,	1010,	1100
2017-01-04 14:13:04 AI_Player.update()		1110,	101,	1110,	1101,	111,	1010,	1011
2017-01-04 14:13:04 AI_Player.update()		1001,	101,	1001,	101,	1010,	1001,	110
2017-01-04 14:13:04 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:04 AI_Player.update()		1100,	11,	1001,	1010,	1011,	101,	1101
2017-01-04 14:13:04 AI_Player.update()		1100,	1010,	1101,	110,	1101,	11,	1001
2017-01-04 14:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:04 AI_Player.update()	update
2017-01-04 14:13:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:04 AI_Player.update()	update
2017-01-04 14:13:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:04 AI_Player.update()	Search took528ms
2017-01-04 14:13:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:04 AI_Player.update()		110,	1100,	111,	1010,	111,	11,	11
2017-01-04 14:13:04 AI_Player.update()		1010,	1001,	1101,	11,	110,	11,	1100
2017-01-04 14:13:04 AI_Player.update()		1110,	101,	1110,	1101,	111,	1010,	1011
2017-01-04 14:13:04 AI_Player.update()		1001,	101,	1001,	101,	1010,	1010,	110
2017-01-04 14:13:04 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:04 AI_Player.update()		1100,	11,	1001,	1010,	1011,	1010,	1101
2017-01-04 14:13:04 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:04 AI_Player.update()	update
2017-01-04 14:13:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:04 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:04 AI_Player.update()	update
2017-01-04 14:13:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:05 AI_Player.update()	Search took138ms
2017-01-04 14:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 14:13:05 AI_Player.update()		1010,	1001,	1101,	11,	110,	11,	1100
2017-01-04 14:13:05 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 14:13:05 AI_Player.update()		1001,	101,	1001,	101,	1010,	1010,	110
2017-01-04 14:13:05 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:05 AI_Player.update()		1100,	11,	1001,	1010,	1011,	1001,	1101
2017-01-04 14:13:05 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()	update
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()	update
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:05 AI_Player.update()	Search took150ms
2017-01-04 14:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 14:13:05 AI_Player.update()		1001,	1101,	11,	110,	11,	1100,	1010
2017-01-04 14:13:05 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 14:13:05 AI_Player.update()		1001,	101,	1001,	101,	1010,	1010,	110
2017-01-04 14:13:05 AI_Player.update()		1110,	110,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:05 AI_Player.update()		1100,	11,	1001,	1010,	1011,	1001,	1101
2017-01-04 14:13:05 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()	update
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()	update
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:05 AI_Player.update()	Search took627ms
2017-01-04 14:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-04 14:13:05 AI_Player.update()		1001,	101,	11,	110,	11,	1100,	1010
2017-01-04 14:13:05 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 14:13:05 AI_Player.update()		1001,	110,	1001,	101,	1010,	1010,	110
2017-01-04 14:13:05 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:05 AI_Player.update()		1100,	1010,	1001,	1010,	1011,	1001,	1101
2017-01-04 14:13:05 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()	update
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()	update
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:05 AI_Player.update()	Search took114ms
2017-01-04 14:13:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-04 14:13:05 AI_Player.update()		101,	11,	110,	11,	1100,	1010,	1001
2017-01-04 14:13:05 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 14:13:05 AI_Player.update()		1001,	110,	1001,	101,	1010,	1010,	110
2017-01-04 14:13:05 AI_Player.update()		1110,	11,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:05 AI_Player.update()		1100,	1010,	1001,	1010,	1011,	1001,	1101
2017-01-04 14:13:05 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()	update
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:05 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:05 AI_Player.update()	update
2017-01-04 14:13:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:06 AI_Player.update()	Search took88ms
2017-01-04 14:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 14:13:06 AI_Player.update()		101,	101,	110,	11,	1100,	1010,	1001
2017-01-04 14:13:06 AI_Player.update()		1110,	110,	1110,	1101,	111,	11,	1011
2017-01-04 14:13:06 AI_Player.update()		1001,	11,	1001,	101,	1010,	1010,	110
2017-01-04 14:13:06 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:06 AI_Player.update()		1100,	1100,	1001,	1010,	1011,	1001,	1101
2017-01-04 14:13:06 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:06 AI_Player.update()	Search took37ms
2017-01-04 14:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()		110,	11,	111,	1010,	111,	101,	11
2017-01-04 14:13:06 AI_Player.update()		101,	101,	110,	11,	1100,	1010,	1001
2017-01-04 14:13:06 AI_Player.update()		1110,	110,	1110,	1101,	111,	11,	1011
2017-01-04 14:13:06 AI_Player.update()		110,	1001,	11,	1001,	101,	1010,	1010
2017-01-04 14:13:06 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:06 AI_Player.update()		1100,	1100,	1001,	1010,	1011,	1001,	1101
2017-01-04 14:13:06 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:06 AI_Player.update()	Search took16ms
2017-01-04 14:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-04 14:13:06 AI_Player.update()		101,	11,	110,	11,	1100,	1010,	1001
2017-01-04 14:13:06 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 14:13:06 AI_Player.update()		110,	110,	11,	1001,	101,	1010,	1010
2017-01-04 14:13:06 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:06 AI_Player.update()		1100,	1010,	1001,	1010,	1011,	1001,	1101
2017-01-04 14:13:06 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:06 AI_Player.update()	Search took82ms
2017-01-04 14:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-04 14:13:06 AI_Player.update()		1001,	101,	11,	110,	11,	1100,	1010
2017-01-04 14:13:06 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 14:13:06 AI_Player.update()		110,	110,	11,	1001,	101,	1010,	1010
2017-01-04 14:13:06 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:06 AI_Player.update()		1100,	1010,	1001,	1010,	1011,	1001,	1101
2017-01-04 14:13:06 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:06 AI_Player.update()	Search took34ms
2017-01-04 14:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-04 14:13:06 AI_Player.update()		1010,	1001,	101,	11,	110,	11,	1100
2017-01-04 14:13:06 AI_Player.update()		1110,	101,	1110,	1101,	111,	11,	1011
2017-01-04 14:13:06 AI_Player.update()		110,	110,	11,	1001,	101,	1010,	1010
2017-01-04 14:13:06 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:06 AI_Player.update()		1100,	1010,	1001,	1010,	1011,	1001,	1101
2017-01-04 14:13:06 AI_Player.update()		1100,	1100,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:06 AI_Player.update()	Search took108ms
2017-01-04 14:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 14:13:06 AI_Player.update()		1010,	101,	101,	11,	110,	11,	1100
2017-01-04 14:13:06 AI_Player.update()		1110,	110,	1110,	1101,	111,	11,	1011
2017-01-04 14:13:06 AI_Player.update()		110,	1001,	11,	1001,	101,	1010,	1010
2017-01-04 14:13:06 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:06 AI_Player.update()		1100,	1100,	1001,	1010,	1011,	1001,	1101
2017-01-04 14:13:06 AI_Player.update()		1100,	1101,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:13:06 AI_Player.update()	Player a has won!
2017-01-04 14:13:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:06 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:13:06 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:06 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:06 AI_Player.update()	Search took52ms
2017-01-04 14:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()		110,	110,	111,	1011,	111,	101,	11
2017-01-04 14:13:06 AI_Player.update()		1011,	11,	11,	11,	101,	101,	11
2017-01-04 14:13:06 AI_Player.update()		1110,	101,	1110,	101,	111,	1001,	1011
2017-01-04 14:13:06 AI_Player.update()		1011,	110,	111,	1010,	1001,	101,	1101
2017-01-04 14:13:06 AI_Player.update()		1110,	11,	1101,	11,	1011,	110,	1011
2017-01-04 14:13:06 AI_Player.update()		1010,	1010,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:06 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:06 AI_Player.update()	Search took50ms
2017-01-04 14:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()		110,	110,	111,	1011,	111,	101,	11
2017-01-04 14:13:06 AI_Player.update()		1011,	11,	11,	11,	101,	1001,	11
2017-01-04 14:13:06 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 14:13:06 AI_Player.update()		1011,	110,	111,	1010,	1001,	110,	1101
2017-01-04 14:13:06 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 14:13:06 AI_Player.update()		1010,	1010,	11,	1101,	1011,	1100,	1110
2017-01-04 14:13:06 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:06 AI_Player.update()	Search took371ms
2017-01-04 14:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-04 14:13:06 AI_Player.update()		1011,	11,	11,	11,	101,	101,	11
2017-01-04 14:13:06 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-04 14:13:06 AI_Player.update()		1011,	110,	111,	1010,	1001,	101,	1101
2017-01-04 14:13:06 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:06 AI_Player.update()		1010,	1010,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:06 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:06 AI_Player.update()	Search took19ms
2017-01-04 14:13:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()		110,	110,	111,	1011,	111,	101,	11
2017-01-04 14:13:06 AI_Player.update()		1011,	11,	11,	11,	101,	110,	11
2017-01-04 14:13:06 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 14:13:06 AI_Player.update()		1011,	110,	111,	1010,	1001,	1100,	1101
2017-01-04 14:13:06 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 14:13:06 AI_Player.update()		1010,	1010,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:06 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-04 14:13:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:06 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:06 AI_Player.update()	update
2017-01-04 14:13:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:07 AI_Player.update()	Search took318ms
2017-01-04 14:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()		110,	110,	111,	1011,	111,	1001,	11
2017-01-04 14:13:07 AI_Player.update()		1011,	11,	11,	11,	101,	101,	11
2017-01-04 14:13:07 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-04 14:13:07 AI_Player.update()		1011,	110,	111,	1010,	1001,	101,	1101
2017-01-04 14:13:07 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:07 AI_Player.update()		1010,	1010,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:07 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:07 AI_Player.update()	Search took25ms
2017-01-04 14:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()		110,	110,	111,	1011,	111,	101,	11
2017-01-04 14:13:07 AI_Player.update()		1011,	11,	11,	11,	101,	110,	11
2017-01-04 14:13:07 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 14:13:07 AI_Player.update()		1011,	110,	111,	1010,	1001,	1100,	1101
2017-01-04 14:13:07 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 14:13:07 AI_Player.update()		1010,	1010,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:07 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1001,	1001
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:07 AI_Player.update()	Search took321ms
2017-01-04 14:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()		110,	110,	111,	1011,	111,	110,	11
2017-01-04 14:13:07 AI_Player.update()		1011,	11,	11,	11,	101,	101,	11
2017-01-04 14:13:07 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-04 14:13:07 AI_Player.update()		1011,	110,	111,	1010,	1001,	101,	1101
2017-01-04 14:13:07 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 14:13:07 AI_Player.update()		1010,	1010,	11,	1101,	1011,	1001,	1110
2017-01-04 14:13:07 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:07 AI_Player.update()	Search took9ms
2017-01-04 14:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()		110,	110,	111,	1011,	111,	110,	11
2017-01-04 14:13:07 AI_Player.update()		11,	11,	11,	101,	101,	11,	1011
2017-01-04 14:13:07 AI_Player.update()		1110,	101,	1110,	101,	111,	1100,	1011
2017-01-04 14:13:07 AI_Player.update()		1011,	110,	111,	1010,	1001,	101,	1101
2017-01-04 14:13:07 AI_Player.update()		1110,	11,	1101,	11,	1011,	101,	1011
2017-01-04 14:13:07 AI_Player.update()		1010,	1010,	11,	1101,	1011,	1001,	1110
2017-01-04 14:13:07 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	101,	1001
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:07 AI_Player.update()	Search took301ms
2017-01-04 14:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()		110,	1100,	111,	1011,	111,	110,	11
2017-01-04 14:13:07 AI_Player.update()		11,	110,	11,	101,	101,	11,	1011
2017-01-04 14:13:07 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:13:07 AI_Player.update()		1011,	101,	111,	1010,	1001,	101,	1101
2017-01-04 14:13:07 AI_Player.update()		1110,	110,	1101,	11,	1011,	101,	1011
2017-01-04 14:13:07 AI_Player.update()		1010,	11,	11,	1101,	1011,	1001,	1110
2017-01-04 14:13:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	101,	1001
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:13:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:07 AI_Player.update()	Search took93ms
2017-01-04 14:13:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()		110,	1100,	111,	1011,	111,	11,	11
2017-01-04 14:13:07 AI_Player.update()		11,	110,	11,	101,	101,	1100,	1011
2017-01-04 14:13:07 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 14:13:07 AI_Player.update()		1011,	101,	111,	1010,	1001,	101,	1101
2017-01-04 14:13:07 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:07 AI_Player.update()		1010,	11,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:07 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	110,	1001
2017-01-04 14:13:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:07 AI_Player.update()	update
2017-01-04 14:13:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:08 AI_Player.update()	Search took91ms
2017-01-04 14:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()		110,	1100,	111,	101,	111,	11,	11
2017-01-04 14:13:08 AI_Player.update()		11,	110,	11,	101,	101,	1100,	1011
2017-01-04 14:13:08 AI_Player.update()		1110,	11,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:08 AI_Player.update()		1011,	101,	111,	11,	1001,	101,	1101
2017-01-04 14:13:08 AI_Player.update()		1110,	110,	1101,	1101,	1011,	1001,	1011
2017-01-04 14:13:08 AI_Player.update()		1010,	11,	11,	1001,	1011,	101,	1110
2017-01-04 14:13:08 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	110,	1001
2017-01-04 14:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()	update
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()	update
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:08 AI_Player.update()	Search took163ms
2017-01-04 14:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()		110,	1100,	111,	1011,	111,	11,	11
2017-01-04 14:13:08 AI_Player.update()		11,	110,	11,	101,	101,	1100,	1011
2017-01-04 14:13:08 AI_Player.update()		1110,	11,	1110,	101,	111,	101,	1011
2017-01-04 14:13:08 AI_Player.update()		1011,	101,	111,	1010,	1001,	101,	1101
2017-01-04 14:13:08 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:08 AI_Player.update()		1010,	11,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:08 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	110,	1001
2017-01-04 14:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()	update
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()	update
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:08 AI_Player.update()	Search took170ms
2017-01-04 14:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()		110,	110,	111,	1011,	111,	11,	11
2017-01-04 14:13:08 AI_Player.update()		11,	11,	11,	101,	101,	1100,	1011
2017-01-04 14:13:08 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 14:13:08 AI_Player.update()		1011,	110,	111,	1010,	1001,	101,	1101
2017-01-04 14:13:08 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:08 AI_Player.update()		1010,	1010,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:08 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-04 14:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()	update
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()	update
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:08 AI_Player.update()	Search took496ms
2017-01-04 14:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()		110,	110,	111,	1011,	111,	11,	11
2017-01-04 14:13:08 AI_Player.update()		11,	11,	11,	101,	101,	1100,	1011
2017-01-04 14:13:08 AI_Player.update()		1110,	101,	1110,	101,	111,	101,	1011
2017-01-04 14:13:08 AI_Player.update()		110,	111,	1010,	1001,	101,	1101,	1011
2017-01-04 14:13:08 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:08 AI_Player.update()		1010,	1010,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:08 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	110,	1001
2017-01-04 14:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()	update
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()	update
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:08 AI_Player.update()	Search took96ms
2017-01-04 14:13:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()		110,	11,	111,	1011,	111,	11,	11
2017-01-04 14:13:08 AI_Player.update()		11,	101,	11,	101,	101,	1100,	1011
2017-01-04 14:13:08 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-04 14:13:08 AI_Player.update()		110,	11,	1010,	1001,	101,	1101,	1011
2017-01-04 14:13:08 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:08 AI_Player.update()		1010,	1100,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:08 AI_Player.update()		1100,	110,	1101,	1001,	1101,	110,	1001
2017-01-04 14:13:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()	update
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:08 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:08 AI_Player.update()	update
2017-01-04 14:13:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:09 AI_Player.update()	Search took713ms
2017-01-04 14:13:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:09 AI_Player.update()		110,	11,	111,	1011,	111,	11,	11
2017-01-04 14:13:09 AI_Player.update()		11,	101,	11,	101,	101,	1100,	1011
2017-01-04 14:13:09 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-04 14:13:09 AI_Player.update()		11,	1010,	1001,	101,	1101,	1011,	110
2017-01-04 14:13:09 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:09 AI_Player.update()		1010,	1100,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:09 AI_Player.update()		1100,	110,	1101,	1001,	1101,	110,	1001
2017-01-04 14:13:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:09 AI_Player.update()	update
2017-01-04 14:13:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:09 AI_Player.update()	update
2017-01-04 14:13:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:10 AI_Player.update()	Search took387ms
2017-01-04 14:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:10 AI_Player.update()		110,	101,	111,	1011,	111,	11,	11
2017-01-04 14:13:10 AI_Player.update()		11,	111,	11,	101,	101,	1100,	1011
2017-01-04 14:13:10 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:13:10 AI_Player.update()		11,	1010,	1001,	101,	1101,	1011,	110
2017-01-04 14:13:10 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:10 AI_Player.update()		1010,	110,	11,	1101,	1011,	101,	1110
2017-01-04 14:13:10 AI_Player.update()		1100,	11,	1101,	1001,	1101,	110,	1001
2017-01-04 14:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:10 AI_Player.update()	update
2017-01-04 14:13:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:10 AI_Player.update()	update
2017-01-04 14:13:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:10 AI_Player.update()	Search took856ms
2017-01-04 14:13:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:10 AI_Player.update()		110,	101,	111,	1011,	111,	11,	11
2017-01-04 14:13:10 AI_Player.update()		11,	111,	11,	101,	101,	1100,	1011
2017-01-04 14:13:10 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:13:10 AI_Player.update()		11,	1010,	1001,	101,	1101,	1011,	110
2017-01-04 14:13:10 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:10 AI_Player.update()		110,	11,	1101,	1011,	101,	1110,	1010
2017-01-04 14:13:10 AI_Player.update()		1100,	11,	1101,	1001,	1101,	110,	1001
2017-01-04 14:13:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:10 AI_Player.update()	update
2017-01-04 14:13:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:13:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:10 AI_Player.update()	update
2017-01-04 14:13:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:11 AI_Player.update()	Search took818ms
2017-01-04 14:13:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:11 AI_Player.update()		110,	111,	111,	1011,	111,	11,	11
2017-01-04 14:13:11 AI_Player.update()		11,	1010,	11,	101,	101,	1100,	1011
2017-01-04 14:13:11 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:13:11 AI_Player.update()		11,	1100,	1001,	101,	1101,	1011,	110
2017-01-04 14:13:11 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:11 AI_Player.update()		110,	11,	1101,	1011,	101,	1110,	1010
2017-01-04 14:13:11 AI_Player.update()		1100,	101,	1101,	1001,	1101,	110,	1001
2017-01-04 14:13:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:11 AI_Player.update()	update
2017-01-04 14:13:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:11 AI_Player.update()	update
2017-01-04 14:13:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:12 AI_Player.update()	Search took290ms
2017-01-04 14:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()		110,	101,	111,	1011,	111,	11,	11
2017-01-04 14:13:12 AI_Player.update()		11,	111,	11,	101,	101,	1100,	1011
2017-01-04 14:13:12 AI_Player.update()		1110,	1010,	1110,	101,	111,	101,	1011
2017-01-04 14:13:12 AI_Player.update()		11,	1010,	1001,	101,	1101,	1011,	110
2017-01-04 14:13:12 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:12 AI_Player.update()		110,	11,	1101,	1011,	101,	1110,	1010
2017-01-04 14:13:12 AI_Player.update()		1100,	11,	1101,	1001,	1101,	110,	1001
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 14:13:12 AI_Player.update()	Player b has won!
2017-01-04 14:13:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:12 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:13:12 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:12 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:12 AI_Player.update()	Search took22ms
2017-01-04 14:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-04 14:13:12 AI_Player.update()		1010,	111,	1101,	1110,	1010,	11,	110
2017-01-04 14:13:12 AI_Player.update()		1110,	1110,	1110,	1010,	111,	110,	1011
2017-01-04 14:13:12 AI_Player.update()		11,	1001,	101,	1010,	101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:13:12 AI_Player.update()		1001,	11,	1010,	111,	11,	1001,	1110
2017-01-04 14:13:12 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:12 AI_Player.update()	Search took26ms
2017-01-04 14:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-04 14:13:12 AI_Player.update()		111,	1101,	1110,	1010,	11,	110,	1010
2017-01-04 14:13:12 AI_Player.update()		1110,	1110,	1110,	1010,	111,	110,	1011
2017-01-04 14:13:12 AI_Player.update()		11,	1001,	101,	1010,	101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:13:12 AI_Player.update()		1001,	11,	1010,	111,	11,	1001,	1110
2017-01-04 14:13:12 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:12 AI_Player.update()	Search took53ms
2017-01-04 14:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()		110,	1001,	111,	101,	111,	1010,	11
2017-01-04 14:13:12 AI_Player.update()		111,	1101,	1110,	1010,	11,	110,	1010
2017-01-04 14:13:12 AI_Player.update()		1110,	1110,	1110,	1010,	111,	110,	1011
2017-01-04 14:13:12 AI_Player.update()		11,	1001,	101,	1010,	101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()		1110,	1110,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:13:12 AI_Player.update()		11,	1010,	111,	11,	1001,	1110,	1001
2017-01-04 14:13:12 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:12 AI_Player.update()	Search took211ms
2017-01-04 14:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()		110,	1101,	111,	101,	111,	1010,	11
2017-01-04 14:13:12 AI_Player.update()		111,	1110,	1110,	1010,	11,	110,	1010
2017-01-04 14:13:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 14:13:12 AI_Player.update()		11,	1110,	101,	1010,	101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:13:12 AI_Player.update()		11,	1010,	111,	11,	1001,	1110,	1001
2017-01-04 14:13:12 AI_Player.update()		1100,	1001,	1101,	110,	1101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:12 AI_Player.update()	Search took151ms
2017-01-04 14:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-04 14:13:12 AI_Player.update()		111,	1110,	1110,	1010,	11,	110,	1010
2017-01-04 14:13:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 14:13:12 AI_Player.update()		11,	1110,	101,	1110,	101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:12 AI_Player.update()		11,	1010,	111,	110,	1001,	1110,	1001
2017-01-04 14:13:12 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:12 AI_Player.update()	Search took228ms
2017-01-04 14:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-04 14:13:12 AI_Player.update()		111,	1110,	1110,	1010,	11,	110,	1010
2017-01-04 14:13:12 AI_Player.update()		1110,	1001,	1110,	1010,	111,	110,	1011
2017-01-04 14:13:12 AI_Player.update()		11,	1110,	101,	1110,	101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:12 AI_Player.update()		1001,	11,	1010,	111,	110,	1001,	1110
2017-01-04 14:13:12 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:12 AI_Player.update()	Search took117ms
2017-01-04 14:13:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:12 AI_Player.update()		111,	1001,	1110,	1010,	11,	110,	1010
2017-01-04 14:13:12 AI_Player.update()		1110,	1110,	1110,	1010,	111,	110,	1011
2017-01-04 14:13:12 AI_Player.update()		11,	1010,	101,	1110,	101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:12 AI_Player.update()		1001,	1001,	1010,	111,	110,	1001,	1110
2017-01-04 14:13:12 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-04 14:13:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:12 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:12 AI_Player.update()	update
2017-01-04 14:13:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:13 AI_Player.update()	Search took134ms
2017-01-04 14:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:13 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:13 AI_Player.update()		111,	1001,	1110,	1010,	11,	110,	1010
2017-01-04 14:13:13 AI_Player.update()		1110,	1110,	1110,	1010,	111,	110,	1011
2017-01-04 14:13:13 AI_Player.update()		1010,	101,	1110,	101,	1010,	1001,	11
2017-01-04 14:13:13 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:13 AI_Player.update()		1001,	1001,	1010,	111,	110,	1001,	1110
2017-01-04 14:13:13 AI_Player.update()		1100,	1101,	1101,	101,	1101,	1010,	1001
2017-01-04 14:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:13 AI_Player.update()	update
2017-01-04 14:13:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:13 AI_Player.update()	update
2017-01-04 14:13:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:13 AI_Player.update()	Search took434ms
2017-01-04 14:13:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:13 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:13 AI_Player.update()		111,	1001,	1110,	1010,	11,	110,	1010
2017-01-04 14:13:13 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-04 14:13:13 AI_Player.update()		1010,	101,	1110,	11,	1010,	1001,	11
2017-01-04 14:13:13 AI_Player.update()		1110,	11,	1101,	111,	1011,	1100,	1011
2017-01-04 14:13:13 AI_Player.update()		1001,	1001,	1010,	101,	110,	1001,	1110
2017-01-04 14:13:13 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:13 AI_Player.update()	update
2017-01-04 14:13:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:13 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:13 AI_Player.update()	update
2017-01-04 14:13:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:14 AI_Player.update()	Search took539ms
2017-01-04 14:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:14 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:14 AI_Player.update()		111,	1001,	1110,	101,	11,	110,	1010
2017-01-04 14:13:14 AI_Player.update()		1110,	1110,	1110,	11,	111,	110,	1011
2017-01-04 14:13:14 AI_Player.update()		1010,	101,	1110,	111,	1010,	1001,	11
2017-01-04 14:13:14 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-04 14:13:14 AI_Player.update()		1001,	1001,	1010,	1010,	110,	1001,	1110
2017-01-04 14:13:14 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:14 AI_Player.update()	update
2017-01-04 14:13:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:14 AI_Player.update()	update
2017-01-04 14:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:14 AI_Player.update()	Search took626ms
2017-01-04 14:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:14 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:14 AI_Player.update()		1001,	1110,	101,	11,	110,	1010,	111
2017-01-04 14:13:14 AI_Player.update()		1110,	1110,	1110,	11,	111,	110,	1011
2017-01-04 14:13:14 AI_Player.update()		1010,	101,	1110,	111,	1010,	1001,	11
2017-01-04 14:13:14 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-04 14:13:14 AI_Player.update()		1001,	1001,	1010,	1010,	110,	1001,	1110
2017-01-04 14:13:14 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:14 AI_Player.update()	update
2017-01-04 14:13:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:14 AI_Player.update()	update
2017-01-04 14:13:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:14 AI_Player.update()	Search took206ms
2017-01-04 14:13:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:14 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:14 AI_Player.update()		1110,	101,	11,	110,	1010,	111,	1001
2017-01-04 14:13:14 AI_Player.update()		1110,	1110,	1110,	11,	111,	110,	1011
2017-01-04 14:13:14 AI_Player.update()		1010,	101,	1110,	111,	1010,	1001,	11
2017-01-04 14:13:14 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-04 14:13:14 AI_Player.update()		1001,	1001,	1010,	1010,	110,	1001,	1110
2017-01-04 14:13:14 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:14 AI_Player.update()	update
2017-01-04 14:13:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:14 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:14 AI_Player.update()	update
2017-01-04 14:13:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:15 AI_Player.update()	Search took173ms
2017-01-04 14:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:15 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:15 AI_Player.update()		1110,	101,	11,	110,	1010,	1010,	1001
2017-01-04 14:13:15 AI_Player.update()		1110,	1110,	1110,	11,	111,	111,	1011
2017-01-04 14:13:15 AI_Player.update()		1010,	101,	1110,	111,	1010,	110,	11
2017-01-04 14:13:15 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-04 14:13:15 AI_Player.update()		1001,	1001,	1010,	1010,	110,	1100,	1110
2017-01-04 14:13:15 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:15 AI_Player.update()	update
2017-01-04 14:13:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:15 AI_Player.update()	update
2017-01-04 14:13:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:15 AI_Player.update()	Search took618ms
2017-01-04 14:13:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:15 AI_Player.update()		110,	1110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:15 AI_Player.update()		1110,	101,	11,	110,	1010,	1010,	1001
2017-01-04 14:13:15 AI_Player.update()		1110,	1110,	1110,	11,	111,	111,	1011
2017-01-04 14:13:15 AI_Player.update()		1010,	101,	1110,	111,	1010,	110,	11
2017-01-04 14:13:15 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-04 14:13:15 AI_Player.update()		1110,	1001,	1001,	1010,	1010,	110,	1100
2017-01-04 14:13:15 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:15 AI_Player.update()	update
2017-01-04 14:13:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:15 AI_Player.update()	update
2017-01-04 14:13:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:16 AI_Player.update()	Search took723ms
2017-01-04 14:13:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:16 AI_Player.update()		110,	1110,	111,	110,	111,	1010,	11
2017-01-04 14:13:16 AI_Player.update()		1110,	101,	11,	11,	1010,	1010,	1001
2017-01-04 14:13:16 AI_Player.update()		1110,	1110,	1110,	111,	111,	111,	1011
2017-01-04 14:13:16 AI_Player.update()		1010,	101,	1110,	101,	1010,	110,	11
2017-01-04 14:13:16 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:13:16 AI_Player.update()		1110,	1001,	1001,	1010,	1010,	110,	1100
2017-01-04 14:13:16 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:16 AI_Player.update()	update
2017-01-04 14:13:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:16 AI_Player.update()	update
2017-01-04 14:13:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:17 AI_Player.update()	Search took625ms
2017-01-04 14:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()		110,	1110,	111,	110,	111,	1001,	11
2017-01-04 14:13:17 AI_Player.update()		1110,	101,	11,	11,	1010,	1010,	1001
2017-01-04 14:13:17 AI_Player.update()		1110,	1110,	1110,	111,	111,	1010,	1011
2017-01-04 14:13:17 AI_Player.update()		1010,	101,	1110,	101,	1010,	111,	11
2017-01-04 14:13:17 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-04 14:13:17 AI_Player.update()		1110,	1001,	1001,	1010,	1010,	1001,	1100
2017-01-04 14:13:17 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	110,	1001
2017-01-04 14:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()	update
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()	update
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:17 AI_Player.update()	Search took659ms
2017-01-04 14:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()		110,	1110,	111,	110,	111,	1001,	11
2017-01-04 14:13:17 AI_Player.update()		1110,	101,	11,	11,	1010,	1010,	1001
2017-01-04 14:13:17 AI_Player.update()		1110,	1110,	1110,	111,	111,	1010,	1011
2017-01-04 14:13:17 AI_Player.update()		11,	1010,	101,	1110,	101,	1010,	111
2017-01-04 14:13:17 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-04 14:13:17 AI_Player.update()		1110,	1001,	1001,	1010,	1010,	1001,	1100
2017-01-04 14:13:17 AI_Player.update()		1100,	1101,	1101,	1010,	1101,	110,	1001
2017-01-04 14:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()	update
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:17 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:17 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()	update
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:17 AI_Player.update()	Search took39ms
2017-01-04 14:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-04 14:13:17 AI_Player.update()		1110,	101,	11,	111,	1010,	1010,	1001
2017-01-04 14:13:17 AI_Player.update()		1110,	1110,	1110,	1110,	111,	1010,	1011
2017-01-04 14:13:17 AI_Player.update()		11,	1010,	101,	1010,	101,	1010,	111
2017-01-04 14:13:17 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-04 14:13:17 AI_Player.update()		1110,	1001,	1001,	1010,	1010,	1001,	1100
2017-01-04 14:13:17 AI_Player.update()		1100,	1101,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()	update
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()	update
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:17 AI_Player.update()	Search took100ms
2017-01-04 14:13:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()		110,	1110,	111,	111,	111,	1001,	11
2017-01-04 14:13:17 AI_Player.update()		1110,	101,	11,	1110,	1010,	1010,	1001
2017-01-04 14:13:17 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:17 AI_Player.update()		11,	1010,	101,	1010,	101,	1010,	111
2017-01-04 14:13:17 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-04 14:13:17 AI_Player.update()		1110,	1001,	1001,	110,	1010,	1001,	1100
2017-01-04 14:13:17 AI_Player.update()		1100,	1101,	1101,	11,	1101,	110,	1001
2017-01-04 14:13:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()	update
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:17 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:17 AI_Player.update()	update
2017-01-04 14:13:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:18 AI_Player.update()	Search took188ms
2017-01-04 14:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-04 14:13:18 AI_Player.update()		1110,	101,	11,	111,	1010,	1010,	1001
2017-01-04 14:13:18 AI_Player.update()		1110,	1110,	1110,	1110,	111,	1010,	1011
2017-01-04 14:13:18 AI_Player.update()		11,	1010,	101,	1010,	101,	1010,	111
2017-01-04 14:13:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-04 14:13:18 AI_Player.update()		1110,	1001,	1001,	1010,	1010,	1001,	1100
2017-01-04 14:13:18 AI_Player.update()		1100,	1101,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()	update
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()	update
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:18 AI_Player.update()	Search took137ms
2017-01-04 14:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-04 14:13:18 AI_Player.update()		1110,	101,	11,	111,	1010,	1010,	1001
2017-01-04 14:13:18 AI_Player.update()		1110,	1110,	1110,	1110,	111,	1010,	1011
2017-01-04 14:13:18 AI_Player.update()		11,	1010,	101,	1010,	101,	1010,	111
2017-01-04 14:13:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-04 14:13:18 AI_Player.update()		1100,	1110,	1001,	1001,	1010,	1010,	1001
2017-01-04 14:13:18 AI_Player.update()		1100,	1101,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()	update
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:13:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()	update
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:18 AI_Player.update()	Search took65ms
2017-01-04 14:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-04 14:13:18 AI_Player.update()		101,	11,	111,	1010,	1010,	1001,	1110
2017-01-04 14:13:18 AI_Player.update()		1110,	1110,	1110,	1110,	111,	1010,	1011
2017-01-04 14:13:18 AI_Player.update()		11,	1010,	101,	1010,	101,	1010,	111
2017-01-04 14:13:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-04 14:13:18 AI_Player.update()		1100,	1110,	1001,	1001,	1010,	1010,	1001
2017-01-04 14:13:18 AI_Player.update()		1100,	1101,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()	update
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()	update
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:18 AI_Player.update()	Search took148ms
2017-01-04 14:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()		110,	1110,	111,	11,	111,	1001,	11
2017-01-04 14:13:18 AI_Player.update()		101,	11,	111,	1010,	1010,	1001,	1110
2017-01-04 14:13:18 AI_Player.update()		1110,	1110,	1110,	1110,	111,	1010,	1011
2017-01-04 14:13:18 AI_Player.update()		111,	11,	1010,	101,	1010,	101,	1010
2017-01-04 14:13:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-04 14:13:18 AI_Player.update()		1100,	1110,	1001,	1001,	1010,	1010,	1001
2017-01-04 14:13:18 AI_Player.update()		1100,	1101,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()	update
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()	update
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:18 AI_Player.update()	Search took323ms
2017-01-04 14:13:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()		110,	1101,	111,	11,	111,	1001,	11
2017-01-04 14:13:18 AI_Player.update()		101,	1110,	111,	1010,	1010,	1001,	1110
2017-01-04 14:13:18 AI_Player.update()		1110,	11,	1110,	1110,	111,	1010,	1011
2017-01-04 14:13:18 AI_Player.update()		111,	1110,	1010,	101,	1010,	101,	1010
2017-01-04 14:13:18 AI_Player.update()		1110,	11,	1101,	1010,	1011,	110,	1011
2017-01-04 14:13:18 AI_Player.update()		1100,	11,	1001,	1001,	1010,	1010,	1001
2017-01-04 14:13:18 AI_Player.update()		1100,	1110,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()	update
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:18 AI_Player.update()	update
2017-01-04 14:13:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:19 AI_Player.update()	Search took299ms
2017-01-04 14:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()		110,	1101,	111,	11,	111,	1001,	11
2017-01-04 14:13:19 AI_Player.update()		101,	1110,	111,	1010,	1010,	1010,	1110
2017-01-04 14:13:19 AI_Player.update()		1110,	11,	1110,	1110,	111,	101,	1011
2017-01-04 14:13:19 AI_Player.update()		111,	1110,	1010,	101,	1010,	110,	1010
2017-01-04 14:13:19 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:13:19 AI_Player.update()		1100,	11,	1001,	1001,	1010,	110,	1001
2017-01-04 14:13:19 AI_Player.update()		1100,	1110,	1101,	110,	1101,	1001,	1001
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:13:19 AI_Player.update()	Player a has won!
2017-01-04 14:13:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:19 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:13:19 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:19 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:19 AI_Player.update()	Search took268ms
2017-01-04 14:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()		110,	111,	111,	111,	111,	1001,	11
2017-01-04 14:13:19 AI_Player.update()		1010,	110,	1100,	1010,	1010,	1110,	1001
2017-01-04 14:13:19 AI_Player.update()		1110,	1011,	1110,	11,	111,	11,	1011
2017-01-04 14:13:19 AI_Player.update()		1001,	101,	101,	110,	1100,	101,	101
2017-01-04 14:13:19 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1011,	1011
2017-01-04 14:13:19 AI_Player.update()		1010,	1010,	1100,	101,	101,	1010,	1101
2017-01-04 14:13:19 AI_Player.update()		1100,	101,	1101,	101,	1101,	11,	1001
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:19 AI_Player.update()	Search took32ms
2017-01-04 14:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-04 14:13:19 AI_Player.update()		1010,	110,	1100,	11,	1010,	1110,	1001
2017-01-04 14:13:19 AI_Player.update()		1110,	1011,	1110,	110,	111,	11,	1011
2017-01-04 14:13:19 AI_Player.update()		1001,	101,	101,	1001,	1100,	101,	101
2017-01-04 14:13:19 AI_Player.update()		1110,	110,	1101,	101,	1011,	1011,	1011
2017-01-04 14:13:19 AI_Player.update()		1010,	1010,	1100,	101,	101,	1010,	1101
2017-01-04 14:13:19 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:19 AI_Player.update()	Search took71ms
2017-01-04 14:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:19 AI_Player.update()		1010,	1011,	1100,	11,	1010,	1110,	1001
2017-01-04 14:13:19 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:19 AI_Player.update()		1001,	110,	101,	1001,	1100,	101,	101
2017-01-04 14:13:19 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-04 14:13:19 AI_Player.update()		1010,	101,	1100,	101,	101,	1010,	1101
2017-01-04 14:13:19 AI_Player.update()		1100,	111,	1101,	111,	1101,	11,	1001
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:19 AI_Player.update()	Search took30ms
2017-01-04 14:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-04 14:13:19 AI_Player.update()		1010,	110,	1100,	11,	1010,	1110,	1001
2017-01-04 14:13:19 AI_Player.update()		1110,	1011,	1110,	110,	111,	11,	1011
2017-01-04 14:13:19 AI_Player.update()		1001,	101,	101,	1001,	1100,	101,	101
2017-01-04 14:13:19 AI_Player.update()		1110,	110,	1101,	101,	1011,	1011,	1011
2017-01-04 14:13:19 AI_Player.update()		1010,	1010,	1100,	101,	101,	1010,	1101
2017-01-04 14:13:19 AI_Player.update()		1100,	101,	1101,	111,	1101,	11,	1001
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:19 AI_Player.update()	Search took89ms
2017-01-04 14:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:19 AI_Player.update()		1010,	1011,	1100,	11,	1010,	1110,	1001
2017-01-04 14:13:19 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:19 AI_Player.update()		1001,	110,	101,	1001,	1100,	101,	101
2017-01-04 14:13:19 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-04 14:13:19 AI_Player.update()		1010,	101,	1100,	101,	101,	1010,	1101
2017-01-04 14:13:19 AI_Player.update()		1100,	111,	1101,	111,	1101,	11,	1001
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:19 AI_Player.update()	Search took34ms
2017-01-04 14:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:19 AI_Player.update()		1001,	1010,	1011,	1100,	11,	1010,	1110
2017-01-04 14:13:19 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:19 AI_Player.update()		1001,	110,	101,	1001,	1100,	101,	101
2017-01-04 14:13:19 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1011,	1011
2017-01-04 14:13:19 AI_Player.update()		1010,	101,	1100,	101,	101,	1010,	1101
2017-01-04 14:13:19 AI_Player.update()		1100,	111,	1101,	111,	1101,	11,	1001
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:19 AI_Player.update()	Search took118ms
2017-01-04 14:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:19 AI_Player.update()		1001,	1010,	1011,	1100,	11,	11,	1110
2017-01-04 14:13:19 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 14:13:19 AI_Player.update()		1001,	110,	101,	1001,	1100,	1011,	101
2017-01-04 14:13:19 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 14:13:19 AI_Player.update()		1010,	101,	1100,	101,	101,	11,	1101
2017-01-04 14:13:19 AI_Player.update()		1100,	111,	1101,	111,	1101,	1001,	1001
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:13:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:19 AI_Player.update()	Search took46ms
2017-01-04 14:13:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:19 AI_Player.update()		1010,	1011,	1100,	11,	11,	1110,	1001
2017-01-04 14:13:19 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 14:13:19 AI_Player.update()		1001,	110,	101,	1001,	1100,	1011,	101
2017-01-04 14:13:19 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 14:13:19 AI_Player.update()		1010,	101,	1100,	101,	101,	11,	1101
2017-01-04 14:13:19 AI_Player.update()		1100,	111,	1101,	111,	1101,	1001,	1001
2017-01-04 14:13:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:19 AI_Player.update()	update
2017-01-04 14:13:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:20 AI_Player.update()	Search took320ms
2017-01-04 14:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:20 AI_Player.update()		1010,	1011,	1100,	11,	11,	1110,	1001
2017-01-04 14:13:20 AI_Player.update()		1110,	101,	1110,	110,	111,	101,	1011
2017-01-04 14:13:20 AI_Player.update()		1001,	110,	101,	1001,	1100,	1011,	101
2017-01-04 14:13:20 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1010,	1011
2017-01-04 14:13:20 AI_Player.update()		101,	1100,	101,	101,	11,	1101,	1010
2017-01-04 14:13:20 AI_Player.update()		1100,	111,	1101,	111,	1101,	1001,	1001
2017-01-04 14:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()	update
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()	update
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:20 AI_Player.update()	Search took59ms
2017-01-04 14:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()		110,	111,	111,	1010,	111,	1010,	11
2017-01-04 14:13:20 AI_Player.update()		1010,	110,	1100,	11,	11,	1110,	1001
2017-01-04 14:13:20 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-04 14:13:20 AI_Player.update()		1001,	101,	101,	1001,	1100,	1011,	101
2017-01-04 14:13:20 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 14:13:20 AI_Player.update()		101,	1010,	101,	101,	11,	1101,	1010
2017-01-04 14:13:20 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-04 14:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()	update
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()	update
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:20 AI_Player.update()	Search took417ms
2017-01-04 14:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()		110,	111,	111,	1010,	111,	1010,	11
2017-01-04 14:13:20 AI_Player.update()		1010,	110,	1100,	11,	11,	1110,	1001
2017-01-04 14:13:20 AI_Player.update()		1110,	1011,	1110,	110,	111,	101,	1011
2017-01-04 14:13:20 AI_Player.update()		1001,	101,	101,	1001,	1100,	1011,	101
2017-01-04 14:13:20 AI_Player.update()		1110,	110,	1101,	101,	1011,	1010,	1011
2017-01-04 14:13:20 AI_Player.update()		1010,	101,	101,	11,	1101,	1010,	101
2017-01-04 14:13:20 AI_Player.update()		1100,	1100,	1101,	111,	1101,	1001,	1001
2017-01-04 14:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()	update
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()	update
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:20 AI_Player.update()	Search took135ms
2017-01-04 14:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-04 14:13:20 AI_Player.update()		1010,	110,	1100,	110,	11,	1110,	1001
2017-01-04 14:13:20 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:20 AI_Player.update()		1001,	101,	101,	101,	1100,	1011,	101
2017-01-04 14:13:20 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-04 14:13:20 AI_Player.update()		1010,	101,	101,	111,	1101,	1010,	101
2017-01-04 14:13:20 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()	update
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()	update
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:20 AI_Player.update()	Search took141ms
2017-01-04 14:13:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-04 14:13:20 AI_Player.update()		1001,	1010,	110,	1100,	110,	11,	1110
2017-01-04 14:13:20 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:20 AI_Player.update()		1001,	101,	101,	101,	1100,	1011,	101
2017-01-04 14:13:20 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-04 14:13:20 AI_Player.update()		1010,	101,	101,	111,	1101,	1010,	101
2017-01-04 14:13:20 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()	update
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:20 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:20 AI_Player.update()	update
2017-01-04 14:13:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:21 AI_Player.update()	Search took158ms
2017-01-04 14:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()		110,	111,	111,	1100,	111,	1010,	11
2017-01-04 14:13:21 AI_Player.update()		1001,	1010,	110,	1001,	110,	11,	1110
2017-01-04 14:13:21 AI_Player.update()		1110,	1011,	1110,	101,	111,	101,	1011
2017-01-04 14:13:21 AI_Player.update()		1001,	101,	101,	11,	1100,	1011,	101
2017-01-04 14:13:21 AI_Player.update()		1110,	110,	1101,	111,	1011,	1010,	1011
2017-01-04 14:13:21 AI_Player.update()		1010,	101,	101,	1010,	1101,	1010,	101
2017-01-04 14:13:21 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:21 AI_Player.update()	Search took92ms
2017-01-04 14:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-04 14:13:21 AI_Player.update()		1001,	1010,	110,	1100,	110,	11,	1110
2017-01-04 14:13:21 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:21 AI_Player.update()		1001,	101,	101,	101,	1100,	1011,	101
2017-01-04 14:13:21 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-04 14:13:21 AI_Player.update()		1010,	101,	101,	111,	1101,	1010,	101
2017-01-04 14:13:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:21 AI_Player.update()	Search took174ms
2017-01-04 14:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-04 14:13:21 AI_Player.update()		1001,	1010,	110,	1100,	110,	11,	1110
2017-01-04 14:13:21 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:21 AI_Player.update()		101,	101,	101,	1100,	1011,	101,	1001
2017-01-04 14:13:21 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-04 14:13:21 AI_Player.update()		1010,	101,	101,	111,	1101,	1010,	101
2017-01-04 14:13:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:21 AI_Player.update()	Search took117ms
2017-01-04 14:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()		110,	1100,	111,	11,	111,	1010,	11
2017-01-04 14:13:21 AI_Player.update()		1001,	111,	110,	1100,	110,	11,	1110
2017-01-04 14:13:21 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:21 AI_Player.update()		101,	1011,	101,	1100,	1011,	101,	1001
2017-01-04 14:13:21 AI_Player.update()		1110,	101,	1101,	11,	1011,	1010,	1011
2017-01-04 14:13:21 AI_Player.update()		1010,	110,	101,	111,	1101,	1010,	101
2017-01-04 14:13:21 AI_Player.update()		1100,	101,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:21 AI_Player.update()	Search took396ms
2017-01-04 14:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-04 14:13:21 AI_Player.update()		1001,	1010,	110,	1100,	110,	11,	1110
2017-01-04 14:13:21 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:21 AI_Player.update()		101,	101,	101,	1100,	1011,	101,	1001
2017-01-04 14:13:21 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-04 14:13:21 AI_Player.update()		1010,	101,	101,	111,	1101,	1010,	101
2017-01-04 14:13:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:21 AI_Player.update()	Search took146ms
2017-01-04 14:13:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()		110,	111,	111,	11,	111,	1010,	11
2017-01-04 14:13:21 AI_Player.update()		1001,	1010,	110,	1100,	110,	11,	1110
2017-01-04 14:13:21 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:21 AI_Player.update()		101,	101,	1100,	1011,	101,	1001,	101
2017-01-04 14:13:21 AI_Player.update()		1110,	110,	1101,	11,	1011,	1010,	1011
2017-01-04 14:13:21 AI_Player.update()		1010,	101,	101,	111,	1101,	1010,	101
2017-01-04 14:13:21 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:21 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:21 AI_Player.update()	update
2017-01-04 14:13:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:22 AI_Player.update()	Search took71ms
2017-01-04 14:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-04 14:13:22 AI_Player.update()		1001,	1010,	110,	1100,	110,	1010,	1110
2017-01-04 14:13:22 AI_Player.update()		1110,	1011,	1110,	1001,	111,	11,	1011
2017-01-04 14:13:22 AI_Player.update()		101,	101,	1100,	1011,	101,	101,	101
2017-01-04 14:13:22 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:22 AI_Player.update()		1010,	101,	101,	111,	1101,	1010,	101
2017-01-04 14:13:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:22 AI_Player.update()	Search took142ms
2017-01-04 14:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-04 14:13:22 AI_Player.update()		1001,	1010,	110,	1100,	110,	1010,	1110
2017-01-04 14:13:22 AI_Player.update()		1110,	1011,	1110,	1001,	111,	11,	1011
2017-01-04 14:13:22 AI_Player.update()		101,	1100,	1011,	101,	101,	101,	101
2017-01-04 14:13:22 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:22 AI_Player.update()		1010,	101,	101,	111,	1101,	1010,	101
2017-01-04 14:13:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:13:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:22 AI_Player.update()	Search took49ms
2017-01-04 14:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()		110,	1010,	111,	11,	111,	1001,	11
2017-01-04 14:13:22 AI_Player.update()		1001,	1011,	110,	1100,	110,	1010,	1110
2017-01-04 14:13:22 AI_Player.update()		1110,	1100,	1110,	1001,	111,	11,	1011
2017-01-04 14:13:22 AI_Player.update()		101,	110,	1011,	101,	101,	101,	101
2017-01-04 14:13:22 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:22 AI_Player.update()		1010,	1100,	101,	111,	1101,	1010,	101
2017-01-04 14:13:22 AI_Player.update()		1100,	111,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:22 AI_Player.update()	Search took456ms
2017-01-04 14:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()		110,	111,	111,	11,	111,	1001,	11
2017-01-04 14:13:22 AI_Player.update()		1001,	1010,	110,	1100,	110,	1010,	1110
2017-01-04 14:13:22 AI_Player.update()		1110,	1011,	1110,	1001,	111,	11,	1011
2017-01-04 14:13:22 AI_Player.update()		101,	1100,	1011,	101,	101,	101,	101
2017-01-04 14:13:22 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:22 AI_Player.update()		1010,	101,	101,	111,	1101,	1010,	101
2017-01-04 14:13:22 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:13:22 AI_Player.update()	Player a has won!
2017-01-04 14:13:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:22 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:13:22 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:22 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:22 AI_Player.update()	Search took25ms
2017-01-04 14:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()		110,	1110,	111,	1101,	111,	1010,	11
2017-01-04 14:13:22 AI_Player.update()		1100,	1100,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:22 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:22 AI_Player.update()		1011,	110,	101,	1011,	110,	1010,	101
2017-01-04 14:13:22 AI_Player.update()		1110,	101,	1101,	11,	1011,	1101,	1011
2017-01-04 14:13:22 AI_Player.update()		101,	1001,	11,	110,	1001,	1100,	110
2017-01-04 14:13:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:22 AI_Player.update()	Search took53ms
2017-01-04 14:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()		110,	1110,	111,	1101,	111,	1101,	11
2017-01-04 14:13:22 AI_Player.update()		1100,	1100,	1010,	1100,	1100,	11,	111
2017-01-04 14:13:22 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-04 14:13:22 AI_Player.update()		1011,	110,	101,	1011,	110,	1101,	101
2017-01-04 14:13:22 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:22 AI_Player.update()		101,	1001,	11,	110,	1001,	1010,	110
2017-01-04 14:13:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:22 AI_Player.update()	Search took69ms
2017-01-04 14:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()		110,	1110,	111,	1101,	111,	1101,	11
2017-01-04 14:13:22 AI_Player.update()		1100,	1010,	1100,	1100,	11,	111,	1100
2017-01-04 14:13:22 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-04 14:13:22 AI_Player.update()		1011,	110,	101,	1011,	110,	1101,	101
2017-01-04 14:13:22 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:22 AI_Player.update()		101,	1001,	11,	110,	1001,	1010,	110
2017-01-04 14:13:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:22 AI_Player.update()	Search took78ms
2017-01-04 14:13:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()		110,	1110,	111,	1101,	111,	1101,	11
2017-01-04 14:13:22 AI_Player.update()		1100,	1100,	1010,	1100,	1100,	11,	111
2017-01-04 14:13:22 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-04 14:13:22 AI_Player.update()		1011,	110,	101,	1011,	110,	1101,	101
2017-01-04 14:13:22 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:22 AI_Player.update()		101,	1001,	11,	110,	1001,	1010,	110
2017-01-04 14:13:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:13:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:22 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:22 AI_Player.update()	update
2017-01-04 14:13:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:23 AI_Player.update()	Search took372ms
2017-01-04 14:13:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:23 AI_Player.update()		110,	1110,	111,	1101,	111,	1101,	11
2017-01-04 14:13:23 AI_Player.update()		1100,	1100,	1010,	1100,	1100,	11,	111
2017-01-04 14:13:23 AI_Player.update()		1110,	101,	1110,	110,	111,	1010,	1011
2017-01-04 14:13:23 AI_Player.update()		1011,	110,	101,	1011,	110,	1101,	101
2017-01-04 14:13:23 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:23 AI_Player.update()		1001,	11,	110,	1001,	1010,	110,	101
2017-01-04 14:13:23 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1010,	1001
2017-01-04 14:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:23 AI_Player.update()	update
2017-01-04 14:13:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:23 AI_Player.update()	update
2017-01-04 14:13:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:23 AI_Player.update()	Search took364ms
2017-01-04 14:13:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:23 AI_Player.update()		110,	1110,	111,	1101,	111,	1010,	11
2017-01-04 14:13:23 AI_Player.update()		1100,	1100,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:23 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:23 AI_Player.update()		1011,	110,	101,	1011,	110,	1010,	101
2017-01-04 14:13:23 AI_Player.update()		1110,	101,	1101,	11,	1011,	1101,	1011
2017-01-04 14:13:23 AI_Player.update()		1001,	11,	110,	1001,	1010,	1100,	101
2017-01-04 14:13:23 AI_Player.update()		1100,	1010,	1101,	11,	1101,	110,	1001
2017-01-04 14:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:23 AI_Player.update()	update
2017-01-04 14:13:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:23 AI_Player.update()	update
2017-01-04 14:13:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:23 AI_Player.update()	Search took213ms
2017-01-04 14:13:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:23 AI_Player.update()		110,	1110,	111,	1100,	111,	1010,	11
2017-01-04 14:13:23 AI_Player.update()		1100,	1100,	1010,	110,	1100,	1101,	111
2017-01-04 14:13:23 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-04 14:13:23 AI_Player.update()		1011,	110,	101,	11,	110,	1010,	101
2017-01-04 14:13:23 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-04 14:13:23 AI_Player.update()		1001,	11,	110,	11,	1010,	1100,	101
2017-01-04 14:13:23 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	110,	1001
2017-01-04 14:13:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:23 AI_Player.update()	update
2017-01-04 14:13:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:23 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:23 AI_Player.update()	update
2017-01-04 14:13:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:24 AI_Player.update()	Search took140ms
2017-01-04 14:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()		110,	1110,	111,	1100,	111,	1010,	11
2017-01-04 14:13:24 AI_Player.update()		1100,	1100,	1010,	110,	1100,	1101,	111
2017-01-04 14:13:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-04 14:13:24 AI_Player.update()		110,	101,	11,	110,	1010,	101,	1011
2017-01-04 14:13:24 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-04 14:13:24 AI_Player.update()		1001,	11,	110,	11,	1010,	1100,	101
2017-01-04 14:13:24 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	110,	1001
2017-01-04 14:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()	update
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()	update
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:24 AI_Player.update()	Search took395ms
2017-01-04 14:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()		110,	1110,	111,	1100,	111,	1010,	11
2017-01-04 14:13:24 AI_Player.update()		1100,	1100,	1010,	110,	1100,	1101,	111
2017-01-04 14:13:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-04 14:13:24 AI_Player.update()		110,	101,	11,	110,	1010,	101,	1011
2017-01-04 14:13:24 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-04 14:13:24 AI_Player.update()		101,	1001,	11,	110,	11,	1010,	1100
2017-01-04 14:13:24 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	110,	1001
2017-01-04 14:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()	update
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()	update
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:24 AI_Player.update()	Search took154ms
2017-01-04 14:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-04 14:13:24 AI_Player.update()		1100,	101,	1010,	110,	1100,	1101,	111
2017-01-04 14:13:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-04 14:13:24 AI_Player.update()		110,	101,	11,	110,	1010,	101,	1011
2017-01-04 14:13:24 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1101,	1011
2017-01-04 14:13:24 AI_Player.update()		101,	1010,	11,	110,	11,	1010,	1100
2017-01-04 14:13:24 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	110,	1001
2017-01-04 14:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()	update
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()	update
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:24 AI_Player.update()	Search took253ms
2017-01-04 14:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()		110,	1110,	111,	1100,	111,	1010,	11
2017-01-04 14:13:24 AI_Player.update()		1100,	1100,	1010,	110,	1100,	1101,	111
2017-01-04 14:13:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-04 14:13:24 AI_Player.update()		110,	101,	11,	110,	1010,	101,	1011
2017-01-04 14:13:24 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1101,	1011
2017-01-04 14:13:24 AI_Player.update()		101,	1001,	11,	110,	11,	1010,	1100
2017-01-04 14:13:24 AI_Player.update()		1100,	1010,	1101,	1101,	1101,	110,	1001
2017-01-04 14:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()	update
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()	update
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:24 AI_Player.update()	Search took28ms
2017-01-04 14:13:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-04 14:13:24 AI_Player.update()		1100,	101,	1010,	110,	1100,	1101,	111
2017-01-04 14:13:24 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-04 14:13:24 AI_Player.update()		110,	101,	11,	110,	1010,	101,	1011
2017-01-04 14:13:24 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1101,	1011
2017-01-04 14:13:24 AI_Player.update()		101,	1010,	11,	110,	11,	1010,	1100
2017-01-04 14:13:24 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	110,	1001
2017-01-04 14:13:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()	update
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:24 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:24 AI_Player.update()	update
2017-01-04 14:13:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:25 AI_Player.update()	Search took232ms
2017-01-04 14:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()		110,	1100,	111,	1100,	111,	1010,	11
2017-01-04 14:13:25 AI_Player.update()		1100,	101,	1010,	110,	1100,	1101,	111
2017-01-04 14:13:25 AI_Player.update()		1110,	101,	1110,	1011,	111,	11,	1011
2017-01-04 14:13:25 AI_Player.update()		101,	11,	110,	1010,	101,	1011,	110
2017-01-04 14:13:25 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1101,	1011
2017-01-04 14:13:25 AI_Player.update()		101,	1010,	11,	110,	11,	1010,	1100
2017-01-04 14:13:25 AI_Player.update()		1100,	1110,	1101,	1101,	1101,	110,	1001
2017-01-04 14:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()	update
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()	update
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:25 AI_Player.update()	Search took123ms
2017-01-04 14:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-04 14:13:25 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:25 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:25 AI_Player.update()		101,	11,	110,	1011,	101,	1011,	110
2017-01-04 14:13:25 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:25 AI_Player.update()		101,	1010,	11,	1001,	11,	1010,	1100
2017-01-04 14:13:25 AI_Player.update()		1100,	1110,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()	update
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()	update
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:25 AI_Player.update()	Search took297ms
2017-01-04 14:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-04 14:13:25 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:25 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:25 AI_Player.update()		11,	110,	1011,	101,	1011,	110,	101
2017-01-04 14:13:25 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:25 AI_Player.update()		101,	1010,	11,	1001,	11,	1010,	1100
2017-01-04 14:13:25 AI_Player.update()		1100,	1110,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()	update
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()	update
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:25 AI_Player.update()	Search took71ms
2017-01-04 14:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 14:13:25 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:25 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-04 14:13:25 AI_Player.update()		11,	1001,	1011,	101,	1011,	110,	101
2017-01-04 14:13:25 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:25 AI_Player.update()		101,	1110,	11,	1001,	11,	1010,	1100
2017-01-04 14:13:25 AI_Player.update()		1100,	1100,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()	update
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:25 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()	update
2017-01-04 14:13:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:25 AI_Player.update()	Search took339ms
2017-01-04 14:13:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:25 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 14:13:25 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:25 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-04 14:13:25 AI_Player.update()		11,	1001,	1011,	101,	1011,	110,	101
2017-01-04 14:13:25 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:25 AI_Player.update()		1110,	11,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:25 AI_Player.update()		1100,	1100,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()	update
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()	update
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:26 AI_Player.update()	Search took24ms
2017-01-04 14:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 14:13:26 AI_Player.update()		1100,	110,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:26 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 14:13:26 AI_Player.update()		11,	1010,	1011,	101,	1011,	110,	101
2017-01-04 14:13:26 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:26 AI_Player.update()		1110,	1100,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:26 AI_Player.update()		1100,	101,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()	update
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()	update
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:26 AI_Player.update()	Search took444ms
2017-01-04 14:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 14:13:26 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:26 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-04 14:13:26 AI_Player.update()		11,	1001,	1011,	101,	1011,	110,	101
2017-01-04 14:13:26 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:26 AI_Player.update()		1110,	11,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:26 AI_Player.update()		1100,	1100,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()	update
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()	update
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:26 AI_Player.update()	Search took29ms
2017-01-04 14:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 14:13:26 AI_Player.update()		1100,	110,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:26 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 14:13:26 AI_Player.update()		11,	1010,	1011,	101,	1011,	110,	101
2017-01-04 14:13:26 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:26 AI_Player.update()		1110,	1100,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:26 AI_Player.update()		1100,	101,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()	update
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()	update
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:26 AI_Player.update()	Search took470ms
2017-01-04 14:13:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 14:13:26 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:26 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-04 14:13:26 AI_Player.update()		11,	1001,	1011,	101,	1011,	110,	101
2017-01-04 14:13:26 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:26 AI_Player.update()		1110,	11,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:26 AI_Player.update()		1100,	1100,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()	update
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:26 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:26 AI_Player.update()	update
2017-01-04 14:13:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:27 AI_Player.update()	Search took22ms
2017-01-04 14:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 14:13:27 AI_Player.update()		1100,	110,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:27 AI_Player.update()		1110,	1001,	1110,	110,	111,	11,	1011
2017-01-04 14:13:27 AI_Player.update()		11,	1010,	1011,	101,	1011,	110,	101
2017-01-04 14:13:27 AI_Player.update()		1110,	11,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:27 AI_Player.update()		1110,	1100,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:27 AI_Player.update()		1100,	101,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:27 AI_Player.update()	Search took411ms
2017-01-04 14:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 14:13:27 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:27 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-04 14:13:27 AI_Player.update()		11,	1001,	1011,	101,	1011,	110,	101
2017-01-04 14:13:27 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:27 AI_Player.update()		1110,	11,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:27 AI_Player.update()		1100,	1100,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:27 AI_Player.update()	Search took21ms
2017-01-04 14:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-04 14:13:27 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:27 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:27 AI_Player.update()		11,	110,	1011,	101,	1011,	110,	101
2017-01-04 14:13:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:27 AI_Player.update()		1110,	1010,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:27 AI_Player.update()		1100,	11,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:27 AI_Player.update()	Search took70ms
2017-01-04 14:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-04 14:13:27 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:27 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:27 AI_Player.update()		110,	1011,	101,	1011,	110,	101,	11
2017-01-04 14:13:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:27 AI_Player.update()		1110,	1010,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:27 AI_Player.update()		1100,	11,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:27 AI_Player.update()	Search took21ms
2017-01-04 14:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-04 14:13:27 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:27 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:27 AI_Player.update()		11,	110,	1011,	101,	1011,	110,	101
2017-01-04 14:13:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:27 AI_Player.update()		1110,	1010,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:27 AI_Player.update()		1100,	11,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:27 AI_Player.update()	Search took40ms
2017-01-04 14:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-04 14:13:27 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:27 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:27 AI_Player.update()		110,	1011,	101,	1011,	110,	101,	11
2017-01-04 14:13:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:27 AI_Player.update()		1110,	1010,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:27 AI_Player.update()		1100,	11,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:27 AI_Player.update()	Search took32ms
2017-01-04 14:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()		110,	1100,	111,	1101,	111,	1010,	11
2017-01-04 14:13:27 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:27 AI_Player.update()		1110,	101,	1110,	110,	111,	11,	1011
2017-01-04 14:13:27 AI_Player.update()		11,	110,	1011,	101,	1011,	110,	101
2017-01-04 14:13:27 AI_Player.update()		1110,	1001,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:27 AI_Player.update()		1110,	1010,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:27 AI_Player.update()		1100,	11,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:27 AI_Player.update()	Search took122ms
2017-01-04 14:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()		110,	101,	111,	1101,	111,	1010,	11
2017-01-04 14:13:27 AI_Player.update()		1100,	101,	1010,	1100,	1100,	1101,	111
2017-01-04 14:13:27 AI_Player.update()		1110,	110,	1110,	110,	111,	11,	1011
2017-01-04 14:13:27 AI_Player.update()		11,	1001,	1011,	101,	1011,	110,	101
2017-01-04 14:13:27 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:27 AI_Player.update()		1110,	11,	1001,	11,	1010,	1100,	101
2017-01-04 14:13:27 AI_Player.update()		1100,	1100,	1101,	110,	1101,	110,	1001
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	6 2
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:13:27 AI_Player.update()	Player a has won!
2017-01-04 14:13:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:27 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:13:27 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:27 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:27 AI_Player.update()	Search took21ms
2017-01-04 14:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()		110,	1011,	111,	111,	111,	1010,	11
2017-01-04 14:13:27 AI_Player.update()		11,	1001,	1110,	101,	111,	1001,	11
2017-01-04 14:13:27 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:27 AI_Player.update()		1001,	111,	101,	1100,	101,	1001,	11
2017-01-04 14:13:27 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:27 AI_Player.update()		1001,	101,	101,	101,	1001,	101,	1001
2017-01-04 14:13:27 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:27 AI_Player.update()	Search took32ms
2017-01-04 14:13:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()		110,	1011,	111,	111,	111,	1010,	11
2017-01-04 14:13:27 AI_Player.update()		11,	11,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:27 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:27 AI_Player.update()		1001,	111,	101,	1100,	101,	1001,	11
2017-01-04 14:13:27 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:27 AI_Player.update()		1001,	101,	101,	101,	1001,	101,	1001
2017-01-04 14:13:27 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:27 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:27 AI_Player.update()	update
2017-01-04 14:13:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:28 AI_Player.update()	Search took253ms
2017-01-04 14:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()		110,	1011,	111,	111,	111,	1100,	11
2017-01-04 14:13:28 AI_Player.update()		11,	11,	1001,	1110,	101,	1010,	1001
2017-01-04 14:13:28 AI_Player.update()		1110,	110,	1110,	1010,	111,	111,	1011
2017-01-04 14:13:28 AI_Player.update()		1001,	111,	101,	1100,	101,	101,	11
2017-01-04 14:13:28 AI_Player.update()		1110,	1100,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:28 AI_Player.update()		1001,	101,	101,	101,	1001,	1100,	1001
2017-01-04 14:13:28 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-04 14:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()	update
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()	update
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:28 AI_Player.update()	Search took244ms
2017-01-04 14:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()		110,	11,	111,	111,	111,	1100,	11
2017-01-04 14:13:28 AI_Player.update()		11,	110,	1001,	1110,	101,	1010,	1001
2017-01-04 14:13:28 AI_Player.update()		1110,	111,	1110,	1010,	111,	111,	1011
2017-01-04 14:13:28 AI_Player.update()		1001,	1100,	101,	1100,	101,	101,	11
2017-01-04 14:13:28 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:28 AI_Player.update()		1001,	11,	101,	101,	1001,	1100,	1001
2017-01-04 14:13:28 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 14:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()	update
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()	update
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:28 AI_Player.update()	Search took316ms
2017-01-04 14:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()		110,	11,	111,	111,	111,	1100,	11
2017-01-04 14:13:28 AI_Player.update()		11,	110,	1001,	1110,	101,	1010,	1001
2017-01-04 14:13:28 AI_Player.update()		1110,	111,	1110,	1010,	111,	111,	1011
2017-01-04 14:13:28 AI_Player.update()		1100,	101,	1100,	101,	101,	11,	1001
2017-01-04 14:13:28 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:28 AI_Player.update()		1001,	11,	101,	101,	1001,	1100,	1001
2017-01-04 14:13:28 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 14:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()	update
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()	update
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:28 AI_Player.update()	Search took161ms
2017-01-04 14:13:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()		110,	11,	111,	111,	111,	1100,	11
2017-01-04 14:13:28 AI_Player.update()		11,	110,	1001,	1110,	101,	1010,	1001
2017-01-04 14:13:28 AI_Player.update()		1110,	111,	1110,	1010,	111,	111,	1011
2017-01-04 14:13:28 AI_Player.update()		1001,	1100,	101,	1100,	101,	101,	11
2017-01-04 14:13:28 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:28 AI_Player.update()		1001,	11,	101,	101,	1001,	1100,	1001
2017-01-04 14:13:28 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 14:13:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()	update
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:28 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:28 AI_Player.update()	update
2017-01-04 14:13:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:29 AI_Player.update()	Search took290ms
2017-01-04 14:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()		110,	11,	111,	111,	111,	1100,	11
2017-01-04 14:13:29 AI_Player.update()		11,	110,	1001,	1110,	101,	1010,	1001
2017-01-04 14:13:29 AI_Player.update()		1110,	111,	1110,	1010,	111,	111,	1011
2017-01-04 14:13:29 AI_Player.update()		1100,	101,	1100,	101,	101,	11,	1001
2017-01-04 14:13:29 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:29 AI_Player.update()		1001,	11,	101,	101,	1001,	1100,	1001
2017-01-04 14:13:29 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:29 AI_Player.update()	Search took124ms
2017-01-04 14:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()		110,	11,	111,	111,	111,	1100,	11
2017-01-04 14:13:29 AI_Player.update()		11,	110,	1001,	1110,	101,	1010,	1001
2017-01-04 14:13:29 AI_Player.update()		1110,	111,	1110,	1010,	111,	111,	1011
2017-01-04 14:13:29 AI_Player.update()		101,	1100,	101,	101,	11,	1001,	1100
2017-01-04 14:13:29 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:29 AI_Player.update()		1001,	11,	101,	101,	1001,	1100,	1001
2017-01-04 14:13:29 AI_Player.update()		1100,	1011,	1101,	101,	1101,	101,	1001
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:29 AI_Player.update()	Search took205ms
2017-01-04 14:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()		110,	110,	111,	111,	111,	1100,	11
2017-01-04 14:13:29 AI_Player.update()		11,	111,	1001,	1110,	101,	1010,	1001
2017-01-04 14:13:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	111,	1011
2017-01-04 14:13:29 AI_Player.update()		101,	101,	101,	101,	11,	1001,	1100
2017-01-04 14:13:29 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:29 AI_Player.update()		1001,	1011,	101,	101,	1001,	1100,	1001
2017-01-04 14:13:29 AI_Player.update()		1100,	11,	1101,	101,	1101,	101,	1001
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:29 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:29 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:29 AI_Player.update()	Search took114ms
2017-01-04 14:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:29 AI_Player.update()		11,	111,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:29 AI_Player.update()		101,	101,	101,	101,	11,	1001,	1100
2017-01-04 14:13:29 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:29 AI_Player.update()		1001,	1011,	101,	101,	1001,	101,	1001
2017-01-04 14:13:29 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:29 AI_Player.update()	Search took145ms
2017-01-04 14:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:29 AI_Player.update()		11,	111,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:29 AI_Player.update()		101,	101,	101,	101,	11,	1001,	1100
2017-01-04 14:13:29 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:29 AI_Player.update()		1011,	101,	101,	1001,	101,	1001,	1001
2017-01-04 14:13:29 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:29 AI_Player.update()	Search took96ms
2017-01-04 14:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:29 AI_Player.update()		11,	111,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:29 AI_Player.update()		101,	101,	101,	101,	11,	1001,	1100
2017-01-04 14:13:29 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:29 AI_Player.update()		1001,	1011,	101,	101,	1001,	101,	1001
2017-01-04 14:13:29 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:29 AI_Player.update()	Search took124ms
2017-01-04 14:13:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:29 AI_Player.update()		11,	111,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:29 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:29 AI_Player.update()		101,	101,	101,	11,	1001,	1100,	101
2017-01-04 14:13:29 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:29 AI_Player.update()		1001,	1011,	101,	101,	1001,	101,	1001
2017-01-04 14:13:29 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:29 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:29 AI_Player.update()	update
2017-01-04 14:13:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:30 AI_Player.update()	Search took82ms
2017-01-04 14:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:30 AI_Player.update()		11,	111,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	101,	101,	101,	11,	1001,	1100
2017-01-04 14:13:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:30 AI_Player.update()		1001,	1011,	101,	101,	1001,	101,	1001
2017-01-04 14:13:30 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:30 AI_Player.update()	Search took93ms
2017-01-04 14:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:30 AI_Player.update()		11,	111,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	101,	101,	101,	11,	1001,	1100
2017-01-04 14:13:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:30 AI_Player.update()		1011,	101,	101,	1001,	101,	1001,	1001
2017-01-04 14:13:30 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:30 AI_Player.update()	Search took76ms
2017-01-04 14:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()		110,	111,	111,	111,	111,	1010,	11
2017-01-04 14:13:30 AI_Player.update()		11,	1100,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	11,	101,	101,	11,	1001,	1100
2017-01-04 14:13:30 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:30 AI_Player.update()		1011,	11,	101,	1001,	101,	1001,	1001
2017-01-04 14:13:30 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:30 AI_Player.update()	Search took97ms
2017-01-04 14:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()		110,	1100,	111,	111,	111,	1010,	11
2017-01-04 14:13:30 AI_Player.update()		11,	101,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	101,	101,	101,	11,	1001,	1100
2017-01-04 14:13:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:30 AI_Player.update()		1011,	110,	101,	1001,	101,	1001,	1001
2017-01-04 14:13:30 AI_Player.update()		1100,	111,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:30 AI_Player.update()	Search took42ms
2017-01-04 14:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()		110,	111,	111,	111,	111,	1010,	11
2017-01-04 14:13:30 AI_Player.update()		11,	1100,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	11,	101,	101,	11,	1001,	1100
2017-01-04 14:13:30 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:30 AI_Player.update()		1011,	11,	101,	1001,	101,	1001,	1001
2017-01-04 14:13:30 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:30 AI_Player.update()	Search took115ms
2017-01-04 14:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:30 AI_Player.update()		11,	111,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	101,	101,	101,	11,	1001,	1100
2017-01-04 14:13:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:30 AI_Player.update()		1011,	101,	101,	1001,	101,	1001,	1001
2017-01-04 14:13:30 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:30 AI_Player.update()	Search took55ms
2017-01-04 14:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:30 AI_Player.update()		11,	111,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	101,	101,	101,	11,	1001,	1100
2017-01-04 14:13:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	101,	1001,	101,	1001,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:30 AI_Player.update()	Search took119ms
2017-01-04 14:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:30 AI_Player.update()		11,	111,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		1100,	101,	101,	101,	101,	11,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	101,	1001,	101,	1001,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:30 AI_Player.update()	Search took32ms
2017-01-04 14:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()		110,	111,	111,	111,	111,	1010,	11
2017-01-04 14:13:30 AI_Player.update()		11,	1100,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		1100,	11,	101,	101,	101,	11,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	11,	1001,	101,	1001,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:30 AI_Player.update()	Search took183ms
2017-01-04 14:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:30 AI_Player.update()		11,	111,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		1100,	101,	101,	101,	101,	11,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	101,	1001,	101,	1001,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:30 AI_Player.update()	Search took43ms
2017-01-04 14:13:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:30 AI_Player.update()		11,	111,	1001,	1110,	101,	111,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:30 AI_Player.update()		1100,	101,	101,	101,	101,	11,	1001
2017-01-04 14:13:30 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:30 AI_Player.update()		101,	1001,	101,	1001,	1001,	1011,	101
2017-01-04 14:13:30 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:30 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:30 AI_Player.update()	update
2017-01-04 14:13:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:31 AI_Player.update()	Search took201ms
2017-01-04 14:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()		110,	110,	111,	111,	111,	1010,	11
2017-01-04 14:13:31 AI_Player.update()		111,	1001,	1110,	101,	111,	1001,	11
2017-01-04 14:13:31 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:31 AI_Player.update()		1100,	101,	101,	101,	101,	11,	1001
2017-01-04 14:13:31 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:31 AI_Player.update()		101,	1001,	101,	1001,	1001,	1011,	101
2017-01-04 14:13:31 AI_Player.update()		1100,	11,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()	update
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()	update
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:31 AI_Player.update()	Search took49ms
2017-01-04 14:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()		110,	1001,	111,	111,	111,	1010,	11
2017-01-04 14:13:31 AI_Player.update()		111,	1100,	1110,	101,	111,	1001,	11
2017-01-04 14:13:31 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:31 AI_Player.update()		1100,	11,	101,	101,	101,	11,	1001
2017-01-04 14:13:31 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:31 AI_Player.update()		101,	11,	101,	1001,	1001,	1011,	101
2017-01-04 14:13:31 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()	update
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()	update
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:31 AI_Player.update()	Search took244ms
2017-01-04 14:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()		110,	1001,	111,	111,	111,	1010,	11
2017-01-04 14:13:31 AI_Player.update()		11,	111,	1100,	1110,	101,	111,	1001
2017-01-04 14:13:31 AI_Player.update()		1110,	101,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:31 AI_Player.update()		1100,	11,	101,	101,	101,	11,	1001
2017-01-04 14:13:31 AI_Player.update()		1110,	1001,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:31 AI_Player.update()		101,	11,	101,	1001,	1001,	1011,	101
2017-01-04 14:13:31 AI_Player.update()		1100,	110,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()	update
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()	update
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:31 AI_Player.update()	Search took64ms
2017-01-04 14:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()		110,	111,	111,	111,	111,	1010,	11
2017-01-04 14:13:31 AI_Player.update()		11,	101,	1100,	1110,	101,	111,	1001
2017-01-04 14:13:31 AI_Player.update()		1110,	11,	1110,	1010,	111,	1001,	1011
2017-01-04 14:13:31 AI_Player.update()		1100,	1001,	101,	101,	101,	11,	1001
2017-01-04 14:13:31 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:13:31 AI_Player.update()		101,	110,	101,	1001,	1001,	1011,	101
2017-01-04 14:13:31 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1100,	1001
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()	update
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()	update
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:31 AI_Player.update()	Search took305ms
2017-01-04 14:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()		110,	111,	111,	1110,	111,	1010,	11
2017-01-04 14:13:31 AI_Player.update()		11,	101,	1100,	1010,	101,	111,	1001
2017-01-04 14:13:31 AI_Player.update()		1110,	11,	1110,	101,	111,	1001,	1011
2017-01-04 14:13:31 AI_Player.update()		1100,	1001,	101,	11,	101,	11,	1001
2017-01-04 14:13:31 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1100,	1011
2017-01-04 14:13:31 AI_Player.update()		101,	110,	101,	101,	1001,	1011,	101
2017-01-04 14:13:31 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1100,	1001
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()	update
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:31 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:31 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()	update
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:31 AI_Player.update()	Search took178ms
2017-01-04 14:13:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()		110,	111,	111,	1110,	111,	111,	11
2017-01-04 14:13:31 AI_Player.update()		11,	101,	1100,	1010,	101,	1001,	1001
2017-01-04 14:13:31 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 14:13:31 AI_Player.update()		1100,	1001,	101,	11,	101,	1100,	1001
2017-01-04 14:13:31 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1011,	1011
2017-01-04 14:13:31 AI_Player.update()		101,	110,	101,	101,	1001,	1100,	101
2017-01-04 14:13:31 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1010,	1001
2017-01-04 14:13:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:31 GameBoard.setupTreasurePanel()	5 2
2017-01-04 14:13:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:31 AI_Player.update()	update
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:32 AI_Player.update()	Search took95ms
2017-01-04 14:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()		110,	111,	111,	1010,	111,	111,	11
2017-01-04 14:13:32 AI_Player.update()		11,	101,	1100,	101,	101,	1001,	1001
2017-01-04 14:13:32 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-04 14:13:32 AI_Player.update()		1100,	1001,	101,	1001,	101,	1100,	1001
2017-01-04 14:13:32 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-04 14:13:32 AI_Player.update()		101,	110,	101,	111,	1001,	1100,	101
2017-01-04 14:13:32 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1010,	1001
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:32 AI_Player.update()	Search took78ms
2017-01-04 14:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()		110,	111,	111,	1010,	111,	111,	11
2017-01-04 14:13:32 AI_Player.update()		1001,	11,	101,	1100,	101,	101,	1001
2017-01-04 14:13:32 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-04 14:13:32 AI_Player.update()		1100,	1001,	101,	1001,	101,	1100,	1001
2017-01-04 14:13:32 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-04 14:13:32 AI_Player.update()		101,	110,	101,	111,	1001,	1100,	101
2017-01-04 14:13:32 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1010,	1001
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:32 AI_Player.update()	Search took218ms
2017-01-04 14:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()		110,	111,	111,	1010,	111,	111,	11
2017-01-04 14:13:32 AI_Player.update()		11,	101,	1100,	101,	101,	1001,	1001
2017-01-04 14:13:32 AI_Player.update()		1110,	11,	1110,	11,	111,	11,	1011
2017-01-04 14:13:32 AI_Player.update()		1100,	1001,	101,	1001,	101,	1100,	1001
2017-01-04 14:13:32 AI_Player.update()		1110,	11,	1101,	101,	1011,	1011,	1011
2017-01-04 14:13:32 AI_Player.update()		101,	110,	101,	111,	1001,	1100,	101
2017-01-04 14:13:32 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	1010,	1001
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:32 AI_Player.update()	Search took84ms
2017-01-04 14:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()		110,	111,	111,	1110,	111,	111,	11
2017-01-04 14:13:32 AI_Player.update()		11,	101,	1100,	1010,	101,	1001,	1001
2017-01-04 14:13:32 AI_Player.update()		1110,	11,	1110,	101,	111,	11,	1011
2017-01-04 14:13:32 AI_Player.update()		1100,	1001,	101,	11,	101,	1100,	1001
2017-01-04 14:13:32 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1011,	1011
2017-01-04 14:13:32 AI_Player.update()		101,	110,	101,	101,	1001,	1100,	101
2017-01-04 14:13:32 AI_Player.update()		1100,	1001,	1101,	111,	1101,	1010,	1001
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:32 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:32 AI_Player.update()	Search took161ms
2017-01-04 14:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()		110,	1001,	111,	1110,	111,	111,	11
2017-01-04 14:13:32 AI_Player.update()		11,	111,	1100,	1010,	101,	1001,	1001
2017-01-04 14:13:32 AI_Player.update()		1110,	101,	1110,	101,	111,	11,	1011
2017-01-04 14:13:32 AI_Player.update()		1100,	11,	101,	11,	101,	1100,	1001
2017-01-04 14:13:32 AI_Player.update()		1110,	1001,	1101,	1001,	1011,	1011,	1011
2017-01-04 14:13:32 AI_Player.update()		101,	11,	101,	101,	1001,	1100,	101
2017-01-04 14:13:32 AI_Player.update()		1100,	110,	1101,	111,	1101,	1010,	1001
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:13:32 AI_Player.update()	Player a has won!
2017-01-04 14:13:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:32 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:13:32 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:32 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:32 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:32 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:32 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:32 AI_Player.update()	Search took61ms
2017-01-04 14:13:32 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 14:13:32 AI_Player.update()		1001,	101,	1010,	1110,	11,	1010,	1010
2017-01-04 14:13:32 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:32 AI_Player.update()		110,	1001,	1010,	1100,	1100,	1001,	1010
2017-01-04 14:13:32 AI_Player.update()		1110,	11,	1101,	1001,	1011,	110,	1011
2017-01-04 14:13:32 AI_Player.update()		1010,	1011,	1010,	101,	110,	1100,	1100
2017-01-04 14:13:32 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:32 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:32 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:32 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:32 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:32 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:32 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:32 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:32 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:32 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:32 AI_Player.update()	update
2017-01-04 14:13:32 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took367ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		1001,	101,	1010,	1110,	11,	101,	1010
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		110,	1001,	1010,	1100,	1100,	101,	1010
2017-01-04 14:13:33 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	1011,	1010,	101,	110,	110,	1100
2017-01-04 14:13:33 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took157ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	1010,	1110,	11,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		110,	1001,	1010,	1100,	1100,	101,	1010
2017-01-04 14:13:33 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	1011,	1010,	101,	110,	110,	1100
2017-01-04 14:13:33 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took84ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	1010,	1110,	11,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	110,	1001,	1010,	1100,	1100,	101
2017-01-04 14:13:33 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	1011,	1010,	101,	110,	110,	1100
2017-01-04 14:13:33 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took52ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	101,	1110,	11,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	110,	1001,	1010,	1100,	1100,	101
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	11,	1010,	101,	110,	110,	1100
2017-01-04 14:13:33 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took44ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	101,	111,	1001,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	1010,	1110,	11,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	110,	1001,	1010,	1100,	1100,	101
2017-01-04 14:13:33 AI_Player.update()		1110,	11,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	1011,	1010,	101,	110,	110,	1100
2017-01-04 14:13:33 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took42ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	101,	1110,	11,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	110,	1001,	1010,	1100,	1100,	101
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	11,	1010,	101,	110,	110,	1100
2017-01-04 14:13:33 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took33ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	101,	1110,	11,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	110,	1001,	1010,	1100,	1100,	101
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		1100,	1010,	11,	1010,	101,	110,	110
2017-01-04 14:13:33 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took39ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	101,	1110,	11,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		101,	1010,	110,	1001,	1010,	1100,	1100
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		1100,	1010,	11,	1010,	101,	110,	110
2017-01-04 14:13:33 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took18ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	101,	1110,	11,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	1010,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	110,	1001,	1010,	1100,	1100,	101
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		1100,	1010,	11,	1010,	101,	110,	110
2017-01-04 14:13:33 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took40ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	1011,	111,	1001,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	1100,	1110,	11,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	1010,	1001,	1010,	1100,	1100,	101
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		1100,	110,	11,	1010,	101,	110,	110
2017-01-04 14:13:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took67ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	1011,	111,	1001,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	1100,	1110,	11,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	1010,	1001,	1010,	1100,	1100,	101
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		110,	1100,	110,	11,	1010,	101,	110
2017-01-04 14:13:33 AI_Player.update()		1100,	1010,	1101,	1100,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took142ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	1100,	1110,	1010,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	1010,	1001,	1001,	1100,	1100,	101
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		110,	1100,	110,	1100,	1010,	101,	110
2017-01-04 14:13:33 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:33 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:33 AI_Player.update()	Search took124ms
2017-01-04 14:13:33 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-04 14:13:33 AI_Player.update()		101,	1100,	1110,	1010,	101,	1010,	1001
2017-01-04 14:13:33 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:33 AI_Player.update()		1010,	1010,	1001,	1001,	1100,	1100,	101
2017-01-04 14:13:33 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:33 AI_Player.update()		1100,	110,	1100,	1010,	101,	110,	110
2017-01-04 14:13:33 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 14:13:33 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:33 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:33 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:33 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:33 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:33 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:33 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:33 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:33 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:33 AI_Player.update()	update
2017-01-04 14:13:33 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:34 AI_Player.update()	Search took26ms
2017-01-04 14:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()		110,	1011,	111,	11,	111,	1100,	11
2017-01-04 14:13:34 AI_Player.update()		101,	1100,	1110,	1010,	101,	1010,	1001
2017-01-04 14:13:34 AI_Player.update()		1110,	101,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:34 AI_Player.update()		1010,	1010,	1001,	1001,	1100,	1100,	101
2017-01-04 14:13:34 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:34 AI_Player.update()		110,	1100,	110,	1100,	1010,	101,	110
2017-01-04 14:13:34 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 14:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()	update
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()	update
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:34 AI_Player.update()	Search took60ms
2017-01-04 14:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-04 14:13:34 AI_Player.update()		101,	1011,	1110,	1010,	101,	1010,	1001
2017-01-04 14:13:34 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:34 AI_Player.update()		1010,	101,	1001,	1001,	1100,	1100,	101
2017-01-04 14:13:34 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:34 AI_Player.update()		110,	110,	110,	1100,	1010,	101,	110
2017-01-04 14:13:34 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-04 14:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()	update
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()	update
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:34 AI_Player.update()	Search took102ms
2017-01-04 14:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()		110,	1010,	111,	11,	111,	1100,	11
2017-01-04 14:13:34 AI_Player.update()		101,	1011,	1110,	1010,	101,	1010,	1001
2017-01-04 14:13:34 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:34 AI_Player.update()		1010,	101,	1001,	1001,	1100,	1100,	101
2017-01-04 14:13:34 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:34 AI_Player.update()		110,	110,	1100,	1010,	101,	110,	110
2017-01-04 14:13:34 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1100,	1001
2017-01-04 14:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()	update
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()	update
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:34 AI_Player.update()	Search took148ms
2017-01-04 14:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-04 14:13:34 AI_Player.update()		101,	1010,	1110,	1010,	101,	1010,	1001
2017-01-04 14:13:34 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:34 AI_Player.update()		1010,	1100,	1001,	1001,	1100,	1100,	101
2017-01-04 14:13:34 AI_Player.update()		1110,	101,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:34 AI_Player.update()		110,	1010,	1100,	1010,	101,	110,	110
2017-01-04 14:13:34 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1100,	1001
2017-01-04 14:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()	update
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:34 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:34 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:34 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()	update
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:34 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:34 AI_Player.update()	Search took459ms
2017-01-04 14:13:34 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-04 14:13:34 AI_Player.update()		101,	1010,	1110,	11,	101,	1010,	1001
2017-01-04 14:13:34 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:34 AI_Player.update()		1010,	1100,	1001,	1010,	1100,	1100,	101
2017-01-04 14:13:34 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:34 AI_Player.update()		110,	1010,	1100,	11,	101,	110,	110
2017-01-04 14:13:34 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:13:34 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:34 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()	update
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:34 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:34 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:34 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:34 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:34 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:34 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:34 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:34 AI_Player.update()	update
2017-01-04 14:13:34 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:35 AI_Player.update()	Search took384ms
2017-01-04 14:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-04 14:13:35 AI_Player.update()		1010,	1110,	11,	101,	1010,	1001,	101
2017-01-04 14:13:35 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:35 AI_Player.update()		1010,	1100,	1001,	1010,	1100,	1100,	101
2017-01-04 14:13:35 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:35 AI_Player.update()		110,	1010,	1100,	11,	101,	110,	110
2017-01-04 14:13:35 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()	update
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()	update
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:35 AI_Player.update()	Search took309ms
2017-01-04 14:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()		110,	1100,	111,	1001,	111,	1100,	11
2017-01-04 14:13:35 AI_Player.update()		1010,	1110,	11,	101,	1010,	1001,	101
2017-01-04 14:13:35 AI_Player.update()		1110,	1011,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:35 AI_Player.update()		101,	1010,	1100,	1001,	1010,	1100,	1100
2017-01-04 14:13:35 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:35 AI_Player.update()		110,	1010,	1100,	11,	101,	110,	110
2017-01-04 14:13:35 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()	update
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()	update
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:35 AI_Player.update()	Search took224ms
2017-01-04 14:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()		110,	110,	111,	1001,	111,	1100,	11
2017-01-04 14:13:35 AI_Player.update()		1010,	1100,	11,	101,	1010,	1001,	101
2017-01-04 14:13:35 AI_Player.update()		1110,	1110,	1110,	1010,	111,	1010,	1011
2017-01-04 14:13:35 AI_Player.update()		101,	1011,	1100,	1001,	1010,	1100,	1100
2017-01-04 14:13:35 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:35 AI_Player.update()		110,	101,	1100,	11,	101,	110,	110
2017-01-04 14:13:35 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	1100,	1001
2017-01-04 14:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()	update
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:35 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()	update
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:35 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:35 AI_Player.update()	Search took68ms
2017-01-04 14:13:35 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()		110,	110,	111,	1010,	111,	1100,	11
2017-01-04 14:13:35 AI_Player.update()		1010,	1100,	11,	1001,	1010,	1001,	101
2017-01-04 14:13:35 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-04 14:13:35 AI_Player.update()		101,	1011,	1100,	1010,	1010,	1100,	1100
2017-01-04 14:13:35 AI_Player.update()		1110,	1010,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:35 AI_Player.update()		110,	101,	1100,	1001,	101,	110,	110
2017-01-04 14:13:35 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1100,	1001
2017-01-04 14:13:35 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:35 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()	update
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:35 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:35 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:35 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:35 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:35 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:35 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:35 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:35 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:35 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:35 AI_Player.update()	update
2017-01-04 14:13:35 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:36 AI_Player.update()	Search took183ms
2017-01-04 14:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()		110,	110,	111,	11,	111,	1100,	11
2017-01-04 14:13:36 AI_Player.update()		1010,	1100,	11,	1010,	1010,	1001,	101
2017-01-04 14:13:36 AI_Player.update()		1110,	1110,	1110,	1001,	111,	1010,	1011
2017-01-04 14:13:36 AI_Player.update()		101,	1011,	1100,	101,	1010,	1100,	1100
2017-01-04 14:13:36 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		110,	101,	1100,	1001,	101,	110,	110
2017-01-04 14:13:36 AI_Player.update()		1100,	1010,	1101,	1001,	1101,	1100,	1001
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:36 AI_Player.update()	Search took234ms
2017-01-04 14:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()		110,	1100,	111,	11,	111,	1100,	11
2017-01-04 14:13:36 AI_Player.update()		1010,	1110,	11,	1010,	1010,	1001,	101
2017-01-04 14:13:36 AI_Player.update()		1110,	1011,	1110,	1001,	111,	1010,	1011
2017-01-04 14:13:36 AI_Player.update()		101,	1010,	1100,	101,	1010,	1100,	1100
2017-01-04 14:13:36 AI_Player.update()		1110,	101,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		110,	1010,	1100,	1001,	101,	110,	110
2017-01-04 14:13:36 AI_Player.update()		1100,	110,	1101,	1001,	1101,	1100,	1001
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:13:36 AI_Player.update()	Player a has won!
2017-01-04 14:13:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:36 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:13:36 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:36 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:36 AI_Player.update()	Search took18ms
2017-01-04 14:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-04 14:13:36 AI_Player.update()		111,	1010,	101,	1010,	11,	111,	110
2017-01-04 14:13:36 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		110,	1010,	1100,	101,	1100,	1100,	1010
2017-01-04 14:13:36 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		11,	11,	101,	110,	101,	1011,	1001
2017-01-04 14:13:36 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:36 AI_Player.update()	Search took11ms
2017-01-04 14:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()		110,	11,	111,	1010,	111,	111,	11
2017-01-04 14:13:36 AI_Player.update()		111,	1010,	101,	1010,	11,	1001,	110
2017-01-04 14:13:36 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1100,	1011
2017-01-04 14:13:36 AI_Player.update()		110,	1010,	1100,	101,	1100,	1001,	1010
2017-01-04 14:13:36 AI_Player.update()		1110,	110,	1101,	11,	1011,	1011,	1011
2017-01-04 14:13:36 AI_Player.update()		11,	11,	101,	110,	101,	1001,	1001
2017-01-04 14:13:36 AI_Player.update()		1100,	110,	1101,	1100,	1101,	1001,	1001
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:36 AI_Player.update()	Search took91ms
2017-01-04 14:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-04 14:13:36 AI_Player.update()		111,	1010,	101,	1010,	11,	1100,	110
2017-01-04 14:13:36 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		110,	1010,	1100,	101,	1100,	1011,	1010
2017-01-04 14:13:36 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		11,	11,	101,	110,	101,	1001,	1001
2017-01-04 14:13:36 AI_Player.update()		1100,	110,	1101,	1100,	1101,	111,	1001
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:36 AI_Player.update()	Search took48ms
2017-01-04 14:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-04 14:13:36 AI_Player.update()		110,	111,	1010,	101,	1010,	11,	1100
2017-01-04 14:13:36 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		110,	1010,	1100,	101,	1100,	1011,	1010
2017-01-04 14:13:36 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		11,	11,	101,	110,	101,	1001,	1001
2017-01-04 14:13:36 AI_Player.update()		1100,	110,	1101,	1100,	1101,	111,	1001
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:36 AI_Player.update()	Search took50ms
2017-01-04 14:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:36 AI_Player.update()		110,	11,	1010,	101,	1010,	11,	1100
2017-01-04 14:13:36 AI_Player.update()		1110,	111,	1110,	1101,	111,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		110,	1001,	1100,	101,	1100,	1011,	1010
2017-01-04 14:13:36 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		11,	110,	101,	110,	101,	1001,	1001
2017-01-04 14:13:36 AI_Player.update()		1100,	11,	1101,	1100,	1101,	111,	1001
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:36 AI_Player.update()	Search took135ms
2017-01-04 14:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:36 AI_Player.update()		1100,	110,	11,	1010,	101,	1010,	11
2017-01-04 14:13:36 AI_Player.update()		1110,	111,	1110,	1101,	111,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		110,	1001,	1100,	101,	1100,	1011,	1010
2017-01-04 14:13:36 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		11,	110,	101,	110,	101,	1001,	1001
2017-01-04 14:13:36 AI_Player.update()		1100,	11,	1101,	1100,	1101,	111,	1001
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:36 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:36 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:36 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:36 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:36 AI_Player.update()	Search took86ms
2017-01-04 14:13:36 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:36 AI_Player.update()		110,	11,	1010,	101,	1010,	11,	1100
2017-01-04 14:13:36 AI_Player.update()		1110,	111,	1110,	1101,	111,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		110,	1001,	1100,	101,	1100,	1011,	1010
2017-01-04 14:13:36 AI_Player.update()		1110,	1010,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:36 AI_Player.update()		11,	110,	101,	110,	101,	1001,	1001
2017-01-04 14:13:36 AI_Player.update()		1100,	11,	1101,	1100,	1101,	111,	1001
2017-01-04 14:13:36 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:36 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:36 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:36 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:36 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:36 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:36 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:36 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:36 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:36 AI_Player.update()	update
2017-01-04 14:13:36 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:37 AI_Player.update()	Search took316ms
2017-01-04 14:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()		110,	11,	111,	1010,	111,	1001,	11
2017-01-04 14:13:37 AI_Player.update()		110,	111,	1010,	101,	1010,	11,	1100
2017-01-04 14:13:37 AI_Player.update()		1110,	1001,	1110,	1101,	111,	1001,	1011
2017-01-04 14:13:37 AI_Player.update()		110,	1010,	1100,	101,	1100,	1011,	1010
2017-01-04 14:13:37 AI_Player.update()		1110,	110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:37 AI_Player.update()		11,	11,	101,	110,	101,	1001,	1001
2017-01-04 14:13:37 AI_Player.update()		1100,	110,	1101,	1100,	1101,	111,	1001
2017-01-04 14:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()	update
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()	update
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:37 AI_Player.update()	Search took160ms
2017-01-04 14:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-04 14:13:37 AI_Player.update()		110,	1001,	1010,	101,	1010,	11,	1100
2017-01-04 14:13:37 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-04 14:13:37 AI_Player.update()		110,	110,	1100,	101,	1100,	1011,	1010
2017-01-04 14:13:37 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:37 AI_Player.update()		11,	110,	101,	110,	101,	1001,	1001
2017-01-04 14:13:37 AI_Player.update()		1100,	11,	1101,	1100,	1101,	111,	1001
2017-01-04 14:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()	update
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()	update
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:37 AI_Player.update()	Search took345ms
2017-01-04 14:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-04 14:13:37 AI_Player.update()		1100,	110,	1001,	1010,	101,	1010,	11
2017-01-04 14:13:37 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-04 14:13:37 AI_Player.update()		110,	110,	1100,	101,	1100,	1011,	1010
2017-01-04 14:13:37 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:37 AI_Player.update()		11,	110,	101,	110,	101,	1001,	1001
2017-01-04 14:13:37 AI_Player.update()		1100,	11,	1101,	1100,	1101,	111,	1001
2017-01-04 14:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()	update
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()	update
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:37 AI_Player.update()	Search took136ms
2017-01-04 14:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()		110,	111,	111,	1010,	111,	1001,	11
2017-01-04 14:13:37 AI_Player.update()		110,	1001,	1010,	101,	1010,	11,	1100
2017-01-04 14:13:37 AI_Player.update()		1110,	1010,	1110,	1101,	111,	1001,	1011
2017-01-04 14:13:37 AI_Player.update()		110,	110,	1100,	101,	1100,	1011,	1010
2017-01-04 14:13:37 AI_Player.update()		1110,	11,	1101,	11,	1011,	1001,	1011
2017-01-04 14:13:37 AI_Player.update()		11,	110,	101,	110,	101,	1001,	1001
2017-01-04 14:13:37 AI_Player.update()		1100,	11,	1101,	1100,	1101,	111,	1001
2017-01-04 14:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()	update
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:37 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:37 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:37 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:37 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:37 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()	update
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:37 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:37 AI_Player.update()	Search took101ms
2017-01-04 14:13:37 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-04 14:13:37 AI_Player.update()		110,	1001,	1010,	1101,	1010,	11,	1100
2017-01-04 14:13:37 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 14:13:37 AI_Player.update()		110,	110,	1100,	11,	1100,	1011,	1010
2017-01-04 14:13:37 AI_Player.update()		1110,	11,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:37 AI_Player.update()		11,	110,	101,	1100,	101,	1001,	1001
2017-01-04 14:13:37 AI_Player.update()		1100,	11,	1101,	1010,	1101,	111,	1001
2017-01-04 14:13:37 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:37 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()	update
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:37 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:37 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:37 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:37 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:37 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:37 AI_Player.update()	update
2017-01-04 14:13:37 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:38 AI_Player.update()	Search took465ms
2017-01-04 14:13:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()		110,	111,	111,	101,	111,	111,	11
2017-01-04 14:13:38 AI_Player.update()		110,	1001,	1010,	1101,	1010,	1001,	1100
2017-01-04 14:13:38 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 14:13:38 AI_Player.update()		110,	110,	1100,	11,	1100,	1001,	1010
2017-01-04 14:13:38 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-04 14:13:38 AI_Player.update()		11,	110,	101,	1100,	101,	1001,	1001
2017-01-04 14:13:38 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:13:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()	update
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()	update
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:38 AI_Player.update()	Search took56ms
2017-01-04 14:13:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()		110,	111,	111,	101,	111,	111,	11
2017-01-04 14:13:38 AI_Player.update()		110,	1001,	1010,	1101,	1010,	1001,	1100
2017-01-04 14:13:38 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 14:13:38 AI_Player.update()		1010,	110,	110,	1100,	11,	1100,	1001
2017-01-04 14:13:38 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-04 14:13:38 AI_Player.update()		11,	110,	101,	1100,	101,	1001,	1001
2017-01-04 14:13:38 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()	update
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()	update
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:38 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:38 AI_Player.update()	Search took522ms
2017-01-04 14:13:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()		110,	111,	111,	101,	111,	111,	11
2017-01-04 14:13:38 AI_Player.update()		110,	1001,	1010,	1101,	1010,	1001,	1100
2017-01-04 14:13:38 AI_Player.update()		1110,	1010,	1110,	101,	111,	11,	1011
2017-01-04 14:13:38 AI_Player.update()		1010,	110,	110,	1100,	11,	1100,	1001
2017-01-04 14:13:38 AI_Player.update()		1110,	11,	1101,	110,	1011,	1011,	1011
2017-01-04 14:13:38 AI_Player.update()		110,	101,	1100,	101,	1001,	1001,	11
2017-01-04 14:13:38 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:13:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()	update
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:38 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:38 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:38 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:38 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:38 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()	update
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:38 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:38 AI_Player.update()	Search took18ms
2017-01-04 14:13:38 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-04 14:13:38 AI_Player.update()		110,	1001,	1010,	1101,	1010,	111,	1100
2017-01-04 14:13:38 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 14:13:38 AI_Player.update()		1010,	110,	110,	1100,	11,	11,	1001
2017-01-04 14:13:38 AI_Player.update()		1110,	11,	1101,	110,	1011,	1100,	1011
2017-01-04 14:13:38 AI_Player.update()		110,	101,	1100,	101,	1001,	1011,	11
2017-01-04 14:13:38 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:38 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:38 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()	update
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:38 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:38 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:38 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:38 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:38 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:38 AI_Player.update()	update
2017-01-04 14:13:38 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:39 AI_Player.update()	Search took487ms
2017-01-04 14:13:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()		110,	111,	111,	101,	111,	1001,	11
2017-01-04 14:13:39 AI_Player.update()		110,	1001,	1010,	1101,	1010,	111,	1100
2017-01-04 14:13:39 AI_Player.update()		1110,	1010,	1110,	101,	111,	1001,	1011
2017-01-04 14:13:39 AI_Player.update()		1001,	1010,	110,	110,	1100,	11,	11
2017-01-04 14:13:39 AI_Player.update()		1110,	11,	1101,	110,	1011,	1100,	1011
2017-01-04 14:13:39 AI_Player.update()		110,	101,	1100,	101,	1001,	1011,	11
2017-01-04 14:13:39 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:13:39 AI_Player.update()	Player a has won!
2017-01-04 14:13:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:39 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:13:39 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:39 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:13:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:39 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:39 AI_Player.update()	Search took31ms
2017-01-04 14:13:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 14:13:39 AI_Player.update()		101,	1001,	1100,	1010,	1001,	1001,	1110
2017-01-04 14:13:39 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 14:13:39 AI_Player.update()		1100,	11,	11,	101,	1001,	1001,	1011
2017-01-04 14:13:39 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1010,	1011
2017-01-04 14:13:39 AI_Player.update()		111,	11,	1011,	101,	110,	1101,	11
2017-01-04 14:13:39 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:39 AI_Player.update()	Search took122ms
2017-01-04 14:13:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:39 AI_Player.update()		101,	1001,	1100,	1010,	1001,	1010,	1110
2017-01-04 14:13:39 AI_Player.update()		1110,	110,	1110,	1001,	111,	1001,	1011
2017-01-04 14:13:39 AI_Player.update()		1100,	11,	11,	101,	1001,	1010,	1011
2017-01-04 14:13:39 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1101,	1011
2017-01-04 14:13:39 AI_Player.update()		111,	11,	1011,	101,	110,	1110,	11
2017-01-04 14:13:39 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	101,	1001
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:39 AI_Player.update()	Search took66ms
2017-01-04 14:13:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()		110,	110,	111,	1010,	111,	1010,	11
2017-01-04 14:13:39 AI_Player.update()		101,	1001,	1100,	1010,	1001,	1001,	1110
2017-01-04 14:13:39 AI_Player.update()		1110,	110,	1110,	1001,	111,	1010,	1011
2017-01-04 14:13:39 AI_Player.update()		1100,	11,	11,	101,	1001,	1101,	1011
2017-01-04 14:13:39 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	1110,	1011
2017-01-04 14:13:39 AI_Player.update()		111,	11,	1011,	101,	110,	101,	11
2017-01-04 14:13:39 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1001,	1001
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:39 AI_Player.update()	Search took172ms
2017-01-04 14:13:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:39 AI_Player.update()		101,	1001,	1100,	1010,	1001,	1010,	1110
2017-01-04 14:13:39 AI_Player.update()		1110,	110,	1110,	1001,	111,	1101,	1011
2017-01-04 14:13:39 AI_Player.update()		1100,	11,	11,	101,	1001,	1110,	1011
2017-01-04 14:13:39 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-04 14:13:39 AI_Player.update()		111,	11,	1011,	101,	110,	1001,	11
2017-01-04 14:13:39 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:39 AI_Player.update()	Search took52ms
2017-01-04 14:13:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:39 AI_Player.update()		101,	1001,	1100,	1010,	1001,	1010,	1110
2017-01-04 14:13:39 AI_Player.update()		1110,	110,	1110,	1001,	111,	1101,	1011
2017-01-04 14:13:39 AI_Player.update()		11,	11,	101,	1001,	1110,	1011,	1100
2017-01-04 14:13:39 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-04 14:13:39 AI_Player.update()		111,	11,	1011,	101,	110,	1001,	11
2017-01-04 14:13:39 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:39 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:39 AI_Player.update()	Search took69ms
2017-01-04 14:13:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:39 AI_Player.update()		101,	1001,	1100,	1010,	1001,	1010,	1110
2017-01-04 14:13:39 AI_Player.update()		1110,	110,	1110,	1001,	111,	1101,	1011
2017-01-04 14:13:39 AI_Player.update()		1100,	11,	11,	101,	1001,	1110,	1011
2017-01-04 14:13:39 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-04 14:13:39 AI_Player.update()		111,	11,	1011,	101,	110,	1001,	11
2017-01-04 14:13:39 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:39 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:39 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:39 AI_Player.update()	Search took53ms
2017-01-04 14:13:39 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:39 AI_Player.update()		101,	1001,	1100,	1010,	1001,	1010,	1110
2017-01-04 14:13:39 AI_Player.update()		1110,	110,	1110,	1001,	111,	1101,	1011
2017-01-04 14:13:39 AI_Player.update()		1011,	1100,	11,	11,	101,	1001,	1110
2017-01-04 14:13:39 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-04 14:13:39 AI_Player.update()		111,	11,	1011,	101,	110,	1001,	11
2017-01-04 14:13:39 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-04 14:13:39 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:39 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:39 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:39 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:39 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:39 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:39 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:39 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:39 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:39 AI_Player.update()	update
2017-01-04 14:13:39 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:40 AI_Player.update()	Search took42ms
2017-01-04 14:13:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		101,	1001,	1100,	1001,	1001,	1010,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	110,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:40 AI_Player.update()		1011,	1100,	11,	1010,	101,	1001,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	1101,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:40 AI_Player.update()		111,	11,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:40 AI_Player.update()	Search took73ms
2017-01-04 14:13:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		101,	1001,	1100,	11,	1001,	1010,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	110,	1110,	1010,	111,	1101,	1011
2017-01-04 14:13:40 AI_Player.update()		1011,	1100,	11,	101,	101,	1001,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	101,	1011
2017-01-04 14:13:40 AI_Player.update()		111,	11,	1011,	1010,	110,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:40 AI_Player.update()	Search took121ms
2017-01-04 14:13:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		101,	1001,	1100,	1010,	1001,	1010,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	110,	1110,	101,	111,	1101,	1011
2017-01-04 14:13:40 AI_Player.update()		1011,	1100,	11,	1011,	101,	1001,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	1101,	1101,	1010,	1011,	101,	1011
2017-01-04 14:13:40 AI_Player.update()		111,	11,	1011,	1010,	110,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		1100,	1100,	1101,	1001,	1101,	1010,	1001
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:40 AI_Player.update()	Search took98ms
2017-01-04 14:13:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		101,	1001,	1100,	11,	1001,	1010,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	110,	1110,	1010,	111,	1101,	1011
2017-01-04 14:13:40 AI_Player.update()		1011,	1100,	11,	101,	101,	1001,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	1101,	1101,	1011,	1011,	101,	1011
2017-01-04 14:13:40 AI_Player.update()		111,	11,	1011,	1010,	110,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:40 AI_Player.update()	Search took83ms
2017-01-04 14:13:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()		110,	1001,	111,	1001,	111,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		101,	110,	1100,	11,	1001,	1010,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-04 14:13:40 AI_Player.update()		1011,	1101,	11,	101,	101,	1001,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-04 14:13:40 AI_Player.update()		111,	1100,	1011,	1010,	110,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:40 AI_Player.update()	Search took51ms
2017-01-04 14:13:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()		110,	1001,	111,	1001,	111,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		101,	110,	1100,	11,	1001,	1010,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-04 14:13:40 AI_Player.update()		1101,	11,	101,	101,	1001,	1110,	1011
2017-01-04 14:13:40 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-04 14:13:40 AI_Player.update()		111,	1100,	1011,	1010,	110,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:40 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:40 AI_Player.update()	Search took242ms
2017-01-04 14:13:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		101,	1100,	1100,	11,	1001,	1010,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	11,	1110,	1010,	111,	1101,	1011
2017-01-04 14:13:40 AI_Player.update()		1101,	11,	101,	101,	1001,	1110,	1011
2017-01-04 14:13:40 AI_Player.update()		1110,	1100,	1101,	1011,	1011,	101,	1011
2017-01-04 14:13:40 AI_Player.update()		111,	110,	1011,	1010,	110,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:40 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:40 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:40 AI_Player.update()	Search took122ms
2017-01-04 14:13:40 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()		110,	1001,	111,	1001,	111,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		101,	110,	1100,	11,	1001,	1010,	1110
2017-01-04 14:13:40 AI_Player.update()		1110,	1100,	1110,	1010,	111,	1101,	1011
2017-01-04 14:13:40 AI_Player.update()		1101,	11,	101,	101,	1001,	1110,	1011
2017-01-04 14:13:40 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-04 14:13:40 AI_Player.update()		111,	1100,	1011,	1010,	110,	1001,	11
2017-01-04 14:13:40 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:40 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:40 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:40 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:40 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:40 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:40 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:40 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:40 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:40 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:40 AI_Player.update()	update
2017-01-04 14:13:40 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:41 AI_Player.update()	Search took264ms
2017-01-04 14:13:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		101,	110,	1100,	1001,	1001,	1010,	1110
2017-01-04 14:13:41 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:41 AI_Player.update()		1101,	11,	101,	1010,	1001,	1110,	1011
2017-01-04 14:13:41 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:41 AI_Player.update()		111,	1100,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		1100,	110,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:41 AI_Player.update()	Search took56ms
2017-01-04 14:13:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		101,	1001,	1100,	1001,	1001,	1010,	1110
2017-01-04 14:13:41 AI_Player.update()		1110,	110,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:41 AI_Player.update()		1101,	1100,	101,	1010,	1001,	1110,	1011
2017-01-04 14:13:41 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:41 AI_Player.update()		111,	11,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:41 AI_Player.update()	Search took142ms
2017-01-04 14:13:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		101,	1001,	1100,	1001,	1001,	1010,	1110
2017-01-04 14:13:41 AI_Player.update()		1110,	110,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:41 AI_Player.update()		1100,	101,	1010,	1001,	1110,	1011,	1101
2017-01-04 14:13:41 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:41 AI_Player.update()		111,	11,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:41 AI_Player.update()	Search took133ms
2017-01-04 14:13:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		101,	1001,	1100,	1010,	1001,	1010,	1110
2017-01-04 14:13:41 AI_Player.update()		1110,	110,	1110,	1001,	111,	1101,	1011
2017-01-04 14:13:41 AI_Player.update()		1100,	101,	1010,	11,	1110,	1011,	1101
2017-01-04 14:13:41 AI_Player.update()		1110,	11,	1101,	1001,	1011,	101,	1011
2017-01-04 14:13:41 AI_Player.update()		111,	11,	1011,	101,	110,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		1100,	1100,	1101,	1011,	1101,	1010,	1001
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:41 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:41 AI_Player.update()	Search took168ms
2017-01-04 14:13:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		101,	1001,	1100,	1001,	1001,	1010,	1110
2017-01-04 14:13:41 AI_Player.update()		1110,	110,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:41 AI_Player.update()		1100,	101,	1010,	1001,	1110,	1011,	1101
2017-01-04 14:13:41 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:41 AI_Player.update()		111,	11,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:41 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	2 4
2017-01-04 14:13:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:41 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:41 AI_Player.update()	Search took165ms
2017-01-04 14:13:41 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		1001,	1100,	1001,	1001,	1010,	1110,	101
2017-01-04 14:13:41 AI_Player.update()		1110,	110,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:41 AI_Player.update()		1100,	101,	1010,	1001,	1110,	1011,	1101
2017-01-04 14:13:41 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:41 AI_Player.update()		111,	11,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:41 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:41 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:41 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	2 4
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:41 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:41 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:41 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:41 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:41 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:41 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:41 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:41 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:41 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:41 AI_Player.update()	update
2017-01-04 14:13:41 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:42 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:42 AI_Player.update()	Search took422ms
2017-01-04 14:13:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:42 AI_Player.update()		110,	110,	111,	1010,	111,	1001,	11
2017-01-04 14:13:42 AI_Player.update()		1001,	1100,	1001,	1001,	1010,	1110,	101
2017-01-04 14:13:42 AI_Player.update()		1110,	110,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:42 AI_Player.update()		101,	1010,	1001,	1110,	1011,	1101,	1100
2017-01-04 14:13:42 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:42 AI_Player.update()		111,	11,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:42 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:42 AI_Player.update()	update
2017-01-04 14:13:42 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:42 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:42 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:42 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:42 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:42 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:42 AI_Player.update()	update
2017-01-04 14:13:42 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:42 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:42 AI_Player.update()	Search took388ms
2017-01-04 14:13:42 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:42 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-04 14:13:42 AI_Player.update()		1001,	110,	1001,	1001,	1010,	1110,	101
2017-01-04 14:13:42 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:42 AI_Player.update()		101,	110,	1001,	1110,	1011,	1101,	1100
2017-01-04 14:13:42 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:42 AI_Player.update()		111,	11,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:42 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:42 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:42 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:42 AI_Player.update()	update
2017-01-04 14:13:42 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:42 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:42 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:42 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:42 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:42 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:42 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:42 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:42 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:42 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:42 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:42 AI_Player.update()	update
2017-01-04 14:13:42 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:43 AI_Player.update()	Search took409ms
2017-01-04 14:13:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:43 AI_Player.update()		110,	1100,	111,	1010,	111,	1001,	11
2017-01-04 14:13:43 AI_Player.update()		101,	1001,	110,	1001,	1001,	1010,	1110
2017-01-04 14:13:43 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:43 AI_Player.update()		101,	110,	1001,	1110,	1011,	1101,	1100
2017-01-04 14:13:43 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:43 AI_Player.update()		111,	11,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:43 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:43 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:43 AI_Player.update()	update
2017-01-04 14:13:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:43 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:43 AI_Player.update()	update
2017-01-04 14:13:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:43 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:43 AI_Player.update()	Search took519ms
2017-01-04 14:13:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:43 AI_Player.update()		110,	1100,	111,	1010,	111,	1010,	11
2017-01-04 14:13:43 AI_Player.update()		101,	1001,	110,	1001,	1001,	1101,	1110
2017-01-04 14:13:43 AI_Player.update()		1110,	1100,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:43 AI_Player.update()		101,	110,	1001,	1110,	1011,	101,	1100
2017-01-04 14:13:43 AI_Player.update()		1110,	1010,	1101,	101,	1011,	1001,	1011
2017-01-04 14:13:43 AI_Player.update()		111,	11,	1011,	1011,	110,	1010,	11
2017-01-04 14:13:43 AI_Player.update()		1100,	11,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:43 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:43 AI_Player.update()	update
2017-01-04 14:13:43 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:43 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:43 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:43 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:43 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:43 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:43 AI_Player.update()	update
2017-01-04 14:13:43 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:43 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:43 AI_Player.update()	Search took136ms
2017-01-04 14:13:43 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:43 AI_Player.update()		110,	1001,	111,	1010,	111,	1010,	11
2017-01-04 14:13:43 AI_Player.update()		101,	1100,	110,	1001,	1001,	1101,	1110
2017-01-04 14:13:43 AI_Player.update()		1110,	110,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:43 AI_Player.update()		101,	1010,	1001,	1110,	1011,	101,	1100
2017-01-04 14:13:43 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-04 14:13:43 AI_Player.update()		111,	11,	1011,	1011,	110,	1010,	11
2017-01-04 14:13:43 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:43 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:43 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:43 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:43 AI_Player.update()	update
2017-01-04 14:13:43 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:43 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:43 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:43 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:43 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:43 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:43 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:43 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:43 AI_Player.update()	update
2017-01-04 14:13:43 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:44 AI_Player.update()	Search took543ms
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()		110,	1001,	111,	1010,	111,	1010,	11
2017-01-04 14:13:44 AI_Player.update()		1110,	101,	1100,	110,	1001,	1001,	1101
2017-01-04 14:13:44 AI_Player.update()		1110,	110,	1110,	11,	111,	1101,	1011
2017-01-04 14:13:44 AI_Player.update()		101,	1010,	1001,	1110,	1011,	101,	1100
2017-01-04 14:13:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-04 14:13:44 AI_Player.update()		111,	11,	1011,	1011,	110,	1010,	11
2017-01-04 14:13:44 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:44 AI_Player.update()	Search took22ms
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()		110,	1001,	111,	1010,	111,	1001,	11
2017-01-04 14:13:44 AI_Player.update()		1110,	101,	1100,	110,	1001,	1101,	1101
2017-01-04 14:13:44 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-04 14:13:44 AI_Player.update()		101,	1010,	1001,	1110,	1011,	1001,	1100
2017-01-04 14:13:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-04 14:13:44 AI_Player.update()		111,	11,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:44 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:44 AI_Player.update()	Search took76ms
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-04 14:13:44 AI_Player.update()		1110,	110,	1100,	110,	1001,	1101,	1101
2017-01-04 14:13:44 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 14:13:44 AI_Player.update()		101,	11,	1001,	1110,	1011,	1001,	1100
2017-01-04 14:13:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-04 14:13:44 AI_Player.update()		111,	1100,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:44 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:44 AI_Player.update()	Search took84ms
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-04 14:13:44 AI_Player.update()		110,	1100,	110,	1001,	1101,	1101,	1110
2017-01-04 14:13:44 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 14:13:44 AI_Player.update()		101,	11,	1001,	1110,	1011,	1001,	1100
2017-01-04 14:13:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-04 14:13:44 AI_Player.update()		111,	1100,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:44 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	4 6
2017-01-04 14:13:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:44 AI_Player.update()	Search took35ms
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()		110,	101,	111,	1010,	111,	1001,	11
2017-01-04 14:13:44 AI_Player.update()		110,	1100,	110,	1001,	1101,	1101,	1110
2017-01-04 14:13:44 AI_Player.update()		1110,	1010,	1110,	11,	111,	101,	1011
2017-01-04 14:13:44 AI_Player.update()		1100,	101,	11,	1001,	1110,	1011,	1001
2017-01-04 14:13:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	1010,	1011
2017-01-04 14:13:44 AI_Player.update()		111,	1100,	1011,	1011,	110,	1001,	11
2017-01-04 14:13:44 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1010,	1001
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	4 6
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	4 6
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:44 AI_Player.update()	Search took61ms
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()		110,	101,	111,	1010,	111,	1101,	11
2017-01-04 14:13:44 AI_Player.update()		110,	1100,	110,	1001,	1101,	101,	1110
2017-01-04 14:13:44 AI_Player.update()		1110,	1010,	1110,	11,	111,	1011,	1011
2017-01-04 14:13:44 AI_Player.update()		1100,	101,	11,	1001,	1110,	1010,	1001
2017-01-04 14:13:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-04 14:13:44 AI_Player.update()		111,	1100,	1011,	1011,	110,	1010,	11
2017-01-04 14:13:44 AI_Player.update()		1100,	1001,	1101,	1010,	1101,	1001,	1001
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	4 6
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 14:13:44 AI_Player.update()	Player b has won!
2017-01-04 14:13:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:13:44 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:44 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:44 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:44 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:44 AI_Player.update()	Search took48ms
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()		110,	1010,	111,	1010,	111,	1010,	11
2017-01-04 14:13:44 AI_Player.update()		1100,	1001,	11,	1001,	11,	1100,	1001
2017-01-04 14:13:44 AI_Player.update()		1110,	110,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:44 AI_Player.update()		101,	110,	1001,	110,	1011,	101,	1010
2017-01-04 14:13:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	1001,	1011
2017-01-04 14:13:44 AI_Player.update()		1001,	1011,	1010,	110,	1101,	11,	1010
2017-01-04 14:13:44 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	101,	1001
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:44 AI_Player.update()	Search took41ms
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()		110,	1010,	111,	1010,	111,	101,	11
2017-01-04 14:13:44 AI_Player.update()		1100,	1001,	11,	1001,	11,	1010,	1001
2017-01-04 14:13:44 AI_Player.update()		1110,	110,	1110,	1010,	111,	1100,	1011
2017-01-04 14:13:44 AI_Player.update()		101,	110,	1001,	110,	1011,	101,	1010
2017-01-04 14:13:44 AI_Player.update()		1110,	11,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:44 AI_Player.update()		1001,	1011,	1010,	110,	1101,	1001,	1010
2017-01-04 14:13:44 AI_Player.update()		1100,	1101,	1101,	1100,	1101,	11,	1001
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:44 AI_Player.update()	Search took45ms
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()		110,	1101,	111,	1010,	111,	101,	11
2017-01-04 14:13:44 AI_Player.update()		1100,	1010,	11,	1001,	11,	1010,	1001
2017-01-04 14:13:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	1100,	1011
2017-01-04 14:13:44 AI_Player.update()		101,	110,	1001,	110,	1011,	101,	1010
2017-01-04 14:13:44 AI_Player.update()		1110,	110,	1101,	101,	1011,	101,	1011
2017-01-04 14:13:44 AI_Player.update()		1001,	11,	1010,	110,	1101,	1001,	1010
2017-01-04 14:13:44 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	11,	1001
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:44 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:44 AI_Player.update()	Search took144ms
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-04 14:13:44 AI_Player.update()		1100,	1010,	11,	1001,	11,	1100,	1001
2017-01-04 14:13:44 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:44 AI_Player.update()		101,	110,	1001,	110,	1011,	101,	1010
2017-01-04 14:13:44 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-04 14:13:44 AI_Player.update()		1001,	11,	1010,	110,	1101,	11,	1010
2017-01-04 14:13:44 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:44 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:44 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:44 AI_Player.update()	Search took67ms
2017-01-04 14:13:44 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-04 14:13:44 AI_Player.update()		1100,	1010,	11,	1010,	11,	1100,	1001
2017-01-04 14:13:44 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 14:13:44 AI_Player.update()		101,	110,	1001,	101,	1011,	101,	1010
2017-01-04 14:13:44 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:44 AI_Player.update()		1001,	11,	1010,	1100,	1101,	11,	1010
2017-01-04 14:13:44 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	101,	1001
2017-01-04 14:13:44 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:44 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:44 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:44 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:44 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:44 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:44 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:44 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:44 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:44 AI_Player.update()	update
2017-01-04 14:13:44 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:45 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:45 AI_Player.update()	Search took478ms
2017-01-04 14:13:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:45 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-04 14:13:45 AI_Player.update()		1100,	1010,	11,	1001,	11,	1100,	1001
2017-01-04 14:13:45 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:45 AI_Player.update()		101,	110,	1001,	110,	1011,	101,	1010
2017-01-04 14:13:45 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-04 14:13:45 AI_Player.update()		1001,	11,	1010,	110,	1101,	11,	1010
2017-01-04 14:13:45 AI_Player.update()		1100,	1011,	1101,	1100,	1101,	101,	1001
2017-01-04 14:13:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:45 AI_Player.update()	update
2017-01-04 14:13:45 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:45 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:45 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:45 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:45 AI_Player.update()	update
2017-01-04 14:13:45 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:45 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:45 AI_Player.update()	Search took68ms
2017-01-04 14:13:45 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:45 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-04 14:13:45 AI_Player.update()		1100,	1010,	11,	1010,	11,	1100,	1001
2017-01-04 14:13:45 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 14:13:45 AI_Player.update()		101,	110,	1001,	101,	1011,	101,	1010
2017-01-04 14:13:45 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:45 AI_Player.update()		1001,	11,	1010,	1100,	1101,	11,	1010
2017-01-04 14:13:45 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	101,	1001
2017-01-04 14:13:45 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:45 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:45 AI_Player.update()	update
2017-01-04 14:13:45 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:45 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:45 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:45 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:45 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:45 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:45 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:45 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:45 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:45 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:45 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:45 AI_Player.update()	update
2017-01-04 14:13:45 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:46 AI_Player.update()	Search took538ms
2017-01-04 14:13:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-04 14:13:46 AI_Player.update()		1100,	1010,	11,	1010,	11,	1100,	1001
2017-01-04 14:13:46 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 14:13:46 AI_Player.update()		101,	110,	1001,	101,	1011,	101,	1010
2017-01-04 14:13:46 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:46 AI_Player.update()		11,	1010,	1100,	1101,	11,	1010,	1001
2017-01-04 14:13:46 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	101,	1001
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:46 AI_Player.update()	Search took79ms
2017-01-04 14:13:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()		110,	1101,	111,	1001,	111,	1010,	11
2017-01-04 14:13:46 AI_Player.update()		1100,	1010,	11,	1010,	11,	1100,	1001
2017-01-04 14:13:46 AI_Player.update()		1110,	1001,	1110,	110,	111,	101,	1011
2017-01-04 14:13:46 AI_Player.update()		101,	110,	1001,	101,	1011,	101,	1010
2017-01-04 14:13:46 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:46 AI_Player.update()		1010,	1100,	1101,	11,	1010,	1001,	11
2017-01-04 14:13:46 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	101,	1001
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:46 AI_Player.update()	Search took406ms
2017-01-04 14:13:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()		110,	1101,	111,	1010,	111,	1010,	11
2017-01-04 14:13:46 AI_Player.update()		1100,	1010,	11,	1001,	11,	1100,	1001
2017-01-04 14:13:46 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:46 AI_Player.update()		101,	110,	1001,	110,	1011,	101,	1010
2017-01-04 14:13:46 AI_Player.update()		1110,	110,	1101,	101,	1011,	1001,	1011
2017-01-04 14:13:46 AI_Player.update()		1010,	1100,	1101,	110,	1010,	1001,	11
2017-01-04 14:13:46 AI_Player.update()		1100,	1011,	1101,	11,	1101,	101,	1001
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:46 AI_Player.update()	Search took54ms
2017-01-04 14:13:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 14:13:46 AI_Player.update()		1100,	1010,	11,	1010,	11,	1100,	1001
2017-01-04 14:13:46 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:46 AI_Player.update()		101,	110,	1001,	1010,	1011,	101,	1010
2017-01-04 14:13:46 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:46 AI_Player.update()		1010,	1100,	1101,	101,	1010,	1001,	11
2017-01-04 14:13:46 AI_Player.update()		1100,	1011,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:46 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:46 AI_Player.update()	Search took272ms
2017-01-04 14:13:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 14:13:46 AI_Player.update()		1100,	1010,	11,	1010,	11,	1100,	1001
2017-01-04 14:13:46 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:46 AI_Player.update()		101,	110,	1001,	1010,	1011,	101,	1010
2017-01-04 14:13:46 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:46 AI_Player.update()		1100,	1101,	101,	1010,	1001,	11,	1010
2017-01-04 14:13:46 AI_Player.update()		1100,	1011,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:46 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:46 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:46 AI_Player.update()	Search took95ms
2017-01-04 14:13:46 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()		110,	1101,	111,	110,	111,	1010,	11
2017-01-04 14:13:46 AI_Player.update()		1100,	1010,	11,	11,	11,	1100,	1001
2017-01-04 14:13:46 AI_Player.update()		1110,	1001,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:46 AI_Player.update()		101,	110,	1001,	1001,	1011,	101,	1010
2017-01-04 14:13:46 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1001,	1011
2017-01-04 14:13:46 AI_Player.update()		1100,	1101,	101,	110,	1001,	11,	1010
2017-01-04 14:13:46 AI_Player.update()		1100,	1011,	1101,	1010,	1101,	101,	1001
2017-01-04 14:13:46 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:46 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:46 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:46 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:46 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:46 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:46 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:46 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:46 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:46 AI_Player.update()	update
2017-01-04 14:13:46 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:47 AI_Player.update()	Search took222ms
2017-01-04 14:13:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 14:13:47 AI_Player.update()		1100,	1010,	11,	1010,	11,	1100,	1001
2017-01-04 14:13:47 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:47 AI_Player.update()		101,	110,	1001,	1010,	1011,	101,	1010
2017-01-04 14:13:47 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:47 AI_Player.update()		1100,	1101,	101,	1010,	1001,	11,	1010
2017-01-04 14:13:47 AI_Player.update()		1100,	1011,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()	update
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()	update
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:47 AI_Player.update()	Search took99ms
2017-01-04 14:13:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 14:13:47 AI_Player.update()		1010,	11,	1010,	11,	1100,	1001,	1100
2017-01-04 14:13:47 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:47 AI_Player.update()		101,	110,	1001,	1010,	1011,	101,	1010
2017-01-04 14:13:47 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:47 AI_Player.update()		1100,	1101,	101,	1010,	1001,	11,	1010
2017-01-04 14:13:47 AI_Player.update()		1100,	1011,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()	update
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()	update
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:47 AI_Player.update()	Search took353ms
2017-01-04 14:13:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 14:13:47 AI_Player.update()		1010,	11,	1010,	11,	1100,	1001,	1100
2017-01-04 14:13:47 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:47 AI_Player.update()		101,	110,	1001,	1010,	1011,	101,	1010
2017-01-04 14:13:47 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:47 AI_Player.update()		1101,	101,	1010,	1001,	11,	1010,	1100
2017-01-04 14:13:47 AI_Player.update()		1100,	1011,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()	update
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:47 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:47 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()	update
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:47 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:47 AI_Player.update()	Search took286ms
2017-01-04 14:13:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()		110,	1011,	111,	11,	111,	1010,	11
2017-01-04 14:13:47 AI_Player.update()		1010,	1101,	1010,	11,	1100,	1001,	1100
2017-01-04 14:13:47 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:47 AI_Player.update()		101,	1001,	1001,	1010,	1011,	101,	1010
2017-01-04 14:13:47 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:47 AI_Player.update()		1101,	110,	1010,	1001,	11,	1010,	1100
2017-01-04 14:13:47 AI_Player.update()		1100,	101,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()	update
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:47 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:47 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:47 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()	update
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:47 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:47 AI_Player.update()	Search took65ms
2017-01-04 14:13:47 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 14:13:47 AI_Player.update()		1010,	11,	1010,	11,	1100,	1001,	1100
2017-01-04 14:13:47 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:47 AI_Player.update()		101,	110,	1001,	1010,	1011,	101,	1010
2017-01-04 14:13:47 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:47 AI_Player.update()		1101,	101,	1010,	1001,	11,	1010,	1100
2017-01-04 14:13:47 AI_Player.update()		1100,	1011,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:47 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:47 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()	update
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:47 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:47 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:47 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:47 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:47 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:47 AI_Player.update()	update
2017-01-04 14:13:47 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:48 AI_Player.update()	Search took280ms
2017-01-04 14:13:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 14:13:48 AI_Player.update()		1010,	11,	1010,	11,	1100,	1001,	1100
2017-01-04 14:13:48 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:48 AI_Player.update()		101,	110,	1001,	1010,	1011,	101,	1010
2017-01-04 14:13:48 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:48 AI_Player.update()		1100,	1101,	101,	1010,	1001,	11,	1010
2017-01-04 14:13:48 AI_Player.update()		1100,	1011,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:48 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()	update
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:48 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()	update
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:48 AI_Player.update()	Search took351ms
2017-01-04 14:13:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 14:13:48 AI_Player.update()		1010,	11,	1010,	11,	1100,	1001,	1100
2017-01-04 14:13:48 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:48 AI_Player.update()		101,	110,	1001,	1010,	1011,	101,	1010
2017-01-04 14:13:48 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:48 AI_Player.update()		1101,	101,	1010,	1001,	11,	1010,	1100
2017-01-04 14:13:48 AI_Player.update()		1100,	1011,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:48 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()	update
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:48 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()	update
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:48 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:48 AI_Player.update()	Search took256ms
2017-01-04 14:13:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 14:13:48 AI_Player.update()		1010,	11,	1010,	11,	1100,	1001,	1100
2017-01-04 14:13:48 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:48 AI_Player.update()		101,	110,	1001,	1010,	1011,	101,	1010
2017-01-04 14:13:48 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:48 AI_Player.update()		101,	1010,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:48 AI_Player.update()		1100,	1011,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:48 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()	update
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:48 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:48 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:48 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:48 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()	update
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:48 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:48 AI_Player.update()	Search took38ms
2017-01-04 14:13:48 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-04 14:13:48 AI_Player.update()		1010,	1001,	1010,	11,	1100,	1001,	1100
2017-01-04 14:13:48 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:48 AI_Player.update()		101,	110,	1001,	1010,	1011,	101,	1010
2017-01-04 14:13:48 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:48 AI_Player.update()		101,	1011,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:48 AI_Player.update()		1100,	1101,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:48 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:48 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:48 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()	update
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:48 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:48 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:48 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:48 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:48 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:48 AI_Player.update()	update
2017-01-04 14:13:48 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:49 AI_Player.update()	Search took151ms
2017-01-04 14:13:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-04 14:13:49 AI_Player.update()		1010,	1001,	1010,	11,	1100,	1001,	1100
2017-01-04 14:13:49 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:49 AI_Player.update()		110,	1001,	1010,	1011,	101,	1010,	101
2017-01-04 14:13:49 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:49 AI_Player.update()		101,	1011,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:49 AI_Player.update()		1100,	1101,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:49 AI_Player.update()	Search took106ms
2017-01-04 14:13:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-04 14:13:49 AI_Player.update()		1010,	110,	1010,	11,	1100,	1001,	1100
2017-01-04 14:13:49 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:49 AI_Player.update()		110,	1010,	1010,	1011,	101,	1010,	101
2017-01-04 14:13:49 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:49 AI_Player.update()		101,	1101,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:49 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:49 AI_Player.update()	Search took121ms
2017-01-04 14:13:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-04 14:13:49 AI_Player.update()		110,	1010,	11,	1100,	1001,	1100,	1010
2017-01-04 14:13:49 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:49 AI_Player.update()		110,	1010,	1010,	1011,	101,	1010,	101
2017-01-04 14:13:49 AI_Player.update()		1110,	1011,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:49 AI_Player.update()		101,	1101,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:49 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:49 AI_Player.update()	Search took145ms
2017-01-04 14:13:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-04 14:13:49 AI_Player.update()		110,	1001,	11,	1100,	1001,	1100,	1010
2017-01-04 14:13:49 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:49 AI_Player.update()		110,	1011,	1010,	1011,	101,	1010,	101
2017-01-04 14:13:49 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:49 AI_Player.update()		101,	11,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:49 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:49 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:49 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:49 AI_Player.update()	Search took178ms
2017-01-04 14:13:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-04 14:13:49 AI_Player.update()		110,	1010,	11,	1100,	1001,	1100,	1010
2017-01-04 14:13:49 AI_Player.update()		1110,	1011,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:49 AI_Player.update()		110,	1101,	1010,	1011,	101,	1010,	101
2017-01-04 14:13:49 AI_Player.update()		1110,	11,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:49 AI_Player.update()		101,	1001,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:49 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:49 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:49 AI_Player.update()	Search took87ms
2017-01-04 14:13:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-04 14:13:49 AI_Player.update()		110,	1001,	11,	1100,	1001,	1100,	1010
2017-01-04 14:13:49 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:49 AI_Player.update()		110,	1011,	1010,	1011,	101,	1010,	101
2017-01-04 14:13:49 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:49 AI_Player.update()		101,	11,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:49 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:49 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:49 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:49 AI_Player.update()	Search took174ms
2017-01-04 14:13:49 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-04 14:13:49 AI_Player.update()		110,	1001,	11,	1100,	1001,	1100,	1010
2017-01-04 14:13:49 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:49 AI_Player.update()		1011,	1010,	1011,	101,	1010,	101,	110
2017-01-04 14:13:49 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:49 AI_Player.update()		101,	11,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:49 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:49 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:49 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:49 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:49 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:49 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:49 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:49 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:49 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:49 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:49 AI_Player.update()	update
2017-01-04 14:13:49 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:50 AI_Player.update()	Search took95ms
2017-01-04 14:13:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-04 14:13:50 AI_Player.update()		110,	1001,	11,	1100,	1001,	1100,	1010
2017-01-04 14:13:50 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:50 AI_Player.update()		110,	1011,	1010,	1011,	101,	1010,	101
2017-01-04 14:13:50 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:50 AI_Player.update()		101,	11,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:50 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:50 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()	update
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:50 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()	update
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:50 AI_Player.update()	Search took195ms
2017-01-04 14:13:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-04 14:13:50 AI_Player.update()		110,	1001,	11,	1100,	1001,	1100,	1010
2017-01-04 14:13:50 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:50 AI_Player.update()		101,	110,	1011,	1010,	1011,	101,	1010
2017-01-04 14:13:50 AI_Player.update()		1110,	1101,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:50 AI_Player.update()		101,	11,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:50 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:50 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()	update
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:50 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()	update
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:50 AI_Player.update()	Search took31ms
2017-01-04 14:13:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-04 14:13:50 AI_Player.update()		110,	1010,	11,	1100,	1001,	1100,	1010
2017-01-04 14:13:50 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:50 AI_Player.update()		101,	1101,	1011,	1010,	1011,	101,	1010
2017-01-04 14:13:50 AI_Player.update()		1110,	11,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:50 AI_Player.update()		101,	1001,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:50 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:50 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()	update
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:50 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()	update
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:50 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:50 AI_Player.update()	Search took433ms
2017-01-04 14:13:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-04 14:13:50 AI_Player.update()		110,	110,	11,	1100,	1001,	1100,	1010
2017-01-04 14:13:50 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:50 AI_Player.update()		101,	11,	1011,	1010,	1011,	101,	1010
2017-01-04 14:13:50 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:50 AI_Player.update()		101,	1010,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:50 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:50 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()	update
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:50 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:50 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:50 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:50 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()	update
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:50 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:50 AI_Player.update()	Search took7ms
2017-01-04 14:13:50 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()		110,	1010,	111,	11,	111,	1010,	11
2017-01-04 14:13:50 AI_Player.update()		1010,	110,	110,	11,	1100,	1001,	1100
2017-01-04 14:13:50 AI_Player.update()		1110,	1101,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:50 AI_Player.update()		101,	11,	1011,	1010,	1011,	101,	1010
2017-01-04 14:13:50 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:50 AI_Player.update()		101,	1010,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:50 AI_Player.update()		1100,	1001,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:50 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:50 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:50 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()	update
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:50 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:50 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:50 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:50 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:50 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:50 AI_Player.update()	update
2017-01-04 14:13:50 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:51 AI_Player.update()	Search took294ms
2017-01-04 14:13:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-04 14:13:51 AI_Player.update()		1010,	1101,	110,	11,	1100,	1001,	1100
2017-01-04 14:13:51 AI_Player.update()		1110,	11,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	1001,	1011,	1010,	1011,	101,	1010
2017-01-04 14:13:51 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	1001,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:51 AI_Player.update()		1100,	1010,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:51 AI_Player.update()	Search took8ms
2017-01-04 14:13:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()		110,	1101,	111,	11,	111,	1010,	11
2017-01-04 14:13:51 AI_Player.update()		1010,	11,	110,	11,	1100,	1001,	1100
2017-01-04 14:13:51 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	1010,	1011,	1010,	1011,	101,	1010
2017-01-04 14:13:51 AI_Player.update()		1110,	1001,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	1010,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:51 AI_Player.update()		1100,	110,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:51 AI_Player.update()	Search took312ms
2017-01-04 14:13:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-04 14:13:51 AI_Player.update()		1010,	1001,	110,	11,	1100,	1001,	1100
2017-01-04 14:13:51 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	1001,	1011,	1010,	1011,	101,	1010
2017-01-04 14:13:51 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	110,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:51 AI_Player.update()		1100,	1101,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:51 AI_Player.update()	Search took21ms
2017-01-04 14:13:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-04 14:13:51 AI_Player.update()		1010,	1001,	110,	11,	1100,	1001,	1100
2017-01-04 14:13:51 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:51 AI_Player.update()		1001,	1011,	1010,	1011,	101,	1010,	101
2017-01-04 14:13:51 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	110,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:51 AI_Player.update()		1100,	1101,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:51 AI_Player.update()	Search took116ms
2017-01-04 14:13:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()		110,	11,	111,	11,	111,	1010,	11
2017-01-04 14:13:51 AI_Player.update()		1010,	1001,	110,	11,	1100,	1001,	1100
2017-01-04 14:13:51 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	1001,	1011,	1010,	1011,	101,	1010
2017-01-04 14:13:51 AI_Player.update()		1110,	1010,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	110,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:51 AI_Player.update()		1100,	1101,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:51 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:51 AI_Player.update()	Search took48ms
2017-01-04 14:13:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-04 14:13:51 AI_Player.update()		1010,	1010,	110,	11,	1100,	1001,	1100
2017-01-04 14:13:51 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	1010,	1011,	1010,	1011,	101,	1010
2017-01-04 14:13:51 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	1101,	1001,	11,	1010,	1100,	1101
2017-01-04 14:13:51 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:51 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 4
2017-01-04 14:13:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:51 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:51 AI_Player.update()	Search took386ms
2017-01-04 14:13:51 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-04 14:13:51 AI_Player.update()		1010,	1010,	110,	11,	1100,	1001,	1100
2017-01-04 14:13:51 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:51 AI_Player.update()		101,	1010,	1011,	1010,	1011,	101,	1010
2017-01-04 14:13:51 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:51 AI_Player.update()		1101,	101,	1101,	1001,	11,	1010,	1100
2017-01-04 14:13:51 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:51 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:51 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	2 4
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:51 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:51 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:51 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:51 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:51 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:51 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:51 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:51 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:51 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:51 AI_Player.update()	update
2017-01-04 14:13:51 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:52 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:52 AI_Player.update()	Search took160ms
2017-01-04 14:13:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:52 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-04 14:13:52 AI_Player.update()		1010,	110,	11,	1100,	1001,	1100,	1010
2017-01-04 14:13:52 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:52 AI_Player.update()		101,	1010,	1011,	1010,	1011,	101,	1010
2017-01-04 14:13:52 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:52 AI_Player.update()		1101,	101,	1101,	1001,	11,	1010,	1100
2017-01-04 14:13:52 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:52 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:52 AI_Player.update()	update
2017-01-04 14:13:52 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:52 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:52 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:52 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:52 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:52 AI_Player.update()	update
2017-01-04 14:13:52 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:52 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:52 AI_Player.update()	Search took487ms
2017-01-04 14:13:52 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:52 AI_Player.update()		110,	1001,	111,	11,	111,	1010,	11
2017-01-04 14:13:52 AI_Player.update()		1010,	110,	11,	1100,	1001,	1100,	1010
2017-01-04 14:13:52 AI_Player.update()		1110,	1001,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:52 AI_Player.update()		1010,	101,	1010,	1011,	1010,	1011,	101
2017-01-04 14:13:52 AI_Player.update()		1110,	110,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:52 AI_Player.update()		1101,	101,	1101,	1001,	11,	1010,	1100
2017-01-04 14:13:52 AI_Player.update()		1100,	11,	1101,	110,	1101,	101,	1001
2017-01-04 14:13:52 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:52 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:52 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:52 AI_Player.update()	update
2017-01-04 14:13:52 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:52 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:52 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:52 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:52 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:52 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:52 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:52 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:52 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:52 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:52 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:52 AI_Player.update()	update
2017-01-04 14:13:52 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:53 AI_Player.update()	Search took444ms
2017-01-04 14:13:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()		110,	1001,	111,	1100,	111,	1010,	11
2017-01-04 14:13:53 AI_Player.update()		1010,	110,	11,	1001,	1001,	1100,	1010
2017-01-04 14:13:53 AI_Player.update()		1110,	1001,	1110,	1011,	111,	101,	1011
2017-01-04 14:13:53 AI_Player.update()		1010,	101,	1010,	110,	1010,	1011,	101
2017-01-04 14:13:53 AI_Player.update()		1110,	110,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:53 AI_Player.update()		1101,	101,	1101,	110,	11,	1010,	1100
2017-01-04 14:13:53 AI_Player.update()		1100,	11,	1101,	11,	1101,	101,	1001
2017-01-04 14:13:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()	update
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()	update
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:53 AI_Player.update()	Search took471ms
2017-01-04 14:13:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 14:13:53 AI_Player.update()		1010,	1001,	11,	1001,	1001,	1100,	1010
2017-01-04 14:13:53 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 14:13:53 AI_Player.update()		1010,	110,	1010,	110,	1010,	1011,	101
2017-01-04 14:13:53 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:53 AI_Player.update()		1101,	11,	1101,	110,	11,	1010,	1100
2017-01-04 14:13:53 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-04 14:13:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()	update
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()	update
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:53 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:53 AI_Player.update()	Search took394ms
2017-01-04 14:13:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 14:13:53 AI_Player.update()		1010,	1001,	11,	1001,	1001,	1100,	1010
2017-01-04 14:13:53 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 14:13:53 AI_Player.update()		110,	1010,	110,	1010,	1011,	101,	1010
2017-01-04 14:13:53 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:53 AI_Player.update()		1101,	11,	1101,	110,	11,	1010,	1100
2017-01-04 14:13:53 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-04 14:13:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	3 4
2017-01-04 14:13:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()	update
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:53 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:53 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:53 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()	update
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:53 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:53 AI_Player.update()	Search took60ms
2017-01-04 14:13:53 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()		110,	110,	111,	1100,	111,	1010,	11
2017-01-04 14:13:53 AI_Player.update()		1010,	1010,	1001,	11,	1001,	1001,	1100
2017-01-04 14:13:53 AI_Player.update()		1110,	101,	1110,	1011,	111,	101,	1011
2017-01-04 14:13:53 AI_Player.update()		110,	1010,	110,	1010,	1011,	101,	1010
2017-01-04 14:13:53 AI_Player.update()		1110,	101,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:13:53 AI_Player.update()		1101,	11,	1101,	110,	11,	1010,	1100
2017-01-04 14:13:53 AI_Player.update()		1100,	1001,	1101,	11,	1101,	101,	1001
2017-01-04 14:13:53 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:53 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()	update
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:53 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:53 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:53 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:53 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:53 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:53 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:53 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:53 AI_Player.update()	update
2017-01-04 14:13:53 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:54 AI_Player.update()	Search took216ms
2017-01-04 14:13:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-04 14:13:54 AI_Player.update()		1010,	1010,	1001,	1011,	1001,	1001,	1100
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:54 AI_Player.update()		110,	1010,	110,	1001,	1011,	101,	1010
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:54 AI_Player.update()		1101,	11,	1101,	11,	11,	1010,	1100
2017-01-04 14:13:54 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:54 AI_Player.update()	Search took227ms
2017-01-04 14:13:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()		110,	110,	111,	11,	111,	1010,	11
2017-01-04 14:13:54 AI_Player.update()		1010,	1010,	1001,	1011,	1001,	1001,	1100
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:54 AI_Player.update()		1010,	110,	1010,	110,	1001,	1011,	101
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1101,	110,	1011,	1001,	1011
2017-01-04 14:13:54 AI_Player.update()		1101,	11,	1101,	11,	11,	1010,	1100
2017-01-04 14:13:54 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:54 AI_Player.update()	Search took53ms
2017-01-04 14:13:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-04 14:13:54 AI_Player.update()		1010,	1010,	1001,	1011,	1001,	101,	1100
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-04 14:13:54 AI_Player.update()		1010,	110,	1010,	110,	1001,	1001,	101
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:54 AI_Player.update()		1101,	11,	1101,	11,	11,	101,	1100
2017-01-04 14:13:54 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:54 AI_Player.update()	Search took213ms
2017-01-04 14:13:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-04 14:13:54 AI_Player.update()		1100,	1010,	1010,	1001,	1011,	1001,	101
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-04 14:13:54 AI_Player.update()		1010,	110,	1010,	110,	1001,	1001,	101
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:54 AI_Player.update()		1101,	11,	1101,	11,	11,	101,	1100
2017-01-04 14:13:54 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:54 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:54 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:54 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:54 AI_Player.update()	Search took91ms
2017-01-04 14:13:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-04 14:13:54 AI_Player.update()		1100,	1010,	1010,	1001,	1011,	1001,	101
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-04 14:13:54 AI_Player.update()		110,	1010,	110,	1001,	1001,	101,	1010
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:54 AI_Player.update()		1101,	11,	1101,	11,	11,	101,	1100
2017-01-04 14:13:54 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:54 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:54 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:54 AI_Player.update()	Search took52ms
2017-01-04 14:13:54 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-04 14:13:54 AI_Player.update()		1100,	1010,	1010,	1001,	1011,	1001,	101
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1110,	1010,	111,	1011,	1011
2017-01-04 14:13:54 AI_Player.update()		110,	1010,	110,	1001,	1001,	101,	1010
2017-01-04 14:13:54 AI_Player.update()		1110,	101,	1101,	110,	1011,	1010,	1011
2017-01-04 14:13:54 AI_Player.update()		1100,	1101,	11,	1101,	11,	11,	101
2017-01-04 14:13:54 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1010,	1001
2017-01-04 14:13:54 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:54 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:54 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:54 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:54 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:54 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:54 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:54 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:54 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:54 AI_Player.update()	update
2017-01-04 14:13:54 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:55 AI_Player.update()	Search took243ms
2017-01-04 14:13:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 14:13:55 AI_Player.update()		1100,	1010,	1010,	1010,	1011,	1001,	101
2017-01-04 14:13:55 AI_Player.update()		1110,	101,	1110,	1001,	111,	1011,	1011
2017-01-04 14:13:55 AI_Player.update()		110,	1010,	110,	110,	1001,	101,	1010
2017-01-04 14:13:55 AI_Player.update()		1110,	101,	1101,	1101,	1011,	1010,	1011
2017-01-04 14:13:55 AI_Player.update()		1100,	1101,	11,	1100,	11,	11,	101
2017-01-04 14:13:55 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1010,	1001
2017-01-04 14:13:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:13:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()	update
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	4 6
2017-01-04 14:13:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()	update
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:55 AI_Player.update()	Search took61ms
2017-01-04 14:13:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 14:13:55 AI_Player.update()		1100,	1010,	1010,	1010,	1011,	1011,	101
2017-01-04 14:13:55 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:55 AI_Player.update()		110,	1010,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:55 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:55 AI_Player.update()		1100,	1101,	11,	1100,	11,	1010,	101
2017-01-04 14:13:55 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	4 6
2017-01-04 14:13:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()	update
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	4 6
2017-01-04 14:13:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()	update
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:55 AI_Player.update()	Search took208ms
2017-01-04 14:13:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 14:13:55 AI_Player.update()		101,	1100,	1010,	1010,	1010,	1011,	1011
2017-01-04 14:13:55 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:55 AI_Player.update()		110,	1010,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:55 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:55 AI_Player.update()		1100,	1101,	11,	1100,	11,	1010,	101
2017-01-04 14:13:55 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	4 6
2017-01-04 14:13:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()	update
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	4 6
2017-01-04 14:13:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()	update
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:55 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:55 AI_Player.update()	Search took186ms
2017-01-04 14:13:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()		110,	110,	111,	11,	111,	1001,	11
2017-01-04 14:13:55 AI_Player.update()		101,	1100,	1010,	1001,	1010,	1011,	1011
2017-01-04 14:13:55 AI_Player.update()		1110,	101,	1110,	1010,	111,	101,	1011
2017-01-04 14:13:55 AI_Player.update()		110,	1010,	110,	1001,	1001,	1010,	1010
2017-01-04 14:13:55 AI_Player.update()		1110,	101,	1101,	110,	1011,	11,	1011
2017-01-04 14:13:55 AI_Player.update()		1100,	1101,	11,	1101,	11,	1010,	101
2017-01-04 14:13:55 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	1001,	1001
2017-01-04 14:13:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	4 6
2017-01-04 14:13:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()	update
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:55 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:55 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:55 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:13:55 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:55 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()	update
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:55 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:55 AI_Player.update()	Search took179ms
2017-01-04 14:13:55 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 14:13:55 AI_Player.update()		101,	1100,	1010,	1010,	1010,	1011,	1011
2017-01-04 14:13:55 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:55 AI_Player.update()		110,	1010,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:55 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:55 AI_Player.update()		1100,	1101,	11,	1100,	11,	1010,	101
2017-01-04 14:13:55 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:55 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:55 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:13:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()	update
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:55 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:55 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:55 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:55 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:13:55 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:55 AI_Player.update()	update
2017-01-04 14:13:55 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:56 AI_Player.update()	Search took638ms
2017-01-04 14:13:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()		110,	1100,	111,	1001,	111,	1001,	11
2017-01-04 14:13:56 AI_Player.update()		101,	101,	1010,	1010,	1010,	1011,	1011
2017-01-04 14:13:56 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:56 AI_Player.update()		110,	101,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:56 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:56 AI_Player.update()		1100,	1001,	11,	1100,	11,	1010,	101
2017-01-04 14:13:56 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:13:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()	update
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:56 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:56 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()	update
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:56 AI_Player.update()	Search took115ms
2017-01-04 14:13:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-04 14:13:56 AI_Player.update()		101,	1010,	1010,	1010,	1010,	1011,	1011
2017-01-04 14:13:56 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:56 AI_Player.update()		110,	1101,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:56 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:56 AI_Player.update()		1100,	110,	11,	1100,	11,	1010,	101
2017-01-04 14:13:56 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()	update
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()	update
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:56 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:56 AI_Player.update()	Search took397ms
2017-01-04 14:13:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()		110,	1100,	111,	1001,	111,	1001,	11
2017-01-04 14:13:56 AI_Player.update()		101,	101,	1010,	1010,	1010,	1011,	1011
2017-01-04 14:13:56 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:56 AI_Player.update()		110,	101,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:56 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:56 AI_Player.update()		1100,	1001,	11,	1100,	11,	1010,	101
2017-01-04 14:13:56 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()	update
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:56 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:56 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:56 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()	update
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:56 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:56 AI_Player.update()	Search took27ms
2017-01-04 14:13:56 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-04 14:13:56 AI_Player.update()		101,	1010,	1010,	1010,	1010,	1011,	1011
2017-01-04 14:13:56 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:56 AI_Player.update()		110,	1101,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:56 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:56 AI_Player.update()		1100,	110,	11,	1100,	11,	1010,	101
2017-01-04 14:13:56 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:56 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:56 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()	update
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:56 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:56 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:56 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:56 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:56 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:56 AI_Player.update()	update
2017-01-04 14:13:56 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:57 AI_Player.update()	Search took345ms
2017-01-04 14:13:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()		110,	1100,	111,	1001,	111,	1001,	11
2017-01-04 14:13:57 AI_Player.update()		101,	101,	1010,	1010,	1010,	1011,	1011
2017-01-04 14:13:57 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:57 AI_Player.update()		110,	101,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:57 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:57 AI_Player.update()		1100,	1001,	11,	1100,	11,	1010,	101
2017-01-04 14:13:57 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()	update
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()	update
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:57 AI_Player.update()	Search took16ms
2017-01-04 14:13:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()		110,	110,	111,	1001,	111,	1001,	11
2017-01-04 14:13:57 AI_Player.update()		101,	1100,	1010,	1010,	1010,	1011,	1011
2017-01-04 14:13:57 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:57 AI_Player.update()		110,	1010,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:57 AI_Player.update()		1110,	101,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:57 AI_Player.update()		1100,	1101,	11,	1100,	11,	1010,	101
2017-01-04 14:13:57 AI_Player.update()		1100,	1001,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()	update
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()	update
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:57 AI_Player.update()	Search took434ms
2017-01-04 14:13:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()		110,	1100,	111,	1001,	111,	1001,	11
2017-01-04 14:13:57 AI_Player.update()		101,	101,	1010,	1010,	1010,	1011,	1011
2017-01-04 14:13:57 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:57 AI_Player.update()		110,	101,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:57 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:57 AI_Player.update()		1100,	1001,	11,	1100,	11,	1010,	101
2017-01-04 14:13:57 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()	update
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()	update
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:57 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:57 AI_Player.update()	Search took52ms
2017-01-04 14:13:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()		110,	1100,	111,	1001,	111,	1001,	11
2017-01-04 14:13:57 AI_Player.update()		1011,	101,	101,	1010,	1010,	1010,	1011
2017-01-04 14:13:57 AI_Player.update()		1110,	1010,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:57 AI_Player.update()		110,	101,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:57 AI_Player.update()		1110,	1101,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:57 AI_Player.update()		1100,	1001,	11,	1100,	11,	1010,	101
2017-01-04 14:13:57 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()	update
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:57 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()	update
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:57 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:57 AI_Player.update()	Search took174ms
2017-01-04 14:13:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()		110,	101,	111,	1001,	111,	1001,	11
2017-01-04 14:13:57 AI_Player.update()		1011,	1010,	101,	1010,	1010,	1010,	1011
2017-01-04 14:13:57 AI_Player.update()		1110,	101,	1110,	1001,	111,	101,	1011
2017-01-04 14:13:57 AI_Player.update()		110,	1101,	110,	110,	1001,	1010,	1010
2017-01-04 14:13:57 AI_Player.update()		1110,	1001,	1101,	1101,	1011,	11,	1011
2017-01-04 14:13:57 AI_Player.update()		1100,	110,	11,	1100,	11,	1010,	101
2017-01-04 14:13:57 AI_Player.update()		1100,	1100,	1101,	11,	1101,	1001,	1001
2017-01-04 14:13:57 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:13:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()	update
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:57 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:57 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:57 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:13:57 AI_Player.update()	Player a has won!
2017-01-04 14:13:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:57 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:13:57 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:13:57 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:13:57 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:57 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:57 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:57 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:57 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:57 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:57 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:57 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:57 AI_Player.update()	update
2017-01-04 14:13:57 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:58 AI_Player.update()	Search took240ms
2017-01-04 14:13:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-04 14:13:58 AI_Player.update()		1101,	101,	1010,	1011,	101,	101,	1001
2017-01-04 14:13:58 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-04 14:13:58 AI_Player.update()		101,	1010,	101,	1010,	1010,	110,	110
2017-01-04 14:13:58 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 14:13:58 AI_Player.update()		110,	1001,	1101,	110,	101,	1010,	1011
2017-01-04 14:13:58 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-04 14:13:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:13:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()	update
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:58 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:58 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()	update
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:58 AI_Player.update()	Search took74ms
2017-01-04 14:13:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-04 14:13:58 AI_Player.update()		1101,	101,	1010,	1011,	101,	101,	1001
2017-01-04 14:13:58 AI_Player.update()		1110,	1001,	1110,	101,	111,	110,	1011
2017-01-04 14:13:58 AI_Player.update()		1010,	101,	1010,	1010,	110,	110,	101
2017-01-04 14:13:58 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 14:13:58 AI_Player.update()		110,	1001,	1101,	110,	101,	1010,	1011
2017-01-04 14:13:58 AI_Player.update()		1100,	111,	1101,	11,	1101,	1010,	1001
2017-01-04 14:13:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()	update
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()	update
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:58 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:58 AI_Player.update()	Search took391ms
2017-01-04 14:13:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()		110,	101,	111,	1001,	111,	101,	11
2017-01-04 14:13:58 AI_Player.update()		1101,	1001,	1010,	1011,	101,	101,	1001
2017-01-04 14:13:58 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-04 14:13:58 AI_Player.update()		1010,	101,	1010,	1010,	110,	110,	101
2017-01-04 14:13:58 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 14:13:58 AI_Player.update()		110,	111,	1101,	110,	101,	1010,	1011
2017-01-04 14:13:58 AI_Player.update()		1100,	1101,	1101,	11,	1101,	1010,	1001
2017-01-04 14:13:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()	update
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:58 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:58 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:58 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()	update
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:58 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:58 AI_Player.update()	Search took115ms
2017-01-04 14:13:58 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()		110,	1001,	111,	1001,	111,	101,	11
2017-01-04 14:13:58 AI_Player.update()		1101,	101,	1010,	1011,	101,	101,	1001
2017-01-04 14:13:58 AI_Player.update()		1110,	101,	1110,	101,	111,	110,	1011
2017-01-04 14:13:58 AI_Player.update()		1010,	1001,	1010,	1010,	110,	110,	101
2017-01-04 14:13:58 AI_Player.update()		1110,	111,	1101,	1100,	1011,	110,	1011
2017-01-04 14:13:58 AI_Player.update()		110,	1101,	1101,	110,	101,	1010,	1011
2017-01-04 14:13:58 AI_Player.update()		1100,	101,	1101,	11,	1101,	1010,	1001
2017-01-04 14:13:58 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:58 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()	update
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:58 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:58 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:58 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:58 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:58 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:58 AI_Player.update()	update
2017-01-04 14:13:58 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:13:59 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:13:59 AI_Player.update()	Search took467ms
2017-01-04 14:13:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:59 AI_Player.update()		110,	1001,	111,	1011,	111,	101,	11
2017-01-04 14:13:59 AI_Player.update()		1101,	101,	1010,	101,	101,	101,	1001
2017-01-04 14:13:59 AI_Player.update()		1110,	101,	1110,	1010,	111,	110,	1011
2017-01-04 14:13:59 AI_Player.update()		1010,	1001,	1010,	1100,	110,	110,	101
2017-01-04 14:13:59 AI_Player.update()		1110,	111,	1101,	110,	1011,	110,	1011
2017-01-04 14:13:59 AI_Player.update()		110,	1101,	1101,	11,	101,	1010,	1011
2017-01-04 14:13:59 AI_Player.update()		1100,	101,	1101,	1001,	1101,	1010,	1001
2017-01-04 14:13:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:13:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:59 AI_Player.update()	update
2017-01-04 14:13:59 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:13:59 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:13:59 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:13:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:59 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:13:59 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:13:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:59 AI_Player.update()	update
2017-01-04 14:13:59 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:13:59 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:13:59 AI_Player.update()	Search took171ms
2017-01-04 14:13:59 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:13:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:59 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 14:13:59 AI_Player.update()		1101,	101,	1010,	1010,	101,	101,	1001
2017-01-04 14:13:59 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 14:13:59 AI_Player.update()		1010,	1001,	1010,	110,	110,	110,	101
2017-01-04 14:13:59 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-04 14:13:59 AI_Player.update()		110,	1101,	1101,	1001,	101,	1010,	1011
2017-01-04 14:13:59 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 14:13:59 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:13:59 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:13:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:13:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:59 AI_Player.update()	update
2017-01-04 14:13:59 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:13:59 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:13:59 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:13:59 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:13:59 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:13:59 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:13:59 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:13:59 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:13:59 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:13:59 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:13:59 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:13:59 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:13:59 AI_Player.update()	update
2017-01-04 14:13:59 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:00 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:00 AI_Player.update()	Search took664ms
2017-01-04 14:14:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:00 AI_Player.update()		110,	101,	111,	101,	111,	101,	11
2017-01-04 14:14:00 AI_Player.update()		1101,	1001,	1010,	1010,	101,	101,	1001
2017-01-04 14:14:00 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 14:14:00 AI_Player.update()		1010,	101,	1010,	110,	110,	110,	101
2017-01-04 14:14:00 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:00 AI_Player.update()		110,	111,	1101,	1001,	101,	1010,	1011
2017-01-04 14:14:00 AI_Player.update()		1100,	1101,	1101,	1011,	1101,	1010,	1001
2017-01-04 14:14:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:00 AI_Player.update()	update
2017-01-04 14:14:00 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:00 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:00 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:00 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:00 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:14:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:00 AI_Player.update()	update
2017-01-04 14:14:00 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:00 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:00 AI_Player.update()	Search took345ms
2017-01-04 14:14:00 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:00 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 14:14:00 AI_Player.update()		1101,	101,	1010,	1010,	101,	101,	1001
2017-01-04 14:14:00 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 14:14:00 AI_Player.update()		1010,	1001,	1010,	110,	110,	110,	101
2017-01-04 14:14:00 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:00 AI_Player.update()		110,	1101,	1101,	1001,	101,	1010,	1011
2017-01-04 14:14:00 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 14:14:00 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:00 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:14:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:00 AI_Player.update()	update
2017-01-04 14:14:00 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:00 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:00 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:00 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:00 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:00 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:00 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:00 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:00 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:00 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:00 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:00 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:00 AI_Player.update()	update
2017-01-04 14:14:00 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:01 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:01 AI_Player.update()	Search took699ms
2017-01-04 14:14:01 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:01 AI_Player.update()		110,	1001,	111,	101,	111,	101,	11
2017-01-04 14:14:01 AI_Player.update()		1101,	101,	1010,	1010,	101,	101,	1001
2017-01-04 14:14:01 AI_Player.update()		1110,	101,	1110,	1100,	111,	110,	1011
2017-01-04 14:14:01 AI_Player.update()		1010,	1001,	1010,	110,	110,	110,	101
2017-01-04 14:14:01 AI_Player.update()		1110,	111,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:01 AI_Player.update()		1011,	110,	1101,	1101,	1001,	101,	1010
2017-01-04 14:14:01 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1010,	1001
2017-01-04 14:14:01 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:01 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:01 AI_Player.update()	update
2017-01-04 14:14:01 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:01 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:01 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:01 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:01 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:01 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:01 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:01 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:01 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:14:01 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:01 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:01 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:01 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:01 AI_Player.update()	update
2017-01-04 14:14:01 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:02 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:02 AI_Player.update()	Search took888ms
2017-01-04 14:14:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:02 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 14:14:02 AI_Player.update()		1101,	101,	1010,	1100,	101,	101,	1001
2017-01-04 14:14:02 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-04 14:14:02 AI_Player.update()		1010,	1001,	1010,	11,	110,	110,	101
2017-01-04 14:14:02 AI_Player.update()		1110,	111,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:02 AI_Player.update()		1011,	110,	1101,	1011,	1001,	101,	1010
2017-01-04 14:14:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:14:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:02 AI_Player.update()	update
2017-01-04 14:14:02 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:02 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:02 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:02 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:14:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:02 AI_Player.update()	update
2017-01-04 14:14:02 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:02 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:02 AI_Player.update()	Search took807ms
2017-01-04 14:14:02 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:02 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 14:14:02 AI_Player.update()		1101,	101,	1010,	1100,	101,	101,	1001
2017-01-04 14:14:02 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-04 14:14:02 AI_Player.update()		1001,	1010,	11,	110,	110,	101,	1010
2017-01-04 14:14:02 AI_Player.update()		1110,	111,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:02 AI_Player.update()		1011,	110,	1101,	1011,	1001,	101,	1010
2017-01-04 14:14:02 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:02 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:02 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:14:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:02 AI_Player.update()	update
2017-01-04 14:14:02 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:02 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:02 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:02 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:02 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:02 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:02 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:02 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:02 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:02 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:02 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:02 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:02 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:02 AI_Player.update()	update
2017-01-04 14:14:02 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:03 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:03 AI_Player.update()	Search took568ms
2017-01-04 14:14:03 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:03 AI_Player.update()		110,	1001,	111,	1010,	111,	101,	11
2017-01-04 14:14:03 AI_Player.update()		1101,	101,	1010,	1100,	101,	101,	1001
2017-01-04 14:14:03 AI_Player.update()		1110,	101,	1110,	110,	111,	110,	1011
2017-01-04 14:14:03 AI_Player.update()		1010,	1001,	1010,	11,	110,	110,	101
2017-01-04 14:14:03 AI_Player.update()		1110,	111,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:03 AI_Player.update()		1011,	110,	1101,	1011,	1001,	101,	1010
2017-01-04 14:14:03 AI_Player.update()		1100,	101,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:03 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:03 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:03 AI_Player.update()	update
2017-01-04 14:14:03 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:03 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:03 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:03 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:03 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:03 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:03 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:03 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:14:03 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:03 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:03 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:03 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:03 AI_Player.update()	update
2017-01-04 14:14:03 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:04 AI_Player.update()	Search took860ms
2017-01-04 14:14:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:04 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 14:14:04 AI_Player.update()		1101,	101,	1010,	1100,	101,	101,	1001
2017-01-04 14:14:04 AI_Player.update()		1110,	1001,	1110,	110,	111,	110,	1011
2017-01-04 14:14:04 AI_Player.update()		1010,	111,	1010,	11,	110,	110,	101
2017-01-04 14:14:04 AI_Player.update()		1110,	110,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:04 AI_Player.update()		1011,	101,	1101,	1011,	1001,	101,	1010
2017-01-04 14:14:04 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:14:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:04 AI_Player.update()	update
2017-01-04 14:14:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:04 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:14:04 AI_Player.update()	Player a has won!
2017-01-04 14:14:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:04 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:14:04 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:04 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:14:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:04 AI_Player.update()	update
2017-01-04 14:14:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:04 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:04 AI_Player.update()	Search took318ms
2017-01-04 14:14:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:04 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 14:14:04 AI_Player.update()		1100,	1010,	1100,	1011,	11,	101,	1011
2017-01-04 14:14:04 AI_Player.update()		1110,	110,	1110,	1110,	111,	1100,	1011
2017-01-04 14:14:04 AI_Player.update()		1011,	111,	101,	11,	11,	1001,	1101
2017-01-04 14:14:04 AI_Player.update()		1110,	1110,	1101,	101,	1011,	101,	1011
2017-01-04 14:14:04 AI_Player.update()		1001,	110,	110,	1001,	1101,	110,	1010
2017-01-04 14:14:04 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	101,	1001
2017-01-04 14:14:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:04 AI_Player.update()	update
2017-01-04 14:14:04 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:04 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:04 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:04 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:04 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:04 AI_Player.update()	update
2017-01-04 14:14:04 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:04 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:04 AI_Player.update()	Search took234ms
2017-01-04 14:14:04 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:04 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 14:14:04 AI_Player.update()		1100,	1010,	1100,	1011,	11,	101,	1011
2017-01-04 14:14:04 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-04 14:14:04 AI_Player.update()		1011,	111,	101,	11,	11,	1100,	1101
2017-01-04 14:14:04 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1001,	1011
2017-01-04 14:14:04 AI_Player.update()		1001,	110,	110,	1001,	1101,	101,	1010
2017-01-04 14:14:04 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-04 14:14:04 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:04 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:04 AI_Player.update()	update
2017-01-04 14:14:04 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:04 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:04 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:04 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:04 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:04 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:04 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:04 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:04 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:04 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:04 AI_Player.update()	update
2017-01-04 14:14:04 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:05 AI_Player.update()	Search took389ms
2017-01-04 14:14:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:05 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 14:14:05 AI_Player.update()		1100,	1010,	1100,	1100,	11,	101,	1011
2017-01-04 14:14:05 AI_Player.update()		1110,	110,	1110,	1011,	111,	101,	1011
2017-01-04 14:14:05 AI_Player.update()		1011,	111,	101,	1110,	11,	1100,	1101
2017-01-04 14:14:05 AI_Player.update()		1110,	1110,	1101,	11,	1011,	1001,	1011
2017-01-04 14:14:05 AI_Player.update()		1001,	110,	110,	101,	1101,	101,	1010
2017-01-04 14:14:05 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	110,	1001
2017-01-04 14:14:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:05 AI_Player.update()	update
2017-01-04 14:14:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:05 AI_Player.update()	update
2017-01-04 14:14:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:05 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:05 AI_Player.update()	Search took182ms
2017-01-04 14:14:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:05 AI_Player.update()		110,	101,	111,	1100,	111,	101,	11
2017-01-04 14:14:05 AI_Player.update()		1100,	1010,	1100,	1011,	11,	101,	1011
2017-01-04 14:14:05 AI_Player.update()		1110,	110,	1110,	1110,	111,	101,	1011
2017-01-04 14:14:05 AI_Player.update()		1011,	111,	101,	11,	11,	1100,	1101
2017-01-04 14:14:05 AI_Player.update()		1110,	1110,	1101,	101,	1011,	1001,	1011
2017-01-04 14:14:05 AI_Player.update()		1001,	110,	110,	1001,	1101,	101,	1010
2017-01-04 14:14:05 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-04 14:14:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:05 AI_Player.update()	update
2017-01-04 14:14:05 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:05 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:05 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:05 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:14:05 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:05 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:05 AI_Player.update()	update
2017-01-04 14:14:05 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:05 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:05 AI_Player.update()	Search took301ms
2017-01-04 14:14:05 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:05 AI_Player.update()		110,	101,	111,	1011,	111,	101,	11
2017-01-04 14:14:05 AI_Player.update()		1100,	1010,	1100,	1110,	11,	101,	1011
2017-01-04 14:14:05 AI_Player.update()		1110,	110,	1110,	11,	111,	101,	1011
2017-01-04 14:14:05 AI_Player.update()		1011,	111,	101,	101,	11,	1100,	1101
2017-01-04 14:14:05 AI_Player.update()		1110,	1110,	1101,	1001,	1011,	1001,	1011
2017-01-04 14:14:05 AI_Player.update()		1001,	110,	110,	1100,	1101,	101,	1010
2017-01-04 14:14:05 AI_Player.update()		1100,	1001,	1101,	1100,	1101,	110,	1001
2017-01-04 14:14:05 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:05 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:14:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:05 AI_Player.update()	update
2017-01-04 14:14:05 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:05 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:05 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:05 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:05 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:05 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:05 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:05 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:14:05 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:05 AI_Player.update()	update
2017-01-04 14:14:05 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:06 AI_Player.update()	Search took242ms
2017-01-04 14:14:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-04 14:14:06 AI_Player.update()		1100,	1010,	1100,	11,	11,	101,	1011
2017-01-04 14:14:06 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 14:14:06 AI_Player.update()		1011,	111,	101,	1001,	11,	1100,	1101
2017-01-04 14:14:06 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:14:06 AI_Player.update()		1001,	110,	110,	1100,	1101,	101,	1010
2017-01-04 14:14:06 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	110,	1001
2017-01-04 14:14:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:14:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()	update
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:14:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()	update
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:06 AI_Player.update()	Search took391ms
2017-01-04 14:14:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-04 14:14:06 AI_Player.update()		1100,	1010,	1100,	11,	11,	101,	1011
2017-01-04 14:14:06 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 14:14:06 AI_Player.update()		1011,	111,	101,	1001,	11,	1100,	1101
2017-01-04 14:14:06 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:14:06 AI_Player.update()		110,	110,	1100,	1101,	101,	1010,	1001
2017-01-04 14:14:06 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	110,	1001
2017-01-04 14:14:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	2 3
2017-01-04 14:14:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()	update
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:14:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()	update
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:06 AI_Player.update()	Search took287ms
2017-01-04 14:14:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()		110,	101,	111,	11,	111,	101,	11
2017-01-04 14:14:06 AI_Player.update()		1100,	1010,	1100,	101,	11,	101,	1011
2017-01-04 14:14:06 AI_Player.update()		1110,	110,	1110,	1001,	111,	101,	1011
2017-01-04 14:14:06 AI_Player.update()		1011,	111,	101,	1100,	11,	1100,	1101
2017-01-04 14:14:06 AI_Player.update()		1110,	1110,	1101,	1101,	1011,	1001,	1011
2017-01-04 14:14:06 AI_Player.update()		110,	110,	1100,	1011,	101,	1010,	1001
2017-01-04 14:14:06 AI_Player.update()		1100,	1001,	1101,	1110,	1101,	110,	1001
2017-01-04 14:14:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:14:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()	update
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:14:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()	update
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:06 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:06 AI_Player.update()	Search took115ms
2017-01-04 14:14:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()		110,	101,	111,	1110,	111,	101,	11
2017-01-04 14:14:06 AI_Player.update()		1100,	1010,	1100,	11,	11,	101,	1011
2017-01-04 14:14:06 AI_Player.update()		1110,	110,	1110,	101,	111,	101,	1011
2017-01-04 14:14:06 AI_Player.update()		1011,	111,	101,	1001,	11,	1100,	1101
2017-01-04 14:14:06 AI_Player.update()		1110,	1110,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:14:06 AI_Player.update()		110,	110,	1100,	1101,	101,	1010,	1001
2017-01-04 14:14:06 AI_Player.update()		1100,	1001,	1101,	1011,	1101,	110,	1001
2017-01-04 14:14:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:14:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()	update
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:06 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:06 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:06 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()	update
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:06 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:06 AI_Player.update()	Search took50ms
2017-01-04 14:14:06 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 14:14:06 AI_Player.update()		1100,	110,	1100,	11,	11,	101,	1011
2017-01-04 14:14:06 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-04 14:14:06 AI_Player.update()		1011,	1110,	101,	1001,	11,	1100,	1101
2017-01-04 14:14:06 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:14:06 AI_Player.update()		110,	1001,	1100,	1101,	101,	1010,	1001
2017-01-04 14:14:06 AI_Player.update()		1100,	101,	1101,	1011,	1101,	110,	1001
2017-01-04 14:14:06 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:06 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()	update
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:06 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:06 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:06 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:14:06 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:06 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:06 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:06 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:06 AI_Player.update()	update
2017-01-04 14:14:06 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:07 AI_Player.update()	Search took397ms
2017-01-04 14:14:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 14:14:07 AI_Player.update()		110,	1100,	11,	11,	101,	1011,	1100
2017-01-04 14:14:07 AI_Player.update()		1110,	111,	1110,	101,	111,	101,	1011
2017-01-04 14:14:07 AI_Player.update()		1011,	1110,	101,	1001,	11,	1100,	1101
2017-01-04 14:14:07 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1001,	1011
2017-01-04 14:14:07 AI_Player.update()		110,	1001,	1100,	1101,	101,	1010,	1001
2017-01-04 14:14:07 AI_Player.update()		1100,	101,	1101,	1011,	1101,	110,	1001
2017-01-04 14:14:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:14:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()	update
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:14:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()	update
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:07 AI_Player.update()	Search took178ms
2017-01-04 14:14:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()		110,	1010,	111,	1110,	111,	1011,	11
2017-01-04 14:14:07 AI_Player.update()		110,	1100,	11,	11,	101,	101,	1100
2017-01-04 14:14:07 AI_Player.update()		1110,	111,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:07 AI_Player.update()		1011,	1110,	101,	1001,	11,	1001,	1101
2017-01-04 14:14:07 AI_Player.update()		1110,	110,	1101,	1100,	1011,	1010,	1011
2017-01-04 14:14:07 AI_Player.update()		110,	1001,	1100,	1101,	101,	110,	1001
2017-01-04 14:14:07 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-04 14:14:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:14:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()	update
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:07 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:07 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()	update
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:07 AI_Player.update()	Search took84ms
2017-01-04 14:14:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 14:14:07 AI_Player.update()		110,	1100,	11,	11,	101,	1100,	1100
2017-01-04 14:14:07 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-04 14:14:07 AI_Player.update()		1011,	1110,	101,	1001,	11,	1010,	1101
2017-01-04 14:14:07 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-04 14:14:07 AI_Player.update()		110,	1001,	1100,	1101,	101,	101,	1001
2017-01-04 14:14:07 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1011,	1001
2017-01-04 14:14:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()	update
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()	update
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:07 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:07 AI_Player.update()	Search took195ms
2017-01-04 14:14:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()		110,	1100,	111,	1110,	111,	101,	11
2017-01-04 14:14:07 AI_Player.update()		110,	111,	11,	11,	101,	1100,	1100
2017-01-04 14:14:07 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 14:14:07 AI_Player.update()		1011,	110,	101,	1001,	11,	1010,	1101
2017-01-04 14:14:07 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 14:14:07 AI_Player.update()		110,	101,	1100,	1101,	101,	101,	1001
2017-01-04 14:14:07 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1011,	1001
2017-01-04 14:14:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()	update
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:07 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()	update
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:07 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:07 AI_Player.update()	Search took104ms
2017-01-04 14:14:07 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 14:14:07 AI_Player.update()		110,	1100,	11,	11,	101,	1100,	1100
2017-01-04 14:14:07 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-04 14:14:07 AI_Player.update()		1011,	1110,	101,	1001,	11,	1010,	1101
2017-01-04 14:14:07 AI_Player.update()		1110,	110,	1101,	1100,	1011,	110,	1011
2017-01-04 14:14:07 AI_Player.update()		110,	1001,	1100,	1101,	101,	101,	1001
2017-01-04 14:14:07 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1011,	1001
2017-01-04 14:14:07 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:07 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()	update
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:07 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:07 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:07 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:07 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:07 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:07 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:07 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:07 AI_Player.update()	update
2017-01-04 14:14:07 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:08 AI_Player.update()	Search took202ms
2017-01-04 14:14:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()		110,	1100,	111,	1110,	111,	101,	11
2017-01-04 14:14:08 AI_Player.update()		110,	111,	11,	11,	101,	1100,	1100
2017-01-04 14:14:08 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 14:14:08 AI_Player.update()		1011,	110,	101,	1001,	11,	1010,	1101
2017-01-04 14:14:08 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 14:14:08 AI_Player.update()		110,	101,	1100,	1101,	101,	101,	1001
2017-01-04 14:14:08 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1011,	1001
2017-01-04 14:14:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()	update
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()	update
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:08 AI_Player.update()	Search took74ms
2017-01-04 14:14:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()		110,	1100,	111,	1110,	111,	101,	11
2017-01-04 14:14:08 AI_Player.update()		110,	111,	11,	11,	101,	1100,	1100
2017-01-04 14:14:08 AI_Player.update()		1110,	1110,	1110,	101,	111,	1001,	1011
2017-01-04 14:14:08 AI_Player.update()		110,	101,	1001,	11,	1010,	1101,	1011
2017-01-04 14:14:08 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 14:14:08 AI_Player.update()		110,	101,	1100,	1101,	101,	101,	1001
2017-01-04 14:14:08 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1011,	1001
2017-01-04 14:14:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()	update
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:14:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()	update
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:08 AI_Player.update()	Search took56ms
2017-01-04 14:14:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 14:14:08 AI_Player.update()		110,	1100,	11,	11,	101,	1100,	1100
2017-01-04 14:14:08 AI_Player.update()		1110,	111,	1110,	101,	111,	1001,	1011
2017-01-04 14:14:08 AI_Player.update()		110,	1110,	1001,	11,	1010,	1101,	1011
2017-01-04 14:14:08 AI_Player.update()		1110,	101,	1101,	1100,	1011,	110,	1011
2017-01-04 14:14:08 AI_Player.update()		110,	1001,	1100,	1101,	101,	101,	1001
2017-01-04 14:14:08 AI_Player.update()		1100,	101,	1101,	1011,	1101,	1011,	1001
2017-01-04 14:14:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:14:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()	update
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:08 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:08 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()	update
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:08 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:08 AI_Player.update()	Search took309ms
2017-01-04 14:14:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()		110,	1010,	111,	1110,	111,	1100,	11
2017-01-04 14:14:08 AI_Player.update()		110,	1100,	11,	11,	101,	1001,	1100
2017-01-04 14:14:08 AI_Player.update()		1110,	111,	1110,	101,	111,	1101,	1011
2017-01-04 14:14:08 AI_Player.update()		110,	1110,	1001,	11,	1010,	110,	1011
2017-01-04 14:14:08 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:08 AI_Player.update()		110,	1001,	1100,	1101,	101,	1011,	1001
2017-01-04 14:14:08 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-04 14:14:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()	update
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:08 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:08 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:08 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()	update
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:08 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:08 AI_Player.update()	Search took320ms
2017-01-04 14:14:08 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()		110,	1010,	111,	1110,	111,	1100,	11
2017-01-04 14:14:08 AI_Player.update()		110,	1100,	11,	11,	101,	1001,	1100
2017-01-04 14:14:08 AI_Player.update()		1110,	111,	1110,	101,	111,	1101,	1011
2017-01-04 14:14:08 AI_Player.update()		1110,	1001,	11,	1010,	110,	1011,	110
2017-01-04 14:14:08 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:08 AI_Player.update()		110,	1001,	1100,	1101,	101,	1011,	1001
2017-01-04 14:14:08 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-04 14:14:08 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:08 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()	update
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:08 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:08 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:08 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:08 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:08 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:08 AI_Player.update()	update
2017-01-04 14:14:08 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:09 AI_Player.update()	Search took222ms
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()		110,	1010,	111,	1110,	111,	1100,	11
2017-01-04 14:14:09 AI_Player.update()		1100,	11,	11,	101,	1001,	1100,	110
2017-01-04 14:14:09 AI_Player.update()		1110,	111,	1110,	101,	111,	1101,	1011
2017-01-04 14:14:09 AI_Player.update()		1110,	1001,	11,	1010,	110,	1011,	110
2017-01-04 14:14:09 AI_Player.update()		1110,	101,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:09 AI_Player.update()		110,	1001,	1100,	1101,	101,	1011,	1001
2017-01-04 14:14:09 AI_Player.update()		1100,	101,	1101,	1011,	1101,	101,	1001
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:14:09 AI_Player.update()	Player a has won!
2017-01-04 14:14:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:14:09 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:09 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:09 AI_Player.update()	Search took28ms
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-04 14:14:09 AI_Player.update()		1100,	1100,	1100,	1010,	1001,	1010,	101
2017-01-04 14:14:09 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:09 AI_Player.update()		1101,	110,	101,	1100,	1001,	1001,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 14:14:09 AI_Player.update()		101,	11,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:09 AI_Player.update()	Search took80ms
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-04 14:14:09 AI_Player.update()		101,	1100,	1100,	1100,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:09 AI_Player.update()		1101,	110,	101,	1100,	1001,	1001,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 14:14:09 AI_Player.update()		101,	11,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:09 AI_Player.update()	Search took27ms
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-04 14:14:09 AI_Player.update()		1100,	1100,	1100,	1010,	1001,	1010,	101
2017-01-04 14:14:09 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:09 AI_Player.update()		1101,	110,	101,	1100,	1001,	1001,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 14:14:09 AI_Player.update()		101,	11,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:09 AI_Player.update()	Search took61ms
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-04 14:14:09 AI_Player.update()		101,	1100,	1100,	1100,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:09 AI_Player.update()		1101,	110,	101,	1100,	1001,	1001,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 14:14:09 AI_Player.update()		101,	11,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:09 AI_Player.update()	Search took34ms
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()		110,	1100,	111,	11,	111,	101,	11
2017-01-04 14:14:09 AI_Player.update()		101,	1100,	1100,	1100,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1100,	1011
2017-01-04 14:14:09 AI_Player.update()		1101,	110,	101,	101,	1001,	1001,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:09 AI_Player.update()		101,	11,	1101,	101,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:09 AI_Player.update()	Search took108ms
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-04 14:14:09 AI_Player.update()		101,	1100,	1100,	1100,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:09 AI_Player.update()		1101,	110,	101,	1100,	1001,	1001,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 14:14:09 AI_Player.update()		101,	11,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:09 AI_Player.update()	Search took32ms
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()		110,	1100,	111,	1100,	111,	101,	11
2017-01-04 14:14:09 AI_Player.update()		1100,	1100,	1100,	1010,	1001,	1010,	101
2017-01-04 14:14:09 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:09 AI_Player.update()		1101,	110,	101,	1100,	1001,	1001,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	1010,	1101,	101,	1011,	101,	1011
2017-01-04 14:14:09 AI_Player.update()		101,	11,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1100,	110,	1101,	11,	1101,	101,	1001
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:09 AI_Player.update()	Search took89ms
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 14:14:09 AI_Player.update()		1100,	1100,	1100,	101,	1001,	1010,	101
2017-01-04 14:14:09 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1100,	1011
2017-01-04 14:14:09 AI_Player.update()		1101,	110,	101,	101,	1001,	1001,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:09 AI_Player.update()		101,	11,	1101,	11,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 3
2017-01-04 14:14:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:09 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:09 AI_Player.update()	Search took54ms
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 14:14:09 AI_Player.update()		1100,	1100,	101,	1001,	1010,	101,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	1101,	1110,	1100,	111,	1100,	1011
2017-01-04 14:14:09 AI_Player.update()		1101,	110,	101,	101,	1001,	1001,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	1010,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:09 AI_Player.update()		101,	11,	1101,	11,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1100,	110,	1101,	1100,	1101,	101,	1001
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 3
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:09 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 3
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:09 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:09 AI_Player.update()	Search took270ms
2017-01-04 14:14:09 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 14:14:09 AI_Player.update()		1100,	1101,	101,	1001,	1010,	101,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	110,	1110,	1100,	111,	1100,	1011
2017-01-04 14:14:09 AI_Player.update()		1101,	1010,	101,	101,	1001,	1001,	1100
2017-01-04 14:14:09 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:09 AI_Player.update()		101,	110,	1101,	11,	1010,	1001,	1010
2017-01-04 14:14:09 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 14:14:09 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:09 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 3
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:09 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:09 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:09 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	1 4
2017-01-04 14:14:09 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:09 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:09 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:09 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:09 AI_Player.update()	update
2017-01-04 14:14:09 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:10 AI_Player.update()	Search took93ms
2017-01-04 14:14:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()		110,	1100,	111,	1010,	111,	101,	11
2017-01-04 14:14:10 AI_Player.update()		1101,	101,	1001,	1010,	101,	1100,	1100
2017-01-04 14:14:10 AI_Player.update()		1110,	110,	1110,	1100,	111,	1100,	1011
2017-01-04 14:14:10 AI_Player.update()		1101,	1010,	101,	101,	1001,	1001,	1100
2017-01-04 14:14:10 AI_Player.update()		1110,	11,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:10 AI_Player.update()		101,	110,	1101,	11,	1010,	1001,	1010
2017-01-04 14:14:10 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 14:14:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	1 4
2017-01-04 14:14:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()	update
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	2 4
2017-01-04 14:14:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()	update
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:10 AI_Player.update()	Search took328ms
2017-01-04 14:14:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 14:14:10 AI_Player.update()		1101,	110,	1001,	1010,	101,	1100,	1100
2017-01-04 14:14:10 AI_Player.update()		1110,	1010,	1110,	1100,	111,	1100,	1011
2017-01-04 14:14:10 AI_Player.update()		1101,	11,	101,	101,	1001,	1001,	1100
2017-01-04 14:14:10 AI_Player.update()		1110,	110,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:10 AI_Player.update()		101,	1100,	1101,	11,	1010,	1001,	1010
2017-01-04 14:14:10 AI_Player.update()		1100,	1100,	1101,	1100,	1101,	101,	1001
2017-01-04 14:14:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	2 4
2017-01-04 14:14:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()	update
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	2 4
2017-01-04 14:14:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()	update
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:10 AI_Player.update()	Search took123ms
2017-01-04 14:14:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 14:14:10 AI_Player.update()		1101,	1010,	1001,	1010,	101,	1100,	1100
2017-01-04 14:14:10 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-04 14:14:10 AI_Player.update()		1101,	110,	101,	101,	1001,	1001,	1100
2017-01-04 14:14:10 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:10 AI_Player.update()		101,	1100,	1101,	11,	1010,	1001,	1010
2017-01-04 14:14:10 AI_Player.update()		1100,	101,	1101,	1100,	1101,	101,	1001
2017-01-04 14:14:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	2 4
2017-01-04 14:14:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()	update
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	2 4
2017-01-04 14:14:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()	update
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:10 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:10 AI_Player.update()	Search took267ms
2017-01-04 14:14:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 14:14:10 AI_Player.update()		1101,	1010,	1001,	1100,	101,	1100,	1100
2017-01-04 14:14:10 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:10 AI_Player.update()		1101,	110,	101,	1100,	1001,	1001,	1100
2017-01-04 14:14:10 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-04 14:14:10 AI_Player.update()		101,	1100,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:10 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	2 4
2017-01-04 14:14:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()	update
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:10 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	2 5
2017-01-04 14:14:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()	update
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:10 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:10 AI_Player.update()	Search took140ms
2017-01-04 14:14:10 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 14:14:10 AI_Player.update()		1101,	1010,	1001,	1100,	101,	1100,	1100
2017-01-04 14:14:10 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:10 AI_Player.update()		110,	101,	1100,	1001,	1001,	1100,	1101
2017-01-04 14:14:10 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-04 14:14:10 AI_Player.update()		101,	1100,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:10 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:10 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:10 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	2 5
2017-01-04 14:14:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()	update
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:10 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:10 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:10 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:10 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:10 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:14:10 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:10 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:10 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:10 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:10 AI_Player.update()	update
2017-01-04 14:14:10 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:11 AI_Player.update()	Search took141ms
2017-01-04 14:14:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 14:14:11 AI_Player.update()		1100,	1101,	1010,	1001,	1100,	101,	1100
2017-01-04 14:14:11 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:11 AI_Player.update()		110,	101,	1100,	1001,	1001,	1100,	1101
2017-01-04 14:14:11 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-04 14:14:11 AI_Player.update()		101,	1100,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:11 AI_Player.update()	Search took64ms
2017-01-04 14:14:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 14:14:11 AI_Player.update()		1100,	110,	1010,	1001,	1100,	101,	1100
2017-01-04 14:14:11 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:11 AI_Player.update()		110,	11,	1100,	1001,	1001,	1100,	1101
2017-01-04 14:14:11 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-04 14:14:11 AI_Player.update()		101,	1100,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:11 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	3 5
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:14:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:11 AI_Player.update()	Search took63ms
2017-01-04 14:14:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 14:14:11 AI_Player.update()		1100,	1101,	1010,	1001,	1100,	101,	1100
2017-01-04 14:14:11 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:11 AI_Player.update()		110,	101,	1100,	1001,	1001,	1100,	1101
2017-01-04 14:14:11 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-04 14:14:11 AI_Player.update()		101,	1100,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:11 AI_Player.update()	Search took88ms
2017-01-04 14:14:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()		110,	101,	111,	1010,	111,	101,	11
2017-01-04 14:14:11 AI_Player.update()		1100,	110,	1010,	1001,	1100,	101,	1100
2017-01-04 14:14:11 AI_Player.update()		1110,	1101,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:11 AI_Player.update()		110,	11,	1100,	1001,	1001,	1100,	1101
2017-01-04 14:14:11 AI_Player.update()		1110,	101,	1101,	11,	1011,	101,	1011
2017-01-04 14:14:11 AI_Player.update()		101,	1100,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:11 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:11 AI_Player.update()	Search took72ms
2017-01-04 14:14:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()		110,	110,	111,	1010,	111,	101,	11
2017-01-04 14:14:11 AI_Player.update()		1100,	1101,	1010,	1001,	1100,	101,	1100
2017-01-04 14:14:11 AI_Player.update()		1110,	11,	1110,	101,	111,	1100,	1011
2017-01-04 14:14:11 AI_Player.update()		110,	101,	1100,	1001,	1001,	1100,	1101
2017-01-04 14:14:11 AI_Player.update()		1110,	1100,	1101,	11,	1011,	101,	1011
2017-01-04 14:14:11 AI_Player.update()		101,	1100,	1101,	1100,	1010,	1001,	1010
2017-01-04 14:14:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:11 AI_Player.update()	Search took110ms
2017-01-04 14:14:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 14:14:11 AI_Player.update()		1100,	1101,	1010,	101,	1100,	101,	1100
2017-01-04 14:14:11 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-04 14:14:11 AI_Player.update()		110,	101,	1100,	11,	1001,	1100,	1101
2017-01-04 14:14:11 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:11 AI_Player.update()		101,	1100,	1101,	1010,	1010,	1001,	1010
2017-01-04 14:14:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	4 5
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:11 AI_Player.update()	Search took362ms
2017-01-04 14:14:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()		110,	1101,	111,	1001,	111,	101,	11
2017-01-04 14:14:11 AI_Player.update()		1100,	11,	1010,	101,	1100,	101,	1100
2017-01-04 14:14:11 AI_Player.update()		1110,	101,	1110,	1001,	111,	1100,	1011
2017-01-04 14:14:11 AI_Player.update()		110,	1100,	1100,	11,	1001,	1100,	1101
2017-01-04 14:14:11 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:11 AI_Player.update()		101,	101,	1101,	1010,	1010,	1001,	1010
2017-01-04 14:14:11 AI_Player.update()		1100,	110,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:11 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:11 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:11 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:11 AI_Player.update()	Search took44ms
2017-01-04 14:14:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 14:14:11 AI_Player.update()		1100,	1101,	1010,	101,	1100,	101,	1100
2017-01-04 14:14:11 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-04 14:14:11 AI_Player.update()		110,	101,	1100,	11,	1001,	1100,	1101
2017-01-04 14:14:11 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:11 AI_Player.update()		101,	1100,	1101,	1010,	1010,	1001,	1010
2017-01-04 14:14:11 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:11 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:11 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:11 AI_Player.update()	Search took54ms
2017-01-04 14:14:11 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:11 AI_Player.update()		1100,	1101,	1010,	1001,	1100,	101,	1100
2017-01-04 14:14:11 AI_Player.update()		1110,	11,	1110,	11,	111,	1100,	1011
2017-01-04 14:14:11 AI_Player.update()		110,	101,	1100,	1100,	1001,	1100,	1101
2017-01-04 14:14:11 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-04 14:14:11 AI_Player.update()		101,	1100,	1101,	1010,	1010,	1001,	1010
2017-01-04 14:14:11 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 14:14:11 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:11 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:11 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:11 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:11 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:11 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:11 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:11 AI_Player.update()	update
2017-01-04 14:14:11 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:12 AI_Player.update()	Search took146ms
2017-01-04 14:14:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 14:14:12 AI_Player.update()		1100,	1101,	1010,	101,	1100,	101,	1100
2017-01-04 14:14:12 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-04 14:14:12 AI_Player.update()		110,	101,	1100,	11,	1001,	1100,	1101
2017-01-04 14:14:12 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:12 AI_Player.update()		101,	1100,	1101,	1010,	1010,	1001,	1010
2017-01-04 14:14:12 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()	update
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()	update
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:12 AI_Player.update()	Search took99ms
2017-01-04 14:14:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:12 AI_Player.update()		1100,	1101,	1010,	1001,	1100,	101,	1100
2017-01-04 14:14:12 AI_Player.update()		1110,	11,	1110,	11,	111,	1100,	1011
2017-01-04 14:14:12 AI_Player.update()		110,	101,	1100,	1100,	1001,	1100,	1101
2017-01-04 14:14:12 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-04 14:14:12 AI_Player.update()		101,	1100,	1101,	1010,	1010,	1001,	1010
2017-01-04 14:14:12 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 14:14:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()	update
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()	update
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:12 AI_Player.update()	Search took86ms
2017-01-04 14:14:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()		110,	1101,	111,	101,	111,	101,	11
2017-01-04 14:14:12 AI_Player.update()		1100,	11,	1010,	1001,	1100,	101,	1100
2017-01-04 14:14:12 AI_Player.update()		1110,	101,	1110,	11,	111,	1100,	1011
2017-01-04 14:14:12 AI_Player.update()		110,	1100,	1100,	1100,	1001,	1100,	1101
2017-01-04 14:14:12 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-04 14:14:12 AI_Player.update()		101,	101,	1101,	1010,	1010,	1001,	1010
2017-01-04 14:14:12 AI_Player.update()		1100,	110,	1101,	1001,	1101,	101,	1001
2017-01-04 14:14:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()	update
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()	update
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:12 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:12 AI_Player.update()	Search took51ms
2017-01-04 14:14:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:12 AI_Player.update()		1100,	1101,	1010,	1001,	1100,	101,	1100
2017-01-04 14:14:12 AI_Player.update()		1110,	11,	1110,	11,	111,	1100,	1011
2017-01-04 14:14:12 AI_Player.update()		110,	101,	1100,	1100,	1001,	1100,	1101
2017-01-04 14:14:12 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-04 14:14:12 AI_Player.update()		101,	1100,	1101,	1010,	1010,	1001,	1010
2017-01-04 14:14:12 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 14:14:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()	update
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:12 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()	update
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:12 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:12 AI_Player.update()	Search took440ms
2017-01-04 14:14:12 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 14:14:12 AI_Player.update()		1100,	1101,	1010,	11,	1100,	101,	1100
2017-01-04 14:14:12 AI_Player.update()		1110,	11,	1110,	1100,	111,	1100,	1011
2017-01-04 14:14:12 AI_Player.update()		110,	101,	1100,	1010,	1001,	1100,	1101
2017-01-04 14:14:12 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-04 14:14:12 AI_Player.update()		101,	1100,	1101,	1001,	1010,	1001,	1010
2017-01-04 14:14:12 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 14:14:12 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:12 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	5 6
2017-01-04 14:14:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()	update
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:12 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:12 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:12 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:12 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:12 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:12 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:12 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:12 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:12 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:12 AI_Player.update()	update
2017-01-04 14:14:12 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:13 AI_Player.update()	Search took233ms
2017-01-04 14:14:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:13 AI_Player.update()		1100,	1101,	1010,	1001,	1100,	101,	1100
2017-01-04 14:14:13 AI_Player.update()		1110,	11,	1110,	11,	111,	1100,	1011
2017-01-04 14:14:13 AI_Player.update()		110,	101,	1100,	1100,	1001,	1100,	1101
2017-01-04 14:14:13 AI_Player.update()		1110,	1100,	1101,	1010,	1011,	101,	1011
2017-01-04 14:14:13 AI_Player.update()		101,	1100,	1101,	1010,	1010,	1001,	1010
2017-01-04 14:14:13 AI_Player.update()		1100,	101,	1101,	1001,	1101,	101,	1001
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:13 AI_Player.update()	Search took248ms
2017-01-04 14:14:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()		110,	110,	111,	1001,	111,	101,	11
2017-01-04 14:14:13 AI_Player.update()		1100,	1101,	1010,	101,	1100,	101,	1100
2017-01-04 14:14:13 AI_Player.update()		1110,	11,	1110,	1001,	111,	1100,	1011
2017-01-04 14:14:13 AI_Player.update()		110,	101,	1100,	11,	1001,	1100,	1101
2017-01-04 14:14:13 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	101,	1011
2017-01-04 14:14:13 AI_Player.update()		101,	1100,	1101,	1010,	1010,	1001,	1010
2017-01-04 14:14:13 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:14:13 AI_Player.update()	Player a has won!
2017-01-04 14:14:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:13 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:14:13 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:13 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:14:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:13 AI_Player.update()	Search took72ms
2017-01-04 14:14:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()		110,	11,	111,	11,	111,	1110,	11
2017-01-04 14:14:13 AI_Player.update()		1010,	1110,	1110,	110,	1110,	101,	110
2017-01-04 14:14:13 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-04 14:14:13 AI_Player.update()		1100,	11,	1010,	101,	1001,	1010,	1010
2017-01-04 14:14:13 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 14:14:13 AI_Player.update()		111,	110,	1010,	1011,	1001,	1100,	11
2017-01-04 14:14:13 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:13 AI_Player.update()	Search took39ms
2017-01-04 14:14:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()		110,	11,	111,	11,	111,	1110,	11
2017-01-04 14:14:13 AI_Player.update()		1110,	1110,	110,	1110,	101,	110,	1010
2017-01-04 14:14:13 AI_Player.update()		1110,	110,	1110,	1100,	111,	110,	1011
2017-01-04 14:14:13 AI_Player.update()		1100,	11,	1010,	101,	1001,	1010,	1010
2017-01-04 14:14:13 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 14:14:13 AI_Player.update()		111,	110,	1010,	1011,	1001,	1100,	11
2017-01-04 14:14:13 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:13 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:13 AI_Player.update()	Search took133ms
2017-01-04 14:14:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()		110,	11,	111,	1110,	111,	1110,	11
2017-01-04 14:14:13 AI_Player.update()		1110,	1110,	110,	1100,	101,	110,	1010
2017-01-04 14:14:13 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-04 14:14:13 AI_Player.update()		1100,	11,	1010,	110,	1001,	1010,	1010
2017-01-04 14:14:13 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-04 14:14:13 AI_Player.update()		111,	110,	1010,	101,	1001,	1100,	11
2017-01-04 14:14:13 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:13 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:13 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:13 AI_Player.update()	Search took207ms
2017-01-04 14:14:13 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()		110,	11,	111,	1110,	111,	1110,	11
2017-01-04 14:14:13 AI_Player.update()		1010,	1110,	1110,	110,	1100,	101,	110
2017-01-04 14:14:13 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-04 14:14:13 AI_Player.update()		1100,	11,	1010,	110,	1001,	1010,	1010
2017-01-04 14:14:13 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-04 14:14:13 AI_Player.update()		111,	110,	1010,	101,	1001,	1100,	11
2017-01-04 14:14:13 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-04 14:14:13 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:13 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:13 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:13 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:13 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:13 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:13 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:13 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:13 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:13 AI_Player.update()	update
2017-01-04 14:14:13 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:14 AI_Player.update()	Search took267ms
2017-01-04 14:14:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()		110,	11,	111,	11,	111,	1110,	11
2017-01-04 14:14:14 AI_Player.update()		1010,	1110,	1110,	1110,	1100,	101,	110
2017-01-04 14:14:14 AI_Player.update()		1110,	110,	1110,	110,	111,	110,	1011
2017-01-04 14:14:14 AI_Player.update()		1100,	11,	1010,	101,	1001,	1010,	1010
2017-01-04 14:14:14 AI_Player.update()		1110,	101,	1101,	110,	1011,	101,	1011
2017-01-04 14:14:14 AI_Player.update()		111,	110,	1010,	1011,	1001,	1100,	11
2017-01-04 14:14:14 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	1 2
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:14 AI_Player.update()	Search took101ms
2017-01-04 14:14:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()		110,	11,	111,	1110,	111,	1110,	11
2017-01-04 14:14:14 AI_Player.update()		1010,	1110,	1110,	110,	1100,	101,	110
2017-01-04 14:14:14 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-04 14:14:14 AI_Player.update()		1100,	11,	1010,	110,	1001,	1010,	1010
2017-01-04 14:14:14 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-04 14:14:14 AI_Player.update()		111,	110,	1010,	101,	1001,	1100,	11
2017-01-04 14:14:14 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:14 AI_Player.update()	Search took279ms
2017-01-04 14:14:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()		110,	110,	111,	1110,	111,	1110,	11
2017-01-04 14:14:14 AI_Player.update()		1010,	11,	1110,	110,	1100,	101,	110
2017-01-04 14:14:14 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-04 14:14:14 AI_Player.update()		1100,	110,	1010,	110,	1001,	1010,	1010
2017-01-04 14:14:14 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-04 14:14:14 AI_Player.update()		111,	101,	1010,	101,	1001,	1100,	11
2017-01-04 14:14:14 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:14 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:14 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:14 AI_Player.update()	Search took37ms
2017-01-04 14:14:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()		110,	11,	111,	1110,	111,	1110,	11
2017-01-04 14:14:14 AI_Player.update()		1010,	1110,	1110,	110,	1100,	101,	110
2017-01-04 14:14:14 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-04 14:14:14 AI_Player.update()		1100,	11,	1010,	110,	1001,	1010,	1010
2017-01-04 14:14:14 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-04 14:14:14 AI_Player.update()		111,	110,	1010,	101,	1001,	1100,	11
2017-01-04 14:14:14 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:14 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:14 AI_Player.update()	Search took324ms
2017-01-04 14:14:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()		110,	110,	111,	1110,	111,	1110,	11
2017-01-04 14:14:14 AI_Player.update()		1010,	11,	1110,	110,	1100,	101,	110
2017-01-04 14:14:14 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-04 14:14:14 AI_Player.update()		1100,	110,	1010,	110,	1001,	1010,	1010
2017-01-04 14:14:14 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-04 14:14:14 AI_Player.update()		111,	101,	1010,	101,	1001,	1100,	11
2017-01-04 14:14:14 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:14 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:14 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:14 AI_Player.update()	Search took37ms
2017-01-04 14:14:14 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()		110,	11,	111,	1110,	111,	1110,	11
2017-01-04 14:14:14 AI_Player.update()		1010,	1110,	1110,	110,	1100,	101,	110
2017-01-04 14:14:14 AI_Player.update()		1110,	110,	1110,	101,	111,	110,	1011
2017-01-04 14:14:14 AI_Player.update()		1100,	11,	1010,	110,	1001,	1010,	1010
2017-01-04 14:14:14 AI_Player.update()		1110,	101,	1101,	1011,	1011,	101,	1011
2017-01-04 14:14:14 AI_Player.update()		111,	110,	1010,	101,	1001,	1100,	11
2017-01-04 14:14:14 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-04 14:14:14 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:14 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:14 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:14 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:14 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:14 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:14 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:14 AI_Player.update()	update
2017-01-04 14:14:14 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:15 AI_Player.update()	Search took257ms
2017-01-04 14:14:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()		110,	110,	111,	1110,	111,	1110,	11
2017-01-04 14:14:15 AI_Player.update()		1010,	11,	1110,	110,	1100,	101,	110
2017-01-04 14:14:15 AI_Player.update()		1110,	1110,	1110,	101,	111,	110,	1011
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1010,	110,	1001,	1010,	1010
2017-01-04 14:14:15 AI_Player.update()		1110,	11,	1101,	1011,	1011,	101,	1011
2017-01-04 14:14:15 AI_Player.update()		111,	101,	1010,	101,	1001,	1100,	11
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1101,	11,	1101,	1010,	1001
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:15 AI_Player.update()	Search took30ms
2017-01-04 14:14:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-04 14:14:15 AI_Player.update()		1010,	11,	1110,	110,	1100,	110,	110
2017-01-04 14:14:15 AI_Player.update()		1110,	1110,	1110,	101,	111,	1010,	1011
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1010,	110,	1001,	101,	1010
2017-01-04 14:14:15 AI_Player.update()		1110,	11,	1101,	1011,	1011,	1100,	1011
2017-01-04 14:14:15 AI_Player.update()		111,	101,	1010,	101,	1001,	1010,	11
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1101,	11,	1101,	1110,	1001
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:15 AI_Player.update()	Search took224ms
2017-01-04 14:14:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 14:14:15 AI_Player.update()		1010,	11,	1110,	101,	1100,	110,	110
2017-01-04 14:14:15 AI_Player.update()		1110,	1110,	1110,	110,	111,	1010,	1011
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1010,	1011,	1001,	101,	1010
2017-01-04 14:14:15 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-04 14:14:15 AI_Player.update()		111,	101,	1010,	11,	1001,	1010,	11
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1110,	1001
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:15 AI_Player.update()	Search took42ms
2017-01-04 14:14:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()		110,	110,	111,	110,	111,	101,	11
2017-01-04 14:14:15 AI_Player.update()		110,	1010,	11,	1110,	101,	1100,	110
2017-01-04 14:14:15 AI_Player.update()		1110,	1110,	1110,	110,	111,	1010,	1011
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1010,	1011,	1001,	101,	1010
2017-01-04 14:14:15 AI_Player.update()		1110,	11,	1101,	101,	1011,	1100,	1011
2017-01-04 14:14:15 AI_Player.update()		111,	101,	1010,	11,	1001,	1010,	11
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1110,	1001
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:15 AI_Player.update()	Search took174ms
2017-01-04 14:14:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-04 14:14:15 AI_Player.update()		110,	1010,	11,	110,	101,	1100,	110
2017-01-04 14:14:15 AI_Player.update()		1110,	1110,	1110,	1011,	111,	1010,	1011
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1010,	101,	1001,	101,	1010
2017-01-04 14:14:15 AI_Player.update()		1110,	11,	1101,	11,	1011,	1100,	1011
2017-01-04 14:14:15 AI_Player.update()		111,	101,	1010,	1110,	1001,	1010,	11
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1101,	110,	1101,	1110,	1001
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:15 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:15 AI_Player.update()	Search took71ms
2017-01-04 14:14:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()		110,	1010,	111,	1110,	111,	101,	11
2017-01-04 14:14:15 AI_Player.update()		110,	1110,	11,	110,	101,	1100,	110
2017-01-04 14:14:15 AI_Player.update()		1110,	110,	1110,	1011,	111,	1010,	1011
2017-01-04 14:14:15 AI_Player.update()		1100,	11,	1010,	101,	1001,	101,	1010
2017-01-04 14:14:15 AI_Player.update()		1110,	101,	1101,	11,	1011,	1100,	1011
2017-01-04 14:14:15 AI_Player.update()		111,	110,	1010,	1110,	1001,	1010,	11
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1101,	110,	1101,	1110,	1001
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:15 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:14:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:15 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:15 AI_Player.update()	Search took250ms
2017-01-04 14:14:15 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()		110,	1010,	111,	110,	111,	101,	11
2017-01-04 14:14:15 AI_Player.update()		110,	1110,	11,	1011,	101,	1100,	110
2017-01-04 14:14:15 AI_Player.update()		1110,	110,	1110,	101,	111,	1010,	1011
2017-01-04 14:14:15 AI_Player.update()		1100,	11,	1010,	11,	1001,	101,	1010
2017-01-04 14:14:15 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:15 AI_Player.update()		111,	110,	1010,	110,	1001,	1010,	11
2017-01-04 14:14:15 AI_Player.update()		1100,	110,	1101,	1110,	1101,	1110,	1001
2017-01-04 14:14:15 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:15 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	3 3
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:15 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:15 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:15 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:15 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:15 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:15 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:15 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:15 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:15 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:15 AI_Player.update()	update
2017-01-04 14:14:15 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:16 AI_Player.update()	Search took212ms
2017-01-04 14:14:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()		110,	1010,	111,	1011,	111,	101,	11
2017-01-04 14:14:16 AI_Player.update()		110,	1110,	11,	101,	101,	1100,	110
2017-01-04 14:14:16 AI_Player.update()		1110,	110,	1110,	11,	111,	1010,	1011
2017-01-04 14:14:16 AI_Player.update()		1100,	11,	1010,	1110,	1001,	101,	1010
2017-01-04 14:14:16 AI_Player.update()		1110,	101,	1101,	110,	1011,	1100,	1011
2017-01-04 14:14:16 AI_Player.update()		111,	110,	1010,	1110,	1001,	1010,	11
2017-01-04 14:14:16 AI_Player.update()		1100,	110,	1101,	110,	1101,	1110,	1001
2017-01-04 14:14:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()	update
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:14:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()	update
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:16 AI_Player.update()	Search took63ms
2017-01-04 14:14:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:14:16 AI_Player.update()		110,	1110,	11,	11,	101,	1100,	110
2017-01-04 14:14:16 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-04 14:14:16 AI_Player.update()		1100,	11,	1010,	110,	1001,	101,	1010
2017-01-04 14:14:16 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:16 AI_Player.update()		111,	110,	1010,	110,	1001,	1010,	11
2017-01-04 14:14:16 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:14:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()	update
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:14:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()	update
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:16 AI_Player.update()	Search took217ms
2017-01-04 14:14:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:14:16 AI_Player.update()		110,	1110,	11,	11,	101,	1100,	110
2017-01-04 14:14:16 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-04 14:14:16 AI_Player.update()		11,	1010,	110,	1001,	101,	1010,	1100
2017-01-04 14:14:16 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:16 AI_Player.update()		111,	110,	1010,	110,	1001,	1010,	11
2017-01-04 14:14:16 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:14:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()	update
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:14:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()	update
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:16 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:16 AI_Player.update()	Search took106ms
2017-01-04 14:14:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:14:16 AI_Player.update()		110,	110,	1110,	11,	11,	101,	1100
2017-01-04 14:14:16 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-04 14:14:16 AI_Player.update()		11,	1010,	110,	1001,	101,	1010,	1100
2017-01-04 14:14:16 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:16 AI_Player.update()		111,	110,	1010,	110,	1001,	1010,	11
2017-01-04 14:14:16 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	4 4
2017-01-04 14:14:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()	update
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:16 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:16 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:16 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:14:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()	update
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:16 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:16 AI_Player.update()	Search took261ms
2017-01-04 14:14:16 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:14:16 AI_Player.update()		110,	110,	1110,	11,	11,	101,	1100
2017-01-04 14:14:16 AI_Player.update()		1110,	110,	1110,	1110,	111,	1010,	1011
2017-01-04 14:14:16 AI_Player.update()		1010,	110,	1001,	101,	1010,	1100,	11
2017-01-04 14:14:16 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:16 AI_Player.update()		111,	110,	1010,	110,	1001,	1010,	11
2017-01-04 14:14:16 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:16 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:16 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:14:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()	update
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:16 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:16 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:16 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:16 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:16 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:16 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:16 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:16 AI_Player.update()	update
2017-01-04 14:14:16 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:17 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:17 AI_Player.update()	Search took671ms
2017-01-04 14:14:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:17 AI_Player.update()		110,	1010,	111,	101,	111,	101,	11
2017-01-04 14:14:17 AI_Player.update()		110,	110,	1110,	11,	11,	1010,	1100
2017-01-04 14:14:17 AI_Player.update()		1110,	110,	1110,	1110,	111,	1100,	1011
2017-01-04 14:14:17 AI_Player.update()		1010,	110,	1001,	101,	1010,	1100,	11
2017-01-04 14:14:17 AI_Player.update()		1110,	101,	1101,	1110,	1011,	1010,	1011
2017-01-04 14:14:17 AI_Player.update()		111,	110,	1010,	110,	1001,	1110,	11
2017-01-04 14:14:17 AI_Player.update()		1100,	110,	1101,	1011,	1101,	101,	1001
2017-01-04 14:14:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:17 AI_Player.update()	update
2017-01-04 14:14:17 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:17 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:17 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:17 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:17 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:17 AI_Player.update()	update
2017-01-04 14:14:17 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:17 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:17 AI_Player.update()	Search took82ms
2017-01-04 14:14:17 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:17 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:17 AI_Player.update()		110,	110,	1110,	11,	11,	1010,	1100
2017-01-04 14:14:17 AI_Player.update()		1110,	110,	1110,	1110,	111,	1100,	1011
2017-01-04 14:14:17 AI_Player.update()		1010,	101,	1001,	101,	1010,	1100,	11
2017-01-04 14:14:17 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1010,	1011
2017-01-04 14:14:17 AI_Player.update()		111,	110,	1010,	110,	1001,	1110,	11
2017-01-04 14:14:17 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-04 14:14:17 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:17 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:17 AI_Player.update()	update
2017-01-04 14:14:17 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:17 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:17 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:17 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:17 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:17 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:17 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:17 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:17 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:17 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:17 AI_Player.update()	update
2017-01-04 14:14:17 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:18 AI_Player.update()	Search took616ms
2017-01-04 14:14:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:18 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:18 AI_Player.update()		110,	110,	1110,	11,	11,	1010,	1100
2017-01-04 14:14:18 AI_Player.update()		1110,	110,	1110,	1110,	111,	1100,	1011
2017-01-04 14:14:18 AI_Player.update()		11,	1010,	101,	1001,	101,	1010,	1100
2017-01-04 14:14:18 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1010,	1011
2017-01-04 14:14:18 AI_Player.update()		111,	110,	1010,	110,	1001,	1110,	11
2017-01-04 14:14:18 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-04 14:14:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:18 AI_Player.update()	update
2017-01-04 14:14:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:18 AI_Player.update()	update
2017-01-04 14:14:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:18 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:18 AI_Player.update()	Search took62ms
2017-01-04 14:14:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:18 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:18 AI_Player.update()		110,	110,	1110,	11,	11,	1010,	1100
2017-01-04 14:14:18 AI_Player.update()		1110,	110,	1110,	1110,	111,	1100,	1011
2017-01-04 14:14:18 AI_Player.update()		1010,	101,	1001,	101,	1010,	1100,	11
2017-01-04 14:14:18 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1010,	1011
2017-01-04 14:14:18 AI_Player.update()		111,	110,	1010,	110,	1001,	1110,	11
2017-01-04 14:14:18 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-04 14:14:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:18 AI_Player.update()	update
2017-01-04 14:14:18 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:18 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:18 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:18 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:18 AI_Player.update()	update
2017-01-04 14:14:18 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:18 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:18 AI_Player.update()	Search took624ms
2017-01-04 14:14:18 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:18 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:18 AI_Player.update()		1100,	110,	110,	1110,	11,	11,	1010
2017-01-04 14:14:18 AI_Player.update()		1110,	110,	1110,	1110,	111,	1100,	1011
2017-01-04 14:14:18 AI_Player.update()		1010,	101,	1001,	101,	1010,	1100,	11
2017-01-04 14:14:18 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1010,	1011
2017-01-04 14:14:18 AI_Player.update()		111,	110,	1010,	110,	1001,	1110,	11
2017-01-04 14:14:18 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	101,	1001
2017-01-04 14:14:18 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:18 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	5 5
2017-01-04 14:14:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:18 AI_Player.update()	update
2017-01-04 14:14:18 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:18 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:18 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:18 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:18 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:18 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:18 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:14:18 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:18 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:18 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:18 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:18 AI_Player.update()	update
2017-01-04 14:14:18 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:19 AI_Player.update()	Search took199ms
2017-01-04 14:14:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	110,	110,	1110,	11,	101,	1010
2017-01-04 14:14:19 AI_Player.update()		1110,	110,	1110,	1110,	111,	11,	1011
2017-01-04 14:14:19 AI_Player.update()		1010,	101,	1001,	101,	1010,	1100,	11
2017-01-04 14:14:19 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:19 AI_Player.update()		111,	110,	1010,	110,	1001,	1010,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 5
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:19 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	adding chest
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:19 AI_Player.update()	Search took321ms
2017-01-04 14:14:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	110,	110,	1110,	11,	101,	1010
2017-01-04 14:14:19 AI_Player.update()		1110,	110,	1110,	1110,	111,	11,	1011
2017-01-04 14:14:19 AI_Player.update()		11,	1010,	101,	1001,	101,	1010,	1100
2017-01-04 14:14:19 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:19 AI_Player.update()		111,	110,	1010,	110,	1001,	1010,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	1010,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:19 AI_Player.update()	Search took213ms
2017-01-04 14:14:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	110,	110,	1110,	11,	101,	1010
2017-01-04 14:14:19 AI_Player.update()		1110,	1010,	1110,	1110,	111,	11,	1011
2017-01-04 14:14:19 AI_Player.update()		11,	110,	101,	1001,	101,	1010,	1100
2017-01-04 14:14:19 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:19 AI_Player.update()		111,	1010,	1010,	110,	1001,	1010,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:19 AI_Player.update()	Search took196ms
2017-01-04 14:14:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	1010,	110,	1110,	11,	101,	1010
2017-01-04 14:14:19 AI_Player.update()		1110,	110,	1110,	1110,	111,	11,	1011
2017-01-04 14:14:19 AI_Player.update()		11,	110,	101,	1001,	101,	1010,	1100
2017-01-04 14:14:19 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:19 AI_Player.update()		111,	110,	1010,	110,	1001,	1010,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:19 AI_Player.update()	Search took36ms
2017-01-04 14:14:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	110,	110,	1110,	11,	101,	1010
2017-01-04 14:14:19 AI_Player.update()		1110,	1010,	1110,	1110,	111,	11,	1011
2017-01-04 14:14:19 AI_Player.update()		11,	110,	101,	1001,	101,	1010,	1100
2017-01-04 14:14:19 AI_Player.update()		1110,	110,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:19 AI_Player.update()		111,	1010,	1010,	110,	1001,	1010,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:19 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:19 AI_Player.update()	Search took55ms
2017-01-04 14:14:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	1010,	110,	1110,	11,	101,	1010
2017-01-04 14:14:19 AI_Player.update()		1110,	110,	1110,	1110,	111,	11,	1011
2017-01-04 14:14:19 AI_Player.update()		11,	110,	101,	1001,	101,	1010,	1100
2017-01-04 14:14:19 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:19 AI_Player.update()		111,	110,	1010,	110,	1001,	1010,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:19 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:19 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:19 AI_Player.update()	Search took25ms
2017-01-04 14:14:19 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:19 AI_Player.update()		1100,	1010,	110,	1110,	11,	101,	1010
2017-01-04 14:14:19 AI_Player.update()		1110,	110,	1110,	1110,	111,	11,	1011
2017-01-04 14:14:19 AI_Player.update()		11,	110,	101,	1001,	101,	1010,	1100
2017-01-04 14:14:19 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:19 AI_Player.update()		11,	111,	110,	1010,	110,	1001,	1010
2017-01-04 14:14:19 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:19 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:19 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:19 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:19 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:19 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:19 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:19 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:19 AI_Player.update()	update
2017-01-04 14:14:19 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:20 AI_Player.update()	Search took172ms
2017-01-04 14:14:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-04 14:14:20 AI_Player.update()		1100,	1010,	110,	1110,	11,	101,	1010
2017-01-04 14:14:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-04 14:14:20 AI_Player.update()		11,	110,	101,	1110,	101,	1010,	1100
2017-01-04 14:14:20 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-04 14:14:20 AI_Player.update()		11,	111,	110,	1011,	110,	1001,	1010
2017-01-04 14:14:20 AI_Player.update()		1100,	110,	1101,	101,	1101,	1110,	1001
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:20 AI_Player.update()	Search took204ms
2017-01-04 14:14:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-04 14:14:20 AI_Player.update()		1100,	110,	110,	1110,	11,	101,	1010
2017-01-04 14:14:20 AI_Player.update()		1110,	1010,	1110,	1001,	111,	11,	1011
2017-01-04 14:14:20 AI_Player.update()		11,	110,	101,	1110,	101,	1010,	1100
2017-01-04 14:14:20 AI_Player.update()		1110,	110,	1101,	1010,	1011,	1100,	1011
2017-01-04 14:14:20 AI_Player.update()		11,	1010,	110,	1011,	110,	1001,	1010
2017-01-04 14:14:20 AI_Player.update()		1100,	111,	1101,	101,	1101,	1110,	1001
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:20 AI_Player.update()	Search took27ms
2017-01-04 14:14:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()		110,	110,	111,	1110,	111,	101,	11
2017-01-04 14:14:20 AI_Player.update()		1100,	1010,	110,	1110,	11,	101,	1010
2017-01-04 14:14:20 AI_Player.update()		1110,	110,	1110,	1001,	111,	11,	1011
2017-01-04 14:14:20 AI_Player.update()		11,	110,	101,	1110,	101,	1010,	1100
2017-01-04 14:14:20 AI_Player.update()		1110,	1010,	1101,	1010,	1011,	1100,	1011
2017-01-04 14:14:20 AI_Player.update()		11,	111,	110,	1011,	110,	1001,	1010
2017-01-04 14:14:20 AI_Player.update()		1100,	110,	1101,	101,	1101,	1110,	1001
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:20 AI_Player.update()	Search took54ms
2017-01-04 14:14:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()		110,	110,	111,	101,	111,	101,	11
2017-01-04 14:14:20 AI_Player.update()		1100,	1010,	110,	1110,	11,	101,	1010
2017-01-04 14:14:20 AI_Player.update()		1110,	110,	1110,	1110,	111,	11,	1011
2017-01-04 14:14:20 AI_Player.update()		11,	110,	101,	1001,	101,	1010,	1100
2017-01-04 14:14:20 AI_Player.update()		1110,	1010,	1101,	1110,	1011,	1100,	1011
2017-01-04 14:14:20 AI_Player.update()		11,	111,	110,	1010,	110,	1001,	1010
2017-01-04 14:14:20 AI_Player.update()		1100,	110,	1101,	1011,	1101,	1110,	1001
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	6 6
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(b). suceeded
2017-01-04 14:14:20 AI_Player.update()	Player b has won!
2017-01-04 14:14:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:20 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:14:20 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:20 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:14:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:20 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:20 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:20 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:20 AI_Player.update()	Search took79ms
2017-01-04 14:14:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()		110,	1010,	111,	111,	111,	1001,	11
2017-01-04 14:14:20 AI_Player.update()		1011,	101,	101,	1101,	101,	110,	110
2017-01-04 14:14:20 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 14:14:20 AI_Player.update()		101,	110,	111,	11,	1101,	1011,	1001
2017-01-04 14:14:20 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:14:20 AI_Player.update()		1101,	1010,	110,	11,	110,	110,	101
2017-01-04 14:14:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:20 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:20 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:20 AI_Player.update()	Search took78ms
2017-01-04 14:14:20 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()		110,	1010,	111,	111,	111,	1001,	11
2017-01-04 14:14:20 AI_Player.update()		101,	101,	1101,	101,	110,	110,	1011
2017-01-04 14:14:20 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 14:14:20 AI_Player.update()		101,	110,	111,	11,	1101,	1011,	1001
2017-01-04 14:14:20 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:14:20 AI_Player.update()		1101,	1010,	110,	11,	110,	110,	101
2017-01-04 14:14:20 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-04 14:14:20 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:20 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:20 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:20 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:20 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:20 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:20 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:20 AI_Player.update()	update
2017-01-04 14:14:20 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:21 AI_Player.update()	Search took444ms
2017-01-04 14:14:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()		110,	1010,	111,	111,	111,	1001,	11
2017-01-04 14:14:21 AI_Player.update()		101,	1101,	101,	110,	110,	1011,	101
2017-01-04 14:14:21 AI_Player.update()		1110,	101,	1110,	111,	111,	1010,	1011
2017-01-04 14:14:21 AI_Player.update()		101,	110,	111,	11,	1101,	1011,	1001
2017-01-04 14:14:21 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1100,	1011
2017-01-04 14:14:21 AI_Player.update()		1101,	1010,	110,	11,	110,	110,	101
2017-01-04 14:14:21 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-04 14:14:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()	update
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:21 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:21 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()	update
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:21 AI_Player.update()	Search took324ms
2017-01-04 14:14:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-04 14:14:21 AI_Player.update()		101,	1101,	101,	110,	110,	1010,	101
2017-01-04 14:14:21 AI_Player.update()		1110,	101,	1110,	111,	111,	1011,	1011
2017-01-04 14:14:21 AI_Player.update()		101,	110,	111,	11,	1101,	1100,	1001
2017-01-04 14:14:21 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:21 AI_Player.update()		1101,	1010,	110,	11,	110,	1001,	101
2017-01-04 14:14:21 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-04 14:14:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()	update
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()	update
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:21 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:21 AI_Player.update()	Search took384ms
2017-01-04 14:14:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()		110,	1010,	111,	110,	111,	1011,	11
2017-01-04 14:14:21 AI_Player.update()		101,	1101,	101,	111,	110,	1010,	101
2017-01-04 14:14:21 AI_Player.update()		1110,	101,	1110,	110,	111,	1011,	1011
2017-01-04 14:14:21 AI_Player.update()		101,	110,	111,	111,	1101,	1100,	1001
2017-01-04 14:14:21 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:21 AI_Player.update()		1101,	1010,	110,	1101,	110,	1001,	101
2017-01-04 14:14:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 14:14:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()	update
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:21 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:21 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:21 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()	update
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:21 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:21 AI_Player.update()	Search took99ms
2017-01-04 14:14:21 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()		110,	1101,	111,	110,	111,	1011,	11
2017-01-04 14:14:21 AI_Player.update()		101,	101,	101,	111,	110,	1010,	101
2017-01-04 14:14:21 AI_Player.update()		1110,	110,	1110,	110,	111,	1011,	1011
2017-01-04 14:14:21 AI_Player.update()		101,	1010,	111,	111,	1101,	1100,	1001
2017-01-04 14:14:21 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:21 AI_Player.update()		1101,	1010,	110,	1101,	110,	1001,	101
2017-01-04 14:14:21 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 14:14:21 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:21 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()	update
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:21 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:21 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:21 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:21 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:21 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:21 AI_Player.update()	update
2017-01-04 14:14:21 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:22 AI_Player.update()	Search took366ms
2017-01-04 14:14:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()		110,	1010,	111,	110,	111,	1011,	11
2017-01-04 14:14:22 AI_Player.update()		101,	1101,	101,	111,	110,	1010,	101
2017-01-04 14:14:22 AI_Player.update()		1110,	101,	1110,	110,	111,	1011,	1011
2017-01-04 14:14:22 AI_Player.update()		101,	110,	111,	111,	1101,	1100,	1001
2017-01-04 14:14:22 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:22 AI_Player.update()		1101,	1010,	110,	1101,	110,	1001,	101
2017-01-04 14:14:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 14:14:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()	update
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()	update
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:22 AI_Player.update()	Search took53ms
2017-01-04 14:14:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()		110,	1101,	111,	110,	111,	1011,	11
2017-01-04 14:14:22 AI_Player.update()		101,	101,	101,	111,	110,	1010,	101
2017-01-04 14:14:22 AI_Player.update()		1110,	110,	1110,	110,	111,	1011,	1011
2017-01-04 14:14:22 AI_Player.update()		101,	1010,	111,	111,	1101,	1100,	1001
2017-01-04 14:14:22 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:22 AI_Player.update()		1101,	1010,	110,	1101,	110,	1001,	101
2017-01-04 14:14:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 14:14:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()	update
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()	update
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:22 AI_Player.update()	Search took371ms
2017-01-04 14:14:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()		110,	1010,	111,	110,	111,	1011,	11
2017-01-04 14:14:22 AI_Player.update()		101,	1101,	101,	111,	110,	1010,	101
2017-01-04 14:14:22 AI_Player.update()		1110,	101,	1110,	110,	111,	1011,	1011
2017-01-04 14:14:22 AI_Player.update()		101,	110,	111,	111,	1101,	1100,	1001
2017-01-04 14:14:22 AI_Player.update()		1110,	1010,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:22 AI_Player.update()		1101,	1010,	110,	1101,	110,	1001,	101
2017-01-04 14:14:22 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 14:14:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()	update
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()	update
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:22 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:22 AI_Player.update()	Search took99ms
2017-01-04 14:14:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-04 14:14:22 AI_Player.update()		101,	1101,	101,	110,	110,	1010,	101
2017-01-04 14:14:22 AI_Player.update()		1110,	101,	1110,	111,	111,	1011,	1011
2017-01-04 14:14:22 AI_Player.update()		101,	110,	111,	11,	1101,	1100,	1001
2017-01-04 14:14:22 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:22 AI_Player.update()		1101,	1010,	110,	11,	110,	1001,	101
2017-01-04 14:14:22 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-04 14:14:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()	update
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:22 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()	update
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:22 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:22 AI_Player.update()	Search took133ms
2017-01-04 14:14:22 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-04 14:14:22 AI_Player.update()		101,	1101,	101,	110,	110,	1010,	101
2017-01-04 14:14:22 AI_Player.update()		1110,	101,	1110,	111,	111,	1011,	1011
2017-01-04 14:14:22 AI_Player.update()		101,	110,	111,	11,	1101,	1100,	1001
2017-01-04 14:14:22 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:22 AI_Player.update()		1010,	110,	11,	110,	1001,	101,	1101
2017-01-04 14:14:22 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-04 14:14:22 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:22 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()	update
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:22 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:22 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:22 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:22 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:22 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:14:22 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:22 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:22 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:22 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:22 AI_Player.update()	update
2017-01-04 14:14:22 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:23 AI_Player.update()	Search took213ms
2017-01-04 14:14:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()		110,	1010,	111,	110,	111,	1011,	11
2017-01-04 14:14:23 AI_Player.update()		101,	1101,	101,	111,	110,	1010,	101
2017-01-04 14:14:23 AI_Player.update()		1110,	101,	1110,	11,	111,	1011,	1011
2017-01-04 14:14:23 AI_Player.update()		101,	110,	111,	1101,	1101,	1100,	1001
2017-01-04 14:14:23 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-04 14:14:23 AI_Player.update()		1010,	110,	11,	110,	1001,	101,	1101
2017-01-04 14:14:23 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 14:14:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:14:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()	update
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()	update
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:23 AI_Player.update()	Search took160ms
2017-01-04 14:14:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-04 14:14:23 AI_Player.update()		101,	1101,	101,	11,	110,	1010,	101
2017-01-04 14:14:23 AI_Player.update()		1110,	101,	1110,	1101,	111,	1011,	1011
2017-01-04 14:14:23 AI_Player.update()		101,	110,	111,	110,	1101,	1100,	1001
2017-01-04 14:14:23 AI_Player.update()		1110,	1010,	1101,	110,	1011,	110,	1011
2017-01-04 14:14:23 AI_Player.update()		1010,	110,	11,	111,	1001,	101,	1101
2017-01-04 14:14:23 AI_Player.update()		1100,	1010,	1101,	110,	1101,	1001,	1001
2017-01-04 14:14:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()	update
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()	update
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:23 AI_Player.update()	Search took65ms
2017-01-04 14:14:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-04 14:14:23 AI_Player.update()		101,	1101,	101,	1101,	110,	1010,	101
2017-01-04 14:14:23 AI_Player.update()		1110,	101,	1110,	110,	111,	1011,	1011
2017-01-04 14:14:23 AI_Player.update()		101,	110,	111,	110,	1101,	1100,	1001
2017-01-04 14:14:23 AI_Player.update()		1110,	1010,	1101,	111,	1011,	110,	1011
2017-01-04 14:14:23 AI_Player.update()		1010,	110,	11,	110,	1001,	101,	1101
2017-01-04 14:14:23 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 14:14:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()	update
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()	update
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:23 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:23 AI_Player.update()	Search took263ms
2017-01-04 14:14:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-04 14:14:23 AI_Player.update()		101,	1101,	101,	1101,	110,	1010,	101
2017-01-04 14:14:23 AI_Player.update()		1110,	101,	1110,	110,	111,	1011,	1011
2017-01-04 14:14:23 AI_Player.update()		110,	111,	110,	1101,	1100,	1001,	101
2017-01-04 14:14:23 AI_Player.update()		1110,	1010,	1101,	111,	1011,	110,	1011
2017-01-04 14:14:23 AI_Player.update()		1010,	110,	11,	110,	1001,	101,	1101
2017-01-04 14:14:23 AI_Player.update()		1100,	1010,	1101,	111,	1101,	1001,	1001
2017-01-04 14:14:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	3 2
2017-01-04 14:14:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()	update
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:23 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:23 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:23 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:14:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()	update
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:23 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:23 AI_Player.update()	Search took149ms
2017-01-04 14:14:23 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-04 14:14:23 AI_Player.update()		101,	1010,	101,	1101,	110,	1010,	101
2017-01-04 14:14:23 AI_Player.update()		1110,	1101,	1110,	110,	111,	1011,	1011
2017-01-04 14:14:23 AI_Player.update()		110,	101,	110,	1101,	1100,	1001,	101
2017-01-04 14:14:23 AI_Player.update()		1110,	111,	1101,	111,	1011,	110,	1011
2017-01-04 14:14:23 AI_Player.update()		1010,	1010,	11,	110,	1001,	101,	1101
2017-01-04 14:14:23 AI_Player.update()		1100,	110,	1101,	111,	1101,	1001,	1001
2017-01-04 14:14:23 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:23 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:14:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()	update
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:23 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:23 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:23 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:23 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:23 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:23 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:23 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:23 AI_Player.update()	update
2017-01-04 14:14:23 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:24 AI_Player.update()	Search took408ms
2017-01-04 14:14:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()		110,	1010,	111,	11,	111,	1011,	11
2017-01-04 14:14:24 AI_Player.update()		101,	1010,	101,	1101,	110,	1010,	101
2017-01-04 14:14:24 AI_Player.update()		1110,	1101,	1110,	110,	111,	1011,	1011
2017-01-04 14:14:24 AI_Player.update()		110,	101,	110,	1101,	1100,	1001,	101
2017-01-04 14:14:24 AI_Player.update()		1110,	111,	1101,	111,	1011,	110,	1011
2017-01-04 14:14:24 AI_Player.update()		1101,	1010,	1010,	11,	110,	1001,	101
2017-01-04 14:14:24 AI_Player.update()		1100,	110,	1101,	111,	1101,	1001,	1001
2017-01-04 14:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()	update
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:14:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()	update
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:24 AI_Player.update()	Search took39ms
2017-01-04 14:14:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-04 14:14:24 AI_Player.update()		101,	1010,	101,	11,	110,	1010,	101
2017-01-04 14:14:24 AI_Player.update()		1110,	1101,	1110,	1101,	111,	1011,	1011
2017-01-04 14:14:24 AI_Player.update()		110,	101,	110,	110,	1100,	1001,	101
2017-01-04 14:14:24 AI_Player.update()		1110,	111,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:24 AI_Player.update()		1101,	1010,	1010,	111,	110,	1001,	101
2017-01-04 14:14:24 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-04 14:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:14:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()	update
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:14:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()	update
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:24 AI_Player.update()	Search took361ms
2017-01-04 14:14:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-04 14:14:24 AI_Player.update()		1010,	101,	11,	110,	1010,	101,	101
2017-01-04 14:14:24 AI_Player.update()		1110,	1101,	1110,	1101,	111,	1011,	1011
2017-01-04 14:14:24 AI_Player.update()		110,	101,	110,	110,	1100,	1001,	101
2017-01-04 14:14:24 AI_Player.update()		1110,	111,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:24 AI_Player.update()		1101,	1010,	1010,	111,	110,	1001,	101
2017-01-04 14:14:24 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-04 14:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:14:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()	update
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:14:24 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:24 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()	update
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:24 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:24 AI_Player.update()	Search took52ms
2017-01-04 14:14:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()		110,	101,	111,	111,	111,	1011,	11
2017-01-04 14:14:24 AI_Player.update()		1010,	1101,	11,	110,	1010,	101,	101
2017-01-04 14:14:24 AI_Player.update()		1110,	101,	1110,	1101,	111,	1011,	1011
2017-01-04 14:14:24 AI_Player.update()		110,	111,	110,	110,	1100,	1001,	101
2017-01-04 14:14:24 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:24 AI_Player.update()		1101,	110,	1010,	111,	110,	1001,	101
2017-01-04 14:14:24 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 14:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:14:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()	update
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:24 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:14:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()	update
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:24 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:24 AI_Player.update()	Search took160ms
2017-01-04 14:14:24 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()		110,	1010,	111,	111,	111,	1011,	11
2017-01-04 14:14:24 AI_Player.update()		1010,	101,	11,	110,	1010,	101,	101
2017-01-04 14:14:24 AI_Player.update()		1110,	1101,	1110,	1101,	111,	1011,	1011
2017-01-04 14:14:24 AI_Player.update()		110,	101,	110,	110,	1100,	1001,	101
2017-01-04 14:14:24 AI_Player.update()		1110,	111,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:24 AI_Player.update()		1101,	1010,	1010,	111,	110,	1001,	101
2017-01-04 14:14:24 AI_Player.update()		1100,	110,	1101,	11,	1101,	1001,	1001
2017-01-04 14:14:24 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:24 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:14:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()	update
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:24 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:24 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:24 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:24 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:24 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:24 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:14:24 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:24 AI_Player.update()	update
2017-01-04 14:14:24 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:25 AI_Player.update()	Search took267ms
2017-01-04 14:14:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()		110,	101,	111,	111,	111,	1011,	11
2017-01-04 14:14:25 AI_Player.update()		1010,	1101,	11,	110,	1010,	101,	101
2017-01-04 14:14:25 AI_Player.update()		1110,	101,	1110,	1101,	111,	1011,	1011
2017-01-04 14:14:25 AI_Player.update()		110,	111,	110,	110,	1100,	1001,	101
2017-01-04 14:14:25 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:25 AI_Player.update()		1101,	110,	1010,	111,	110,	1001,	101
2017-01-04 14:14:25 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1001,	1001
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:25 AI_Player.update()	Search took167ms
2017-01-04 14:14:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()		110,	101,	111,	111,	111,	101,	11
2017-01-04 14:14:25 AI_Player.update()		1010,	1101,	11,	110,	1010,	1011,	101
2017-01-04 14:14:25 AI_Player.update()		1110,	101,	1110,	1101,	111,	1001,	1011
2017-01-04 14:14:25 AI_Player.update()		110,	111,	110,	110,	1100,	110,	101
2017-01-04 14:14:25 AI_Player.update()		1110,	1010,	1101,	1101,	1011,	1001,	1011
2017-01-04 14:14:25 AI_Player.update()		1101,	110,	1010,	111,	110,	1001,	101
2017-01-04 14:14:25 AI_Player.update()		1100,	1010,	1101,	11,	1101,	1011,	1001
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	6 3
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:14:25 AI_Player.update()	Player a has won!
2017-01-04 14:14:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:25 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:14:25 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:25 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:14:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:25 AI_Player.update()	Search took173ms
2017-01-04 14:14:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()		110,	1001,	111,	101,	111,	1001,	11
2017-01-04 14:14:25 AI_Player.update()		1110,	1110,	101,	1001,	1010,	1010,	1101
2017-01-04 14:14:25 AI_Player.update()		1110,	1110,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:25 AI_Player.update()		1010,	101,	11,	11,	1001,	1001,	1100
2017-01-04 14:14:25 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:25 AI_Player.update()		1100,	110,	101,	11,	1010,	1100,	110
2017-01-04 14:14:25 AI_Player.update()		1100,	1011,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:25 AI_Player.update()	Search took41ms
2017-01-04 14:14:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()		110,	1011,	111,	101,	111,	1001,	11
2017-01-04 14:14:25 AI_Player.update()		1110,	1001,	101,	1001,	1010,	1010,	1101
2017-01-04 14:14:25 AI_Player.update()		1110,	1110,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:25 AI_Player.update()		1010,	1110,	11,	11,	1001,	1001,	1100
2017-01-04 14:14:25 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:25 AI_Player.update()		1100,	1001,	101,	11,	1010,	1100,	110
2017-01-04 14:14:25 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:25 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:25 AI_Player.update()	Search took357ms
2017-01-04 14:14:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-04 14:14:25 AI_Player.update()		1110,	1011,	101,	1001,	1010,	1010,	1101
2017-01-04 14:14:25 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:25 AI_Player.update()		1010,	1110,	11,	11,	1001,	1001,	1100
2017-01-04 14:14:25 AI_Player.update()		1110,	1110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:25 AI_Player.update()		1100,	101,	101,	11,	1010,	1100,	110
2017-01-04 14:14:25 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:25 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:14:25 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:25 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:25 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:25 AI_Player.update()	Search took20ms
2017-01-04 14:14:25 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-04 14:14:25 AI_Player.update()		1101,	1110,	1011,	101,	1001,	1010,	1010
2017-01-04 14:14:25 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:25 AI_Player.update()		1010,	1110,	11,	11,	1001,	1001,	1100
2017-01-04 14:14:25 AI_Player.update()		1110,	1110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:25 AI_Player.update()		1100,	101,	101,	11,	1010,	1100,	110
2017-01-04 14:14:25 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:25 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:25 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:25 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:25 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:25 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:25 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:14:25 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:25 AI_Player.update()	update
2017-01-04 14:14:25 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:26 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:26 AI_Player.update()	Search took554ms
2017-01-04 14:14:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:26 AI_Player.update()		110,	110,	111,	101,	111,	1001,	11
2017-01-04 14:14:26 AI_Player.update()		1101,	1110,	1011,	101,	1001,	1010,	1010
2017-01-04 14:14:26 AI_Player.update()		1110,	1001,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:26 AI_Player.update()		1110,	11,	11,	1001,	1001,	1100,	1010
2017-01-04 14:14:26 AI_Player.update()		1110,	1110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:26 AI_Player.update()		1100,	101,	101,	11,	1010,	1100,	110
2017-01-04 14:14:26 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	3 1
2017-01-04 14:14:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:26 AI_Player.update()	update
2017-01-04 14:14:26 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:26 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:26 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:26 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:26 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:14:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:26 AI_Player.update()	update
2017-01-04 14:14:26 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:26 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:26 AI_Player.update()	Search took185ms
2017-01-04 14:14:26 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:26 AI_Player.update()		110,	1110,	111,	101,	111,	1001,	11
2017-01-04 14:14:26 AI_Player.update()		1101,	1001,	1011,	101,	1001,	1010,	1010
2017-01-04 14:14:26 AI_Player.update()		1110,	11,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:26 AI_Player.update()		1110,	1110,	11,	1001,	1001,	1100,	1010
2017-01-04 14:14:26 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:26 AI_Player.update()		1100,	1001,	101,	11,	1010,	1100,	110
2017-01-04 14:14:26 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:26 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:26 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	4 1
2017-01-04 14:14:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:26 AI_Player.update()	update
2017-01-04 14:14:26 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:26 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:26 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:26 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:26 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:26 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:26 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:26 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:14:26 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:26 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:26 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:26 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:26 AI_Player.update()	update
2017-01-04 14:14:26 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:27 AI_Player.update()	Search took526ms
2017-01-04 14:14:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:27 AI_Player.update()		110,	1001,	111,	101,	111,	1001,	11
2017-01-04 14:14:27 AI_Player.update()		1101,	11,	1011,	101,	1001,	1010,	1010
2017-01-04 14:14:27 AI_Player.update()		1110,	1110,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:27 AI_Player.update()		1110,	101,	11,	1001,	1001,	1100,	1010
2017-01-04 14:14:27 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:27 AI_Player.update()		1100,	110,	101,	11,	1010,	1100,	110
2017-01-04 14:14:27 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:14:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:27 AI_Player.update()	update
2017-01-04 14:14:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:14:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:27 AI_Player.update()	update
2017-01-04 14:14:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:27 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:27 AI_Player.update()	Search took239ms
2017-01-04 14:14:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:27 AI_Player.update()		110,	1110,	111,	101,	111,	1001,	11
2017-01-04 14:14:27 AI_Player.update()		1101,	1001,	1011,	101,	1001,	1010,	1010
2017-01-04 14:14:27 AI_Player.update()		1110,	11,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:27 AI_Player.update()		1110,	1110,	11,	1001,	1001,	1100,	1010
2017-01-04 14:14:27 AI_Player.update()		1110,	101,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:27 AI_Player.update()		1100,	1001,	101,	11,	1010,	1100,	110
2017-01-04 14:14:27 AI_Player.update()		1100,	110,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	4 2
2017-01-04 14:14:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:27 AI_Player.update()	update
2017-01-04 14:14:27 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:27 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:27 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:27 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:27 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:27 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:27 AI_Player.update()	update
2017-01-04 14:14:27 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:27 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:27 AI_Player.update()	Search took437ms
2017-01-04 14:14:27 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:27 AI_Player.update()		110,	1001,	111,	101,	111,	1001,	11
2017-01-04 14:14:27 AI_Player.update()		1101,	11,	1011,	101,	1001,	1010,	1010
2017-01-04 14:14:27 AI_Player.update()		1110,	1110,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:27 AI_Player.update()		1110,	101,	11,	1001,	1001,	1100,	1010
2017-01-04 14:14:27 AI_Player.update()		1110,	1001,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:27 AI_Player.update()		1100,	110,	101,	11,	1010,	1100,	110
2017-01-04 14:14:27 AI_Player.update()		1100,	1110,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:27 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:27 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:27 AI_Player.update()	update
2017-01-04 14:14:27 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:27 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:27 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:27 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:27 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:27 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:27 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:27 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:27 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:27 AI_Player.update()	update
2017-01-04 14:14:27 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:28 AI_Player.update()	Search took239ms
2017-01-04 14:14:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-04 14:14:28 AI_Player.update()		1101,	1110,	1011,	101,	1001,	1010,	1010
2017-01-04 14:14:28 AI_Player.update()		1110,	101,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:28 AI_Player.update()		1110,	1001,	11,	1001,	1001,	1100,	1010
2017-01-04 14:14:28 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:28 AI_Player.update()		1100,	1110,	101,	11,	1010,	1100,	110
2017-01-04 14:14:28 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()	update
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()	update
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:28 AI_Player.update()	Search took244ms
2017-01-04 14:14:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-04 14:14:28 AI_Player.update()		1101,	1110,	1011,	101,	1001,	1010,	1010
2017-01-04 14:14:28 AI_Player.update()		1110,	101,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:28 AI_Player.update()		1001,	11,	1001,	1001,	1100,	1010,	1110
2017-01-04 14:14:28 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:28 AI_Player.update()		1100,	1110,	101,	11,	1010,	1100,	110
2017-01-04 14:14:28 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	4 3
2017-01-04 14:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()	update
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:14:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()	update
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:28 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:28 AI_Player.update()	Search took391ms
2017-01-04 14:14:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()		110,	11,	111,	101,	111,	1001,	11
2017-01-04 14:14:28 AI_Player.update()		1110,	1011,	101,	1001,	1010,	1010,	1101
2017-01-04 14:14:28 AI_Player.update()		1110,	101,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:28 AI_Player.update()		1001,	11,	1001,	1001,	1100,	1010,	1110
2017-01-04 14:14:28 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:28 AI_Player.update()		1100,	1110,	101,	11,	1010,	1100,	110
2017-01-04 14:14:28 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	5 3
2017-01-04 14:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()	update
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:28 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:14:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()	update
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:28 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:28 AI_Player.update()	Search took219ms
2017-01-04 14:14:28 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()		110,	11,	111,	1001,	111,	1001,	11
2017-01-04 14:14:28 AI_Player.update()		1110,	1011,	101,	11,	1010,	1010,	1101
2017-01-04 14:14:28 AI_Player.update()		1110,	101,	1110,	1001,	111,	1101,	1011
2017-01-04 14:14:28 AI_Player.update()		1001,	11,	1001,	11,	1100,	1010,	1110
2017-01-04 14:14:28 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:28 AI_Player.update()		1100,	1110,	101,	101,	1010,	1100,	110
2017-01-04 14:14:28 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:28 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:28 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	5 4
2017-01-04 14:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()	update
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:28 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:28 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:28 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:28 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:28 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:28 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:28 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding keys
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:28 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:28 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:28 AI_Player.update()	update
2017-01-04 14:14:28 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:29 AI_Player.update()	Search took131ms
2017-01-04 14:14:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()		110,	1011,	111,	1001,	111,	1001,	11
2017-01-04 14:14:29 AI_Player.update()		1110,	101,	101,	11,	1010,	1010,	1101
2017-01-04 14:14:29 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-04 14:14:29 AI_Player.update()		1001,	110,	1001,	11,	1100,	1010,	1110
2017-01-04 14:14:29 AI_Player.update()		1110,	1110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:29 AI_Player.update()		1100,	1001,	101,	101,	1010,	1100,	110
2017-01-04 14:14:29 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()	update
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()	update
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:29 AI_Player.update()	Search took244ms
2017-01-04 14:14:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()		110,	11,	111,	1001,	111,	1001,	11
2017-01-04 14:14:29 AI_Player.update()		1110,	1011,	101,	11,	1010,	1010,	1101
2017-01-04 14:14:29 AI_Player.update()		1110,	101,	1110,	1001,	111,	1101,	1011
2017-01-04 14:14:29 AI_Player.update()		1001,	11,	1001,	11,	1100,	1010,	1110
2017-01-04 14:14:29 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:29 AI_Player.update()		1100,	1110,	101,	101,	1010,	1100,	110
2017-01-04 14:14:29 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()	update
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()	update
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:29 AI_Player.update()	Search took83ms
2017-01-04 14:14:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()		110,	11,	111,	11,	111,	1001,	11
2017-01-04 14:14:29 AI_Player.update()		1110,	1011,	101,	1001,	1010,	1010,	1101
2017-01-04 14:14:29 AI_Player.update()		1110,	101,	1110,	11,	111,	1101,	1011
2017-01-04 14:14:29 AI_Player.update()		1001,	11,	1001,	11,	1100,	1010,	1110
2017-01-04 14:14:29 AI_Player.update()		1110,	110,	1101,	101,	1011,	110,	1011
2017-01-04 14:14:29 AI_Player.update()		1100,	1110,	101,	101,	1010,	1100,	110
2017-01-04 14:14:29 AI_Player.update()		1100,	1001,	1101,	1001,	1101,	1010,	1001
2017-01-04 14:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()	update
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()	update
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:29 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:29 AI_Player.update()	Search took257ms
2017-01-04 14:14:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()		110,	11,	111,	1001,	111,	1001,	11
2017-01-04 14:14:29 AI_Player.update()		1110,	1011,	101,	11,	1010,	1010,	1101
2017-01-04 14:14:29 AI_Player.update()		1110,	101,	1110,	1001,	111,	1101,	1011
2017-01-04 14:14:29 AI_Player.update()		1001,	11,	1001,	11,	1100,	1010,	1110
2017-01-04 14:14:29 AI_Player.update()		1110,	110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:29 AI_Player.update()		1100,	1110,	101,	101,	1010,	1100,	110
2017-01-04 14:14:29 AI_Player.update()		1100,	1001,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()	update
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:29 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:29 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:29 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()	update
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:29 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:29 AI_Player.update()	Search took102ms
2017-01-04 14:14:29 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()		110,	1011,	111,	1001,	111,	1001,	11
2017-01-04 14:14:29 AI_Player.update()		1110,	101,	101,	11,	1010,	1010,	1101
2017-01-04 14:14:29 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-04 14:14:29 AI_Player.update()		1001,	110,	1001,	11,	1100,	1010,	1110
2017-01-04 14:14:29 AI_Player.update()		1110,	1110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:29 AI_Player.update()		1100,	1001,	101,	101,	1010,	1100,	110
2017-01-04 14:14:29 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:29 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:29 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()	update
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:29 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:29 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:29 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:29 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:29 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:29 AI_Player.update()	update
2017-01-04 14:14:29 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:30 AI_Player.update()	Search took291ms
2017-01-04 14:14:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()		110,	1011,	111,	1001,	111,	1001,	11
2017-01-04 14:14:30 AI_Player.update()		1110,	101,	101,	11,	1010,	1010,	1101
2017-01-04 14:14:30 AI_Player.update()		1110,	11,	1110,	1001,	111,	1101,	1011
2017-01-04 14:14:30 AI_Player.update()		1110,	1001,	110,	1001,	11,	1100,	1010
2017-01-04 14:14:30 AI_Player.update()		1110,	1110,	1101,	11,	1011,	110,	1011
2017-01-04 14:14:30 AI_Player.update()		1100,	1001,	101,	101,	1010,	1100,	110
2017-01-04 14:14:30 AI_Player.update()		1100,	11,	1101,	101,	1101,	1010,	1001
2017-01-04 14:14:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	6 4
2017-01-04 14:14:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()	update
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:30 QueryProlog.haveIWon()	have_I_won(a). suceeded
2017-01-04 14:14:30 AI_Player.update()	Player a has won!
2017-01-04 14:14:30 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:30 GameBoard.restartBoard()	-------------------       RESTARTING GAME     -----------------------------
2017-01-04 14:14:30 GameBoard.restartBoard()	--------------------------------------------------------------------------
2017-01-04 14:14:30 QueryProlog.reset()	setup(h2/h3). suceeded
2017-01-04 14:14:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()	update
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:30 AI_Player.update()	Search took140ms
2017-01-04 14:14:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 14:14:30 AI_Player.update()		101,	110,	1100,	1100,	1011,	1001,	1011
2017-01-04 14:14:30 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-04 14:14:30 AI_Player.update()		1100,	1001,	1001,	1001,	1100,	101,	11
2017-01-04 14:14:30 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:30 AI_Player.update()		1011,	1010,	11,	1010,	101,	101,	110
2017-01-04 14:14:30 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 14:14:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	1 1
2017-01-04 14:14:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()	update
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()	update
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:30 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:30 AI_Player.update()	Search took270ms
2017-01-04 14:14:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()		110,	101,	111,	110,	111,	1010,	11
2017-01-04 14:14:30 AI_Player.update()		101,	110,	1100,	1100,	1011,	1001,	1011
2017-01-04 14:14:30 AI_Player.update()		1110,	1101,	1110,	1010,	111,	101,	1011
2017-01-04 14:14:30 AI_Player.update()		1001,	1001,	1001,	1100,	101,	11,	1100
2017-01-04 14:14:30 AI_Player.update()		1110,	1100,	1101,	1101,	1011,	110,	1011
2017-01-04 14:14:30 AI_Player.update()		1011,	1010,	11,	1010,	101,	101,	110
2017-01-04 14:14:30 AI_Player.update()		1100,	101,	1101,	101,	1101,	101,	1001
2017-01-04 14:14:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	2 1
2017-01-04 14:14:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()	update
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:30 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:30 QueryProlog.getTreasureList()	get_treasure_list(a,List). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding sword
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding crown
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding candle
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding ring
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding map
2017-01-04 14:14:30 QueryProlog.getTreasureList()	get_treasure_list(b,List). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding gold
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding fairy
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding book
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding gem
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	adding helmet
2017-01-04 14:14:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()	update
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:30 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:30 AI_Player.update()	Search took143ms
2017-01-04 14:14:30 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 14:14:30 AI_Player.update()		101,	110,	1100,	110,	1011,	1001,	1011
2017-01-04 14:14:30 AI_Player.update()		1110,	1101,	1110,	1100,	111,	101,	1011
2017-01-04 14:14:30 AI_Player.update()		1001,	1001,	1001,	1010,	101,	11,	1100
2017-01-04 14:14:30 AI_Player.update()		1110,	1100,	1101,	1100,	1011,	110,	1011
2017-01-04 14:14:30 AI_Player.update()		1011,	1010,	11,	1101,	101,	101,	110
2017-01-04 14:14:30 AI_Player.update()		1100,	101,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:30 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:30 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()	update
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:30 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:30 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:30 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:30 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:30 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:30 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:30 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:30 AI_Player.update()	update
2017-01-04 14:14:30 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:31 AI_Player.update()	Search took393ms
2017-01-04 14:14:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:31 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 14:14:31 AI_Player.update()		101,	101,	1100,	110,	1011,	1001,	1011
2017-01-04 14:14:31 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-04 14:14:31 AI_Player.update()		1001,	1101,	1001,	1010,	101,	11,	1100
2017-01-04 14:14:31 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 14:14:31 AI_Player.update()		1011,	1100,	11,	1101,	101,	101,	110
2017-01-04 14:14:31 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:31 AI_Player.update()	update
2017-01-04 14:14:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:31 AI_Player.update()	update
2017-01-04 14:14:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
2017-01-04 14:14:31 QueryProlog.tryAndMakeMove()	try_and_make_move(a,h2). suceeded
2017-01-04 14:14:31 AI_Player.update()	Search took323ms
2017-01-04 14:14:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:31 AI_Player.update()		110,	1010,	111,	101,	111,	1010,	11
2017-01-04 14:14:31 AI_Player.update()		101,	101,	1100,	110,	1011,	1001,	1011
2017-01-04 14:14:31 AI_Player.update()		1110,	101,	1110,	1100,	111,	101,	1011
2017-01-04 14:14:31 AI_Player.update()		1001,	110,	1001,	1010,	101,	11,	1100
2017-01-04 14:14:31 AI_Player.update()		1110,	1101,	1101,	1100,	1011,	110,	1011
2017-01-04 14:14:31 AI_Player.update()		1011,	1001,	11,	1101,	101,	101,	110
2017-01-04 14:14:31 AI_Player.update()		1100,	1100,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:31 AI_Player.update()	update
2017-01-04 14:14:31 QueryProlog.isGameState()	game_state( a, 1 ) failed
2017-01-04 14:14:31 QueryProlog.isGameState()	game_state( a, 2 ) suceeded
2017-01-04 14:14:31 QueryProlog.makeBestLocalMove()	make_best_local_move(a,h2). suceeded
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:31 GameBoard.swapCurrentPlayer()	Swapping
2017-01-04 14:14:31 QueryProlog.haveIWon()	have_I_won(a). failed
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:31 AI_Player.update()	update
2017-01-04 14:14:31 QueryProlog.isGameState()	game_state( b, 1 ) suceeded
2017-01-04 14:14:31 QueryProlog.tryAndMakeMove()	try_and_make_move(b,h3). suceeded
2017-01-04 14:14:31 AI_Player.update()	Search took43ms
2017-01-04 14:14:31 QueryProlog.getBoard()	board(X). suceeded
2017-01-04 14:14:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:31 AI_Player.update()		110,	101,	111,	101,	111,	1010,	11
2017-01-04 14:14:31 AI_Player.update()		101,	101,	1100,	110,	1011,	1001,	1011
2017-01-04 14:14:31 AI_Player.update()		1110,	110,	1110,	1100,	111,	101,	1011
2017-01-04 14:14:31 AI_Player.update()		1001,	1101,	1001,	1010,	101,	11,	1100
2017-01-04 14:14:31 AI_Player.update()		1110,	1001,	1101,	1100,	1011,	110,	1011
2017-01-04 14:14:31 AI_Player.update()		1011,	1100,	11,	1101,	101,	101,	110
2017-01-04 14:14:31 AI_Player.update()		1100,	1010,	1101,	1010,	1101,	101,	1001
2017-01-04 14:14:31 AI_Player.update()	----------------------------------------------------------------------
2017-01-04 14:14:31 GameBoard.recreateBoardFromString()	Board recreated
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:31 AI_Player.update()	update
2017-01-04 14:14:31 QueryProlog.isGameState()	game_state( b, 1 ) failed
2017-01-04 14:14:31 QueryProlog.isGameState()	game_state( b, 2 ) suceeded
2017-01-04 14:14:31 QueryProlog.makeBestLocalMove()	make_best_local_move(b,h3). suceeded
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(a,_,I/J) suceeded
2017-01-04 14:14:31 QueryProlog.getPlayerPosition()	player(b,_,I/J) suceeded
2017-01-04 14:14:31 QueryProlog.haveIWon()	have_I_won(b). failed
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(a,Index). suceeded
2017-01-04 14:14:31 QueryProlog.getTreasurePositions()	treasure_index(b,Index). suceeded
2017-01-04 14:14:31 GameBoard.setupTreasurePanel()	2 2
2017-01-04 14:14:31 AI_Player.update()	------------------------------------------------------------------------------------
2017-01-04 14:14:31 AI_Player.update()	update
2017-01-04 14:14:31 QueryProlog.isGameState()	game_state( a, 1 ) suceeded
